

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 13 00:55:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=2
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=2
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=2
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1,group=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=4,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=4,class=CODE,delta=1
   251                           	psect	text226,global,reloc=4,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=4,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1
   259                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   260                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   261                           	psect	text234,global,reloc=2,class=CODE,delta=1
   262                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   263  0000                     
   264                           ; Version 2.10
   265                           ; Generated 31/07/2019 GMT
   266                           ; 
   267                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   268                           ; All rights reserved.
   269                           ; 
   270                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   271                           ; 
   272                           ; Redistribution and use in source and binary forms, with or without modification, are
   273                           ; permitted provided that the following conditions are met:
   274                           ; 
   275                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   276                           ;        conditions and the following disclaimer.
   277                           ; 
   278                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   279                           ;        of conditions and the following disclaimer in the documentation and/or other
   280                           ;        materials provided with the distribution.
   281                           ; 
   282                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   283                           ;        software without specific prior written permission.
   284                           ; 
   285                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   286                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   287                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   288                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   289                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   290                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   291                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   292                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   293                           ; 
   294                           ; 
   295                           ; Code-generator required, PIC18F26K42 Definitions
   296                           ; 
   297                           ; SFR Addresses
   298  0000                     
   299                           	psect	idataBANK0
   300  008DDF                     __pidataBANK0:
   301                           	opt callstack 0
   302                           
   303                           ;initializer for _RSSITarget
   304  008DDF  B0                 	db	176
   305                           
   306                           ;initializer for _currentNetID
   307  008DE0  55                 	db	85
   308                           
   309                           ;initializer for _currentAddr1
   310  008DE1  34                 	db	52
   311                           
   312                           ;initializer for _currentAddr0
   313  008DE2  12                 	db	18
   314                           
   315                           ;initializer for _ATTimeoutTimer
   316  008DE3  03E8               	dw	1000
   317                           
   318                           	psect	idataBANK1
   319  008DD8                     __pidataBANK1:
   320                           	opt callstack 0
   321                           
   322                           ;initializer for sendOKMessage@F16685
   323  008DD8  4F                 	db	79
   324  008DD9  4B                 	db	75
   325  008DDA  0D                 	db	13
   326  008DDB  0A                 	db	10
   327  008DDC  00                 	db	0
   328                           
   329                           ;initializer for _test_timer
   330  008DDD  1388               	dw	5000
   331                           
   332                           	psect	idataBANK2
   333  008DB2                     __pidataBANK2:
   334                           	opt callstack 0
   335                           
   336                           ;initializer for _syncList
   337  008DB2  12                 	db	18
   338  008DB3  23                 	db	35
   339  008DB4  45                 	db	69
   340  008DB5  56                 	db	86
   341  008DB6  67                 	db	103
   342  008DB7  78                 	db	120
   343  008DB8  89                 	db	137
   344  008DB9  9A                 	db	154
   345  008DBA  AB                 	db	171
   346  008DBB  BC                 	db	188
   347                           
   348                           	psect	mediumconst
   349  00FCAA                     __pmediumconst:
   350                           	opt callstack 0
   351  00FCAA  00                 	db	0
   352  00FCAB                     _fhssList:
   353                           	opt callstack 0
   354  00FCAB  7680               	dw	30336
   355  00FCAD  3600               	dw	13824
   356  00FCAF  FB00               	dw	64256
   357  00FCB1  361E               	dw	13854
   358  00FCB3  7F80               	dw	32640
   359  00FCB5  363D               	dw	13885
   360  00FCB7  0400               	dw	1024
   361  00FCB9  365C               	dw	13916
   362  00FCBB  8880               	dw	34944
   363  00FCBD  367A               	dw	13946
   364  00FCBF  0D00               	dw	3328
   365  00FCC1  3699               	dw	13977
   366  00FCC3  9180               	dw	37248
   367  00FCC5  36B7               	dw	14007
   368  00FCC7  1600               	dw	5632
   369  00FCC9  36D6               	dw	14038
   370  00FCCB  9A80               	dw	39552
   371  00FCCD  36F4               	dw	14068
   372  00FCCF  1F00               	dw	7936
   373  00FCD1  3713               	dw	14099
   374  00FCD3  DCC0               	dw	56512
   375  00FCD5  3703               	dw	14083
   376  00FCD7  5840               	dw	22592
   377  00FCD9  36E5               	dw	14053
   378  00FCDB  D3C0               	dw	54208
   379  00FCDD  36C6               	dw	14022
   380  00FCDF  4F40               	dw	20288
   381  00FCE1  36A8               	dw	13992
   382  00FCE3  CAC0               	dw	51904
   383  00FCE5  3689               	dw	13961
   384  00FCE7  4640               	dw	17984
   385  00FCE9  366B               	dw	13931
   386  00FCEB  C1C0               	dw	49600
   387  00FCED  364C               	dw	13900
   388  00FCEF  3D40               	dw	15680
   389  00FCF1  362E               	dw	13870
   390  00FCF3  B8C0               	dw	47296
   391  00FCF5  360F               	dw	13839
   392  00FCF7  3440               	dw	13376
   393  00FCF9  35F1               	dw	13809
   394  00FCFB  AFC0               	dw	44992
   395  00FCFD  35D2               	dw	13778
   396  00FCFF  D560               	dw	54624
   397  00FD01  35F8               	dw	13816
   398  00FD03  59E0               	dw	23008
   399  00FD05  3617               	dw	13847
   400  00FD07  DE60               	dw	56928
   401  00FD09  3635               	dw	13877
   402  00FD0B  6BE0               	dw	27616
   403  00FD0D  3691               	dw	13969
   404  00FD0F  F060               	dw	61536
   405  00FD11  36AF               	dw	13999
   406  00FD13  74E0               	dw	29920
   407  00FD15  36CE               	dw	14030
   408  00FD17  F960               	dw	63840
   409  00FD19  36EC               	dw	14060
   410  00FD1B  7DE0               	dw	32224
   411  00FD1D  370B               	dw	14091
   412  00FD1F  C020               	dw	49184
   413  00FD21  371A               	dw	14106
   414  00FD23  4710               	dw	18192
   415  00FD25  3604               	dw	13828
   416  00FD27  6CB0               	dw	27824
   417  00FD29  362A               	dw	13866
   418  00FD2B  5010               	dw	20496
   419  00FD2D  3641               	dw	13889
   420  00FD2F  75B0               	dw	30128
   421  00FD31  3667               	dw	13927
   422  00FD33  5910               	dw	22800
   423  00FD35  367E               	dw	13950
   424  00FD37  7EB0               	dw	32432
   425  00FD39  36A4               	dw	13988
   426  00FD3B  6210               	dw	25104
   427  00FD3D  36BB               	dw	14011
   428  00FD3F  87B0               	dw	34736
   429  00FD41  36E1               	dw	14049
   430  00FD43  6B10               	dw	27408
   431  00FD45  36F8               	dw	14072
   432  00FD47  90B0               	dw	37040
   433  00FD49  371E               	dw	14110
   434  00FD4B  AD50               	dw	44368
   435  00FD4D  3707               	dw	14087
   436  00FD4F  28D0               	dw	10448
   437  00FD51  36E9               	dw	14057
   438  00FD53  A450               	dw	42064
   439  00FD55  36CA               	dw	14026
   440  00FD57  C0F0               	dw	49392
   441  00FD59  36B3               	dw	14003
   442  00FD5B  9B50               	dw	39760
   443  00FD5D  368D               	dw	13965
   444  00FD5F  B7F0               	dw	47088
   445  00FD61  3676               	dw	13942
   446  00FD63  9250               	dw	37456
   447  00FD65  3650               	dw	13904
   448  00FD67  AEF0               	dw	44784
   449  00FD69  3639               	dw	13881
   450  00FD6B  8950               	dw	35152
   451  00FD6D  3613               	dw	13843
   452  00FD6F  A5F0               	dw	42480
   453  00FD71  35FC               	dw	13820
   454  00FD73  50E0               	dw	20704
   455  00FD75  35DA               	dw	13786
   456  00FD77  04D0               	dw	1232
   457  00FD79  35F5               	dw	13813
   458  00FD7B  2A70               	dw	10864
   459  00FD7D  361B               	dw	13851
   460  00FD7F  0DD0               	dw	3536
   461  00FD81  3632               	dw	13874
   462  00FD83  3C70               	dw	15472
   463  00FD85  3695               	dw	13973
   464  00FD87  1FD0               	dw	8144
   465  00FD89  36AC               	dw	13996
   466  00FD8B  4570               	dw	17776
   467  00FD8D  36D2               	dw	14034
   468  00FD8F  28D0               	dw	10448
   469  00FD91  36E9               	dw	14057
   470  00FD93  4E70               	dw	20080
   471  00FD95  370F               	dw	14095
   472  00FD97  0E40               	dw	3648
   473  00FD99  371B               	dw	14107
   474  00FD9B  A5F0               	dw	42480
   475  00FD9D  35FC               	dw	13820
   476  00FD9F  F130               	dw	61744
   477  00FDA1  3648               	dw	13896
   478  00FDA3  75B0               	dw	30128
   479  00FDA5  3667               	dw	13927
   480  00FDA7                     __end_of_fhssList:
   481                           	opt callstack 0
   482  00FDA7  03                 	db	3
   483  00FDA8  08                 	db	8
   484  00FDA9  1A                 	db	26
   485  00FDAA  40                 	db	64
   486  00FDAB  80                 	db	128
   487  00FDAC  BE                 	db	190
   488  00FDAD  E6                 	db	230
   489  00FDAE  F7                 	db	247
   490  00FDAF  FC                 	db	252
   491  00FDB0                     __end_ofNWK_LinearizeLqi@val:
   492                           	opt callstack 0
   493  00FDB0  82                 	db	130
   494  00FDB1  C0                 	db	192
   495  00FDB2  03                 	db	3
   496  00FDB3  03                 	db	3
   497  00FDB4  00                 	db	0
   498  00FDB5                     __end_of_spi1_configuration:
   499                           	opt callstack 0
   500  00FDB5  01                 	db	1
   501  00FDB6                     __end_of_FirmwareVersionMinor:
   502                           	opt callstack 0
   503  00FDB6  02                 	db	2
   504  00FDB7                     __end_of_FirmwareVersionMajor:
   505                           	opt callstack 0
   506  00FDB7  00                 	db	0
   507  00FDB8                     __end_of_ATVersionMinor:
   508                           	opt callstack 0
   509  00FDB8  01                 	db	1
   510  00FDB9                     __end_of_ATVersionMajor:
   511                           	opt callstack 0
   512  00FDB9                     STR_62:
   513                           
   514                           ; BSR set to: 0
   515  00FDB9  44                 	db	68	;'D'
   516  00FDBA  53                 	db	83	;'S'
   517  00FDBB  54                 	db	84	;'T'
   518  00FDBC  3A                 	db	58	;':'
   519  00FDBD  25                 	db	37
   520  00FDBE  30                 	db	48	;'0'
   521  00FDBF  34                 	db	52	;'4'
   522  00FDC0  58                 	db	88	;'X'
   523  00FDC1  20                 	db	32
   524  00FDC2  4E                 	db	78	;'N'
   525  00FDC3  58                 	db	88	;'X'
   526  00FDC4  54                 	db	84	;'T'
   527  00FDC5  3A                 	db	58	;':'
   528  00FDC6  25                 	db	37
   529  00FDC7  30                 	db	48	;'0'
   530  00FDC8  34                 	db	52	;'4'
   531  00FDC9  58                 	db	88	;'X'
   532  00FDCA  20                 	db	32
   533  00FDCB  53                 	db	83	;'S'
   534  00FDCC  43                 	db	67	;'C'
   535  00FDCD  4F                 	db	79	;'O'
   536  00FDCE  3A                 	db	58	;':'
   537  00FDCF  25                 	db	37
   538  00FDD0  75                 	db	117	;'u'
   539  00FDD1  20                 	db	32
   540  00FDD2  4C                 	db	76	;'L'
   541  00FDD3  51                 	db	81	;'Q'
   542  00FDD4  49                 	db	73	;'I'
   543  00FDD5  3A                 	db	58	;':'
   544  00FDD6  25                 	db	37
   545  00FDD7  75                 	db	117	;'u'
   546  00FDD8  0D                 	db	13
   547  00FDD9  0A                 	db	10
   548  00FDDA  00                 	db	0
   549  00FDDB                     STR_135:
   550                           
   551                           ; BSR set to: 0
   552  00FDDB  46                 	db	70	;'F'
   553  00FDDC  69                 	db	105	;'i'
   554  00FDDD  72                 	db	114	;'r'
   555  00FDDE  6D                 	db	109	;'m'
   556  00FDDF  77                 	db	119	;'w'
   557  00FDE0  61                 	db	97	;'a'
   558  00FDE1  72                 	db	114	;'r'
   559  00FDE2  65                 	db	101	;'e'
   560  00FDE3  20                 	db	32
   561  00FDE4  56                 	db	86	;'V'
   562  00FDE5  65                 	db	101	;'e'
   563  00FDE6  72                 	db	114	;'r'
   564  00FDE7  73                 	db	115	;'s'
   565  00FDE8  69                 	db	105	;'i'
   566  00FDE9  6F                 	db	111	;'o'
   567  00FDEA  6E                 	db	110	;'n'
   568  00FDEB  20                 	db	32
   569  00FDEC  25                 	db	37
   570  00FDED  31                 	db	49	;'1'
   571  00FDEE  75                 	db	117	;'u'
   572  00FDEF  2E                 	db	46
   573  00FDF0  25                 	db	37
   574  00FDF1  30                 	db	48	;'0'
   575  00FDF2  32                 	db	50	;'2'
   576  00FDF3  75                 	db	117	;'u'
   577  00FDF4  0D                 	db	13
   578  00FDF5  0A                 	db	10
   579  00FDF6  00                 	db	0
   580  00FDF7                     STR_134:
   581                           
   582                           ; BSR set to: 0
   583  00FDF7  41                 	db	65	;'A'
   584  00FDF8  54                 	db	84	;'T'
   585  00FDF9  20                 	db	32
   586  00FDFA  43                 	db	67	;'C'
   587  00FDFB  6F                 	db	111	;'o'
   588  00FDFC  6D                 	db	109	;'m'
   589  00FDFD  6D                 	db	109	;'m'
   590  00FDFE  61                 	db	97	;'a'
   591  00FDFF  6E                 	db	110	;'n'
   592  00FE00  64                 	db	100	;'d'
   593  00FE01  20                 	db	32
   594  00FE02  53                 	db	83	;'S'
   595  00FE03  65                 	db	101	;'e'
   596  00FE04  74                 	db	116	;'t'
   597  00FE05  20                 	db	32
   598  00FE06  25                 	db	37
   599  00FE07  31                 	db	49	;'1'
   600  00FE08  75                 	db	117	;'u'
   601  00FE09  2E                 	db	46
   602  00FE0A  25                 	db	37
   603  00FE0B  30                 	db	48	;'0'
   604  00FE0C  32                 	db	50	;'2'
   605  00FE0D  75                 	db	117	;'u'
   606  00FE0E  0D                 	db	13
   607  00FE0F  0A                 	db	10
   608  00FE10  00                 	db	0
   609  00FE11                     STR_30:
   610                           
   611                           ; BSR set to: 0
   612  00FE11  43                 	db	67	;'C'
   613  00FE12  41                 	db	65	;'A'
   614  00FE13  44                 	db	68	;'D'
   615  00FE14  20                 	db	32
   616  00FE15  43                 	db	67	;'C'
   617  00FE16  4F                 	db	79	;'O'
   618  00FE17  55                 	db	85	;'U'
   619  00FE18  4E                 	db	78	;'N'
   620  00FE19  54                 	db	84	;'T'
   621  00FE1A  45                 	db	69	;'E'
   622  00FE1B  52                 	db	82	;'R'
   623  00FE1C  20                 	db	32
   624  00FE1D  3D                 	db	61	;'='
   625  00FE1E  20                 	db	32
   626  00FE1F  25                 	db	37
   627  00FE20  30                 	db	48	;'0'
   628  00FE21  32                 	db	50	;'2'
   629  00FE22  58                 	db	88	;'X'
   630  00FE23  0D                 	db	13
   631  00FE24  0A                 	db	10
   632  00FE25  00                 	db	0
   633  00FE26                     
   634                           ; BSR set to: 0
   635  00FE26  4D                 	db	77	;'M'
   636  00FE27  4F                 	db	79	;'O'
   637  00FE28  44                 	db	68	;'D'
   638  00FE29  45                 	db	69	;'E'
   639  00FE2A  20                 	db	32
   640  00FE2B  3D                 	db	61	;'='
   641  00FE2C  20                 	db	32
   642  00FE2D  45                 	db	69	;'E'
   643  00FE2E  4E                 	db	78	;'N'
   644  00FE2F  44                 	db	68	;'D'
   645  00FE30  20                 	db	32
   646  00FE31  4E                 	db	78	;'N'
   647  00FE32  4F                 	db	79	;'O'
   648  00FE33  44                 	db	68	;'D'
   649  00FE34  45                 	db	69	;'E'
   650  00FE35  0D                 	db	13
   651  00FE36  0A                 	db	10
   652  00FE37  00                 	db	0
   653  00FE38                     STR_32:
   654                           
   655                           ; BSR set to: 0
   656  00FE38  4D                 	db	77	;'M'
   657  00FE39  4F                 	db	79	;'O'
   658  00FE3A  44                 	db	68	;'D'
   659  00FE3B  45                 	db	69	;'E'
   660  00FE3C  20                 	db	32
   661  00FE3D  3D                 	db	61	;'='
   662  00FE3E  20                 	db	32
   663  00FE3F  52                 	db	82	;'R'
   664  00FE40  45                 	db	69	;'E'
   665  00FE41  50                 	db	80	;'P'
   666  00FE42  45                 	db	69	;'E'
   667  00FE43  41                 	db	65	;'A'
   668  00FE44  54                 	db	84	;'T'
   669  00FE45  45                 	db	69	;'E'
   670  00FE46  52                 	db	82	;'R'
   671  00FE47  0D                 	db	13
   672  00FE48  0A                 	db	10
   673  00FE49  00                 	db	0
   674  00FE4A                     STR_10:
   675                           
   676                           ; BSR set to: 0
   677  00FE4A  41                 	db	65	;'A'
   678  00FE4B  44                 	db	68	;'D'
   679  00FE4C  44                 	db	68	;'D'
   680  00FE4D  52                 	db	82	;'R'
   681  00FE4E  3D                 	db	61	;'='
   682  00FE4F  25                 	db	37
   683  00FE50  30                 	db	48	;'0'
   684  00FE51  32                 	db	50	;'2'
   685  00FE52  58                 	db	88	;'X'
   686  00FE53  25                 	db	37
   687  00FE54  30                 	db	48	;'0'
   688  00FE55  32                 	db	50	;'2'
   689  00FE56  58                 	db	88	;'X'
   690  00FE57  0D                 	db	13
   691  00FE58  0A                 	db	10
   692  00FE59  00                 	db	0
   693  00FE5A                     STR_90:
   694                           
   695                           ; BSR set to: 0
   696  00FE5A  2B                 	db	43
   697  00FE5B  43                 	db	67	;'C'
   698  00FE5C  41                 	db	65	;'A'
   699  00FE5D  44                 	db	68	;'D'
   700  00FE5E  43                 	db	67	;'C'
   701  00FE5F  4F                 	db	79	;'O'
   702  00FE60  55                 	db	85	;'U'
   703  00FE61  4E                 	db	78	;'N'
   704  00FE62  54                 	db	84	;'T'
   705  00FE63  45                 	db	69	;'E'
   706  00FE64  52                 	db	82	;'R'
   707  00FE65  52                 	db	82	;'R'
   708  00FE66  53                 	db	83	;'S'
   709  00FE67  54                 	db	84	;'T'
   710  00FE68  00                 	db	0
   711  00FE69                     STR_61:
   712                           
   713                           ; BSR set to: 0
   714  00FE69  52                 	db	82	;'R'
   715  00FE6A  58                 	db	88	;'X'
   716  00FE6B  43                 	db	67	;'C'
   717  00FE6C  4E                 	db	78	;'N'
   718  00FE6D  54                 	db	84	;'T'
   719  00FE6E  3D                 	db	61	;'='
   720  00FE6F  25                 	db	37
   721  00FE70  75                 	db	117	;'u'
   722  00FE71  2F                 	db	47
   723  00FE72  25                 	db	37
   724  00FE73  75                 	db	117	;'u'
   725  00FE74  0D                 	db	13
   726  00FE75  0A                 	db	10
   727  00FE76  00                 	db	0
   728  00FE77                     STR_38:
   729                           
   730                           ; BSR set to: 0
   731  00FE77  54                 	db	84	;'T'
   732  00FE78  58                 	db	88	;'X'
   733  00FE79  20                 	db	32
   734  00FE7A  50                 	db	80	;'P'
   735  00FE7B  4F                 	db	79	;'O'
   736  00FE7C  57                 	db	87	;'W'
   737  00FE7D  45                 	db	69	;'E'
   738  00FE7E  52                 	db	82	;'R'
   739  00FE7F  3D                 	db	61	;'='
   740  00FE80  25                 	db	37
   741  00FE81  75                 	db	117	;'u'
   742  00FE82  0D                 	db	13
   743  00FE83  0A                 	db	10
   744  00FE84  00                 	db	0
   745  00FE85                     STR_14:
   746                           
   747                           ; BSR set to: 0
   748  00FE85  4E                 	db	78	;'N'
   749  00FE86  41                 	db	65	;'A'
   750  00FE87  44                 	db	68	;'D'
   751  00FE88  44                 	db	68	;'D'
   752  00FE89  52                 	db	82	;'R'
   753  00FE8A  3D                 	db	61	;'='
   754  00FE8B  25                 	db	37
   755  00FE8C  30                 	db	48	;'0'
   756  00FE8D  32                 	db	50	;'2'
   757  00FE8E  58                 	db	88	;'X'
   758  00FE8F  0D                 	db	13
   759  00FE90  0A                 	db	10
   760  00FE91  00                 	db	0
   761  00FE92                     STR_43:
   762                           
   763                           ; BSR set to: 0
   764  00FE92  43                 	db	67	;'C'
   765  00FE93  41                 	db	65	;'A'
   766  00FE94  44                 	db	68	;'D'
   767  00FE95  20                 	db	32
   768  00FE96  52                 	db	82	;'R'
   769  00FE97  53                 	db	83	;'S'
   770  00FE98  53                 	db	83	;'S'
   771  00FE99  3D                 	db	61	;'='
   772  00FE9A  25                 	db	37
   773  00FE9B  69                 	db	105	;'i'
   774  00FE9C  0D                 	db	13
   775  00FE9D  0A                 	db	10
   776  00FE9E  00                 	db	0
   777  00FE9F                     STR_34:
   778                           
   779                           ; BSR set to: 0
   780  00FE9F  43                 	db	67	;'C'
   781  00FEA0  48                 	db	72	;'H'
   782  00FEA1  41                 	db	65	;'A'
   783  00FEA2  4E                 	db	78	;'N'
   784  00FEA3  4E                 	db	78	;'N'
   785  00FEA4  45                 	db	69	;'E'
   786  00FEA5  4C                 	db	76	;'L'
   787  00FEA6  3D                 	db	61	;'='
   788  00FEA7  25                 	db	37
   789  00FEA8  75                 	db	117	;'u'
   790  00FEA9  0D                 	db	13
   791  00FEAA  0A                 	db	10
   792  00FEAB  00                 	db	0
   793  00FEAC                     STR_88:
   794                           
   795                           ; BSR set to: 0
   796  00FEAC  2B                 	db	43
   797  00FEAD  43                 	db	67	;'C'
   798  00FEAE  41                 	db	65	;'A'
   799  00FEAF  44                 	db	68	;'D'
   800  00FEB0  43                 	db	67	;'C'
   801  00FEB1  4F                 	db	79	;'O'
   802  00FEB2  55                 	db	85	;'U'
   803  00FEB3  4E                 	db	78	;'N'
   804  00FEB4  54                 	db	84	;'T'
   805  00FEB5  45                 	db	69	;'E'
   806  00FEB6  52                 	db	82	;'R'
   807  00FEB7  3F                 	db	63	;'?'
   808  00FEB8  00                 	db	0
   809  00FEB9                     STR_133:
   810                           
   811                           ; BSR set to: 0
   812  00FEB9  4C                 	db	76	;'L'
   813  00FEBA  6F                 	db	111	;'o'
   814  00FEBB  52                 	db	82	;'R'
   815  00FEBC  61                 	db	97	;'a'
   816  00FEBD  20                 	db	32
   817  00FEBE  4D                 	db	77	;'M'
   818  00FEBF  65                 	db	101	;'e'
   819  00FEC0  73                 	db	115	;'s'
   820  00FEC1  68                 	db	104	;'h'
   821  00FEC2  0D                 	db	13
   822  00FEC3  0A                 	db	10
   823  00FEC4  00                 	db	0
   824  00FEC5                     STR_3:
   825                           
   826                           ; BSR set to: 0
   827  00FEC5  4E                 	db	78	;'N'
   828  00FEC6  4F                 	db	79	;'O'
   829  00FEC7  54                 	db	84	;'T'
   830  00FEC8  20                 	db	32
   831  00FEC9  4F                 	db	79	;'O'
   832  00FECA  4B                 	db	75	;'K'
   833  00FECB  3A                 	db	58	;':'
   834  00FECC  25                 	db	37
   835  00FECD  75                 	db	117	;'u'
   836  00FECE  0D                 	db	13
   837  00FECF  0A                 	db	10
   838  00FED0  00                 	db	0
   839  00FED1                     STR_74:
   840                           
   841                           ; BSR set to: 0
   842  00FED1  2B                 	db	43
   843  00FED2  53                 	db	83	;'S'
   844  00FED3  48                 	db	72	;'H'
   845  00FED4  4F                 	db	79	;'O'
   846  00FED5  57                 	db	87	;'W'
   847  00FED6  48                 	db	72	;'H'
   848  00FED7  4F                 	db	79	;'O'
   849  00FED8  50                 	db	80	;'P'
   850  00FED9  53                 	db	83	;'S'
   851  00FEDA  3F                 	db	63	;'?'
   852  00FEDB  00                 	db	0
   853  00FEDC                     STR_94:
   854                           
   855                           ; BSR set to: 0
   856  00FEDC  2B                 	db	43
   857  00FEDD  43                 	db	67	;'C'
   858  00FEDE  41                 	db	65	;'A'
   859  00FEDF  44                 	db	68	;'D'
   860  00FEE0  52                 	db	82	;'R'
   861  00FEE1  53                 	db	83	;'S'
   862  00FEE2  53                 	db	83	;'S'
   863  00FEE3  49                 	db	73	;'I'
   864  00FEE4  3D                 	db	61	;'='
   865  00FEE5  00                 	db	0
   866  00FEE6                     STR_130:
   867                           
   868                           ; BSR set to: 0
   869  00FEE6  2B                 	db	43
   870  00FEE7  54                 	db	84	;'T'
   871  00FEE8  58                 	db	88	;'X'
   872  00FEE9  50                 	db	80	;'P'
   873  00FEEA  4F                 	db	79	;'O'
   874  00FEEB  57                 	db	87	;'W'
   875  00FEEC  45                 	db	69	;'E'
   876  00FEED  52                 	db	82	;'R'
   877  00FEEE  3D                 	db	61	;'='
   878  00FEEF  00                 	db	0
   879  00FEF0                     STR_92:
   880                           
   881                           ; BSR set to: 0
   882  00FEF0  2B                 	db	43
   883  00FEF1  43                 	db	67	;'C'
   884  00FEF2  41                 	db	65	;'A'
   885  00FEF3  44                 	db	68	;'D'
   886  00FEF4  52                 	db	82	;'R'
   887  00FEF5  53                 	db	83	;'S'
   888  00FEF6  53                 	db	83	;'S'
   889  00FEF7  49                 	db	73	;'I'
   890  00FEF8  3F                 	db	63	;'?'
   891  00FEF9  00                 	db	0
   892  00FEFA                     STR_128:
   893                           
   894                           ; BSR set to: 0
   895  00FEFA  2B                 	db	43
   896  00FEFB  54                 	db	84	;'T'
   897  00FEFC  58                 	db	88	;'X'
   898  00FEFD  50                 	db	80	;'P'
   899  00FEFE  4F                 	db	79	;'O'
   900  00FEFF  57                 	db	87	;'W'
   901  00FF00  45                 	db	69	;'E'
   902  00FF01  52                 	db	82	;'R'
   903  00FF02  3F                 	db	63	;'?'
   904  00FF03  00                 	db	0
   905  00FF04                     STR_80:
   906                           
   907                           ; BSR set to: 0
   908  00FF04  2B                 	db	43
   909  00FF05  42                 	db	66	;'B'
   910  00FF06  4F                 	db	79	;'O'
   911  00FF07  4F                 	db	79	;'O'
   912  00FF08  54                 	db	84	;'T'
   913  00FF09  4C                 	db	76	;'L'
   914  00FF0A  4F                 	db	79	;'O'
   915  00FF0B  41                 	db	65	;'A'
   916  00FF0C  44                 	db	68	;'D'
   917  00FF0D  00                 	db	0
   918  00FF0E                     STR_86:
   919                           
   920                           ; BSR set to: 0
   921  00FF0E  2B                 	db	43
   922  00FF0F  41                 	db	65	;'A'
   923  00FF10  45                 	db	69	;'E'
   924  00FF11  53                 	db	83	;'S'
   925  00FF12  4B                 	db	75	;'K'
   926  00FF13  45                 	db	69	;'E'
   927  00FF14  59                 	db	89	;'Y'
   928  00FF15  3A                 	db	58	;':'
   929  00FF16  00                 	db	0
   930  00FF17                     STR_100:
   931                           
   932                           ; BSR set to: 0
   933  00FF17  2B                 	db	43
   934  00FF18  48                 	db	72	;'H'
   935  00FF19  4F                 	db	79	;'O'
   936  00FF1A  50                 	db	80	;'P'
   937  00FF1B  54                 	db	84	;'T'
   938  00FF1C  54                 	db	84	;'T'
   939  00FF1D  4C                 	db	76	;'L'
   940  00FF1E  3D                 	db	61	;'='
   941  00FF1F  00                 	db	0
   942  00FF20                     STR_112:
   943                           
   944                           ; BSR set to: 0
   945  00FF20  2B                 	db	43
   946  00FF21  50                 	db	80	;'P'
   947  00FF22  41                 	db	65	;'A'
   948  00FF23  52                 	db	82	;'R'
   949  00FF24  49                 	db	73	;'I'
   950  00FF25  54                 	db	84	;'T'
   951  00FF26  59                 	db	89	;'Y'
   952  00FF27  3D                 	db	61	;'='
   953  00FF28  00                 	db	0
   954  00FF29                     STR_66:
   955                           
   956                           ; BSR set to: 0
   957  00FF29  2B                 	db	43
   958  00FF2A  53                 	db	83	;'S'
   959  00FF2B  45                 	db	69	;'E'
   960  00FF2C  54                 	db	84	;'T'
   961  00FF2D  53                 	db	83	;'S'
   962  00FF2E  49                 	db	73	;'I'
   963  00FF2F  4E                 	db	78	;'N'
   964  00FF30  4B                 	db	75	;'K'
   965  00FF31  00                 	db	0
   966  00FF32                     STR_57:
   967                           
   968                           ; BSR set to: 0
   969  00FF32  53                 	db	83	;'S'
   970  00FF33  46                 	db	70	;'F'
   971  00FF34  3D                 	db	61	;'='
   972  00FF35  25                 	db	37
   973  00FF36  75                 	db	117	;'u'
   974  00FF37  0D                 	db	13
   975  00FF38  0A                 	db	10
   976  00FF39  00                 	db	0
   977  00FF3A                     STR_136:
   978                           
   979                           ; BSR set to: 0
   980  00FF3A  52                 	db	82	;'R'
   981  00FF3B  65                 	db	101	;'e'
   982  00FF3C  67                 	db	103	;'g'
   983  00FF3D  69                 	db	105	;'i'
   984  00FF3E  6F                 	db	111	;'o'
   985  00FF3F  6E                 	db	110	;'n'
   986  00FF40  20                 	db	32
   987  00FF41  00                 	db	0
   988  00FF42                     STR_110:
   989                           
   990                           ; BSR set to: 0
   991  00FF42  2B                 	db	43
   992  00FF43  4E                 	db	78	;'N'
   993  00FF44  41                 	db	65	;'A'
   994  00FF45  44                 	db	68	;'D'
   995  00FF46  44                 	db	68	;'D'
   996  00FF47  52                 	db	82	;'R'
   997  00FF48  3D                 	db	61	;'='
   998  00FF49  00                 	db	0
   999  00FF4A                     STR_76:
  1000                           
  1001                           ; BSR set to: 0
  1002  00FF4A  2B                 	db	43
  1003  00FF4B  42                 	db	66	;'B'
  1004  00FF4C  43                 	db	67	;'C'
  1005  00FF4D  41                 	db	65	;'A'
  1006  00FF4E  53                 	db	83	;'S'
  1007  00FF4F  54                 	db	84	;'T'
  1008  00FF50  3D                 	db	61	;'='
  1009  00FF51  00                 	db	0
  1010  00FF52                     STR_108:
  1011                           
  1012                           ; BSR set to: 0
  1013  00FF52  2B                 	db	43
  1014  00FF53  4E                 	db	78	;'N'
  1015  00FF54  41                 	db	65	;'A'
  1016  00FF55  44                 	db	68	;'D'
  1017  00FF56  44                 	db	68	;'D'
  1018  00FF57  52                 	db	82	;'R'
  1019  00FF58  3F                 	db	63	;'?'
  1020  00FF59  00                 	db	0
  1021  00FF5A                     STR_64:
  1022                           
  1023                           ; BSR set to: 0
  1024  00FF5A  2B                 	db	43
  1025  00FF5B  53                 	db	83	;'S'
  1026  00FF5C  45                 	db	69	;'E'
  1027  00FF5D  4E                 	db	78	;'N'
  1028  00FF5E  44                 	db	68	;'D'
  1029  00FF5F  3A                 	db	58	;':'
  1030  00FF60  00                 	db	0
  1031  00FF61                     STR_78:
  1032                           
  1033                           ; BSR set to: 0
  1034  00FF61  2B                 	db	43
  1035  00FF62  42                 	db	66	;'B'
  1036  00FF63  41                 	db	65	;'A'
  1037  00FF64  55                 	db	85	;'U'
  1038  00FF65  44                 	db	68	;'D'
  1039  00FF66  3D                 	db	61	;'='
  1040  00FF67  00                 	db	0
  1041  00FF68                     STR_118:
  1042                           
  1043                           ; BSR set to: 0
  1044  00FF68  2B                 	db	43
  1045  00FF69  52                 	db	82	;'R'
  1046  00FF6A  46                 	db	70	;'F'
  1047  00FF6B  43                 	db	67	;'C'
  1048  00FF6C  48                 	db	72	;'H'
  1049  00FF6D  3D                 	db	61	;'='
  1050  00FF6E  00                 	db	0
  1051  00FF6F                     STR_84:
  1052                           
  1053                           ; BSR set to: 0
  1054  00FF6F  2B                 	db	43
  1055  00FF70  41                 	db	65	;'A'
  1056  00FF71  44                 	db	68	;'D'
  1057  00FF72  44                 	db	68	;'D'
  1058  00FF73  52                 	db	82	;'R'
  1059  00FF74  3D                 	db	61	;'='
  1060  00FF75  00                 	db	0
  1061  00FF76                     STR_98:
  1062                           
  1063                           ; BSR set to: 0
  1064  00FF76  2B                 	db	43
  1065  00FF77  48                 	db	72	;'H'
  1066  00FF78  4F                 	db	79	;'O'
  1067  00FF79  50                 	db	80	;'P'
  1068  00FF7A  53                 	db	83	;'S'
  1069  00FF7B  3D                 	db	61	;'='
  1070  00FF7C  00                 	db	0
  1071  00FF7D                     STR_106:
  1072                           
  1073                           ; BSR set to: 0
  1074  00FF7D  2B                 	db	43
  1075  00FF7E  4D                 	db	77	;'M'
  1076  00FF7F  4F                 	db	79	;'O'
  1077  00FF80  44                 	db	68	;'D'
  1078  00FF81  45                 	db	69	;'E'
  1079  00FF82  3F                 	db	63	;'?'
  1080  00FF83  00                 	db	0
  1081  00FF84                     STR_116:
  1082                           
  1083                           ; BSR set to: 0
  1084  00FF84  2B                 	db	43
  1085  00FF85  52                 	db	82	;'R'
  1086  00FF86  46                 	db	70	;'F'
  1087  00FF87  43                 	db	67	;'C'
  1088  00FF88  48                 	db	72	;'H'
  1089  00FF89  3F                 	db	63	;'?'
  1090  00FF8A  00                 	db	0
  1091  00FF8B                     STR_82:
  1092                           
  1093                           ; BSR set to: 0
  1094  00FF8B  2B                 	db	43
  1095  00FF8C  41                 	db	65	;'A'
  1096  00FF8D  44                 	db	68	;'D'
  1097  00FF8E  44                 	db	68	;'D'
  1098  00FF8F  52                 	db	82	;'R'
  1099  00FF90  3F                 	db	63	;'?'
  1100  00FF91  00                 	db	0
  1101  00FF92                     STR_96:
  1102                           
  1103                           ; BSR set to: 0
  1104  00FF92  2B                 	db	43
  1105  00FF93  48                 	db	72	;'H'
  1106  00FF94  4F                 	db	79	;'O'
  1107  00FF95  50                 	db	80	;'P'
  1108  00FF96  53                 	db	83	;'S'
  1109  00FF97  3F                 	db	63	;'?'
  1110  00FF98  00                 	db	0
  1111  00FF99                     STR_122:
  1112                           
  1113                           ; BSR set to: 0
  1114  00FF99  2B                 	db	43
  1115  00FF9A  52                 	db	82	;'R'
  1116  00FF9B  58                 	db	88	;'X'
  1117  00FF9C  43                 	db	67	;'C'
  1118  00FF9D  54                 	db	84	;'T'
  1119  00FF9E  3F                 	db	63	;'?'
  1120  00FF9F  00                 	db	0
  1121  00FFA0                     STR_68:
  1122                           
  1123                           ; BSR set to: 0
  1124  00FFA0  2B                 	db	43
  1125  00FFA1  53                 	db	83	;'S'
  1126  00FFA2  53                 	db	83	;'S'
  1127  00FFA3  49                 	db	73	;'I'
  1128  00FFA4  4E                 	db	78	;'N'
  1129  00FFA5  4B                 	db	75	;'K'
  1130  00FFA6  00                 	db	0
  1131  00FFA7                     STR_17:
  1132                           
  1133                           ; BSR set to: 0
  1134  00FFA7  25                 	db	37
  1135  00FFA8  30                 	db	48	;'0'
  1136  00FFA9  34                 	db	52	;'4'
  1137  00FFAA  58                 	db	88	;'X'
  1138  00FFAB  3A                 	db	58	;':'
  1139  00FFAC  00                 	db	0
  1140  00FFAD                     STR_126:
  1141                           
  1142                           ; BSR set to: 0
  1143  00FFAD  2B                 	db	43
  1144  00FFAE  54                 	db	84	;'T'
  1145  00FFAF  54                 	db	84	;'T'
  1146  00FFB0  4C                 	db	76	;'L'
  1147  00FFB1  3D                 	db	61	;'='
  1148  00FFB2  00                 	db	0
  1149  00FFB3                     STR_104:
  1150                           
  1151                           ; BSR set to: 0
  1152  00FFB3  2B                 	db	43
  1153  00FFB4  4D                 	db	77	;'M'
  1154  00FFB5  41                 	db	65	;'A'
  1155  00FFB6  43                 	db	67	;'C'
  1156  00FFB7  3F                 	db	63	;'?'
  1157  00FFB8  00                 	db	0
  1158  00FFB9                     STR_124:
  1159                           
  1160                           ; BSR set to: 0
  1161  00FFB9  2B                 	db	43
  1162  00FFBA  54                 	db	84	;'T'
  1163  00FFBB  54                 	db	84	;'T'
  1164  00FFBC  4C                 	db	76	;'L'
  1165  00FFBD  3F                 	db	63	;'?'
  1166  00FFBE  00                 	db	0
  1167  00FFBF                     STR_49:
  1168                           
  1169                           ; BSR set to: 0
  1170  00FFBF  3D                 	db	61	;'='
  1171  00FFC0  4E                 	db	78	;'N'
  1172  00FFC1  4F                 	db	79	;'O'
  1173  00FFC2  4E                 	db	78	;'N'
  1174  00FFC3  45                 	db	69	;'E'
  1175  00FFC4  00                 	db	0
  1176  00FFC5                     STR_51:
  1177                           
  1178                           ; BSR set to: 0
  1179  00FFC5  3D                 	db	61	;'='
  1180  00FFC6  45                 	db	69	;'E'
  1181  00FFC7  56                 	db	86	;'V'
  1182  00FFC8  45                 	db	69	;'E'
  1183  00FFC9  4E                 	db	78	;'N'
  1184  00FFCA  00                 	db	0
  1185  00FFCB                     STR_114:
  1186                           
  1187                           ; BSR set to: 0
  1188  00FFCB  2B                 	db	43
  1189  00FFCC  52                 	db	82	;'R'
  1190  00FFCD  45                 	db	69	;'E'
  1191  00FFCE  43                 	db	67	;'C'
  1192  00FFCF  56                 	db	86	;'V'
  1193  00FFD0  00                 	db	0
  1194  00FFD1                     STR_137:
  1195                           
  1196                           ; BSR set to: 0
  1197  00FFD1  4E                 	db	78	;'N'
  1198  00FFD2  41                 	db	65	;'A'
  1199  00FFD3  0D                 	db	13
  1200  00FFD4  0A                 	db	10
  1201  00FFD5  00                 	db	0
  1202  00FFD6                     STR_12:
  1203                           
  1204                           ; BSR set to: 0
  1205  00FFD6  4F                 	db	79	;'O'
  1206  00FFD7  4B                 	db	75	;'K'
  1207  00FFD8  0D                 	db	13
  1208  00FFD9  0A                 	db	10
  1209  00FFDA  00                 	db	0
  1210  00FFDB                     STR_19:
  1211                           
  1212                           ; BSR set to: 0
  1213  00FFDB  4D                 	db	77	;'M'
  1214  00FFDC  41                 	db	65	;'A'
  1215  00FFDD  43                 	db	67	;'C'
  1216  00FFDE  3D                 	db	61	;'='
  1217  00FFDF  00                 	db	0
  1218  00FFE0                     STR_72:
  1219                           
  1220                           ; BSR set to: 0
  1221  00FFE0  2B                 	db	43
  1222  00FFE1  53                 	db	83	;'S'
  1223  00FFE2  46                 	db	70	;'F'
  1224  00FFE3  3D                 	db	61	;'='
  1225  00FFE4  00                 	db	0
  1226  00FFE5                     STR_70:
  1227                           
  1228                           ; BSR set to: 0
  1229  00FFE5  2B                 	db	43
  1230  00FFE6  53                 	db	83	;'S'
  1231  00FFE7  46                 	db	70	;'F'
  1232  00FFE8  3F                 	db	63	;'?'
  1233  00FFE9  00                 	db	0
  1234  00FFEA                     STR_47:
  1235                           
  1236                           ; BSR set to: 0
  1237  00FFEA  3D                 	db	61	;'='
  1238  00FFEB  4F                 	db	79	;'O'
  1239  00FFEC  44                 	db	68	;'D'
  1240  00FFED  44                 	db	68	;'D'
  1241  00FFEE  00                 	db	0
  1242  00FFEF                     STR_120:
  1243                           
  1244                           ; BSR set to: 0
  1245  00FFEF  2B                 	db	43
  1246  00FFF0  52                 	db	82	;'R'
  1247  00FFF1  53                 	db	83	;'S'
  1248  00FFF2  54                 	db	84	;'T'
  1249  00FFF3  00                 	db	0
  1250  00FFF4                     STR_20:
  1251                           
  1252                           ; BSR set to: 0
  1253  00FFF4  25                 	db	37
  1254  00FFF5  30                 	db	48	;'0'
  1255  00FFF6  32                 	db	50	;'2'
  1256  00FFF7  58                 	db	88	;'X'
  1257  00FFF8  00                 	db	0
  1258  00FFF9                     STR_102:
  1259                           
  1260                           ; BSR set to: 0
  1261  00FFF9  2B                 	db	43
  1262  00FFFA  49                 	db	73	;'I'
  1263  00FFFB  00                 	db	0
  1264  00FFFC                     STR_56:
  1265                           
  1266                           ; BSR set to: 0
  1267  00FFFC  0D                 	db	13
  1268  00FFFD  00                 	db	0
  1269  0000                     
  1270                           ; #config settings
  1271  00FFFE  00                 	db	0	; dummy byte at the end
  1272  0000                     
  1273                           	psect	nvBANK0
  1274  0000FD                     __pnvBANK0:
  1275                           	opt callstack 0
  1276  0000FD                     _timer0ReloadVal16bit:
  1277                           	opt callstack 0
  1278  0000FD                     	ds	2
  1279  0000FF                     _uart1TxBufferRemaining:
  1280                           	opt callstack 0
  1281  0000FF                     	ds	1
  1282                           
  1283                           	psect	nvBANK1
  1284  0001E8                     __pnvBANK1:
  1285                           	opt callstack 0
  1286  0001E8                     _UART1_ErrorHandler:
  1287                           	opt callstack 0
  1288  0001E8                     	ds	2
  1289  0001EA                     _UART1_OverrunErrorHandler:
  1290                           	opt callstack 0
  1291  0001EA                     	ds	2
  1292  0001EC                     _UART1_FramingErrorHandler:
  1293                           	opt callstack 0
  1294  0001EC                     	ds	2
  1295  0001EE                     _TMR0_InterruptHandler:
  1296                           	opt callstack 0
  1297  0001EE                     	ds	2
  1298  0001F0                     _UART1_TxInterruptHandler:
  1299                           	opt callstack 0
  1300  0001F0                     	ds	2
  1301  0001F2                     _UART1_RxInterruptHandler:
  1302                           	opt callstack 0
  1303  0001F2                     	ds	2
  1304  0000                     _CRCDATH	set	14689
  1305  0000                     _CRCDATL	set	14688
  1306  0000                     _CRCCON1bits	set	14697
  1307  0000                     _CRCXORL	set	14694
  1308  0000                     _CRCXORH	set	14695
  1309  0000                     _SCANTRIG	set	14717
  1310  0000                     _SCANHADRL	set	14713
  1311  0000                     _SCANHADRH	set	14714
  1312  0000                     _SCANHADRU	set	14715
  1313  0000                     _SCANLADRL	set	14710
  1314  0000                     _SCANLADRH	set	14711
  1315  0000                     _SCANLADRU	set	14712
  1316  0000                     _SCANCON0	set	14716
  1317  0000                     _CRCCON1	set	14697
  1318  0000                     _CRCCON0	set	14696
  1319  0000                     _PMD7	set	14791
  1320  0000                     _PMD6	set	14790
  1321  0000                     _PMD5	set	14789
  1322  0000                     _PMD4	set	14788
  1323  0000                     _PMD3	set	14787
  1324  0000                     _PMD2	set	14786
  1325  0000                     _PMD1	set	14785
  1326  0000                     _PMD0	set	14784
  1327  0000                     _OSCTUNE	set	14814
  1328  0000                     _OSCFRQ	set	14815
  1329  0000                     _OSCEN	set	14813
  1330  0000                     _OSCCON3	set	14811
  1331  0000                     _OSCCON1	set	14809
  1332  0000                     _IPR3bits	set	14723
  1333  0000                     _PIR0bits	set	14752
  1334  0000                     _NVMCON2	set	14822
  1335  0000                     _NVMDAT	set	14819
  1336  0000                     _NVMADRL	set	14816
  1337  0000                     _NVMADRH	set	14817
  1338  0000                     _NVMCON1bits	set	14821
  1339  0000                     _PIR3bits	set	14755
  1340  0000                     _PIR2bits	set	14754
  1341  0000                     _PIE3bits	set	14739
  1342  0000                     _CRCCON0bits	set	14696
  1343  0000                     _CRCACCH	set	14691
  1344  0000                     _CRCACCL	set	14690
  1345  0000                     _SPI1SDIPPS	set	15071
  1346  0000                     _RC7PPS	set	14871
  1347  0000                     _U1CTSPPS	set	15078
  1348  0000                     _U1RXPPS	set	15077
  1349  0000                     _RC1PPS	set	14865
  1350  0000                     _RB0PPS	set	14856
  1351  0000                     _SPI1SSPPS	set	15072
  1352  0000                     _SPI1SCKPPS	set	15070
  1353  0000                     _RC0PPS	set	14864
  1354  0000                     _INLVLE	set	14980
  1355  0000                     _INLVLC	set	14948
  1356  0000                     _INLVLB	set	14932
  1357  0000                     _INLVLA	set	14916
  1358  0000                     _SLRCONC	set	14947
  1359  0000                     _SLRCONB	set	14931
  1360  0000                     _SLRCONA	set	14915
  1361  0000                     _ODCONC	set	14946
  1362  0000                     _ODCONB	set	14930
  1363  0000                     _ODCONA	set	14914
  1364  0000                     _RC4I2C	set	14955
  1365  0000                     _RC3I2C	set	14954
  1366  0000                     _RB2I2C	set	14939
  1367  0000                     _RB1I2C	set	14938
  1368  0000                     _WPUC	set	14945
  1369  0000                     _WPUA	set	14913
  1370  0000                     _WPUB	set	14929
  1371  0000                     _WPUE	set	14977
  1372  0000                     _ANSELA	set	14912
  1373  0000                     _ANSELB	set	14928
  1374  0000                     _ANSELC	set	14944
  1375  0000                     _U1TXB	set	15850
  1376  0000                     _U1ERRIE	set	15866
  1377  0000                     _U1UIR	set	15864
  1378  0000                     _U1P3H	set	15857
  1379  0000                     _U1P3L	set	15856
  1380  0000                     _U1P2H	set	15855
  1381  0000                     _U1P2L	set	15854
  1382  0000                     _U1P1H	set	15853
  1383  0000                     _U1P1L	set	15852
  1384  0000                     _SPI1RXB	set	15632
  1385  0000                     _SPI1TXB	set	15633
  1386  0000                     _SPI1TCNTL	set	15634
  1387  0000                     _SPI1BAUD	set	15641
  1388  0000                     _SPI1CLK	set	15644
  1389  0000                     _SPI1CON2	set	15638
  1390  0000                     _SPI1CON1	set	15637
  1391  0000                     _SPI1CON0	set	15636
  1392  0000                     _U1ERRIR	set	15865
  1393  0000                     _U1FIFO	set	15863
  1394  0000                     _U1ERRIRbits	set	15865
  1395  0000                     _U1BRGH	set	15862
  1396  0000                     _U1BRGL	set	15861
  1397  0000                     _U1CON2	set	15860
  1398  0000                     _U1CON0	set	15858
  1399  0000                     _U1CON1	set	15859
  1400  0000                     _U1RXB	set	15848
  1401  0000                     _PORTBbits	set	16331
  1402  0000                     _LATCbits	set	16316
  1403  0000                     _TRISC	set	16324
  1404  0000                     _TRISB	set	16323
  1405  0000                     _TRISA	set	16322
  1406  0000                     _LATC	set	16316
  1407  0000                     _LATB	set	16315
  1408  0000                     _LATA	set	16314
  1409  0000                     _IVTBASEL	set	16341
  1410  0000                     _IVTBASEH	set	16342
  1411  0000                     _IVTBASEU	set	16343
  1412  0000                     _IVTLOCKbits	set	16340
  1413  0000                     _IVTLOCK	set	16340
  1414  0000                     _INTCON0bits	set	16338
  1415  0000                     _TABLAT	set	16373
  1416  0000                     _TBLPTRL	set	16374
  1417  0000                     _TBLPTRH	set	16375
  1418  0000                     _TBLPTRU	set	16376
  1419  0000                     _T0CON0	set	16312
  1420  0000                     _TMR0L	set	16310
  1421  0000                     _TMR0H	set	16311
  1422  0000                     _T0CON1	set	16313
  1423  0000                     _TRISBbits	set	16323
  1424  0000                     _LATAbits	set	16314
  1425  0000                     _GIE	set	130711
  1426                           
  1427                           	psect	cinit
  1428  005B96                     __pcinit:
  1429                           	opt callstack 0
  1430  005B96                     start_initialization:
  1431                           	opt callstack 0
  1432  005B96                     __initialization:
  1433                           	opt callstack 0
  1434                           
  1435                           ; Initialize objects allocated to BANK2 (10 bytes)
  1436                           ; load TBLPTR registers with __pidataBANK2
  1437  005B96  0EB2               	movlw	low __pidataBANK2
  1438  005B98  6EF6               	movwf	tblptrl,c
  1439  005B9A  0E8D               	movlw	high __pidataBANK2
  1440  005B9C  6EF7               	movwf	tblptrh,c
  1441  005B9E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1442  005BA0  6EF8               	movwf	tblptru,c
  1443  005BA2  EE00  F2CC         	lfsr	0,__pdataBANK2
  1444  005BA6  EE10 F00A          	lfsr	1,10
  1445  005BAA                     copy_data0:
  1446  005BAA  0009               	tblrd		*+
  1447  005BAC  006F FFD7 FFEE     	movff	tablat,postinc0
  1448  005BB2  50E5               	movf	postdec1,w,c
  1449  005BB4  50E1               	movf	fsr1l,w,c
  1450  005BB6  E1F9               	bnz	copy_data0
  1451                           
  1452                           ; Initialize objects allocated to BANK1 (7 bytes)
  1453                           ; load TBLPTR registers with __pidataBANK1
  1454  005BB8  0ED8               	movlw	low __pidataBANK1
  1455  005BBA  6EF6               	movwf	tblptrl,c
  1456  005BBC  0E8D               	movlw	high __pidataBANK1
  1457  005BBE  6EF7               	movwf	tblptrh,c
  1458  005BC0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1459  005BC2  6EF8               	movwf	tblptru,c
  1460  005BC4  EE00  F1F4         	lfsr	0,__pdataBANK1
  1461  005BC8  EE10 F007          	lfsr	1,7
  1462  005BCC                     copy_data1:
  1463  005BCC  0009               	tblrd		*+
  1464  005BCE  006F FFD7 FFEE     	movff	tablat,postinc0
  1465  005BD4  50E5               	movf	postdec1,w,c
  1466  005BD6  50E1               	movf	fsr1l,w,c
  1467  005BD8  E1F9               	bnz	copy_data1
  1468                           
  1469                           ; Initialize objects allocated to BANK0 (6 bytes)
  1470                           ; load TBLPTR registers with __pidataBANK0
  1471  005BDA  0EDF               	movlw	low __pidataBANK0
  1472  005BDC  6EF6               	movwf	tblptrl,c
  1473  005BDE  0E8D               	movlw	high __pidataBANK0
  1474  005BE0  6EF7               	movwf	tblptrh,c
  1475  005BE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1476  005BE4  6EF8               	movwf	tblptru,c
  1477  005BE6  EE00  F0F7         	lfsr	0,__pdataBANK0
  1478  005BEA  EE10 F006          	lfsr	1,6
  1479  005BEE                     copy_data2:
  1480  005BEE  0009               	tblrd		*+
  1481  005BF0  006F FFD7 FFEE     	movff	tablat,postinc0
  1482  005BF6  50E5               	movf	postdec1,w,c
  1483  005BF8  50E1               	movf	fsr1l,w,c
  1484  005BFA  E1F9               	bnz	copy_data2
  1485                           
  1486                           ; Clear objects allocated to BIGRAM (1819 bytes)
  1487  005BFC  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1488  005C00  EE11 F31B          	lfsr	1,1819
  1489  005C04                     clear_0:
  1490  005C04  6AEE               	clrf	postinc0,c
  1491  005C06  50E5               	movf	postdec1,w,c
  1492  005C08  50E1               	movf	fsr1l,w,c
  1493  005C0A  E1FC               	bnz	clear_0
  1494  005C0C  50E2               	movf	fsr1h,w,c
  1495  005C0E  E1FA               	bnz	clear_0
  1496                           
  1497                           ; Clear objects allocated to BANK5 (189 bytes)
  1498  005C10  EE01  F100         	lfsr	0,__pbssBANK5
  1499  005C14  0EBD               	movlw	189
  1500  005C16                     clear_1:
  1501  005C16  6AEE               	clrf	postinc0,c
  1502  005C18  06E8               	decf	wreg,f,c
  1503  005C1A  E1FD               	bnz	clear_1
  1504                           
  1505                           ; Clear objects allocated to BANK4 (96 bytes)
  1506  005C1C  EE01  F000         	lfsr	0,__pbssBANK4
  1507  005C20  0E60               	movlw	96
  1508  005C22                     clear_2:
  1509  005C22  6AEE               	clrf	postinc0,c
  1510  005C24  06E8               	decf	wreg,f,c
  1511  005C26  E1FD               	bnz	clear_2
  1512                           
  1513                           ; Clear objects allocated to BANK3 (192 bytes)
  1514  005C28  EE00  F300         	lfsr	0,__pbssBANK3
  1515  005C2C  0EC0               	movlw	192
  1516  005C2E                     clear_3:
  1517  005C2E  6AEE               	clrf	postinc0,c
  1518  005C30  06E8               	decf	wreg,f,c
  1519  005C32  E1FD               	bnz	clear_3
  1520                           
  1521                           ; Clear objects allocated to BANK2 (204 bytes)
  1522  005C34  EE00  F200         	lfsr	0,__pbssBANK2
  1523  005C38  0ECC               	movlw	204
  1524  005C3A                     clear_4:
  1525  005C3A  6AEE               	clrf	postinc0,c
  1526  005C3C  06E8               	decf	wreg,f,c
  1527  005C3E  E1FD               	bnz	clear_4
  1528                           
  1529                           ; Clear objects allocated to BANK1 (232 bytes)
  1530  005C40  EE00  F100         	lfsr	0,__pbssBANK1
  1531  005C44  0EE8               	movlw	232
  1532  005C46                     clear_5:
  1533  005C46  6AEE               	clrf	postinc0,c
  1534  005C48  06E8               	decf	wreg,f,c
  1535  005C4A  E1FD               	bnz	clear_5
  1536                           
  1537                           ; Clear objects allocated to BANK0 (70 bytes)
  1538  005C4C  EE00  F0B1         	lfsr	0,__pbssBANK0
  1539  005C50  0E46               	movlw	70
  1540  005C52                     clear_6:
  1541  005C52  6AEE               	clrf	postinc0,c
  1542  005C54  06E8               	decf	wreg,f,c
  1543  005C56  E1FD               	bnz	clear_6
  1544                           
  1545                           ; Clear objects allocated to COMRAM (1 bytes)
  1546  005C58  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1547                           
  1548                           ;
  1549                           ; Setup IVTBASE
  1550                           ;
  1551  005C5A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1552  005C5C  6ED5               	movwf	213,c
  1553  005C5E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1554  005C60  6ED6               	movwf	214,c
  1555  005C62  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1556  005C64  6ED7               	movwf	215,c
  1557  005C66                     end_of_initialization:
  1558                           	opt callstack 0
  1559  005C66                     __end_of__initialization:
  1560                           	opt callstack 0
  1561  005C66  0100               	movlb	0
  1562  005C68  EFDF  F043         	goto	_main	;jump to C main() function
  1563                           
  1564                           	psect	bssCOMRAM
  1565  00005E                     __pbssCOMRAM:
  1566                           	opt callstack 0
  1567  00005E                     _uart1RxHead:
  1568                           	opt callstack 0
  1569  00005E                     	ds	1
  1570                           
  1571                           	psect	bssBANK0
  1572  0000B1                     __pbssBANK0:
  1573                           	opt callstack 0
  1574  0000B1                     strtok@p:
  1575                           	opt callstack 0
  1576  0000B1                     	ds	2
  1577  0000B3                     _nout:
  1578                           	opt callstack 0
  1579  0000B3                     	ds	2
  1580  0000B5                     _width:
  1581                           	opt callstack 0
  1582  0000B5                     	ds	2
  1583  0000B7                     _prec:
  1584                           	opt callstack 0
  1585  0000B7                     	ds	2
  1586  0000B9                     _flags:
  1587                           	opt callstack 0
  1588  0000B9                     	ds	2
  1589  0000BB                     _timers:
  1590                           	opt callstack 0
  1591  0000BB                     	ds	2
  1592  0000BD                     _nwkTxPhyActiveFrame:
  1593                           	opt callstack 0
  1594  0000BD                     	ds	2
  1595  0000BF                     _nwkDataReqQueue:
  1596                           	opt callstack 0
  1597  0000BF                     	ds	2
  1598  0000C1                     _halTimerIrqCount:
  1599                           	opt callstack 0
  1600  0000C1                     	ds	2
  1601  0000C3                     _nwkRxAckControl:
  1602                           	opt callstack 0
  1603  0000C3                     	ds	1
  1604  0000C4                     _uart1RxLastError:
  1605                           	opt callstack 0
  1606  0000C4                     	ds	1
  1607  0000C5                     _uart1RxCount:
  1608                           	opt callstack 0
  1609  0000C5                     	ds	1
  1610  0000C6                     _uart1RxTail:
  1611                           	opt callstack 0
  1612  0000C6                     	ds	1
  1613  0000C7                     _uart1TxTail:
  1614                           	opt callstack 0
  1615  0000C7                     	ds	1
  1616  0000C8                     _uart1TxHead:
  1617                           	opt callstack 0
  1618  0000C8                     	ds	1
  1619  0000C9                     _ledStateVar:
  1620                           	opt callstack 0
  1621  0000C9                     	ds	1
  1622  0000CA                     _radio_state_var:
  1623                           	opt callstack 0
  1624  0000CA                     	ds	1
  1625  0000CB                     _dwellTimer:
  1626                           	opt callstack 0
  1627  0000CB                     	ds	1
  1628  0000CC                     _TXPower:
  1629                           	opt callstack 0
  1630  0000CC                     	ds	1
  1631  0000CD                     _fhssdebug:
  1632                           	opt callstack 0
  1633  0000CD                     	ds	1
  1634  0000CE                     _channel:
  1635                           	opt callstack 0
  1636  0000CE                     	ds	1
  1637  0000CF                     _current_sf:
  1638                           	opt callstack 0
  1639  0000CF                     	ds	1
  1640  0000D0                     _SNR:
  1641                           	opt callstack 0
  1642  0000D0                     	ds	1
  1643  0000D1                     _packetRSSI:
  1644                           	opt callstack 0
  1645  0000D1                     	ds	1
  1646  0000D2                     _RSSI:
  1647                           	opt callstack 0
  1648  0000D2                     	ds	1
  1649  0000D3                     _need_radio_reset:
  1650                           	opt callstack 0
  1651  0000D3                     	ds	1
  1652  0000D4                     _cadCounter:
  1653                           	opt callstack 0
  1654  0000D4                     	ds	1
  1655  0000D5                     _cadDone:
  1656                           	opt callstack 0
  1657  0000D5                     	ds	1
  1658  0000D6                     __packetIndex:
  1659                           	opt callstack 0
  1660  0000D6                     	ds	1
  1661  0000D7                     __implicitHeaderMode:
  1662                           	opt callstack 0
  1663  0000D7                     	ds	1
  1664  0000D8                     _atStateVar:
  1665                           	opt callstack 0
  1666  0000D8                     	ds	1
  1667  0000D9                     _commandByteCounter:
  1668                           	opt callstack 0
  1669  0000D9                     	ds	1
  1670  0000DA                     _tx_done:
  1671                           	opt callstack 0
  1672  0000DA                     	ds	1
  1673  0000DB                     _msgIDCounter:
  1674                           	opt callstack 0
  1675  0000DB                     	ds	1
  1676  0000DC                     _currentMode:
  1677                           	opt callstack 0
  1678  0000DC                     	ds	1
  1679  0000DD                     _sinkAddr1:
  1680                           	opt callstack 0
  1681  0000DD                     	ds	1
  1682  0000DE                     _sinkAddr0:
  1683                           	opt callstack 0
  1684  0000DE                     	ds	1
  1685  0000DF                     _currentMsgID:
  1686                           	opt callstack 0
  1687  0000DF                     	ds	1
  1688  0000E0                     _curent_parity:
  1689                           	opt callstack 0
  1690  0000E0                     	ds	1
  1691  0000E1                     _uart_parity:
  1692                           	opt callstack 0
  1693  0000E1                     	ds	1
  1694  0000E2                     _uart_baud_rate:
  1695                           	opt callstack 0
  1696  0000E2                     	ds	1
  1697  0000E3                     _eeprom_write_flags_enum:
  1698                           	opt callstack 0
  1699  0000E3                     	ds	1
  1700  0000E4                     _seed:
  1701                           	opt callstack 0
  1702  0000E4                     	ds	8
  1703  0000EC                     _crcObj:
  1704                           	opt callstack 0
  1705  0000EC                     	ds	3
  1706  0000EF                     _ledtimer:
  1707                           	opt callstack 0
  1708  0000EF                     	ds	2
  1709  0000F1                     _txTimeOut:
  1710                           	opt callstack 0
  1711  0000F1                     	ds	2
  1712  0000F3                     _cadTimeOut:
  1713                           	opt callstack 0
  1714  0000F3                     	ds	2
  1715  0000F5                     __cadBackoffTimer:
  1716                           	opt callstack 0
  1717  0000F5                     	ds	2
  1718                           
  1719                           	psect	dataBANK0
  1720  0000F7                     __pdataBANK0:
  1721                           	opt callstack 0
  1722  0000F7                     _RSSITarget:
  1723                           	opt callstack 0
  1724  0000F7                     	ds	1
  1725  0000F8                     _currentNetID:
  1726                           	opt callstack 0
  1727  0000F8                     	ds	1
  1728  0000F9                     _currentAddr1:
  1729                           	opt callstack 0
  1730  0000F9                     	ds	1
  1731  0000FA                     _currentAddr0:
  1732                           	opt callstack 0
  1733  0000FA                     	ds	1
  1734  0000FB                     _ATTimeoutTimer:
  1735                           	opt callstack 0
  1736  0000FB                     	ds	2
  1737                           
  1738                           	psect	bssBANK1
  1739  000100                     __pbssBANK1:
  1740                           	opt callstack 0
  1741  000100                     _nwkIb:
  1742                           	opt callstack 0
  1743  000100                     	ds	40
  1744  000128                     _uart1RxStatusBuffer:
  1745                           	opt callstack 0
  1746  000128                     	ds	16
  1747  000138                     _uart1RxBuffer:
  1748                           	opt callstack 0
  1749  000138                     	ds	16
  1750  000148                     _uartmsg:
  1751                           	opt callstack 0
  1752  000148                     	ds	6
  1753  00014E                     _symbolDuration:
  1754                           	opt callstack 0
  1755  00014E                     	ds	4
  1756  000152                     _current_baud_rate:
  1757                           	opt callstack 0
  1758  000152                     	ds	3
  1759  000155                     _errno:
  1760                           	opt callstack 0
  1761  000155                     	ds	2
  1762  000157                     _ledTimerVar:
  1763                           	opt callstack 0
  1764  000157                     	ds	2
  1765  000159                     _eeprom_write_flags:
  1766                           	opt callstack 0
  1767  000159                     	ds	2
  1768  00015B                     _atCommand:
  1769                           	opt callstack 0
  1770  00015B                     	ds	80
  1771  0001AB                     _nwkTxDelayTimer:
  1772                           	opt callstack 0
  1773  0001AB                     	ds	13
  1774  0001B8                     _nwkTxAckWaitTimer:
  1775                           	opt callstack 0
  1776  0001B8                     	ds	13
  1777  0001C5                     _nwkRxDuplicateRejectionTimer:
  1778                           	opt callstack 0
  1779  0001C5                     	ds	13
  1780  0001D2                     _EUIDbyte:
  1781                           	opt callstack 0
  1782  0001D2                     	ds	12
  1783  0001DE                     _ledtasksbuf:
  1784                           	opt callstack 0
  1785  0001DE                     	ds	10
  1786                           
  1787                           	psect	dataBANK1
  1788  0001F4                     __pdataBANK1:
  1789                           	opt callstack 0
  1790  0001F4                     	ds	5
  1791  0001F9                     _test_timer:
  1792                           	opt callstack 0
  1793  0001F9                     	ds	2
  1794                           
  1795                           	psect	bssBANK2
  1796  000200                     __pbssBANK2:
  1797                           	opt callstack 0
  1798  000200                     _nwkGroups:
  1799                           	opt callstack 0
  1800  000200                     	ds	20
  1801  000214                     _net_key:
  1802                           	opt callstack 0
  1803  000214                     	ds	16
  1804  000224                     _aes_key:
  1805                           	opt callstack 0
  1806  000224                     	ds	16
  1807  000234                     _nwkRouteTable:
  1808                           	opt callstack 0
  1809  000234                     	ds	70
  1810  00027A                     _nwkRxDuplicateRejectionTable:
  1811                           	opt callstack 0
  1812  00027A                     	ds	50
  1813  0002AC                     _dbuf:
  1814                           	opt callstack 0
  1815  0002AC                     	ds	32
  1816                           
  1817                           	psect	dataBANK2
  1818  0002CC                     __pdataBANK2:
  1819                           	opt callstack 0
  1820  0002CC                     _syncList:
  1821                           	opt callstack 0
  1822  0002CC                     	ds	10
  1823                           
  1824                           	psect	bssBANK3
  1825  000300                     __pbssBANK3:
  1826                           	opt callstack 0
  1827  000300                     _uart1TxBuffer:
  1828                           	opt callstack 0
  1829  000300                     	ds	64
  1830  000340                     _phyRxBuffer:
  1831                           	opt callstack 0
  1832  000340                     	ds	128
  1833                           
  1834                           	psect	bssBANK4
  1835  000400                     __pbssBANK4:
  1836                           	opt callstack 0
  1837  000400                     _ledqueue:
  1838                           	opt callstack 0
  1839  000400                     	ds	96
  1840                           
  1841                           	psect	bssBANK5
  1842  000500                     __pbssBANK5:
  1843                           	opt callstack 0
  1844  000500                     _fhssReg:
  1845                           	opt callstack 0
  1846  000500                     	ds	189
  1847                           
  1848                           	psect	bssBIGRAM
  1849  0005BD                     __pbssBIGRAM:
  1850                           	opt callstack 0
  1851  0005BD                     _nwkFrameFrames:
  1852                           	opt callstack 0
  1853  0005BD                     	ds	685
  1854  00086A                     _rx_buffer:
  1855                           	opt callstack 0
  1856  00086A                     	ds	610
  1857  000ACC                     _tx_buffer:
  1858                           	opt callstack 0
  1859  000ACC                     	ds	524
  1860                           
  1861                           	psect	cstackBANK0
  1862  000060                     __pcstackBANK0:
  1863                           	opt callstack 0
  1864  000060                     vfpfcnvrt@ll:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 8 bytes @ 0x0
  1868  000060                     	ds	8
  1869  000068                     vfpfcnvrt@c:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 1 bytes @ 0x8
  1873  000068                     	ds	1
  1874  000069                     vfpfcnvrt@done:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x9
  1878  000069                     	ds	2
  1879  00006B                     _vfpfcnvrt$7341:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 2 bytes @ 0xB
  1883  00006B                     	ds	2
  1884  00006D                     vfpfcnvrt@llu:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 8 bytes @ 0xD
  1888  00006D                     	ds	8
  1889  000075                     ?_printf:
  1890                           	opt callstack 0
  1891  000075                     printf@fmt:
  1892                           	opt callstack 0
  1893                           
  1894                           ; 2 bytes @ 0x15
  1895  000075                     	ds	10
  1896  00007F                     ??_print_hop_table:
  1897  00007F                     cmdBcast@p1:
  1898                           	opt callstack 0
  1899  00007F                     cmdSetAddr@p2:
  1900                           	opt callstack 0
  1901  00007F                     cmdSetNaddr@p2:
  1902                           	opt callstack 0
  1903  00007F                     cmdSetRFCH@p1:
  1904                           	opt callstack 0
  1905  00007F                     cmdSetTX@p2:
  1906                           	opt callstack 0
  1907  00007F                     cmdSetCADRSSI@p1:
  1908                           	opt callstack 0
  1909  00007F                     cmdSetSF@p1:
  1910                           	opt callstack 0
  1911  00007F                     cmdSend@destaddr:
  1912                           	opt callstack 0
  1913  00007F                     cmdSetAES@AESstr:
  1914                           	opt callstack 0
  1915                           
  1916                           ; 32 bytes @ 0x1F
  1917  00007F                     	ds	2
  1918  000081                     cmdBcast@buf_id:
  1919                           	opt callstack 0
  1920  000081                     cmdSetAddr@p1:
  1921                           	opt callstack 0
  1922  000081                     cmdSetNaddr@p1:
  1923                           	opt callstack 0
  1924  000081                     cmdSetTX@p1:
  1925                           	opt callstack 0
  1926  000081                     cmdSetRFCH@CHstr:
  1927                           	opt callstack 0
  1928  000081                     cmdSetCADRSSI@CHstr:
  1929                           	opt callstack 0
  1930  000081                     cmdSetSF@CHstr:
  1931                           	opt callstack 0
  1932                           
  1933                           ; 3 bytes @ 0x21
  1934  000081                     	ds	2
  1935  000083                     cmdSetNaddr@tempaddr:
  1936                           	opt callstack 0
  1937  000083                     cmdSetTX@temp:
  1938                           	opt callstack 0
  1939  000083                     cmdSetAddr@tempaddr:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 2 bytes @ 0x23
  1943  000083                     	ds	1
  1944  000084                     cmdSend@tempaddr:
  1945                           	opt callstack 0
  1946  000084                     cmdSetRFCH@p2:
  1947                           	opt callstack 0
  1948  000084                     cmdSetCADRSSI@p2:
  1949                           	opt callstack 0
  1950  000084                     cmdSetSF@p2:
  1951                           	opt callstack 0
  1952  000084                     cmdSetTX@CHstr:
  1953                           	opt callstack 0
  1954                           
  1955                           ; 3 bytes @ 0x24
  1956  000084                     	ds	2
  1957  000086                     cmdSetRFCH@temp:
  1958                           	opt callstack 0
  1959  000086                     cmdSetCADRSSI@temp:
  1960                           	opt callstack 0
  1961  000086                     cmdSetSF@temp:
  1962                           	opt callstack 0
  1963  000086                     cmdSend@p2:
  1964                           	opt callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x26
  1967  000086                     	ds	2
  1968  000088                     cmdSend@p1:
  1969                           	opt callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x28
  1972  000088                     	ds	2
  1973  00008A                     cmdSend@buf_id:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 1 bytes @ 0x2A
  1977  00008A                     	ds	21
  1978  00009F                     cmdSetAES@p2:
  1979                           	opt callstack 0
  1980                           
  1981                           ; 2 bytes @ 0x3F
  1982  00009F                     	ds	2
  1983  0000A1                     cmdSetAES@temp:
  1984                           	opt callstack 0
  1985                           
  1986                           ; 3 bytes @ 0x41
  1987  0000A1                     	ds	3
  1988  0000A4                     cmdSetAES@key_type:
  1989                           	opt callstack 0
  1990                           
  1991                           ; 1 bytes @ 0x44
  1992  0000A4                     	ds	1
  1993  0000A5                     cmdSetAES@byte:
  1994                           	opt callstack 0
  1995                           
  1996                           ; 1 bytes @ 0x45
  1997  0000A5                     	ds	1
  1998  0000A6                     cmdSetAES@p1:
  1999                           	opt callstack 0
  2000                           
  2001                           ; 2 bytes @ 0x46
  2002  0000A6                     	ds	2
  2003  0000A8                     cmdSetAES@i:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x48
  2007  0000A8                     	ds	1
  2008  0000A9                     executeATCommand@cmd:
  2009                           	opt callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x49
  2012  0000A9                     	ds	2
  2013  0000AB                     ??_executeATCommand:
  2014                           
  2015                           ; 1 bytes @ 0x4B
  2016  0000AB                     	ds	2
  2017  0000AD                     ??_processATCommand:
  2018                           
  2019                           ; 1 bytes @ 0x4D
  2020  0000AD                     	ds	2
  2021  0000AF                     processATCommand@data_889:
  2022                           	opt callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x4F
  2025  0000AF                     	ds	1
  2026  0000B0                     processATCommand@data:
  2027                           	opt callstack 0
  2028                           
  2029                           ; 1 bytes @ 0x50
  2030  0000B0                     	ds	1
  2031                           
  2032                           	psect	cstackCOMRAM
  2033  000001                     __pcstackCOMRAM:
  2034                           	opt callstack 0
  2035  000001                     ??_TMR0_ISR:
  2036  000001                     
  2037                           ; 1 bytes @ 0x0
  2038  000001                     	ds	1
  2039  000002                     ??_CRC_Initialize:
  2040  000002                     ??_nwkRouteNormalizeRanks:
  2041  000002                     ??_set_parity:
  2042  000002                     ??_set_uart_baud:
  2043  000002                     ??_nwkTxConvertPhyStatus:
  2044  000002                     ?_strlen:
  2045                           	opt callstack 0
  2046  000002                     ?_NWK_RouteTable:
  2047                           	opt callstack 0
  2048  000002                     ?_get_timer0base:
  2049                           	opt callstack 0
  2050  000002                     ?_nwkFrameNext:
  2051                           	opt callstack 0
  2052  000002                     ?_NWK_RouteFindEntry:
  2053                           	opt callstack 0
  2054  000002                     ?_NWK_RouteNewEntry:
  2055                           	opt callstack 0
  2056  000002                     ?_isupper:
  2057                           	opt callstack 0
  2058  000002                     ?_isalpha:
  2059                           	opt callstack 0
  2060  000002                     ?_isdigit:
  2061                           	opt callstack 0
  2062  000002                     ?_isspace:
  2063                           	opt callstack 0
  2064  000002                     ?_strncmp:
  2065                           	opt callstack 0
  2066  000002                     ?_strchr:
  2067                           	opt callstack 0
  2068  000002                     ?_islower:
  2069                           	opt callstack 0
  2070  000002                     ?_CircularBufferSize:
  2071                           	opt callstack 0
  2072  000002                     ?_CRC_ReverseValue:
  2073                           	opt callstack 0
  2074  000002                     ?___wmul:
  2075                           	opt callstack 0
  2076  000002                     ?___lmul:
  2077                           	opt callstack 0
  2078  000002                     ?___llmod:
  2079                           	opt callstack 0
  2080  000002                     ?___xxtofl:
  2081                           	opt callstack 0
  2082  000002                     ?___omul:
  2083                           	opt callstack 0
  2084  000002                     ?___aodiv:
  2085                           	opt callstack 0
  2086  000002                     ?___aomod:
  2087                           	opt callstack 0
  2088  000002                     ?___lodiv:
  2089                           	opt callstack 0
  2090  000002                     ?___lomod:
  2091                           	opt callstack 0
  2092  000002                     get_free_tx_buffer@buf_id:
  2093                           	opt callstack 0
  2094  000002                     get_free_rx_buffer@buf_id:
  2095                           	opt callstack 0
  2096  000002                     get_timer0base@timer:
  2097                           	opt callstack 0
  2098  000002                     set_timer0base@timer:
  2099                           	opt callstack 0
  2100  000002                     SPI1_ExchangeByte@data:
  2101                           	opt callstack 0
  2102  000002                     INTERRUPT_Initialize@state:
  2103                           	opt callstack 0
  2104  000002                     UART1_Read@readValue:
  2105                           	opt callstack 0
  2106  000002                     UART1_Write@txData:
  2107                           	opt callstack 0
  2108  000002                     CRC_8BitDataWrite@data:
  2109                           	opt callstack 0
  2110  000002                     nwkFrameInit@i:
  2111                           	opt callstack 0
  2112  000002                     nwkGroupInit@i:
  2113                           	opt callstack 0
  2114  000002                     nwkRouteInit@i:
  2115                           	opt callstack 0
  2116  000002                     get_rssi@rssi_reg:
  2117                           	opt callstack 0
  2118  000002                     free_tx_buffer@req:
  2119                           	opt callstack 0
  2120  000002                     cmdSendSink@cmd:
  2121                           	opt callstack 0
  2122  000002                     cmdSetTTL@cmd:
  2123                           	opt callstack 0
  2124  000002                     CircularBufferSize@ctx:
  2125                           	opt callstack 0
  2126  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2127                           	opt callstack 0
  2128  000002                     DATAEE_WriteByte@bAdd:
  2129                           	opt callstack 0
  2130  000002                     DATAEE_ReadByte@bAdd:
  2131                           	opt callstack 0
  2132  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2133                           	opt callstack 0
  2134  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2135                           	opt callstack 0
  2136  000002                     UART1_SetErrorHandler@interruptHandler:
  2137                           	opt callstack 0
  2138  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2139                           	opt callstack 0
  2140  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2141                           	opt callstack 0
  2142  000002                     CRC_ReverseValue@crc:
  2143                           	opt callstack 0
  2144  000002                     NWK_OpenEndpoint@handler:
  2145                           	opt callstack 0
  2146  000002                     NWK_DataReq@req:
  2147                           	opt callstack 0
  2148  000002                     nwkFrameFree@frame:
  2149                           	opt callstack 0
  2150  000002                     nwkFrameNext@frame:
  2151                           	opt callstack 0
  2152  000002                     nwkFrameCommandInit@frame:
  2153                           	opt callstack 0
  2154  000002                     NWK_GroupIsMember@group:
  2155                           	opt callstack 0
  2156  000002                     NWK_RouteFindEntry@dst:
  2157                           	opt callstack 0
  2158  000002                     NWK_RouteFreeEntry@entry:
  2159                           	opt callstack 0
  2160  000002                     nwkFrame@nwkFramePayloadSize@frame_4797:
  2161                           	opt callstack 0
  2162  000002                     nwkTxConfirm@frame:
  2163                           	opt callstack 0
  2164  000002                     PHY_SetPanId@panId:
  2165                           	opt callstack 0
  2166  000002                     PHY_SetShortAddr@addr:
  2167                           	opt callstack 0
  2168  000002                     SYS_TimerStarted@timer:
  2169                           	opt callstack 0
  2170  000002                     placeTimer@timer:
  2171                           	opt callstack 0
  2172  000002                     ___wmul@multiplier:
  2173                           	opt callstack 0
  2174  000002                     isalpha@c:
  2175                           	opt callstack 0
  2176  000002                     isdigit@c:
  2177                           	opt callstack 0
  2178  000002                     isspace@c:
  2179                           	opt callstack 0
  2180  000002                     isupper@c:
  2181                           	opt callstack 0
  2182  000002                     memset@dest:
  2183                           	opt callstack 0
  2184  000002                     srand@s:
  2185                           	opt callstack 0
  2186  000002                     strlen@s:
  2187                           	opt callstack 0
  2188  000002                     islower@c:
  2189                           	opt callstack 0
  2190  000002                     strchr@s:
  2191                           	opt callstack 0
  2192  000002                     strncmp@_l:
  2193                           	opt callstack 0
  2194  000002                     DIA_ReadByte@flashAddr:
  2195                           	opt callstack 0
  2196  000002                     ___lmul@multiplier:
  2197                           	opt callstack 0
  2198  000002                     ___llmod@dividend:
  2199                           	opt callstack 0
  2200  000002                     ___xxtofl@val:
  2201                           	opt callstack 0
  2202  000002                     ___omul@multiplier:
  2203                           	opt callstack 0
  2204  000002                     ___aodiv@dividend:
  2205                           	opt callstack 0
  2206  000002                     ___aomod@dividend:
  2207                           	opt callstack 0
  2208  000002                     ___lodiv@dividend:
  2209                           	opt callstack 0
  2210  000002                     ___lomod@dividend:
  2211                           	opt callstack 0
  2212                           
  2213                           ; 8 bytes @ 0x1
  2214  000002                     	ds	1
  2215  000003                     ??_get_free_rx_buffer:
  2216  000003                     ??_get_free_tx_buffer:
  2217  000003                     putch@txData:
  2218                           	opt callstack 0
  2219  000003                     nwkRouteNormalizeRanks@i:
  2220                           	opt callstack 0
  2221  000003                     set_timer0base@tval:
  2222                           	opt callstack 0
  2223  000003                     SPI1_WriteBlock@block:
  2224                           	opt callstack 0
  2225  000003                     SPI1_ReadBlock@block:
  2226                           	opt callstack 0
  2227  000003                     CRC_Initialize@poly:
  2228                           	opt callstack 0
  2229  000003                     get_rssi@temp_rssi:
  2230                           	opt callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x2
  2233  000003                     	ds	1
  2234  000004                     ??_free_tx_buffer:
  2235  000004                     ??_nwkFrameNext:
  2236  000004                     ??_srand:
  2237  000004                     ??_isupper:
  2238  000004                     ??_isalpha:
  2239  000004                     ??_isdigit:
  2240  000004                     ??_isspace:
  2241  000004                     ??_islower:
  2242  000004                     ??_CircularBufferSize:
  2243  000004                     ??_TMR0_Initialize:
  2244  000004                     ??_CRC_ReverseValue:
  2245  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2246  000004                     set_parity@parity:
  2247                           	opt callstack 0
  2248  000004                     set_uart_baud@i:
  2249                           	opt callstack 0
  2250  000004                     DATAEE_WriteByte@bData:
  2251                           	opt callstack 0
  2252  000004                     NWK_OpenEndpoint@id:
  2253                           	opt callstack 0
  2254  000004                     NWK_RouteFindEntry@multicast:
  2255                           	opt callstack 0
  2256  000004                     nwkTxConfirm@status:
  2257                           	opt callstack 0
  2258  000004                     nwkTxConvertPhyStatus@status:
  2259                           	opt callstack 0
  2260  000004                     get_timer0base@tval:
  2261                           	opt callstack 0
  2262  000004                     NWK_SetAddr@addr:
  2263                           	opt callstack 0
  2264  000004                     NWK_SetPanId@panId:
  2265                           	opt callstack 0
  2266  000004                     nwkDataReqTxConf@frame:
  2267                           	opt callstack 0
  2268  000004                     SYS_TimerStarted@t:
  2269                           	opt callstack 0
  2270  000004                     ___wmul@multiplicand:
  2271                           	opt callstack 0
  2272  000004                     memset@c:
  2273                           	opt callstack 0
  2274  000004                     fputc@c:
  2275                           	opt callstack 0
  2276  000004                     strlen@a:
  2277                           	opt callstack 0
  2278  000004                     strchr@c:
  2279                           	opt callstack 0
  2280  000004                     strncmp@_r:
  2281                           	opt callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x3
  2284  000004                     	ds	1
  2285  000005                     DATAEE_WriteByte@GIEBitValue:
  2286                           	opt callstack 0
  2287  000005                     nwkRxInit@i:
  2288                           	opt callstack 0
  2289  000005                     PHY_DataConf@status:
  2290                           	opt callstack 0
  2291  000005                     SPI1_WriteBlock@blockSize:
  2292                           	opt callstack 0
  2293  000005                     SPI1_ReadBlock@blockSize:
  2294                           	opt callstack 0
  2295  000005                     CRC_Initialize@seed:
  2296                           	opt callstack 0
  2297  000005                     CRC_ReverseValue@reverse:
  2298                           	opt callstack 0
  2299                           
  2300                           ; 2 bytes @ 0x4
  2301  000005                     	ds	1
  2302  000006                     ??_strchr:
  2303  000006                     ??___xxtofl:
  2304  000006                     free_tx_buffer@buf_id:
  2305                           	opt callstack 0
  2306  000006                     loadMACAddr@i:
  2307                           	opt callstack 0
  2308  000006                     NWK_Init@i:
  2309                           	opt callstack 0
  2310  000006                     NWK_GroupIsMember@i:
  2311                           	opt callstack 0
  2312  000006                     NWK_RouteNewEntry@i:
  2313                           	opt callstack 0
  2314  000006                     DATAEE_ReadByte_Platform@addr:
  2315                           	opt callstack 0
  2316  000006                     DATAEE_WriteByte_Platform@addr:
  2317                           	opt callstack 0
  2318  000006                     ___wmul@product:
  2319                           	opt callstack 0
  2320  000006                     memset@n:
  2321                           	opt callstack 0
  2322  000006                     fputc@fp:
  2323                           	opt callstack 0
  2324  000006                     strncmp@n:
  2325                           	opt callstack 0
  2326  000006                     ___lmul@multiplicand:
  2327                           	opt callstack 0
  2328  000006                     ___llmod@divisor:
  2329                           	opt callstack 0
  2330                           
  2331                           ; 4 bytes @ 0x5
  2332  000006                     	ds	1
  2333  000007                     NWK_RouteFindEntry@i:
  2334                           	opt callstack 0
  2335  000007                     appDataConf@req:
  2336                           	opt callstack 0
  2337  000007                     SPI1_WriteBlock@data:
  2338                           	opt callstack 0
  2339  000007                     SPI1_ReadBlock@data:
  2340                           	opt callstack 0
  2341  000007                     CRC_ReverseValue@mask:
  2342                           	opt callstack 0
  2343  000007                     NWK_RouteNewEntry@iter:
  2344                           	opt callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x6
  2347  000007                     	ds	1
  2348  000008                     ??_memset:
  2349  000008                     ??_fputc:
  2350  000008                     ??_strncmp:
  2351  000008                     ?_toupper:
  2352                           	opt callstack 0
  2353  000008                     ?_strspn:
  2354                           	opt callstack 0
  2355  000008                     ?_strcspn:
  2356                           	opt callstack 0
  2357  000008                     ?_NWK_RouteNextHop:
  2358                           	opt callstack 0
  2359  000008                     DATAEE_ReadByte_Platform@copy3:
  2360                           	opt callstack 0
  2361  000008                     DATAEE_WriteByte_Platform@data:
  2362                           	opt callstack 0
  2363  000008                     nwkTxAckReceived@ind:
  2364                           	opt callstack 0
  2365  000008                     _isspace$7827:
  2366                           	opt callstack 0
  2367  000008                     nwkDataReqTxConf@req:
  2368                           	opt callstack 0
  2369  000008                     NWK_RouteNextHop@dst:
  2370                           	opt callstack 0
  2371  000008                     nwkRouteRemove@dst:
  2372                           	opt callstack 0
  2373  000008                     nwkRouteFrameSent@frame:
  2374                           	opt callstack 0
  2375  000008                     memcpy@d1:
  2376                           	opt callstack 0
  2377  000008                     toupper@c:
  2378                           	opt callstack 0
  2379  000008                     strcspn@s:
  2380                           	opt callstack 0
  2381  000008                     strspn@s:
  2382                           	opt callstack 0
  2383  000008                     placeTimer@timeout:
  2384                           	opt callstack 0
  2385                           
  2386                           ; 4 bytes @ 0x7
  2387  000008                     	ds	1
  2388  000009                     ?_CRC_CalculatedResultGet:
  2389                           	opt callstack 0
  2390  000009                     ?_atoi:
  2391                           	opt callstack 0
  2392  000009                     DATAEE_ReadByte_Platform@copy2:
  2393                           	opt callstack 0
  2394  000009                     SX1276WriteBuffer@buffer:
  2395                           	opt callstack 0
  2396  000009                     CRC_CalculatedResultGet@xorValue:
  2397                           	opt callstack 0
  2398  000009                     nwkDataReqConfirm@req:
  2399                           	opt callstack 0
  2400  000009                     NWK_RouteNewEntry@entry:
  2401                           	opt callstack 0
  2402  000009                     SX1276ReadBuffer@buffer:
  2403                           	opt callstack 0
  2404  000009                     atoi@s:
  2405                           	opt callstack 0
  2406  000009                     strncmp@l:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x8
  2410  000009                     	ds	1
  2411  00000A                     ??_toupper:
  2412  00000A                     ??_nwkRouteFrameSent:
  2413  00000A                     ?_CircularBufferSpace:
  2414                           	opt callstack 0
  2415  00000A                     DATAEE_ReadByte_Platform@copy1:
  2416                           	opt callstack 0
  2417  00000A                     NWK_RouteNextHop@multicast:
  2418                           	opt callstack 0
  2419  00000A                     nwkRouteRemove@multicast:
  2420                           	opt callstack 0
  2421  00000A                     SX1276WriteBuffer@size:
  2422                           	opt callstack 0
  2423  00000A                     ___llmod@counter:
  2424                           	opt callstack 0
  2425  00000A                     ___xxtofl@sign:
  2426                           	opt callstack 0
  2427  00000A                     CircularBufferSpace@ctx:
  2428                           	opt callstack 0
  2429  00000A                     memcpy@s1:
  2430                           	opt callstack 0
  2431  00000A                     memset@k:
  2432                           	opt callstack 0
  2433  00000A                     strcspn@c:
  2434                           	opt callstack 0
  2435  00000A                     strspn@c:
  2436                           	opt callstack 0
  2437  00000A                     ___lmul@product:
  2438                           	opt callstack 0
  2439  00000A                     ___omul@multiplicand:
  2440                           	opt callstack 0
  2441  00000A                     ___aodiv@divisor:
  2442                           	opt callstack 0
  2443  00000A                     ___aomod@divisor:
  2444                           	opt callstack 0
  2445  00000A                     ___lodiv@divisor:
  2446                           	opt callstack 0
  2447  00000A                     ___lomod@divisor:
  2448                           	opt callstack 0
  2449                           
  2450                           ; 8 bytes @ 0x9
  2451  00000A                     	ds	1
  2452  00000B                     ??_CRC_CalculatedResultGet:
  2453  00000B                     ??_atoi:
  2454  00000B                     ??_nwkDataReqConfirm:
  2455  00000B                     SX1276ReadBuffer@size:
  2456                           	opt callstack 0
  2457  00000B                     SX1276WriteBuffer@addr:
  2458                           	opt callstack 0
  2459  00000B                     ___xxtofl@exp:
  2460                           	opt callstack 0
  2461  00000B                     NWK_RouteNextHop@entry:
  2462                           	opt callstack 0
  2463  00000B                     nwkRouteRemove@entry:
  2464                           	opt callstack 0
  2465  00000B                     nwkRouteFrameReceived@frame:
  2466                           	opt callstack 0
  2467  00000B                     nwkTxAckReceived@command:
  2468                           	opt callstack 0
  2469  00000B                     strncmp@r:
  2470                           	opt callstack 0
  2471                           
  2472                           ; 2 bytes @ 0xA
  2473  00000B                     	ds	1
  2474  00000C                     ??_strspn:
  2475  00000C                     ??_strcspn:
  2476  00000C                     ??_CircularBufferSpace:
  2477  00000C                     SX1276ReadBuffer@addr:
  2478                           	opt callstack 0
  2479  00000C                     nwkRouteFrameSent@entry:
  2480                           	opt callstack 0
  2481  00000C                     placeTimer@prev:
  2482                           	opt callstack 0
  2483  00000C                     memcpy@n:
  2484                           	opt callstack 0
  2485  00000C                     memset@s:
  2486                           	opt callstack 0
  2487  00000C                     ___xxtofl@arg:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 4 bytes @ 0xB
  2491  00000C                     	ds	1
  2492  00000D                     ??_nwkRouteFrameReceived:
  2493  00000D                     ?_strstr:
  2494                           	opt callstack 0
  2495  00000D                     nwkRouteErrorReceived@ind:
  2496                           	opt callstack 0
  2497  00000D                     SX1276Read@addr:
  2498                           	opt callstack 0
  2499  00000D                     nwkDataReqConfirm@prev:
  2500                           	opt callstack 0
  2501  00000D                     nwkRoutePrepareTx@frame:
  2502                           	opt callstack 0
  2503  00000D                     nwkTxAckReceived@frame:
  2504                           	opt callstack 0
  2505  00000D                     fputs@s:
  2506                           	opt callstack 0
  2507  00000D                     strstr@h:
  2508                           	opt callstack 0
  2509  00000D                     strcspn@i:
  2510                           	opt callstack 0
  2511  00000D                     strspn@i:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 2 bytes @ 0xC
  2515  00000D                     	ds	1
  2516  00000E                     ?_nwkFrameAlloc:
  2517                           	opt callstack 0
  2518  00000E                     SX1276Read@data:
  2519                           	opt callstack 0
  2520  00000E                     memcpy@tmp:
  2521                           	opt callstack 0
  2522  00000E                     CRC_CalculatedResultGet@mask:
  2523                           	opt callstack 0
  2524  00000E                     placeTimer@t:
  2525                           	opt callstack 0
  2526  00000E                     _toupper$7965:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 2 bytes @ 0xD
  2530  00000E                     	ds	1
  2531  00000F                     ?_strtok:
  2532                           	opt callstack 0
  2533  00000F                     ?_getSignalBandwidth:
  2534                           	opt callstack 0
  2535  00000F                     ?_getSpreadingFactor:
  2536                           	opt callstack 0
  2537  00000F                     SX1276Write@data:
  2538                           	opt callstack 0
  2539  00000F                     nwkRouteErrorReceived@command:
  2540                           	opt callstack 0
  2541  00000F                     atoi@neg:
  2542                           	opt callstack 0
  2543  00000F                     memcpy@d:
  2544                           	opt callstack 0
  2545  00000F                     fputs@fp:
  2546                           	opt callstack 0
  2547  00000F                     strstr@n:
  2548                           	opt callstack 0
  2549  00000F                     strtok@s:
  2550                           	opt callstack 0
  2551                           
  2552                           ; 2 bytes @ 0xE
  2553  00000F                     	ds	1
  2554  000010                     ??_nwkFrameAlloc:
  2555  000010                     ?___flmul:
  2556                           	opt callstack 0
  2557  000010                     ?___strtoxl:
  2558                           	opt callstack 0
  2559  000010                     CRC_CalculatedResultGet@reverse:
  2560                           	opt callstack 0
  2561  000010                     SX1276Write@addr:
  2562                           	opt callstack 0
  2563  000010                     SYS_TimerStart@timer:
  2564                           	opt callstack 0
  2565  000010                     ___strtoxl@s:
  2566                           	opt callstack 0
  2567  000010                     ___flge@ff1:
  2568                           	opt callstack 0
  2569  000010                     ___flmul@b:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 4 bytes @ 0xF
  2573  000010                     	ds	1
  2574  000011                     ??_setCodingRate4:
  2575  000011                     ??_cad:
  2576  000011                     nwkRouteFrameReceived@discovery:
  2577                           	opt callstack 0
  2578  000011                     setTxPower@power:
  2579                           	opt callstack 0
  2580  000011                     setSyncWord@sw:
  2581                           	opt callstack 0
  2582  000011                     receive@size:
  2583                           	opt callstack 0
  2584  000011                     fputs@c:
  2585                           	opt callstack 0
  2586  000011                     CRC_CalculatedResultGet@result:
  2587                           	opt callstack 0
  2588  000011                     nwkRoutePrepareTx@header:
  2589                           	opt callstack 0
  2590  000011                     setPreambleLength@length:
  2591                           	opt callstack 0
  2592  000011                     PHY_DataReq@data:
  2593                           	opt callstack 0
  2594  000011                     _atoi$7800:
  2595                           	opt callstack 0
  2596  000011                     memcpy@s:
  2597                           	opt callstack 0
  2598  000011                     strstr@nl:
  2599                           	opt callstack 0
  2600  000011                     strtok@sep:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 2 bytes @ 0x10
  2604  000011                     	ds	1
  2605  000012                     nwkFrameAlloc@i:
  2606                           	opt callstack 0
  2607  000012                     _nwkRouteFrameReceived$4211:
  2608                           	opt callstack 0
  2609  000012                     setCodingRate4@cr:
  2610                           	opt callstack 0
  2611  000012                     ___aodiv@counter:
  2612                           	opt callstack 0
  2613  000012                     ___aomod@counter:
  2614                           	opt callstack 0
  2615  000012                     ___lomod@counter:
  2616                           	opt callstack 0
  2617  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2618                           	opt callstack 0
  2619  000012                     nwkRxRejectDuplicate@header:
  2620                           	opt callstack 0
  2621  000012                     nwkTxAckWaitTimerHandler@timer:
  2622                           	opt callstack 0
  2623  000012                     nwkTxDelayTimerHandler@timer:
  2624                           	opt callstack 0
  2625  000012                     cad@RSSI:
  2626                           	opt callstack 0
  2627  000012                     fputs@i:
  2628                           	opt callstack 0
  2629  000012                     ___strtoxl@endptr:
  2630                           	opt callstack 0
  2631  000012                     ___omul@product:
  2632                           	opt callstack 0
  2633  000012                     ___lodiv@quotient:
  2634                           	opt callstack 0
  2635                           
  2636                           ; 8 bytes @ 0x11
  2637  000012                     	ds	1
  2638  000013                     ??_getSignalBandwidth:
  2639  000013                     ??_getSpreadingFactor:
  2640  000013                     ?_crc16_app:
  2641                           	opt callstack 0
  2642  000013                     appDataInd@ind:
  2643                           	opt callstack 0
  2644  000013                     PHY_DataInd@ind:
  2645                           	opt callstack 0
  2646  000013                     nwkRxServiceDataInd@ind:
  2647                           	opt callstack 0
  2648  000013                     setCodingRate4@denominator:
  2649                           	opt callstack 0
  2650  000013                     PHY_DataReq@size:
  2651                           	opt callstack 0
  2652  000013                     ___aodiv@sign:
  2653                           	opt callstack 0
  2654  000013                     ___aomod@sign:
  2655                           	opt callstack 0
  2656  000013                     CircularBufferPushBack@ctx:
  2657                           	opt callstack 0
  2658  000013                     crc16_app@dptr:
  2659                           	opt callstack 0
  2660  000013                     nwkRouteFrameReceived@entry:
  2661                           	opt callstack 0
  2662  000013                     _atoi$7802:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0x12
  2666  000013                     	ds	1
  2667  000014                     ??_nwkTxTaskHandler:
  2668  000014                     ??_nwkRxServiceDataInd:
  2669  000014                     ??_appDataInd:
  2670  000014                     ??_PHY_DataInd:
  2671  000014                     ??_nwkRxRejectDuplicate:
  2672  000014                     ?_abs:
  2673                           	opt callstack 0
  2674  000014                     ?_pad:
  2675                           	opt callstack 0
  2676  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2677                           	opt callstack 0
  2678  000014                     cad@temp:
  2679                           	opt callstack 0
  2680  000014                     pad@fp:
  2681                           	opt callstack 0
  2682  000014                     abs@a:
  2683                           	opt callstack 0
  2684  000014                     ___strtoxl@base:
  2685                           	opt callstack 0
  2686  000014                     ___flge@ff2:
  2687                           	opt callstack 0
  2688  000014                     ___flmul@a:
  2689                           	opt callstack 0
  2690  000014                     ___aodiv@quotient:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 8 bytes @ 0x13
  2694  000014                     	ds	1
  2695  000015                     CircularBufferPushBack@val:
  2696                           	opt callstack 0
  2697  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2698                           	opt callstack 0
  2699  000015                     getSignalBandwidth@bw:
  2700                           	opt callstack 0
  2701  000015                     _atoi$7801:
  2702                           	opt callstack 0
  2703  000015                     appDataInd@dataptr:
  2704                           	opt callstack 0
  2705  000015                     crc16_app@len:
  2706                           	opt callstack 0
  2707  000015                     nwkRouteFrameReceived@header:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 2 bytes @ 0x14
  2711  000015                     	ds	1
  2712  000016                     ??_abs:
  2713  000016                     ??_CircularBufferPushBack:
  2714  000016                     ?___lldiv:
  2715                           	opt callstack 0
  2716  000016                     nwkTxAckWaitTimerHandler@restart:
  2717                           	opt callstack 0
  2718  000016                     nwkTxDelayTimerHandler@restart:
  2719                           	opt callstack 0
  2720  000016                     ___strtoxl@is_signed:
  2721                           	opt callstack 0
  2722  000016                     nwkTxTaskHandler@frame:
  2723                           	opt callstack 0
  2724  000016                     pad@buf:
  2725                           	opt callstack 0
  2726  000016                     atoi@n:
  2727                           	opt callstack 0
  2728  000016                     ___lldiv@dividend:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 4 bytes @ 0x15
  2732  000016                     	ds	1
  2733  000017                     ??___strtoxl:
  2734  000017                     appDataInd@buf_id:
  2735                           	opt callstack 0
  2736  000017                     crc16_app@seed:
  2737                           	opt callstack 0
  2738  000017                     PHY_DataInd@frame:
  2739                           	opt callstack 0
  2740  000017                     nwkTxAckWaitTimerHandler@frame:
  2741                           	opt callstack 0
  2742  000017                     nwkTxDelayTimerHandler@frame:
  2743                           	opt callstack 0
  2744                           
  2745                           ; 2 bytes @ 0x16
  2746  000017                     	ds	1
  2747  000018                     ??___flmul:
  2748  000018                     ??___flge:
  2749  000018                     nwkRxRejectDuplicate@shift:
  2750                           	opt callstack 0
  2751  000018                     nwkRxIndicateFrame@frame:
  2752                           	opt callstack 0
  2753  000018                     pad@p:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 2 bytes @ 0x17
  2757  000018                     	ds	1
  2758  000019                     ??_SYS_TimerTaskHandler:
  2759  000019                     nwkRxRejectDuplicate@i:
  2760                           	opt callstack 0
  2761  000019                     crc16_app@result:
  2762                           	opt callstack 0
  2763                           
  2764                           ; 2 bytes @ 0x18
  2765  000019                     	ds	1
  2766  00001A                     ??_nwkRxIndicateFrame:
  2767  00001A                     ??_pad:
  2768  00001A                     ?_rand:
  2769                           	opt callstack 0
  2770  00001A                     nwkRxRejectDuplicate@diff:
  2771                           	opt callstack 0
  2772  00001A                     ___lodiv@counter:
  2773                           	opt callstack 0
  2774  00001A                     CircularBufferPushBack@write_pos:
  2775                           	opt callstack 0
  2776  00001A                     ___lldiv@divisor:
  2777                           	opt callstack 0
  2778                           
  2779                           ; 4 bytes @ 0x19
  2780  00001A                     	ds	1
  2781  00001B                     crc16_app@ptr:
  2782                           	opt callstack 0
  2783  00001B                     nwkRxRejectDuplicate@freeEntry:
  2784                           	opt callstack 0
  2785  00001B                     pad@i:
  2786                           	opt callstack 0
  2787  00001B                     ___strtoxl@prev_a:
  2788                           	opt callstack 0
  2789                           
  2790                           ; 4 bytes @ 0x1A
  2791  00001B                     	ds	1
  2792  00001C                     ??_rand:
  2793  00001C                     ___flmul@sign:
  2794                           	opt callstack 0
  2795  00001C                     queueLedEvent@duration:
  2796                           	opt callstack 0
  2797                           
  2798                           ; 2 bytes @ 0x1B
  2799  00001C                     	ds	1
  2800  00001D                     SYS_TimerTaskHandler@cnt:
  2801                           	opt callstack 0
  2802  00001D                     ___flmul@aexp:
  2803                           	opt callstack 0
  2804  00001D                     crc16_app@i:
  2805                           	opt callstack 0
  2806  00001D                     nwkRxRejectDuplicate@entry:
  2807                           	opt callstack 0
  2808  00001D                     pad@w:
  2809                           	opt callstack 0
  2810                           
  2811                           ; 2 bytes @ 0x1C
  2812  00001D                     	ds	1
  2813  00001E                     queueLedEvent@LEDState:
  2814                           	opt callstack 0
  2815  00001E                     _nwkRxIndicateFrame$5244:
  2816                           	opt callstack 0
  2817  00001E                     SYS_TimerTaskHandler@elapsed:
  2818                           	opt callstack 0
  2819  00001E                     ___lldiv@quotient:
  2820                           	opt callstack 0
  2821  00001E                     ___flmul@grs:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 4 bytes @ 0x1D
  2825  00001E                     	ds	1
  2826  00001F                     ?_dtoa:
  2827                           	opt callstack 0
  2828  00001F                     ?_utoa:
  2829                           	opt callstack 0
  2830  00001F                     ?_xtoa:
  2831                           	opt callstack 0
  2832  00001F                     _nwkRxIndicateFrame$5245:
  2833                           	opt callstack 0
  2834  00001F                     dtoa@fp:
  2835                           	opt callstack 0
  2836  00001F                     utoa@fp:
  2837                           	opt callstack 0
  2838  00001F                     xtoa@fp:
  2839                           	opt callstack 0
  2840  00001F                     ___strtoxl$7987:
  2841                           	opt callstack 0
  2842  00001F                     queueLedEvent@temp:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 3 bytes @ 0x1E
  2846  00001F                     	ds	1
  2847  000020                     _nwkRxIndicateFrame$5246:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 1 bytes @ 0x1F
  2851  000020                     	ds	1
  2852  000021                     _nwkRxIndicateFrame$5247:
  2853                           	opt callstack 0
  2854  000021                     ___strtoxl$7989:
  2855                           	opt callstack 0
  2856  000021                     dtoa@d:
  2857                           	opt callstack 0
  2858  000021                     utoa@d:
  2859                           	opt callstack 0
  2860  000021                     xtoa@d:
  2861                           	opt callstack 0
  2862                           
  2863                           ; 8 bytes @ 0x20
  2864  000021                     	ds	1
  2865  000022                     queue_serial_led_event@i:
  2866                           	opt callstack 0
  2867  000022                     _nwkRxIndicateFrame$5248:
  2868                           	opt callstack 0
  2869  000022                     ___lldiv@counter:
  2870                           	opt callstack 0
  2871  000022                     ___flmul@bexp:
  2872                           	opt callstack 0
  2873  000022                     SYS_TimerTaskHandler@timer:
  2874                           	opt callstack 0
  2875                           
  2876                           ; 2 bytes @ 0x21
  2877  000022                     	ds	1
  2878  000023                     ??_setSpreadingFactor:
  2879  000023                     _nwkRxIndicateFrame$5249:
  2880                           	opt callstack 0
  2881  000023                     ___strtoxl$7990:
  2882                           	opt callstack 0
  2883  000023                     setFrequency@frequency:
  2884                           	opt callstack 0
  2885  000023                     setSignalBandwidth@sbw:
  2886                           	opt callstack 0
  2887  000023                     computeFRF@frequency:
  2888                           	opt callstack 0
  2889  000023                     ___flmul@prod:
  2890                           	opt callstack 0
  2891                           
  2892                           ; 4 bytes @ 0x22
  2893  000023                     	ds	1
  2894  000024                     nwkRxIndicateFrame@header:
  2895                           	opt callstack 0
  2896  000024                     nwkTxFrame@frame:
  2897                           	opt callstack 0
  2898  000024                     nwkTxBroadcastFrame@frame:
  2899                           	opt callstack 0
  2900                           
  2901                           ; 2 bytes @ 0x23
  2902  000024                     	ds	1
  2903  000025                     ___strtoxl$7988:
  2904                           	opt callstack 0
  2905                           
  2906                           ; 1 bytes @ 0x24
  2907  000025                     	ds	1
  2908  000026                     ??_nwkTxBroadcastFrame:
  2909  000026                     ___strtoxl@conv_done:
  2910                           	opt callstack 0
  2911  000026                     nwkRxIndicateFrame@ind:
  2912                           	opt callstack 0
  2913                           
  2914                           ; 12 bytes @ 0x25
  2915  000026                     	ds	1
  2916  000027                     ??_setSignalBandwidth:
  2917  000027                     nwkTxBroadcastFrame@newFrame:
  2918                           	opt callstack 0
  2919  000027                     ___flmul@temp:
  2920                           	opt callstack 0
  2921  000027                     setFrequency@num_mod:
  2922                           	opt callstack 0
  2923  000027                     computeFRF@num_mod:
  2924                           	opt callstack 0
  2925  000027                     ___strtoxl@limit:
  2926                           	opt callstack 0
  2927  000027                     _setSpreadingFactor$8727:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 4 bytes @ 0x26
  2931  000027                     	ds	1
  2932  000028                     nwkTxFrame@header:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 2 bytes @ 0x27
  2936  000028                     	ds	1
  2937  000029                     ??_dtoa:
  2938  000029                     ??_utoa:
  2939  000029                     ?___fladd:
  2940                           	opt callstack 0
  2941  000029                     xtoa@x:
  2942                           	opt callstack 0
  2943  000029                     nwkRxHandleReceivedFrame@frame:
  2944                           	opt callstack 0
  2945  000029                     ___fladd@b:
  2946                           	opt callstack 0
  2947                           
  2948                           ; 4 bytes @ 0x28
  2949  000029                     	ds	1
  2950  00002A                     ??_xtoa:
  2951  00002A                     nwkDataReqSendFrame@req:
  2952                           	opt callstack 0
  2953  00002A                     nwkRouteSendRouteError@src:
  2954                           	opt callstack 0
  2955  00002A                     nwkRxSendAck@frame:
  2956                           	opt callstack 0
  2957                           
  2958                           ; 2 bytes @ 0x29
  2959  00002A                     	ds	1
  2960  00002B                     ??_nwkRxHandleReceivedFrame:
  2961  00002B                     setSpreadingFactor@sf:
  2962                           	opt callstack 0
  2963  00002B                     ___strtoxl@sign:
  2964                           	opt callstack 0
  2965  00002B                     setFrequency@num:
  2966                           	opt callstack 0
  2967  00002B                     computeFRF@num:
  2968                           	opt callstack 0
  2969  00002B                     _setSignalBandwidth$8728:
  2970                           	opt callstack 0
  2971                           
  2972                           ; 4 bytes @ 0x2A
  2973  00002B                     	ds	1
  2974  00002C                     ??_nwkDataReqSendFrame:
  2975  00002C                     ___strtoxl@skip:
  2976                           	opt callstack 0
  2977  00002C                     nwkRouteSendRouteError@dst:
  2978                           	opt callstack 0
  2979  00002C                     nwkRxSendAck@command:
  2980                           	opt callstack 0
  2981                           
  2982                           ; 2 bytes @ 0x2B
  2983  00002C                     	ds	1
  2984  00002D                     nwkRxHandleReceivedFrame@broadcast:
  2985                           	opt callstack 0
  2986  00002D                     nwkDataReqSendFrame@mcHeader:
  2987                           	opt callstack 0
  2988  00002D                     ___fladd@a:
  2989                           	opt callstack 0
  2990  00002D                     ___strtoxl@a:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 4 bytes @ 0x2C
  2994  00002D                     	ds	1
  2995  00002E                     nwkRouteSendRouteError@multicast:
  2996                           	opt callstack 0
  2997  00002E                     nwkRxHandleReceivedFrame@member:
  2998                           	opt callstack 0
  2999  00002E                     nwkRxSendAck@ack:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x2D
  3003  00002E                     	ds	1
  3004  00002F                     computeFRF@i:
  3005                           	opt callstack 0
  3006  00002F                     PHY_SetChannel@channel:
  3007                           	opt callstack 0
  3008  00002F                     nwkDataReqSendFrame@frame:
  3009                           	opt callstack 0
  3010  00002F                     nwkRouteSendRouteError@command:
  3011                           	opt callstack 0
  3012  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3013                           	opt callstack 0
  3014  00002F                     setSignalBandwidth@bw:
  3015                           	opt callstack 0
  3016                           
  3017                           ; 4 bytes @ 0x2E
  3018  00002F                     	ds	1
  3019  000030                     ??_bootLoadApplication:
  3020                           
  3021                           ; 1 bytes @ 0x2F
  3022  000030                     	ds	1
  3023  000031                     ??_nwkDataReqTaskHandler:
  3024  000031                     ??___fladd:
  3025  000031                     nwkRouteSendRouteError@frame:
  3026                           	opt callstack 0
  3027  000031                     nwkRxHandleReceivedFrame@header:
  3028                           	opt callstack 0
  3029  000031                     _dtoa$7308:
  3030                           	opt callstack 0
  3031  000031                     utoa@p:
  3032                           	opt callstack 0
  3033  000031                     ___strtoxl@cp:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 2 bytes @ 0x30
  3037  000031                     	ds	1
  3038  000032                     bootLoadApplication@buf_id:
  3039                           	opt callstack 0
  3040  000032                     nwkRxHandleIndication@frame:
  3041                           	opt callstack 0
  3042  000032                     _xtoa$7326:
  3043                           	opt callstack 0
  3044                           
  3045                           ; 2 bytes @ 0x31
  3046  000032                     	ds	1
  3047  000033                     ??_initRadio:
  3048  000033                     ___strtoxl@c:
  3049                           	opt callstack 0
  3050  000033                     bootLoadApplication@temp:
  3051                           	opt callstack 0
  3052  000033                     nwkDataReqTaskHandler@req:
  3053                           	opt callstack 0
  3054  000033                     nwkRouteFrame@frame:
  3055                           	opt callstack 0
  3056  000033                     dtoa@p:
  3057                           	opt callstack 0
  3058  000033                     utoa@w:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x32
  3062  000033                     	ds	1
  3063  000034                     ?_strtoul:
  3064                           	opt callstack 0
  3065  000034                     ?_strtol:
  3066                           	opt callstack 0
  3067  000034                     strtol@s:
  3068                           	opt callstack 0
  3069  000034                     _xtoa$7327:
  3070                           	opt callstack 0
  3071  000034                     strtoul@s:
  3072                           	opt callstack 0
  3073                           
  3074                           ; 2 bytes @ 0x33
  3075  000034                     	ds	1
  3076  000035                     bootLoadApplication@i:
  3077                           	opt callstack 0
  3078  000035                     ___fladd@signs:
  3079                           	opt callstack 0
  3080  000035                     strtol@endptr:
  3081                           	opt callstack 0
  3082  000035                     nwkRouteFrame@header:
  3083                           	opt callstack 0
  3084  000035                     dtoa@w:
  3085                           	opt callstack 0
  3086  000035                     utoa@n:
  3087                           	opt callstack 0
  3088                           
  3089                           ; 8 bytes @ 0x34
  3090  000035                     	ds	1
  3091  000036                     nwkRxHandleIndication@ack:
  3092                           	opt callstack 0
  3093  000036                     ___fladd@aexp:
  3094                           	opt callstack 0
  3095  000036                     xtoa@p:
  3096                           	opt callstack 0
  3097  000036                     strtol@base:
  3098                           	opt callstack 0
  3099  000036                     strtoul@endptr:
  3100                           	opt callstack 0
  3101                           
  3102                           ; 2 bytes @ 0x35
  3103  000036                     	ds	1
  3104  000037                     ??_nwkRxTaskHandler:
  3105  000037                     initRadio@version:
  3106                           	opt callstack 0
  3107  000037                     ___fladd@bexp:
  3108                           	opt callstack 0
  3109  000037                     dtoa@s:
  3110                           	opt callstack 0
  3111                           
  3112                           ; 2 bytes @ 0x36
  3113  000037                     	ds	1
  3114  000038                     ___fladd@grs:
  3115                           	opt callstack 0
  3116  000038                     initRadio@wideRSSI:
  3117                           	opt callstack 0
  3118  000038                     xtoa@w:
  3119                           	opt callstack 0
  3120  000038                     strtoul@base:
  3121                           	opt callstack 0
  3122                           
  3123                           ; 2 bytes @ 0x37
  3124  000038                     	ds	1
  3125  000039                     ?___fltol:
  3126                           	opt callstack 0
  3127  000039                     nwkRxTaskHandler@frame:
  3128                           	opt callstack 0
  3129  000039                     ___fltol@f1:
  3130                           	opt callstack 0
  3131  000039                     dtoa@n:
  3132                           	opt callstack 0
  3133                           
  3134                           ; 8 bytes @ 0x38
  3135  000039                     	ds	1
  3136  00003A                     cmdSetBaud@atCommand:
  3137                           	opt callstack 0
  3138  00003A                     xtoa@n:
  3139                           	opt callstack 0
  3140                           
  3141                           ; 8 bytes @ 0x39
  3142  00003A                     	ds	1
  3143  00003B                     
  3144                           ; 1 bytes @ 0x3A
  3145  00003B                     	ds	1
  3146  00003C                     cmdSetBaud@tempbaud:
  3147                           	opt callstack 0
  3148                           
  3149                           ; 1 bytes @ 0x3B
  3150  00003C                     	ds	1
  3151  00003D                     ??___fltol:
  3152  00003D                     cmdSetBaud@ptr:
  3153                           	opt callstack 0
  3154  00003D                     utoa@i:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 2 bytes @ 0x3C
  3158  00003D                     	ds	4
  3159  000041                     ___fltol@sign1:
  3160                           	opt callstack 0
  3161  000041                     dtoa@i:
  3162                           	opt callstack 0
  3163                           
  3164                           ; 2 bytes @ 0x40
  3165  000041                     	ds	1
  3166  000042                     ___fltol@exp1:
  3167                           	opt callstack 0
  3168  000042                     xtoa@i:
  3169                           	opt callstack 0
  3170                           
  3171                           ; 2 bytes @ 0x41
  3172  000042                     	ds	1
  3173  000043                     get_lqi@rssi:
  3174                           	opt callstack 0
  3175                           
  3176                           ; 1 bytes @ 0x42
  3177  000043                     	ds	1
  3178  000044                     DIO0_Receive_ISR@packetLength:
  3179                           	opt callstack 0
  3180  000044                     xtoa@c:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x43
  3184  000044                     	ds	1
  3185  000045                     DIO0_Receive_ISR@irqFlags:
  3186                           	opt callstack 0
  3187                           
  3188                           ; 1 bytes @ 0x44
  3189  000045                     	ds	1
  3190  000046                     ?_vfpfcnvrt:
  3191                           	opt callstack 0
  3192  000046                     vfpfcnvrt@fp:
  3193                           	opt callstack 0
  3194  000046                     DIO0_Receive_ISR@ind:
  3195                           	opt callstack 0
  3196                           
  3197                           ; 5 bytes @ 0x45
  3198  000046                     	ds	2
  3199  000048                     vfpfcnvrt@fmt:
  3200                           	opt callstack 0
  3201                           
  3202                           ; 1 bytes @ 0x47
  3203  000048                     	ds	1
  3204  000049                     vfpfcnvrt@ap:
  3205                           	opt callstack 0
  3206                           
  3207                           ; 1 bytes @ 0x48
  3208  000049                     	ds	1
  3209  00004A                     ??_vfpfcnvrt:
  3210                           
  3211                           ; 1 bytes @ 0x49
  3212  00004A                     	ds	1
  3213  00004B                     ??_radio_engine:
  3214                           
  3215                           ; 1 bytes @ 0x4A
  3216  00004B                     	ds	2
  3217  00004D                     
  3218                           ; 1 bytes @ 0x4C
  3219  00004D                     	ds	1
  3220  00004E                     ?_vfprintf:
  3221                           	opt callstack 0
  3222  00004E                     vfprintf@fp:
  3223                           	opt callstack 0
  3224                           
  3225                           ; 2 bytes @ 0x4D
  3226  00004E                     	ds	2
  3227  000050                     vfprintf@fmt:
  3228                           	opt callstack 0
  3229                           
  3230                           ; 2 bytes @ 0x4F
  3231  000050                     	ds	2
  3232  000052                     vfprintf@ap:
  3233                           	opt callstack 0
  3234                           
  3235                           ; 1 bytes @ 0x51
  3236  000052                     	ds	1
  3237  000053                     vfprintf@cfmt:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 2 bytes @ 0x52
  3241  000053                     	ds	2
  3242  000055                     
  3243                           ; 1 bytes @ 0x54
  3244  000055                     	ds	2
  3245  000057                     printf@ap:
  3246                           	opt callstack 0
  3247                           
  3248                           ; 1 bytes @ 0x56
  3249  000057                     	ds	1
  3250  000058                     ??_cmdRecv:
  3251  000058                     ??_cmdMac:
  3252  000058                     ??_cmdBootLoad:
  3253  000058                     cmdSend@cmd:
  3254                           	opt callstack 0
  3255  000058                     cmdBcast@cmd:
  3256                           	opt callstack 0
  3257  000058                     cmdSetAddr@cmd:
  3258                           	opt callstack 0
  3259  000058                     cmdSetNaddr@cmd:
  3260                           	opt callstack 0
  3261  000058                     cmdSetAES@cmd:
  3262                           	opt callstack 0
  3263  000058                     cmdSetRFCH@cmd:
  3264                           	opt callstack 0
  3265  000058                     cmdSetTX@cmd:
  3266                           	opt callstack 0
  3267  000058                     cmdSetCADRSSI@atCommand:
  3268                           	opt callstack 0
  3269  000058                     cmdSetParity@atCommand:
  3270                           	opt callstack 0
  3271  000058                     cmdSetSF@atCommand:
  3272                           	opt callstack 0
  3273  000058                     cmdGetRxCnt@atCommand:
  3274                           	opt callstack 0
  3275  000058                     print_hop_table@atCommand:
  3276                           	opt callstack 0
  3277  000058                     set_hop_table_ttl@cmd:
  3278                           	opt callstack 0
  3279                           
  3280                           ; 2 bytes @ 0x57
  3281  000058                     	ds	1
  3282  000059                     cmdMac@i:
  3283                           	opt callstack 0
  3284                           
  3285                           ; 1 bytes @ 0x58
  3286  000059                     	ds	1
  3287  00005A                     ??_cmdSend:
  3288  00005A                     ??_cmdBcast:
  3289  00005A                     ??_cmdSetAES:
  3290  00005A                     ??_cmdGetRxCnt:
  3291  00005A                     cmdRecv@i:
  3292                           	opt callstack 0
  3293  00005A                     print_hop_table@entry:
  3294                           	opt callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x59
  3297  00005A                     	ds	1
  3298  00005B                     cmdRecv@buf_id:
  3299                           	opt callstack 0
  3300  00005B                     cmdGetRxCnt@count:
  3301                           	opt callstack 0
  3302                           
  3303                           ; 1 bytes @ 0x5A
  3304  00005B                     	ds	1
  3305  00005C                     cmdGetRxCnt@buf_id:
  3306                           	opt callstack 0
  3307  00005C                     print_hop_table@i:
  3308                           	opt callstack 0
  3309                           
  3310                           ; 1 bytes @ 0x5B
  3311  00005C                     	ds	2
  3312  00005E                     
  3313                           ; 1 bytes @ 0x5D
  3314 ;;
  3315 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3316 ;;
  3317 ;; *************** function _main *****************
  3318 ;; Defined at:
  3319 ;;		line 51 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 6/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels required when called:   20
  3339 ;; This function calls:
  3340 ;;		_SYSTEM_Initialize
  3341 ;;		_SYS_Init
  3342 ;;		_SYS_TaskHandler
  3343 ;;		_TMR0_SetInterruptHandler
  3344 ;;		_bootLoadApplication
  3345 ;;		_processATCommand
  3346 ;; This function is called by:
  3347 ;;		Startup code after reset
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text0
  3352  0087BE                     __ptext0:
  3353                           	opt callstack 0
  3354  0087BE                     _main:
  3355                           	opt callstack 11
  3356                           
  3357                           ;main.c: 54:     SYSTEM_Initialize();
  3358                           
  3359                           ;incstack = 0
  3360  0087BE  ECBB  F044         	call	_SYSTEM_Initialize	;wreg free
  3361                           
  3362                           ; BSR set to: 61
  3363                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3364  0087C2  8ED2               	bsf	210,7,c	;volatile
  3365                           
  3366                           ; BSR set to: 61
  3367                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3368  0087C4  8CD2               	bsf	210,6,c	;volatile
  3369                           
  3370                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3371  0087C6  0E70               	movlw	low _Timer0Handler
  3372  0087C8  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3373  0087CA  0E7D               	movlw	high _Timer0Handler
  3374  0087CC  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3375  0087CE  ECC0  F046         	call	_TMR0_SetInterruptHandler	;wreg free
  3376                           
  3377                           ;main.c: 73:     SYS_Init();
  3378  0087D2  EC96  F046         	call	_SYS_Init	;wreg free
  3379                           
  3380                           ; BSR set to: 2
  3381                           ;main.c: 74:     bootLoadApplication();
  3382  0087D6  ECA5  F012         	call	_bootLoadApplication	;wreg free
  3383  0087DA  86BA               	bsf	186,3,c	;volatile
  3384  0087DC                     l16674:
  3385                           
  3386                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3387  0087DC  EC88  F046         	call	_SYS_TaskHandler	;wreg free
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;main.c: 79:         processATCommand();
  3391  0087E0  EC7B  F01E         	call	_processATCommand	;wreg free
  3392  0087E4  D7FB               	goto	l16674
  3393  0087E6                     __end_of_main:
  3394                           	opt callstack 0
  3395                           
  3396 ;; *************** function _processATCommand *****************
  3397 ;; Defined at:
  3398 ;;		line 1027 in file "../app/app_src/application.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  data            1   79[BANK0 ] unsigned char 
  3403 ;;  data            1   80[BANK0 ] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 3F/0
  3410 ;;		On exit  : 6/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:        4 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:   19
  3420 ;; This function calls:
  3421 ;;		_UART1_Read
  3422 ;;		_UART1_is_rx_ready
  3423 ;;		_executeATCommand
  3424 ;;		_get_timer0base
  3425 ;;		_memset
  3426 ;;		_queue_serial_led_event
  3427 ;;		_set_timer0base
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text1
  3434  003CF6                     __ptext1:
  3435                           	opt callstack 0
  3436  003CF6                     _processATCommand:
  3437                           	opt callstack 11
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;../app/app_src/application.c: 1030:     if(tx_done && U1ERRIRbits.TXMTIF){
  3441                           
  3442                           ;incstack = 0
  3443  003CF6  51DA               	movf	_tx_done& (0+255),w,b	;volatile
  3444  003CF8  B4D8               	btfsc	status,2,c
  3445  003CFA  D006               	goto	l16444
  3446                           
  3447                           ; BSR set to: 0
  3448  003CFC  013D               	movlb	61	; () banked
  3449  003CFE  AFF9               	btfss	249,7,b	;volatile
  3450  003D00  D003               	goto	l16444
  3451                           
  3452                           ; BSR set to: 61
  3453                           ;../app/app_src/application.c: 1032:        tx_done = 0;
  3454  003D02  0E00               	movlw	0
  3455  003D04  0100               	movlb	0	; () banked
  3456  003D06  6FDA               	movwf	_tx_done& (0+255),b	;volatile
  3457  003D08                     l16444:
  3458                           
  3459                           ;../app/app_src/application.c: 1035:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3460  003D08  0100               	movlb	0	; () banked
  3461  003D0A  05D8               	decf	_atStateVar& (0+255),w,b
  3462  003D0C  A4D8               	btfss	status,2,c
  3463  003D0E  D004               	goto	u16780
  3464                           
  3465                           ; BSR set to: 0
  3466  003D10  0E05               	movlw	5
  3467  003D12  19D8               	xorwf	_atStateVar& (0+255),w,b
  3468  003D14  B4D8               	btfsc	status,2,c
  3469  003D16  D08B               	goto	l16514
  3470  003D18                     u16780:
  3471                           
  3472                           ; BSR set to: 0
  3473  003D18  0EFB               	movlw	low _ATTimeoutTimer
  3474  003D1A  6E02               	movwf	get_timer0base@timer^0,c
  3475  003D1C  EC1B  F044         	call	_get_timer0base	;wreg free
  3476  003D20  5002               	movf	?_get_timer0base^0,w,c
  3477  003D22  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3478  003D24  A4D8               	btfss	status,2,c
  3479  003D26  D083               	goto	l16514
  3480                           
  3481                           ; BSR set to: 57
  3482                           ;../app/app_src/application.c: 1036:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1037:         atStateVar = resetATMachine;
  3483  003D28  0E06               	movlw	6
  3484  003D2A  0100               	movlb	0	; () banked
  3485  003D2C  6FD8               	movwf	_atStateVar& (0+255),b
  3486  003D2E  D07F               	goto	l16514
  3487  003D30                     l16452:
  3488                           
  3489                           ;../app/app_src/application.c: 1041:             atStateVar = resetATMachine;
  3490  003D30  0E06               	movlw	6
  3491  003D32  0100               	movlb	0	; () banked
  3492  003D34  6FD8               	movwf	_atStateVar& (0+255),b
  3493                           
  3494                           ;../app/app_src/application.c: 1042:             break;
  3495  003D36  0012               	return	
  3496  003D38                     l16454:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;../app/app_src/application.c: 1045:             if(UART1_is_rx_ready()){
  3500  003D38  EC81  F046         	call	_UART1_is_rx_ready	;wreg free
  3501  003D3C  0900               	iorlw	0
  3502  003D3E  B4D8               	btfsc	status,2,c
  3503  003D40  0012               	return	
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;../app/app_src/application.c: 1047:                 if(UART1_Read() == 'A')
  3507  003D42  EC41  F040         	call	_UART1_Read	;wreg free
  3508  003D46  0A41               	xorlw	65
  3509  003D48  A4D8               	btfss	status,2,c
  3510  003D4A  0012               	return	
  3511                           
  3512                           ; BSR set to: 57
  3513                           ;../app/app_src/application.c: 1048:                 {;../app/app_src/application.c: 105
      +                          0:                     atStateVar = lookingForT;
  3514  003D4C  0E02               	movlw	2
  3515  003D4E  0100               	movlb	0	; () banked
  3516  003D50  6FD8               	movwf	_atStateVar& (0+255),b
  3517  003D52                     l16460:
  3518                           
  3519                           ;../app/app_src/application.c: 1051:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3520  003D52  0EFB               	movlw	low _ATTimeoutTimer
  3521  003D54  6E02               	movwf	set_timer0base@timer^0,c
  3522  003D56  0E03               	movlw	3
  3523  003D58  6E04               	movwf	(set_timer0base@tval+1)^0,c
  3524  003D5A  0EE8               	movlw	232
  3525  003D5C  6E03               	movwf	set_timer0base@tval^0,c
  3526  003D5E  EC88  F045         	call	_set_timer0base	;wreg free
  3527  003D62  0012               	return	
  3528  003D64                     l16462:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;../app/app_src/application.c: 1056:             if(UART1_is_rx_ready()){
  3532  003D64  EC81  F046         	call	_UART1_is_rx_ready	;wreg free
  3533  003D68  0900               	iorlw	0
  3534  003D6A  B4D8               	btfsc	status,2,c
  3535  003D6C  0012               	return	
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;../app/app_src/application.c: 1058:                 if(UART1_Read() == 'T')
  3539  003D6E  EC41  F040         	call	_UART1_Read	;wreg free
  3540  003D72  0A54               	xorlw	84
  3541  003D74  A4D8               	btfss	status,2,c
  3542  003D76  D004               	goto	l16468
  3543                           
  3544                           ; BSR set to: 57
  3545                           ;../app/app_src/application.c: 1059:                 {;../app/app_src/application.c: 106
      +                          1:                     atStateVar = readingCommand;
  3546  003D78  0E03               	movlw	3
  3547  003D7A  0100               	movlb	0	; () banked
  3548  003D7C  6FD8               	movwf	_atStateVar& (0+255),b
  3549                           
  3550                           ;../app/app_src/application.c: 1062:                 }
  3551  003D7E  0012               	return	
  3552  003D80                     l16468:
  3553                           
  3554                           ; BSR set to: 57
  3555                           ;../app/app_src/application.c: 1064:                 {;../app/app_src/application.c: 106
      +                          5:                     atStateVar = lookingForA;
  3556  003D80  0E01               	movlw	1
  3557  003D82  0100               	movlb	0	; () banked
  3558  003D84  6FD8               	movwf	_atStateVar& (0+255),b
  3559  003D86  0012               	return	
  3560  003D88                     l16470:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;../app/app_src/application.c: 1071:             if(UART1_is_rx_ready())
  3564  003D88  EC81  F046         	call	_UART1_is_rx_ready	;wreg free
  3565  003D8C  0900               	iorlw	0
  3566  003D8E  B4D8               	btfsc	status,2,c
  3567  003D90  0012               	return	
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;../app/app_src/application.c: 1072:             {;../app/app_src/application.c: 1073:  
      +                                         uint8_t data = UART1_Read();
  3571  003D92  EC41  F040         	call	_UART1_Read	;wreg free
  3572  003D96  0100               	movlb	0	; () banked
  3573  003D98  6FB0               	movwf	processATCommand@data& (0+255),b
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;../app/app_src/application.c: 1074:                 if(data == '\r')
  3577  003D9A  0E0D               	movlw	13
  3578  003D9C  19B0               	xorwf	processATCommand@data& (0+255),w,b
  3579  003D9E  A4D8               	btfss	status,2,c
  3580  003DA0  D00C               	goto	l16482
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;../app/app_src/application.c: 1075:                 {;../app/app_src/application.c: 107
      +                          7:                     atStateVar = endingCommand;
  3584  003DA2  0E04               	movlw	4
  3585  003DA4  6FD8               	movwf	_atStateVar& (0+255),b
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;../app/app_src/application.c: 1079:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3589  003DA6  0E5B               	movlw	low _atCommand
  3590  003DA8  25D9               	addwf	_commandByteCounter& (0+255),w,b
  3591  003DAA  6ED9               	movwf	fsr2l,c
  3592  003DAC  6ADA               	clrf	fsr2h,c
  3593  003DAE  0E01               	movlw	high _atCommand
  3594  003DB0  22DA               	addwfc	fsr2h,f,c
  3595  003DB2  0E00               	movlw	0
  3596  003DB4  6EDF               	movwf	indf2,c
  3597                           
  3598                           ; BSR set to: 0
  3599  003DB6  2BD9               	incf	_commandByteCounter& (0+255),f,b
  3600                           
  3601                           ;../app/app_src/application.c: 1080:                 }
  3602  003DB8  0012               	return	
  3603  003DBA                     l16482:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;../app/app_src/application.c: 1082:                 {;../app/app_src/application.c: 108
      +                          3:                     atCommand[commandByteCounter++] = data;
  3607  003DBA  0E5B               	movlw	low _atCommand
  3608  003DBC  25D9               	addwf	_commandByteCounter& (0+255),w,b
  3609  003DBE  6ED9               	movwf	fsr2l,c
  3610  003DC0  6ADA               	clrf	fsr2h,c
  3611  003DC2  0E01               	movlw	high _atCommand
  3612  003DC4  22DA               	addwfc	fsr2h,f,c
  3613  003DC6  0060  F2C3  FFDF   	movff	processATCommand@data,indf2
  3614                           
  3615                           ; BSR set to: 0
  3616  003DCC  2BD9               	incf	_commandByteCounter& (0+255),f,b
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;../app/app_src/application.c: 1084:                     if(commandByteCounter >= 80)
  3620  003DCE  0E4F               	movlw	79
  3621  003DD0  65D9               	cpfsgt	_commandByteCounter& (0+255),b
  3622  003DD2  0012               	return	
  3623  003DD4  D7AD               	goto	l16452
  3624  003DD6                     l16490:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;../app/app_src/application.c: 1094:             if(UART1_is_rx_ready())
  3628  003DD6  EC81  F046         	call	_UART1_is_rx_ready	;wreg free
  3629  003DDA  0900               	iorlw	0
  3630  003DDC  B4D8               	btfsc	status,2,c
  3631  003DDE  0012               	return	
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;../app/app_src/application.c: 1095:             {;../app/app_src/application.c: 1096:  
      +                                         uint8_t data = UART1_Read();
  3635  003DE0  EC41  F040         	call	_UART1_Read	;wreg free
  3636  003DE4  0100               	movlb	0	; () banked
  3637  003DE6  6FAF               	movwf	processATCommand@data_889& (0+255),b
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;../app/app_src/application.c: 1097:                 if(data == '\n')
  3641  003DE8  0E0A               	movlw	10
  3642  003DEA  19AF               	xorwf	processATCommand@data_889& (0+255),w,b
  3643  003DEC  A4D8               	btfss	status,2,c
  3644  003DEE  D7A0               	goto	l16452
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;../app/app_src/application.c: 1098:                 {;../app/app_src/application.c: 110
      +                          0:                     atStateVar = processCommand;
  3648  003DF0  0E05               	movlw	5
  3649  003DF2  6FD8               	movwf	_atStateVar& (0+255),b
  3650                           
  3651                           ;../app/app_src/application.c: 1101:                 }
  3652  003DF4  0012               	return	
  3653  003DF6                     l16500:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;../app/app_src/application.c: 1111:             executeATCommand(atCommand);
  3657  003DF6  0E5B               	movlw	low _atCommand
  3658  003DF8  6FA9               	movwf	executeATCommand@cmd& (0+255),b
  3659  003DFA  0E01               	movlw	high _atCommand
  3660  003DFC  6FAA               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3661  003DFE  EC59  F000         	call	_executeATCommand	;wreg free
  3662                           
  3663                           ;../app/app_src/application.c: 1112:             queue_serial_led_event();
  3664  003E02  ECC5  F03D         	call	_queue_serial_led_event	;wreg free
  3665  003E06  D794               	goto	l16452
  3666  003E08                     l16506:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;../app/app_src/application.c: 1116:             atStateVar = lookingForA;
  3670  003E08  0E01               	movlw	1
  3671  003E0A  6FD8               	movwf	_atStateVar& (0+255),b
  3672                           
  3673                           ;../app/app_src/application.c: 1117:             commandByteCounter = 0;
  3674  003E0C  0E00               	movlw	0
  3675  003E0E  6FD9               	movwf	_commandByteCounter& (0+255),b
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;../app/app_src/application.c: 1119:             memset(atCommand,0,sizeof(atCommand));
  3679  003E10  0E5B               	movlw	low _atCommand
  3680  003E12  6E02               	movwf	memset@dest^0,c
  3681  003E14  0E01               	movlw	high _atCommand
  3682  003E16  6E03               	movwf	(memset@dest+1)^0,c
  3683  003E18  0E00               	movlw	0
  3684  003E1A  6E05               	movwf	(memset@c+1)^0,c
  3685  003E1C  0E00               	movlw	0
  3686  003E1E  6E04               	movwf	memset@c^0,c
  3687  003E20  0E00               	movlw	0
  3688  003E22  6E07               	movwf	(memset@n+1)^0,c
  3689  003E24  0E50               	movlw	80
  3690  003E26  6E06               	movwf	memset@n^0,c
  3691  003E28  ECFB  F021         	call	_memset	;wreg free
  3692  003E2C  D792               	goto	l16460
  3693  003E2E                     l16514:
  3694  003E2E  0100               	movlb	0	; () banked
  3695  003E30  51D8               	movf	_atStateVar& (0+255),w,b
  3696  003E32  6FAD               	movwf	??_processATCommand& (0+255),b
  3697  003E34  6BAE               	clrf	(??_processATCommand+1)& (0+255),b
  3698                           
  3699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3700                           ; Switch size 1, requested type "simple"
  3701                           ; Number of cases is 1, Range of values is 0 to 0
  3702                           ; switch strategies available:
  3703                           ; Name         Instructions Cycles
  3704                           ; simple_byte            4     3 (average)
  3705                           ;	Chosen strategy is simple_byte
  3706  003E36  51AE               	movf	(??_processATCommand+1)& (0+255),w,b
  3707  003E38  0A00               	xorlw	0	; case 0
  3708  003E3A  A4D8               	btfss	status,2,c
  3709  003E3C  D779               	goto	l16452
  3710                           
  3711                           ; BSR set to: 0
  3712                           ; Switch size 1, requested type "simple"
  3713                           ; Number of cases is 7, Range of values is 0 to 6
  3714                           ; switch strategies available:
  3715                           ; Name         Instructions Cycles
  3716                           ; simple_byte           22    12 (average)
  3717                           ;	Chosen strategy is simple_byte
  3718  003E3E  51AD               	movf	??_processATCommand& (0+255),w,b
  3719  003E40  0A00               	xorlw	0	; case 0
  3720  003E42  B4D8               	btfsc	status,2,c
  3721  003E44  D775               	goto	l16452
  3722  003E46  0A01               	xorlw	1	; case 1
  3723  003E48  B4D8               	btfsc	status,2,c
  3724  003E4A  D776               	goto	l16454
  3725  003E4C  0A03               	xorlw	3	; case 2
  3726  003E4E  B4D8               	btfsc	status,2,c
  3727  003E50  D789               	goto	l16462
  3728  003E52  0A01               	xorlw	1	; case 3
  3729  003E54  B4D8               	btfsc	status,2,c
  3730  003E56  D798               	goto	l16470
  3731  003E58  0A07               	xorlw	7	; case 4
  3732  003E5A  B4D8               	btfsc	status,2,c
  3733  003E5C  D7BC               	goto	l16490
  3734  003E5E  0A01               	xorlw	1	; case 5
  3735  003E60  B4D8               	btfsc	status,2,c
  3736  003E62  D7C9               	goto	l16500
  3737  003E64  0A03               	xorlw	3	; case 6
  3738  003E66  B4D8               	btfsc	status,2,c
  3739  003E68  D7CF               	goto	l16506
  3740  003E6A  D762               	goto	l16452
  3741  003E6C                     __end_of_processATCommand:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function _queue_serial_led_event *****************
  3745 ;; Defined at:
  3746 ;;		line 96 in file "../app/app_src/led.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  i               1   33[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;Total ram usage:        1 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:   10
  3767 ;; This function calls:
  3768 ;;		_queueLedEvent
  3769 ;; This function is called by:
  3770 ;;		_processATCommand
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text2
  3775  007B8A                     __ptext2:
  3776                           	opt callstack 0
  3777  007B8A                     _queue_serial_led_event:
  3778                           	opt callstack 19
  3779                           
  3780                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3781                           
  3782                           ;incstack = 0
  3783  007B8A  0E01               	movlw	1
  3784  007B8C  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3785  007B8E  0E90               	movlw	144
  3786  007B90  6E1C               	movwf	queueLedEvent@duration^0,c
  3787  007B92  0E00               	movlw	0
  3788  007B94  ECD6  F041         	call	_queueLedEvent
  3789                           
  3790                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3791  007B98  0E00               	movlw	0
  3792  007B9A  6E22               	movwf	queue_serial_led_event@i^0,c
  3793  007B9C                     l16362:
  3794                           
  3795                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3796  007B9C  0E00               	movlw	0
  3797  007B9E  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3798  007BA0  0E64               	movlw	100
  3799  007BA2  6E1C               	movwf	queueLedEvent@duration^0,c
  3800  007BA4  0E01               	movlw	1
  3801  007BA6  ECD6  F041         	call	_queueLedEvent
  3802                           
  3803                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3804  007BAA  0E00               	movlw	0
  3805  007BAC  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3806  007BAE  0E64               	movlw	100
  3807  007BB0  6E1C               	movwf	queueLedEvent@duration^0,c
  3808  007BB2  0E00               	movlw	0
  3809  007BB4  ECD6  F041         	call	_queueLedEvent
  3810                           
  3811                           ;../app/app_src/led.c: 103:     }
  3812  007BB8  2A22               	incf	queue_serial_led_event@i^0,f,c
  3813  007BBA  0E01               	movlw	1
  3814  007BBC  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3815  007BBE  D7EE               	goto	l16362
  3816                           
  3817                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3818  007BC0  0E00               	movlw	0
  3819  007BC2  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3820  007BC4  0E64               	movlw	100
  3821  007BC6  6E1C               	movwf	queueLedEvent@duration^0,c
  3822  007BC8  0E00               	movlw	0
  3823  007BCA  ECD6  F041         	call	_queueLedEvent
  3824                           
  3825                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3826  007BCE  0E00               	movlw	0
  3827  007BD0  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3828  007BD2  0E64               	movlw	100
  3829  007BD4  6E1C               	movwf	queueLedEvent@duration^0,c
  3830  007BD6  0E01               	movlw	1
  3831  007BD8  ECD6  F041         	call	_queueLedEvent
  3832  007BDC  0012               	return		;funcret
  3833  007BDE                     __end_of_queue_serial_led_event:
  3834                           	opt callstack 0
  3835                           
  3836 ;; *************** function _queueLedEvent *****************
  3837 ;; Defined at:
  3838 ;;		line 53 in file "../app/app_src/led.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  LEDState        1    wreg     unsigned char 
  3841 ;;  duration        2   27[COMRAM] unsigned short 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  LEDState        1   29[COMRAM] unsigned char 
  3844 ;;  temp            3   30[COMRAM] struct ledEvent
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      char 
  3847 ;; Registers used:
  3848 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;Total ram usage:        6 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    9
  3861 ;; This function calls:
  3862 ;;		_CircularBufferPushBack
  3863 ;;		_CircularBufferSpace
  3864 ;; This function is called by:
  3865 ;;		_queue_serial_led_event
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text3
  3870  0083AC                     __ptext3:
  3871                           	opt callstack 0
  3872  0083AC                     _queueLedEvent:
  3873                           	opt callstack 19
  3874                           
  3875                           ;incstack = 0
  3876                           ;queueLedEvent@LEDState stored from wreg
  3877  0083AC  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3878                           
  3879                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3880  0083AE  0EDE               	movlw	low _ledtasksbuf
  3881  0083B0  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3882  0083B2  0E01               	movlw	high _ledtasksbuf
  3883  0083B4  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3884  0083B6  EC81  F042         	call	_CircularBufferSpace	;wreg free
  3885  0083BA  500A               	movf	?_CircularBufferSpace^0,w,c
  3886  0083BC  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3887  0083BE  B4D8               	btfsc	status,2,c
  3888  0083C0  0012               	return	
  3889                           
  3890                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3891  0083C2  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3892                           
  3893                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  3894  0083C8  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3895  0083CE  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3896                           
  3897                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3898  0083D4  0EDE               	movlw	low _ledtasksbuf
  3899  0083D6  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3900  0083D8  0E01               	movlw	high _ledtasksbuf
  3901  0083DA  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3902  0083DC  0E1F               	movlw	low queueLedEvent@temp
  3903  0083DE  6E15               	movwf	CircularBufferPushBack@val^0,c
  3904  0083E0  EC54  F029         	call	_CircularBufferPushBack	;wreg free
  3905  0083E4  0012               	return		;funcret
  3906  0083E6                     __end_of_queueLedEvent:
  3907                           	opt callstack 0
  3908                           
  3909 ;; *************** function _CircularBufferSpace *****************
  3910 ;; Defined at:
  3911 ;;		line 126 in file "../app/app_src/circular buffer.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  ctx             2    9[COMRAM] PTR const struct .
  3914 ;;		 -> ledtasksbuf(10), 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2    9[COMRAM] unsigned int 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        4 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    8
  3933 ;; This function calls:
  3934 ;;		_CircularBufferSize
  3935 ;; This function is called by:
  3936 ;;		_queueLedEvent
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text4
  3941  008502                     __ptext4:
  3942                           	opt callstack 0
  3943  008502                     _CircularBufferSpace:
  3944                           	opt callstack 19
  3945                           
  3946                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  3947                           
  3948                           ;incstack = 0
  3949  008502  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3950  008508  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3951  00850E  ECB3  F03C         	call	_CircularBufferSize	;wreg free
  3952  008512  EE20 F008          	lfsr	2,8
  3953  008516  500A               	movf	CircularBufferSpace@ctx^0,w,c
  3954  008518  26D9               	addwf	fsr2l,f,c
  3955  00851A  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  3956  00851C  22DA               	addwfc	fsr2h,f,c
  3957  00851E  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  3958  008524  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  3959  00852A  5002               	movf	?_CircularBufferSize^0,w,c
  3960  00852C  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  3961  00852E  6E0A               	movwf	?_CircularBufferSpace^0,c
  3962  008530  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  3963  008532  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  3964  008534  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  3965  008536  0012               	return		;funcret
  3966  008538                     __end_of_CircularBufferSpace:
  3967                           	opt callstack 0
  3968                           
  3969 ;; *************** function _CircularBufferSize *****************
  3970 ;; Defined at:
  3971 ;;		line 122 in file "../app/app_src/circular buffer.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  ctx             2    1[COMRAM] PTR const struct .
  3974 ;;		 -> ledtasksbuf(10), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    1[COMRAM] unsigned int 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        8 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    7
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_CircularBufferSpace
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text5
  4001  007966                     __ptext5:
  4002                           	opt callstack 0
  4003  007966                     _CircularBufferSize:
  4004                           	opt callstack 19
  4005                           
  4006                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  4007                           
  4008                           ;incstack = 0
  4009  007966  EE20 F008          	lfsr	2,8
  4010  00796A  5002               	movf	CircularBufferSize@ctx^0,w,c
  4011  00796C  26D9               	addwf	fsr2l,f,c
  4012  00796E  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4013  007970  22DA               	addwfc	fsr2h,f,c
  4014  007972  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4015  007978  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4016  00797E  EE20 F004          	lfsr	2,4
  4017  007982  5002               	movf	CircularBufferSize@ctx^0,w,c
  4018  007984  26D9               	addwf	fsr2l,f,c
  4019  007986  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4020  007988  22DA               	addwfc	fsr2h,f,c
  4021  00798A  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4022  007990  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4023  007996  EE20 F002          	lfsr	2,2
  4024  00799A  5002               	movf	CircularBufferSize@ctx^0,w,c
  4025  00799C  26D9               	addwf	fsr2l,f,c
  4026  00799E  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4027  0079A0  22DA               	addwfc	fsr2h,f,c
  4028  0079A2  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4029  0079A8  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4030  0079AE  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4031  0079B0  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4032  0079B2  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4033  0079B4  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4034  0079B6  5004               	movf	??_CircularBufferSize^0,w,c
  4035  0079B8  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4036  0079BA  6E02               	movwf	?_CircularBufferSize^0,c
  4037  0079BC  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4038  0079BE  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4039  0079C0  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4040  0079C2  0012               	return		;funcret
  4041  0079C4                     __end_of_CircularBufferSize:
  4042                           	opt callstack 0
  4043                           
  4044 ;; *************** function _CircularBufferPushBack *****************
  4045 ;; Defined at:
  4046 ;;		line 71 in file "../app/app_src/circular buffer.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  ctx             2   18[COMRAM] PTR struct .
  4049 ;;		 -> ledtasksbuf(10), 
  4050 ;;  val             1   20[COMRAM] PTR void 
  4051 ;;		 -> queueLedEvent@temp(3), 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  write_pos       2   25[COMRAM] unsigned int 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      char 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;Total ram usage:        9 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    8
  4070 ;; This function calls:
  4071 ;;		___wmul
  4072 ;;		_memcpy
  4073 ;; This function is called by:
  4074 ;;		_queueLedEvent
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text6
  4079  0052A8                     __ptext6:
  4080                           	opt callstack 0
  4081  0052A8                     _CircularBufferPushBack:
  4082                           	opt callstack 19
  4083                           
  4084                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
  4085                           
  4086                           ;incstack = 0
  4087  0052A8  EE20 F008          	lfsr	2,8
  4088  0052AC  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4089  0052AE  26D9               	addwf	fsr2l,f,c
  4090  0052B0  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4091  0052B2  22DA               	addwfc	fsr2h,f,c
  4092  0052B4  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4093  0052BA  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4094  0052C0  EE20 F002          	lfsr	2,2
  4095  0052C4  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4096  0052C6  26D9               	addwf	fsr2l,f,c
  4097  0052C8  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4098  0052CA  22DA               	addwfc	fsr2h,f,c
  4099  0052CC  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
  4100  0052D2  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
  4101  0052D8  0E01               	movlw	1
  4102  0052DA  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
  4103  0052DC  0E00               	movlw	0
  4104  0052DE  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
  4105  0052E0  5016               	movf	??_CircularBufferPushBack^0,w,c
  4106  0052E2  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
  4107  0052E4  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
  4108  0052E6  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
  4109  0052E8  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
  4110  0052EA  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
  4111                           
  4112                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
  4113  0052EC  EE20 F004          	lfsr	2,4
  4114  0052F0  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4115  0052F2  26D9               	addwf	fsr2l,f,c
  4116  0052F4  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4117  0052F6  22DA               	addwfc	fsr2h,f,c
  4118  0052F8  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
  4119  0052FA  18DE               	xorwf	postinc2,w,c
  4120  0052FC  E104               	bnz	l15352
  4121  0052FE  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
  4122  005300  18DE               	xorwf	postinc2,w,c
  4123  005302  B4D8               	btfsc	status,2,c
  4124  005304  0012               	return	
  4125  005306                     l15352:
  4126                           
  4127                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
  4128  005306  EE20 F002          	lfsr	2,2
  4129  00530A  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4130  00530C  26D9               	addwf	fsr2l,f,c
  4131  00530E  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4132  005310  22DA               	addwfc	fsr2h,f,c
  4133  005312  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  4134  005318  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  4135  00531E  EE20 F006          	lfsr	2,6
  4136  005322  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4137  005324  26D9               	addwf	fsr2l,f,c
  4138  005326  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4139  005328  22DA               	addwfc	fsr2h,f,c
  4140  00532A  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  4141  005330  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  4142  005336  EC89  F043         	call	___wmul	;wreg free
  4143  00533A  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
  4144  005340  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
  4145  005346  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4146  00534C  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4147  005352  5002               	movf	?___wmul^0,w,c
  4148  005354  2416               	addwf	??_CircularBufferPushBack^0,w,c
  4149  005356  6E08               	movwf	memcpy@d1^0,c
  4150  005358  5003               	movf	(?___wmul+1)^0,w,c
  4151  00535A  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
  4152  00535C  6E09               	movwf	(memcpy@d1+1)^0,c
  4153  00535E  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
  4154  005364  6A0B               	clrf	(memcpy@s1+1)^0,c
  4155  005366  EE20 F006          	lfsr	2,6
  4156  00536A  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4157  00536C  26D9               	addwf	fsr2l,f,c
  4158  00536E  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4159  005370  22DA               	addwfc	fsr2h,f,c
  4160  005372  006F FF78  F00C    	movff	postinc2,memcpy@n
  4161  005378  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  4162  00537E  ECE5  F039         	call	_memcpy	;wreg free
  4163                           
  4164                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
  4165  005382  EE20 F002          	lfsr	2,2
  4166  005386  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4167  005388  26D9               	addwf	fsr2l,f,c
  4168  00538A  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4169  00538C  22DA               	addwfc	fsr2h,f,c
  4170  00538E  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
  4171  005394  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
  4172  00539A  0012               	return		;funcret
  4173  00539C                     __end_of_CircularBufferPushBack:
  4174                           	opt callstack 0
  4175                           
  4176 ;; *************** function _executeATCommand *****************
  4177 ;; Defined at:
  4178 ;;		line 850 in file "../app/app_src/application.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  cmd             2   73[BANK0 ] PTR unsigned char 
  4181 ;;		 -> atCommand(80), 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  retcode         1    0        unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 3F/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;Total ram usage:        5 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:   18
  4200 ;; This function calls:
  4201 ;;		_cmdAddr
  4202 ;;		_cmdBcast
  4203 ;;		_cmdBootLoad
  4204 ;;		_cmdGetCAD
  4205 ;;		_cmdGetCADRSSI
  4206 ;;		_cmdGetMode
  4207 ;;		_cmdGetRFCH
  4208 ;;		_cmdGetRxCnt
  4209 ;;		_cmdGetSF
  4210 ;;		_cmdGetTTL
  4211 ;;		_cmdGetTX
  4212 ;;		_cmdI
  4213 ;;		_cmdMac
  4214 ;;		_cmdNaddr
  4215 ;;		_cmdRecv
  4216 ;;		_cmdReset
  4217 ;;		_cmdRstCAD
  4218 ;;		_cmdSend
  4219 ;;		_cmdSendSink
  4220 ;;		_cmdSetAES
  4221 ;;		_cmdSetAddr
  4222 ;;		_cmdSetBaud
  4223 ;;		_cmdSetCADRSSI
  4224 ;;		_cmdSetNaddr
  4225 ;;		_cmdSetParity
  4226 ;;		_cmdSetRFCH
  4227 ;;		_cmdSetSF
  4228 ;;		_cmdSetSink
  4229 ;;		_cmdSetTTL
  4230 ;;		_cmdSetTX
  4231 ;;		_print_hop_table
  4232 ;;		_printf
  4233 ;;		_set_hop_table_ttl
  4234 ;;		_strstr
  4235 ;; This function is called by:
  4236 ;;		_processATCommand
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text7
  4241  0000B2                     __ptext7:
  4242                           	opt callstack 0
  4243  0000B2                     _executeATCommand:
  4244                           	opt callstack 11
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;../app/app_src/application.c: 853:     switch(*(cmd+1))
  4248                           
  4249                           ;incstack = 0
  4250  0000B2  D28D               	goto	l16348
  4251  0000B4                     l16208:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;../app/app_src/application.c: 856:          if(strstr(atCommand,"+SEND:")){
  4255  0000B4  0E5B               	movlw	low _atCommand
  4256  0000B6  6E0D               	movwf	strstr@h^0,c
  4257  0000B8  0E01               	movlw	high _atCommand
  4258  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4259  0000BC  0E5A               	movlw	low STR_64
  4260  0000BE  6E0F               	movwf	strstr@n^0,c
  4261  0000C0  0EFF               	movlw	high STR_64
  4262  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4263  0000C4  EC5F  F02D         	call	_strstr	;wreg free
  4264  0000C8  500D               	movf	?_strstr^0,w,c
  4265  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4266  0000CC  B4D8               	btfsc	status,2,c
  4267  0000CE  D009               	goto	l16212
  4268                           
  4269                           ;../app/app_src/application.c: 857:           cmdSend(cmd);
  4270  0000D0  0060  F2A4  F058   	movff	executeATCommand@cmd,cmdSend@cmd
  4271  0000D6  0060  F2A8  F059   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4272  0000DC  ECE1  F013         	call	_cmdSend	;wreg free
  4273                           
  4274                           ;../app/app_src/application.c: 858:          }
  4275  0000E0  0012               	return	
  4276  0000E2                     l16212:
  4277  0000E2  0E5B               	movlw	low _atCommand
  4278  0000E4  6E0D               	movwf	strstr@h^0,c
  4279  0000E6  0E01               	movlw	high _atCommand
  4280  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4281  0000EA  0E29               	movlw	low STR_66
  4282  0000EC  6E0F               	movwf	strstr@n^0,c
  4283  0000EE  0EFF               	movlw	high STR_66
  4284  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4285  0000F2  EC5F  F02D         	call	_strstr	;wreg free
  4286  0000F6  500D               	movf	?_strstr^0,w,c
  4287  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4288  0000FA  B4D8               	btfsc	status,2,c
  4289  0000FC  D003               	goto	l16216
  4290                           
  4291                           ;../app/app_src/application.c: 860:           cmdSetSink();
  4292  0000FE  EC59  F046         	call	_cmdSetSink	;wreg free
  4293                           
  4294                           ;../app/app_src/application.c: 861:          }
  4295  000102  0012               	return	
  4296  000104                     l16216:
  4297  000104  0E5B               	movlw	low _atCommand
  4298  000106  6E0D               	movwf	strstr@h^0,c
  4299  000108  0E01               	movlw	high _atCommand
  4300  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4301  00010C  0EA0               	movlw	low STR_68
  4302  00010E  6E0F               	movwf	strstr@n^0,c
  4303  000110  0EFF               	movlw	high STR_68
  4304  000112  6E10               	movwf	(strstr@n+1)^0,c
  4305  000114  EC5F  F02D         	call	_strstr	;wreg free
  4306  000118  500D               	movf	?_strstr^0,w,c
  4307  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4308  00011C  B4D8               	btfsc	status,2,c
  4309  00011E  D007               	goto	l16220
  4310                           
  4311                           ;../app/app_src/application.c: 863:           cmdSendSink(atCommand);
  4312  000120  0E5B               	movlw	low _atCommand
  4313  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4314  000124  0E01               	movlw	high _atCommand
  4315  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4316  000128  EC02  F047         	call	_cmdSendSink	;wreg free
  4317                           
  4318                           ;../app/app_src/application.c: 864:          }
  4319  00012C  0012               	return	
  4320  00012E                     l16220:
  4321  00012E  0E5B               	movlw	low _atCommand
  4322  000130  6E0D               	movwf	strstr@h^0,c
  4323  000132  0E01               	movlw	high _atCommand
  4324  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4325  000136  0EE5               	movlw	low STR_70
  4326  000138  6E0F               	movwf	strstr@n^0,c
  4327  00013A  0EFF               	movlw	high STR_70
  4328  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4329  00013E  EC5F  F02D         	call	_strstr	;wreg free
  4330  000142  500D               	movf	?_strstr^0,w,c
  4331  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4332  000146  B4D8               	btfsc	status,2,c
  4333  000148  D003               	goto	l16224
  4334                           
  4335                           ;../app/app_src/application.c: 866:           cmdGetSF();
  4336  00014A  ECEE  F045         	call	_cmdGetSF	;wreg free
  4337                           
  4338                           ;../app/app_src/application.c: 867:          }
  4339  00014E  0012               	return	
  4340  000150                     l16224:
  4341  000150  0E5B               	movlw	low _atCommand
  4342  000152  6E0D               	movwf	strstr@h^0,c
  4343  000154  0E01               	movlw	high _atCommand
  4344  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4345  000158  0EE0               	movlw	low STR_72
  4346  00015A  6E0F               	movwf	strstr@n^0,c
  4347  00015C  0EFF               	movlw	high STR_72
  4348  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4349  000160  EC5F  F02D         	call	_strstr	;wreg free
  4350  000164  500D               	movf	?_strstr^0,w,c
  4351  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4352  000168  B4D8               	btfsc	status,2,c
  4353  00016A  D007               	goto	l16228
  4354                           
  4355                           ;../app/app_src/application.c: 869:           cmdSetSF(atCommand);
  4356  00016C  0E5B               	movlw	low _atCommand
  4357  00016E  6E58               	movwf	cmdSetSF@atCommand^0,c
  4358  000170  0E01               	movlw	high _atCommand
  4359  000172  6E59               	movwf	(cmdSetSF@atCommand+1)^0,c
  4360  000174  EC39  F033         	call	_cmdSetSF	;wreg free
  4361                           
  4362                           ;../app/app_src/application.c: 870:          }
  4363  000178  0012               	return	
  4364  00017A                     l16228:
  4365  00017A  0E5B               	movlw	low _atCommand
  4366  00017C  6E0D               	movwf	strstr@h^0,c
  4367  00017E  0E01               	movlw	high _atCommand
  4368  000180  6E0E               	movwf	(strstr@h+1)^0,c
  4369  000182  0ED1               	movlw	low STR_74
  4370  000184  6E0F               	movwf	strstr@n^0,c
  4371  000186  0EFE               	movlw	high STR_74
  4372  000188  6E10               	movwf	(strstr@n+1)^0,c
  4373  00018A  EC5F  F02D         	call	_strstr	;wreg free
  4374  00018E  500D               	movf	?_strstr^0,w,c
  4375  000190  100E               	iorwf	(?_strstr+1)^0,w,c
  4376  000192  B4D8               	btfsc	status,2,c
  4377  000194  D210               	goto	l16344
  4378                           
  4379                           ;../app/app_src/application.c: 872:                 print_hop_table(atCommand);
  4380  000196  0E5B               	movlw	low _atCommand
  4381  000198  6E58               	movwf	print_hop_table@atCommand^0,c
  4382  00019A  0E01               	movlw	high _atCommand
  4383  00019C  6E59               	movwf	(print_hop_table@atCommand+1)^0,c
  4384  00019E  EC31  F02B         	call	_print_hop_table	;wreg free
  4385                           
  4386                           ;../app/app_src/application.c: 873:             }
  4387  0001A2  0012               	return	
  4388  0001A4                     l16232:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;../app/app_src/application.c: 879:          if(strstr(atCommand,"+BCAST=")){
  4392  0001A4  0E5B               	movlw	low _atCommand
  4393  0001A6  6E0D               	movwf	strstr@h^0,c
  4394  0001A8  0E01               	movlw	high _atCommand
  4395  0001AA  6E0E               	movwf	(strstr@h+1)^0,c
  4396  0001AC  0E4A               	movlw	low STR_76
  4397  0001AE  6E0F               	movwf	strstr@n^0,c
  4398  0001B0  0EFF               	movlw	high STR_76
  4399  0001B2  6E10               	movwf	(strstr@n+1)^0,c
  4400  0001B4  EC5F  F02D         	call	_strstr	;wreg free
  4401  0001B8  500D               	movf	?_strstr^0,w,c
  4402  0001BA  100E               	iorwf	(?_strstr+1)^0,w,c
  4403  0001BC  B4D8               	btfsc	status,2,c
  4404  0001BE  D009               	goto	l16236
  4405                           
  4406                           ;../app/app_src/application.c: 880:     cmdBcast(cmd);
  4407  0001C0  0060  F2A4  F058   	movff	executeATCommand@cmd,cmdBcast@cmd
  4408  0001C6  0060  F2A8  F059   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4409  0001CC  EC3B  F017         	call	_cmdBcast	;wreg free
  4410                           
  4411                           ;../app/app_src/application.c: 881:    }
  4412  0001D0  0012               	return	
  4413  0001D2                     l16236:
  4414  0001D2  0E5B               	movlw	low _atCommand
  4415  0001D4  6E0D               	movwf	strstr@h^0,c
  4416  0001D6  0E01               	movlw	high _atCommand
  4417  0001D8  6E0E               	movwf	(strstr@h+1)^0,c
  4418  0001DA  0E61               	movlw	low STR_78
  4419  0001DC  6E0F               	movwf	strstr@n^0,c
  4420  0001DE  0EFF               	movlw	high STR_78
  4421  0001E0  6E10               	movwf	(strstr@n+1)^0,c
  4422  0001E2  EC5F  F02D         	call	_strstr	;wreg free
  4423  0001E6  500D               	movf	?_strstr^0,w,c
  4424  0001E8  100E               	iorwf	(?_strstr+1)^0,w,c
  4425  0001EA  B4D8               	btfsc	status,2,c
  4426  0001EC  D007               	goto	l16240
  4427                           
  4428                           ;../app/app_src/application.c: 883:                 cmdSetBaud(atCommand);
  4429  0001EE  0E5B               	movlw	low _atCommand
  4430  0001F0  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4431  0001F2  0E01               	movlw	high _atCommand
  4432  0001F4  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4433  0001F6  EC55  F03A         	call	_cmdSetBaud	;wreg free
  4434                           
  4435                           ;../app/app_src/application.c: 884:             }
  4436  0001FA  0012               	return	
  4437  0001FC                     l16240:
  4438  0001FC  0E5B               	movlw	low _atCommand
  4439  0001FE  6E0D               	movwf	strstr@h^0,c
  4440  000200  0E01               	movlw	high _atCommand
  4441  000202  6E0E               	movwf	(strstr@h+1)^0,c
  4442  000204  0E04               	movlw	low STR_80
  4443  000206  6E0F               	movwf	strstr@n^0,c
  4444  000208  0EFF               	movlw	high STR_80
  4445  00020A  6E10               	movwf	(strstr@n+1)^0,c
  4446  00020C  EC5F  F02D         	call	_strstr	;wreg free
  4447  000210  500D               	movf	?_strstr^0,w,c
  4448  000212  100E               	iorwf	(?_strstr+1)^0,w,c
  4449  000214  B4D8               	btfsc	status,2,c
  4450  000216  D1CF               	goto	l16344
  4451                           
  4452                           ;../app/app_src/application.c: 886:                 cmdBootLoad();
  4453  000218  ECF3  F041         	call	_cmdBootLoad	;wreg free
  4454                           
  4455                           ;../app/app_src/application.c: 887:             }
  4456  00021C  0012               	return	
  4457  00021E                     l16244:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;../app/app_src/application.c: 893:          if(strstr(atCommand,"+ADDR?")){
  4461  00021E  0E5B               	movlw	low _atCommand
  4462  000220  6E0D               	movwf	strstr@h^0,c
  4463  000222  0E01               	movlw	high _atCommand
  4464  000224  6E0E               	movwf	(strstr@h+1)^0,c
  4465  000226  0E8B               	movlw	low STR_82
  4466  000228  6E0F               	movwf	strstr@n^0,c
  4467  00022A  0EFF               	movlw	high STR_82
  4468  00022C  6E10               	movwf	(strstr@n+1)^0,c
  4469  00022E  EC5F  F02D         	call	_strstr	;wreg free
  4470  000232  500D               	movf	?_strstr^0,w,c
  4471  000234  100E               	iorwf	(?_strstr+1)^0,w,c
  4472  000236  B4D8               	btfsc	status,2,c
  4473  000238  D003               	goto	l16248
  4474                           
  4475                           ;../app/app_src/application.c: 894:           cmdAddr();
  4476  00023A  ECEF  F044         	call	_cmdAddr	;wreg free
  4477                           
  4478                           ;../app/app_src/application.c: 895:          }
  4479  00023E  0012               	return	
  4480  000240                     l16248:
  4481  000240  0E5B               	movlw	low _atCommand
  4482  000242  6E0D               	movwf	strstr@h^0,c
  4483  000244  0E01               	movlw	high _atCommand
  4484  000246  6E0E               	movwf	(strstr@h+1)^0,c
  4485  000248  0E6F               	movlw	low STR_84
  4486  00024A  6E0F               	movwf	strstr@n^0,c
  4487  00024C  0EFF               	movlw	high STR_84
  4488  00024E  6E10               	movwf	(strstr@n+1)^0,c
  4489  000250  EC5F  F02D         	call	_strstr	;wreg free
  4490  000254  500D               	movf	?_strstr^0,w,c
  4491  000256  100E               	iorwf	(?_strstr+1)^0,w,c
  4492  000258  B4D8               	btfsc	status,2,c
  4493  00025A  D007               	goto	l16252
  4494                           
  4495                           ;../app/app_src/application.c: 897:     cmdSetAddr(atCommand);
  4496  00025C  0E5B               	movlw	low _atCommand
  4497  00025E  6E58               	movwf	cmdSetAddr@cmd^0,c
  4498  000260  0E01               	movlw	high _atCommand
  4499  000262  6E59               	movwf	(cmdSetAddr@cmd+1)^0,c
  4500  000264  ECB7  F036         	call	_cmdSetAddr	;wreg free
  4501                           
  4502                           ;../app/app_src/application.c: 898:    }
  4503  000268  0012               	return	
  4504  00026A                     l16252:
  4505  00026A  0E5B               	movlw	low _atCommand
  4506  00026C  6E0D               	movwf	strstr@h^0,c
  4507  00026E  0E01               	movlw	high _atCommand
  4508  000270  6E0E               	movwf	(strstr@h+1)^0,c
  4509  000272  0E0E               	movlw	low STR_86
  4510  000274  6E0F               	movwf	strstr@n^0,c
  4511  000276  0EFF               	movlw	high STR_86
  4512  000278  6E10               	movwf	(strstr@n+1)^0,c
  4513  00027A  EC5F  F02D         	call	_strstr	;wreg free
  4514  00027E  500D               	movf	?_strstr^0,w,c
  4515  000280  100E               	iorwf	(?_strstr+1)^0,w,c
  4516  000282  B4D8               	btfsc	status,2,c
  4517  000284  D198               	goto	l16344
  4518                           
  4519                           ;../app/app_src/application.c: 900:           cmdSetAES(atCommand);
  4520  000286  0E5B               	movlw	low _atCommand
  4521  000288  6E58               	movwf	cmdSetAES@cmd^0,c
  4522  00028A  0E01               	movlw	high _atCommand
  4523  00028C  6E59               	movwf	(cmdSetAES@cmd+1)^0,c
  4524  00028E  EC3D  F018         	call	_cmdSetAES	;wreg free
  4525                           
  4526                           ;../app/app_src/application.c: 901:          }
  4527  000292  0012               	return	
  4528  000294                     l16256:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;../app/app_src/application.c: 907:          if(strstr(atCommand,"+CADCOUNTER?")){
  4532  000294  0E5B               	movlw	low _atCommand
  4533  000296  6E0D               	movwf	strstr@h^0,c
  4534  000298  0E01               	movlw	high _atCommand
  4535  00029A  6E0E               	movwf	(strstr@h+1)^0,c
  4536  00029C  0EAC               	movlw	low STR_88
  4537  00029E  6E0F               	movwf	strstr@n^0,c
  4538  0002A0  0EFE               	movlw	high STR_88
  4539  0002A2  6E10               	movwf	(strstr@n+1)^0,c
  4540  0002A4  EC5F  F02D         	call	_strstr	;wreg free
  4541  0002A8  500D               	movf	?_strstr^0,w,c
  4542  0002AA  100E               	iorwf	(?_strstr+1)^0,w,c
  4543  0002AC  B4D8               	btfsc	status,2,c
  4544  0002AE  D003               	goto	l16260
  4545                           
  4546                           ;../app/app_src/application.c: 908:           cmdGetCAD();
  4547  0002B0  ECFA  F045         	call	_cmdGetCAD	;wreg free
  4548                           
  4549                           ;../app/app_src/application.c: 909:          }
  4550  0002B4  0012               	return	
  4551  0002B6                     l16260:
  4552  0002B6  0E5B               	movlw	low _atCommand
  4553  0002B8  6E0D               	movwf	strstr@h^0,c
  4554  0002BA  0E01               	movlw	high _atCommand
  4555  0002BC  6E0E               	movwf	(strstr@h+1)^0,c
  4556  0002BE  0E5A               	movlw	low STR_90
  4557  0002C0  6E0F               	movwf	strstr@n^0,c
  4558  0002C2  0EFE               	movlw	high STR_90
  4559  0002C4  6E10               	movwf	(strstr@n+1)^0,c
  4560  0002C6  EC5F  F02D         	call	_strstr	;wreg free
  4561  0002CA  500D               	movf	?_strstr^0,w,c
  4562  0002CC  100E               	iorwf	(?_strstr+1)^0,w,c
  4563  0002CE  B4D8               	btfsc	status,2,c
  4564  0002D0  D003               	goto	l16264
  4565                           
  4566                           ;../app/app_src/application.c: 911:           cmdRstCAD();
  4567  0002D2  EC35  F046         	call	_cmdRstCAD	;wreg free
  4568                           
  4569                           ;../app/app_src/application.c: 912:          }
  4570  0002D6  0012               	return	
  4571  0002D8                     l16264:
  4572  0002D8  0E5B               	movlw	low _atCommand
  4573  0002DA  6E0D               	movwf	strstr@h^0,c
  4574  0002DC  0E01               	movlw	high _atCommand
  4575  0002DE  6E0E               	movwf	(strstr@h+1)^0,c
  4576  0002E0  0EF0               	movlw	low STR_92
  4577  0002E2  6E0F               	movwf	strstr@n^0,c
  4578  0002E4  0EFE               	movlw	high STR_92
  4579  0002E6  6E10               	movwf	(strstr@n+1)^0,c
  4580  0002E8  EC5F  F02D         	call	_strstr	;wreg free
  4581  0002EC  500D               	movf	?_strstr^0,w,c
  4582  0002EE  100E               	iorwf	(?_strstr+1)^0,w,c
  4583  0002F0  B4D8               	btfsc	status,2,c
  4584  0002F2  D003               	goto	l16268
  4585                           
  4586                           ;../app/app_src/application.c: 914:           cmdGetCADRSSI();
  4587  0002F4  EC7B  F045         	call	_cmdGetCADRSSI	;wreg free
  4588                           
  4589                           ;../app/app_src/application.c: 915:          }
  4590  0002F8  0012               	return	
  4591  0002FA                     l16268:
  4592  0002FA  0E5B               	movlw	low _atCommand
  4593  0002FC  6E0D               	movwf	strstr@h^0,c
  4594  0002FE  0E01               	movlw	high _atCommand
  4595  000300  6E0E               	movwf	(strstr@h+1)^0,c
  4596  000302  0EDC               	movlw	low STR_94
  4597  000304  6E0F               	movwf	strstr@n^0,c
  4598  000306  0EFE               	movlw	high STR_94
  4599  000308  6E10               	movwf	(strstr@n+1)^0,c
  4600  00030A  EC5F  F02D         	call	_strstr	;wreg free
  4601  00030E  500D               	movf	?_strstr^0,w,c
  4602  000310  100E               	iorwf	(?_strstr+1)^0,w,c
  4603  000312  B4D8               	btfsc	status,2,c
  4604  000314  D150               	goto	l16344
  4605                           
  4606                           ;../app/app_src/application.c: 917:           cmdSetCADRSSI(atCommand);
  4607  000316  0E5B               	movlw	low _atCommand
  4608  000318  6E58               	movwf	cmdSetCADRSSI@atCommand^0,c
  4609  00031A  0E01               	movlw	high _atCommand
  4610  00031C  6E59               	movwf	(cmdSetCADRSSI@atCommand+1)^0,c
  4611  00031E  EC90  F033         	call	_cmdSetCADRSSI	;wreg free
  4612                           
  4613                           ;../app/app_src/application.c: 918:          }
  4614  000322  0012               	return	
  4615  000324                     l16272:
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;../app/app_src/application.c: 924:             if(strstr(atCommand,"+HOPS?")){
  4619  000324  0E5B               	movlw	low _atCommand
  4620  000326  6E0D               	movwf	strstr@h^0,c
  4621  000328  0E01               	movlw	high _atCommand
  4622  00032A  6E0E               	movwf	(strstr@h+1)^0,c
  4623  00032C  0E92               	movlw	low STR_96
  4624  00032E  6E0F               	movwf	strstr@n^0,c
  4625  000330  0EFF               	movlw	high STR_96
  4626  000332  6E10               	movwf	(strstr@n+1)^0,c
  4627  000334  EC5F  F02D         	call	_strstr	;wreg free
  4628  000338  500D               	movf	?_strstr^0,w,c
  4629  00033A  100E               	iorwf	(?_strstr+1)^0,w,c
  4630  00033C  B4D8               	btfsc	status,2,c
  4631  00033E  D003               	goto	l16276
  4632  000340                     u16480:
  4633                           
  4634                           ;../app/app_src/application.c: 925:                 cmdGetTTL();
  4635  000340  EC03  F047         	call	_cmdGetTTL	;wreg free
  4636                           
  4637                           ;../app/app_src/application.c: 926:             }
  4638  000344  0012               	return	
  4639  000346                     l16276:
  4640  000346  0E5B               	movlw	low _atCommand
  4641  000348  6E0D               	movwf	strstr@h^0,c
  4642  00034A  0E01               	movlw	high _atCommand
  4643  00034C  6E0E               	movwf	(strstr@h+1)^0,c
  4644  00034E  0E76               	movlw	low STR_98
  4645  000350  6E0F               	movwf	strstr@n^0,c
  4646  000352  0EFF               	movlw	high STR_98
  4647  000354  6E10               	movwf	(strstr@n+1)^0,c
  4648  000356  EC5F  F02D         	call	_strstr	;wreg free
  4649  00035A  500D               	movf	?_strstr^0,w,c
  4650  00035C  100E               	iorwf	(?_strstr+1)^0,w,c
  4651  00035E  B4D8               	btfsc	status,2,c
  4652  000360  D007               	goto	l16280
  4653  000362                     u16490:
  4654                           
  4655                           ;../app/app_src/application.c: 928:                 cmdSetTTL(atCommand);
  4656  000362  0E5B               	movlw	low _atCommand
  4657  000364  6E02               	movwf	cmdSetTTL@cmd^0,c
  4658  000366  0E01               	movlw	high _atCommand
  4659  000368  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4660  00036A  EC01  F047         	call	_cmdSetTTL	;wreg free
  4661                           
  4662                           ;../app/app_src/application.c: 929:             }
  4663  00036E  0012               	return	
  4664  000370                     l16280:
  4665  000370  0E5B               	movlw	low _atCommand
  4666  000372  6E0D               	movwf	strstr@h^0,c
  4667  000374  0E01               	movlw	high _atCommand
  4668  000376  6E0E               	movwf	(strstr@h+1)^0,c
  4669  000378  0E17               	movlw	low STR_100
  4670  00037A  6E0F               	movwf	strstr@n^0,c
  4671  00037C  0EFF               	movlw	high STR_100
  4672  00037E  6E10               	movwf	(strstr@n+1)^0,c
  4673  000380  EC5F  F02D         	call	_strstr	;wreg free
  4674  000384  500D               	movf	?_strstr^0,w,c
  4675  000386  100E               	iorwf	(?_strstr+1)^0,w,c
  4676  000388  B4D8               	btfsc	status,2,c
  4677  00038A  D115               	goto	l16344
  4678                           
  4679                           ;../app/app_src/application.c: 931:                 set_hop_table_ttl(atCommand);
  4680  00038C  0E5B               	movlw	low _atCommand
  4681  00038E  6E58               	movwf	set_hop_table_ttl@cmd^0,c
  4682  000390  0E01               	movlw	high _atCommand
  4683  000392  6E59               	movwf	(set_hop_table_ttl@cmd+1)^0,c
  4684  000394  EC51  F046         	call	_set_hop_table_ttl	;wreg free
  4685                           
  4686                           ;../app/app_src/application.c: 932:             }
  4687  000398  0012               	return	
  4688  00039A                     l16284:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;../app/app_src/application.c: 938:             if(strstr(cmd,"+I")){
  4692  00039A  0060  F2A4  F00D   	movff	executeATCommand@cmd,strstr@h
  4693  0003A0  0060  F2A8  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4694  0003A6  0EF9               	movlw	low STR_102
  4695  0003A8  6E0F               	movwf	strstr@n^0,c
  4696  0003AA  0EFF               	movlw	high STR_102
  4697  0003AC  6E10               	movwf	(strstr@n+1)^0,c
  4698  0003AE  EC5F  F02D         	call	_strstr	;wreg free
  4699  0003B2  500D               	movf	?_strstr^0,w,c
  4700  0003B4  100E               	iorwf	(?_strstr+1)^0,w,c
  4701  0003B6  B4D8               	btfsc	status,2,c
  4702  0003B8  D0FE               	goto	l16344
  4703                           
  4704                           ;../app/app_src/application.c: 939:                 cmdI();
  4705  0003BA  ECF3  F046         	call	_cmdI	;wreg free
  4706                           
  4707                           ;../app/app_src/application.c: 940:             }
  4708  0003BE  0012               	return	
  4709  0003C0                     l16288:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;../app/app_src/application.c: 946:          if(strstr(atCommand,"+MAC?")){
  4713  0003C0  0E5B               	movlw	low _atCommand
  4714  0003C2  6E0D               	movwf	strstr@h^0,c
  4715  0003C4  0E01               	movlw	high _atCommand
  4716  0003C6  6E0E               	movwf	(strstr@h+1)^0,c
  4717  0003C8  0EB3               	movlw	low STR_104
  4718  0003CA  6E0F               	movwf	strstr@n^0,c
  4719  0003CC  0EFF               	movlw	high STR_104
  4720  0003CE  6E10               	movwf	(strstr@n+1)^0,c
  4721  0003D0  EC5F  F02D         	call	_strstr	;wreg free
  4722  0003D4  500D               	movf	?_strstr^0,w,c
  4723  0003D6  100E               	iorwf	(?_strstr+1)^0,w,c
  4724  0003D8  B4D8               	btfsc	status,2,c
  4725  0003DA  D003               	goto	l16292
  4726                           
  4727                           ;../app/app_src/application.c: 947:           cmdMac();
  4728  0003DC  EC05  F03F         	call	_cmdMac	;wreg free
  4729                           
  4730                           ;../app/app_src/application.c: 948:          }
  4731  0003E0  0012               	return	
  4732  0003E2                     l16292:
  4733  0003E2  0E5B               	movlw	low _atCommand
  4734  0003E4  6E0D               	movwf	strstr@h^0,c
  4735  0003E6  0E01               	movlw	high _atCommand
  4736  0003E8  6E0E               	movwf	(strstr@h+1)^0,c
  4737  0003EA  0E7D               	movlw	low STR_106
  4738  0003EC  6E0F               	movwf	strstr@n^0,c
  4739  0003EE  0EFF               	movlw	high STR_106
  4740  0003F0  6E10               	movwf	(strstr@n+1)^0,c
  4741  0003F2  EC5F  F02D         	call	_strstr	;wreg free
  4742  0003F6  500D               	movf	?_strstr^0,w,c
  4743  0003F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4744  0003FA  B4D8               	btfsc	status,2,c
  4745  0003FC  D0DC               	goto	l16344
  4746                           
  4747                           ;../app/app_src/application.c: 950:           cmdGetMode();
  4748  0003FE  EC69  F046         	call	_cmdGetMode	;wreg free
  4749                           
  4750                           ;../app/app_src/application.c: 951:          }
  4751  000402  0012               	return	
  4752  000404                     l16296:
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;../app/app_src/application.c: 957:          if(strstr(atCommand,"+NADDR?")){
  4756  000404  0E5B               	movlw	low _atCommand
  4757  000406  6E0D               	movwf	strstr@h^0,c
  4758  000408  0E01               	movlw	high _atCommand
  4759  00040A  6E0E               	movwf	(strstr@h+1)^0,c
  4760  00040C  0E52               	movlw	low STR_108
  4761  00040E  6E0F               	movwf	strstr@n^0,c
  4762  000410  0EFF               	movlw	high STR_108
  4763  000412  6E10               	movwf	(strstr@n+1)^0,c
  4764  000414  EC5F  F02D         	call	_strstr	;wreg free
  4765  000418  500D               	movf	?_strstr^0,w,c
  4766  00041A  100E               	iorwf	(?_strstr+1)^0,w,c
  4767  00041C  B4D8               	btfsc	status,2,c
  4768  00041E  D003               	goto	l16300
  4769                           
  4770                           ;../app/app_src/application.c: 958:     cmdNaddr();
  4771  000420  ECD6  F045         	call	_cmdNaddr	;wreg free
  4772                           
  4773                           ;../app/app_src/application.c: 959:    }
  4774  000424  0012               	return	
  4775  000426                     l16300:
  4776  000426  0E5B               	movlw	low _atCommand
  4777  000428  6E0D               	movwf	strstr@h^0,c
  4778  00042A  0E01               	movlw	high _atCommand
  4779  00042C  6E0E               	movwf	(strstr@h+1)^0,c
  4780  00042E  0E42               	movlw	low STR_110
  4781  000430  6E0F               	movwf	strstr@n^0,c
  4782  000432  0EFF               	movlw	high STR_110
  4783  000434  6E10               	movwf	(strstr@n+1)^0,c
  4784  000436  EC5F  F02D         	call	_strstr	;wreg free
  4785  00043A  500D               	movf	?_strstr^0,w,c
  4786  00043C  100E               	iorwf	(?_strstr+1)^0,w,c
  4787  00043E  B4D8               	btfsc	status,2,c
  4788  000440  D0BA               	goto	l16344
  4789                           
  4790                           ;../app/app_src/application.c: 961:     cmdSetNaddr(atCommand);
  4791  000442  0E5B               	movlw	low _atCommand
  4792  000444  6E58               	movwf	cmdSetNaddr@cmd^0,c
  4793  000446  0E01               	movlw	high _atCommand
  4794  000448  6E59               	movwf	(cmdSetNaddr@cmd+1)^0,c
  4795  00044A  ECA7  F039         	call	_cmdSetNaddr	;wreg free
  4796                           
  4797                           ;../app/app_src/application.c: 962:    }
  4798  00044E  0012               	return	
  4799  000450                     l16304:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;../app/app_src/application.c: 968:             if(strstr(atCommand,"+PARITY=")){
  4803  000450  0E5B               	movlw	low _atCommand
  4804  000452  6E0D               	movwf	strstr@h^0,c
  4805  000454  0E01               	movlw	high _atCommand
  4806  000456  6E0E               	movwf	(strstr@h+1)^0,c
  4807  000458  0E20               	movlw	low STR_112
  4808  00045A  6E0F               	movwf	strstr@n^0,c
  4809  00045C  0EFF               	movlw	high STR_112
  4810  00045E  6E10               	movwf	(strstr@n+1)^0,c
  4811  000460  EC5F  F02D         	call	_strstr	;wreg free
  4812  000464  500D               	movf	?_strstr^0,w,c
  4813  000466  100E               	iorwf	(?_strstr+1)^0,w,c
  4814  000468  B4D8               	btfsc	status,2,c
  4815  00046A  D0A5               	goto	l16344
  4816                           
  4817                           ;../app/app_src/application.c: 969:                 cmdSetParity(atCommand);
  4818  00046C  0E5B               	movlw	low _atCommand
  4819  00046E  6E58               	movwf	cmdSetParity@atCommand^0,c
  4820  000470  0E01               	movlw	high _atCommand
  4821  000472  6E59               	movwf	(cmdSetParity@atCommand+1)^0,c
  4822  000474  EC48  F037         	call	_cmdSetParity	;wreg free
  4823  000478                     l16308:
  4824                           
  4825                           ;../app/app_src/application.c: 975:          if(strstr(atCommand,"+RECV")){
  4826  000478  0E5B               	movlw	low _atCommand
  4827  00047A  6E0D               	movwf	strstr@h^0,c
  4828  00047C  0E01               	movlw	high _atCommand
  4829  00047E  6E0E               	movwf	(strstr@h+1)^0,c
  4830  000480  0ECB               	movlw	low STR_114
  4831  000482  6E0F               	movwf	strstr@n^0,c
  4832  000484  0EFF               	movlw	high STR_114
  4833  000486  6E10               	movwf	(strstr@n+1)^0,c
  4834  000488  EC5F  F02D         	call	_strstr	;wreg free
  4835  00048C  500D               	movf	?_strstr^0,w,c
  4836  00048E  100E               	iorwf	(?_strstr+1)^0,w,c
  4837  000490  B4D8               	btfsc	status,2,c
  4838  000492  D003               	goto	l16312
  4839                           
  4840                           ;../app/app_src/application.c: 976:           cmdRecv();
  4841  000494  ECD8  F02F         	call	_cmdRecv	;wreg free
  4842                           
  4843                           ;../app/app_src/application.c: 977:          }
  4844  000498  0012               	return	
  4845  00049A                     l16312:
  4846  00049A  0E5B               	movlw	low _atCommand
  4847  00049C  6E0D               	movwf	strstr@h^0,c
  4848  00049E  0E01               	movlw	high _atCommand
  4849  0004A0  6E0E               	movwf	(strstr@h+1)^0,c
  4850  0004A2  0E84               	movlw	low STR_116
  4851  0004A4  6E0F               	movwf	strstr@n^0,c
  4852  0004A6  0EFF               	movlw	high STR_116
  4853  0004A8  6E10               	movwf	(strstr@n+1)^0,c
  4854  0004AA  EC5F  F02D         	call	_strstr	;wreg free
  4855  0004AE  500D               	movf	?_strstr^0,w,c
  4856  0004B0  100E               	iorwf	(?_strstr+1)^0,w,c
  4857  0004B2  B4D8               	btfsc	status,2,c
  4858  0004B4  D003               	goto	l16316
  4859                           
  4860                           ;../app/app_src/application.c: 979:           cmdGetRFCH();
  4861  0004B6  EC6D  F045         	call	_cmdGetRFCH	;wreg free
  4862                           
  4863                           ;../app/app_src/application.c: 980:          }
  4864  0004BA  0012               	return	
  4865  0004BC                     l16316:
  4866  0004BC  0E5B               	movlw	low _atCommand
  4867  0004BE  6E0D               	movwf	strstr@h^0,c
  4868  0004C0  0E01               	movlw	high _atCommand
  4869  0004C2  6E0E               	movwf	(strstr@h+1)^0,c
  4870  0004C4  0E68               	movlw	low STR_118
  4871  0004C6  6E0F               	movwf	strstr@n^0,c
  4872  0004C8  0EFF               	movlw	high STR_118
  4873  0004CA  6E10               	movwf	(strstr@n+1)^0,c
  4874  0004CC  EC5F  F02D         	call	_strstr	;wreg free
  4875  0004D0  500D               	movf	?_strstr^0,w,c
  4876  0004D2  100E               	iorwf	(?_strstr+1)^0,w,c
  4877  0004D4  B4D8               	btfsc	status,2,c
  4878  0004D6  D007               	goto	l16320
  4879                           
  4880                           ;../app/app_src/application.c: 982:           cmdSetRFCH(atCommand);
  4881  0004D8  0E5B               	movlw	low _atCommand
  4882  0004DA  6E58               	movwf	cmdSetRFCH@cmd^0,c
  4883  0004DC  0E01               	movlw	high _atCommand
  4884  0004DE  6E59               	movwf	(cmdSetRFCH@cmd+1)^0,c
  4885  0004E0  EC34  F035         	call	_cmdSetRFCH	;wreg free
  4886                           
  4887                           ;../app/app_src/application.c: 983:          }
  4888  0004E4  0012               	return	
  4889  0004E6                     l16320:
  4890  0004E6  0E5B               	movlw	low _atCommand
  4891  0004E8  6E0D               	movwf	strstr@h^0,c
  4892  0004EA  0E01               	movlw	high _atCommand
  4893  0004EC  6E0E               	movwf	(strstr@h+1)^0,c
  4894  0004EE  0EEF               	movlw	low STR_120
  4895  0004F0  6E0F               	movwf	strstr@n^0,c
  4896  0004F2  0EFF               	movlw	high STR_120
  4897  0004F4  6E10               	movwf	(strstr@n+1)^0,c
  4898  0004F6  EC5F  F02D         	call	_strstr	;wreg free
  4899  0004FA  500D               	movf	?_strstr^0,w,c
  4900  0004FC  100E               	iorwf	(?_strstr+1)^0,w,c
  4901  0004FE  B4D8               	btfsc	status,2,c
  4902  000500  D003               	goto	l16324
  4903                           
  4904                           ;../app/app_src/application.c: 985:           cmdReset();
  4905  000502  ECFF  F046         	call	_cmdReset	;wreg free
  4906                           
  4907                           ;../app/app_src/application.c: 986:          }
  4908  000506  0012               	return	
  4909  000508                     l16324:
  4910  000508  0E5B               	movlw	low _atCommand
  4911  00050A  6E0D               	movwf	strstr@h^0,c
  4912  00050C  0E01               	movlw	high _atCommand
  4913  00050E  6E0E               	movwf	(strstr@h+1)^0,c
  4914  000510  0E99               	movlw	low STR_122
  4915  000512  6E0F               	movwf	strstr@n^0,c
  4916  000514  0EFF               	movlw	high STR_122
  4917  000516  6E10               	movwf	(strstr@n+1)^0,c
  4918  000518  EC5F  F02D         	call	_strstr	;wreg free
  4919  00051C  500D               	movf	?_strstr^0,w,c
  4920  00051E  100E               	iorwf	(?_strstr+1)^0,w,c
  4921  000520  B4D8               	btfsc	status,2,c
  4922  000522  D049               	goto	l16344
  4923                           
  4924                           ;../app/app_src/application.c: 988:           cmdGetRxCnt(atCommand);
  4925  000524  0E5B               	movlw	low _atCommand
  4926  000526  6E58               	movwf	cmdGetRxCnt@atCommand^0,c
  4927  000528  0E01               	movlw	high _atCommand
  4928  00052A  6E59               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4929  00052C  EC2A  F03F         	call	_cmdGetRxCnt	;wreg free
  4930                           
  4931                           ;../app/app_src/application.c: 989:          }
  4932  000530  0012               	return	
  4933  000532                     l16328:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;../app/app_src/application.c: 995:          if(strstr(atCommand,"+TTL?")){
  4937  000532  0E5B               	movlw	low _atCommand
  4938  000534  6E0D               	movwf	strstr@h^0,c
  4939  000536  0E01               	movlw	high _atCommand
  4940  000538  6E0E               	movwf	(strstr@h+1)^0,c
  4941  00053A  0EB9               	movlw	low STR_124
  4942  00053C  6E0F               	movwf	strstr@n^0,c
  4943  00053E  0EFF               	movlw	high STR_124
  4944  000540  6E10               	movwf	(strstr@n+1)^0,c
  4945  000542  EC5F  F02D         	call	_strstr	;wreg free
  4946  000546  500D               	movf	?_strstr^0,w,c
  4947  000548  100E               	iorwf	(?_strstr+1)^0,w,c
  4948  00054A  A4D8               	btfss	status,2,c
  4949  00054C  D6F9               	goto	u16480
  4950  00054E  0E5B               	movlw	low _atCommand
  4951  000550  6E0D               	movwf	strstr@h^0,c
  4952  000552  0E01               	movlw	high _atCommand
  4953  000554  6E0E               	movwf	(strstr@h+1)^0,c
  4954  000556  0EAD               	movlw	low STR_126
  4955  000558  6E0F               	movwf	strstr@n^0,c
  4956  00055A  0EFF               	movlw	high STR_126
  4957  00055C  6E10               	movwf	(strstr@n+1)^0,c
  4958  00055E  EC5F  F02D         	call	_strstr	;wreg free
  4959  000562  500D               	movf	?_strstr^0,w,c
  4960  000564  100E               	iorwf	(?_strstr+1)^0,w,c
  4961  000566  A4D8               	btfss	status,2,c
  4962  000568  D6FC               	goto	u16490
  4963  00056A  0E5B               	movlw	low _atCommand
  4964  00056C  6E0D               	movwf	strstr@h^0,c
  4965  00056E  0E01               	movlw	high _atCommand
  4966  000570  6E0E               	movwf	(strstr@h+1)^0,c
  4967  000572  0EFA               	movlw	low STR_128
  4968  000574  6E0F               	movwf	strstr@n^0,c
  4969  000576  0EFE               	movlw	high STR_128
  4970  000578  6E10               	movwf	(strstr@n+1)^0,c
  4971  00057A  EC5F  F02D         	call	_strstr	;wreg free
  4972  00057E  500D               	movf	?_strstr^0,w,c
  4973  000580  100E               	iorwf	(?_strstr+1)^0,w,c
  4974  000582  B4D8               	btfsc	status,2,c
  4975  000584  D003               	goto	l16340
  4976                           
  4977                           ;../app/app_src/application.c: 1002:           cmdGetTX();
  4978  000586  ECE2  F045         	call	_cmdGetTX	;wreg free
  4979                           
  4980                           ;../app/app_src/application.c: 1003:          }
  4981  00058A  0012               	return	
  4982  00058C                     l16340:
  4983  00058C  0E5B               	movlw	low _atCommand
  4984  00058E  6E0D               	movwf	strstr@h^0,c
  4985  000590  0E01               	movlw	high _atCommand
  4986  000592  6E0E               	movwf	(strstr@h+1)^0,c
  4987  000594  0EE6               	movlw	low STR_130
  4988  000596  6E0F               	movwf	strstr@n^0,c
  4989  000598  0EFE               	movlw	high STR_130
  4990  00059A  6E10               	movwf	(strstr@n+1)^0,c
  4991  00059C  EC5F  F02D         	call	_strstr	;wreg free
  4992  0005A0  500D               	movf	?_strstr^0,w,c
  4993  0005A2  100E               	iorwf	(?_strstr+1)^0,w,c
  4994  0005A4  B4D8               	btfsc	status,2,c
  4995  0005A6  D007               	goto	l16344
  4996                           
  4997                           ;../app/app_src/application.c: 1005:           cmdSetTX(atCommand);
  4998  0005A8  0E5B               	movlw	low _atCommand
  4999  0005AA  6E58               	movwf	cmdSetTX@cmd^0,c
  5000  0005AC  0E01               	movlw	high _atCommand
  5001  0005AE  6E59               	movwf	(cmdSetTX@cmd+1)^0,c
  5002  0005B0  ECA2  F02B         	call	_cmdSetTX	;wreg free
  5003                           
  5004                           ;../app/app_src/application.c: 1006:          }
  5005  0005B4  0012               	return	
  5006  0005B6                     l16344:
  5007                           
  5008                           ;../app/app_src/application.c: 1015:             printf("NOT OK:%u\r\n", (uint16_t)UNDEF
      +                          CMD);
  5009  0005B6  0EC5               	movlw	low STR_3
  5010  0005B8  0100               	movlb	0	; () banked
  5011  0005BA  6F75               	movwf	printf@fmt& (0+255),b
  5012  0005BC  0EFE               	movlw	high STR_3
  5013  0005BE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5014  0005C0  0E00               	movlw	0
  5015  0005C2  6F78               	movwf	(?_printf+3)& (0+255),b
  5016  0005C4  0E09               	movlw	9
  5017  0005C6  6F77               	movwf	(?_printf+2)& (0+255),b
  5018  0005C8  EC77  F044         	call	_printf	;wreg free
  5019                           
  5020                           ;../app/app_src/application.c: 1016:             break;
  5021  0005CC  0012               	return	
  5022  0005CE                     l16348:
  5023                           
  5024                           ; BSR set to: 0
  5025  0005CE  EE20 F001          	lfsr	2,1
  5026  0005D2  51A9               	movf	executeATCommand@cmd& (0+255),w,b
  5027  0005D4  26D9               	addwf	fsr2l,f,c
  5028  0005D6  51AA               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  5029  0005D8  22DA               	addwfc	fsr2h,f,c
  5030  0005DA  50DF               	movf	indf2,w,c
  5031  0005DC  6FAB               	movwf	??_executeATCommand& (0+255),b
  5032  0005DE  6BAC               	clrf	(??_executeATCommand+1)& (0+255),b
  5033                           
  5034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5035                           ; Switch size 1, requested type "simple"
  5036                           ; Number of cases is 1, Range of values is 0 to 0
  5037                           ; switch strategies available:
  5038                           ; Name         Instructions Cycles
  5039                           ; simple_byte            4     3 (average)
  5040                           ;	Chosen strategy is simple_byte
  5041  0005E0  51AC               	movf	(??_executeATCommand+1)& (0+255),w,b
  5042  0005E2  0A00               	xorlw	0	; case 0
  5043  0005E4  A4D8               	btfss	status,2,c
  5044  0005E6  D7E7               	goto	l16344
  5045                           
  5046                           ; BSR set to: 0
  5047                           ; Switch size 1, requested type "simple"
  5048                           ; Number of cases is 11, Range of values is 65 to 84
  5049                           ; switch strategies available:
  5050                           ; Name         Instructions Cycles
  5051                           ; simple_byte           34    18 (average)
  5052                           ;	Chosen strategy is simple_byte
  5053  0005E8  51AB               	movf	??_executeATCommand& (0+255),w,b
  5054  0005EA  0A41               	xorlw	65	; case 65
  5055  0005EC  B4D8               	btfsc	status,2,c
  5056  0005EE  D617               	goto	l16244
  5057  0005F0  0A03               	xorlw	3	; case 66
  5058  0005F2  B4D8               	btfsc	status,2,c
  5059  0005F4  D5D7               	goto	l16232
  5060  0005F6  0A01               	xorlw	1	; case 67
  5061  0005F8  B4D8               	btfsc	status,2,c
  5062  0005FA  D64C               	goto	l16256
  5063  0005FC  0A0B               	xorlw	11	; case 72
  5064  0005FE  B4D8               	btfsc	status,2,c
  5065  000600  D691               	goto	l16272
  5066  000602  0A01               	xorlw	1	; case 73
  5067  000604  B4D8               	btfsc	status,2,c
  5068  000606  D6C9               	goto	l16284
  5069  000608  0A04               	xorlw	4	; case 77
  5070  00060A  B4D8               	btfsc	status,2,c
  5071  00060C  D6D9               	goto	l16288
  5072  00060E  0A03               	xorlw	3	; case 78
  5073  000610  B4D8               	btfsc	status,2,c
  5074  000612  D6F8               	goto	l16296
  5075  000614  0A1E               	xorlw	30	; case 80
  5076  000616  B4D8               	btfsc	status,2,c
  5077  000618  D71B               	goto	l16304
  5078  00061A  0A02               	xorlw	2	; case 82
  5079  00061C  B4D8               	btfsc	status,2,c
  5080  00061E  D72C               	goto	l16308
  5081  000620  0A01               	xorlw	1	; case 83
  5082  000622  B4D8               	btfsc	status,2,c
  5083  000624  D547               	goto	l16208
  5084  000626  0A07               	xorlw	7	; case 84
  5085  000628  B4D8               	btfsc	status,2,c
  5086  00062A  D783               	goto	l16328
  5087  00062C  D7C4               	goto	l16344
  5088  00062E                     __end_of_executeATCommand:
  5089                           	opt callstack 0
  5090                           
  5091 ;; *************** function _set_hop_table_ttl *****************
  5092 ;; Defined at:
  5093 ;;		line 828 in file "../app/app_src/application.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5096 ;;		 -> atCommand(80), 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 3F/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:   16
  5115 ;; This function calls:
  5116 ;;		_printf
  5117 ;; This function is called by:
  5118 ;;		_executeATCommand
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text8
  5123  008CA2                     __ptext8:
  5124                           	opt callstack 0
  5125  008CA2                     _set_hop_table_ttl:
  5126                           	opt callstack 12
  5127                           
  5128                           ;../app/app_src/application.c: 841:     printf("OK\r\n");
  5129                           
  5130                           ;incstack = 0
  5131  008CA2  0ED6               	movlw	low STR_12
  5132  008CA4  0100               	movlb	0	; () banked
  5133  008CA6  6F75               	movwf	printf@fmt& (0+255),b
  5134  008CA8  0EFF               	movlw	high STR_12
  5135  008CAA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5136  008CAC  EC77  F044         	call	_printf	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139  008CB0  0012               	return		;funcret
  5140  008CB2                     __end_of_set_hop_table_ttl:
  5141                           	opt callstack 0
  5142                           
  5143 ;; *************** function _print_hop_table *****************
  5144 ;; Defined at:
  5145 ;;		line 814 in file "../app/app_src/application.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5148 ;;		 -> atCommand(80), 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  i               1   91[COMRAM] unsigned char 
  5151 ;;  entry           2   89[COMRAM] PTR struct NWK_RouteTabl
  5152 ;;		 -> nwkRouteTable(70), 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 3F/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         5      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:       15 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:   16
  5169 ;; This function calls:
  5170 ;;		_NWK_RouteTable
  5171 ;;		_printf
  5172 ;; This function is called by:
  5173 ;;		_executeATCommand
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text9
  5178  005662                     __ptext9:
  5179                           	opt callstack 0
  5180  005662                     _print_hop_table:
  5181                           	opt callstack 12
  5182                           
  5183                           ;../app/app_src/application.c: 815:     NWK_RouteTableEntry_t *entry = NWK_RouteTable();
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;incstack = 0
  5187  005662  ECDE  F046         	call	_NWK_RouteTable	;wreg free
  5188  005666  0060  F008  F05A   	movff	?_NWK_RouteTable,print_hop_table@entry
  5189  00566C  0060  F00C  F05B   	movff	?_NWK_RouteTable+1,print_hop_table@entry+1
  5190                           
  5191                           ;../app/app_src/application.c: 816:     for(uint8_t i = 0; i < 10; i++){
  5192  005672  0E00               	movlw	0
  5193  005674  6E5C               	movwf	print_hop_table@i^0,c
  5194  005676                     l16022:
  5195                           
  5196                           ;../app/app_src/application.c: 817:         printf("DST:%04X NXT:%04X SCO:%u LQI:%u\r\n"
      +                          , (entry+i)->dstAddr,
  5197  005676  0EB9               	movlw	low STR_62
  5198  005678  0100               	movlb	0	; () banked
  5199  00567A  6F75               	movwf	printf@fmt& (0+255),b
  5200  00567C  0EFD               	movlw	high STR_62
  5201  00567E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5202  005680  505C               	movf	print_hop_table@i^0,w,c
  5203  005682  0D07               	mullw	7
  5204  005684  0060  F168  F07F   	movff	print_hop_table@entry,??_print_hop_table
  5205  00568A  0060  F16C  F080   	movff	print_hop_table@entry+1,??_print_hop_table+1
  5206  005690  50F3               	movf	243,w,c
  5207  005692  277F               	addwf	??_print_hop_table& (0+255),f,b
  5208  005694  50F4               	movf	244,w,c
  5209  005696  2380               	addwfc	(??_print_hop_table+1)& (0+255),f,b
  5210  005698  0E01               	movlw	1
  5211  00569A  257F               	addwf	??_print_hop_table& (0+255),w,b
  5212  00569C  6ED9               	movwf	fsr2l,c
  5213  00569E  0E00               	movlw	0
  5214  0056A0  2180               	addwfc	(??_print_hop_table+1)& (0+255),w,b
  5215  0056A2  6EDA               	movwf	fsr2h,c
  5216  0056A4  006F FF78  F077    	movff	postinc2,?_printf+2
  5217  0056AA  006F FF74  F078    	movff	postdec2,?_printf+3
  5218  0056B0  505C               	movf	print_hop_table@i^0,w,c
  5219  0056B2  0D07               	mullw	7
  5220  0056B4  0060  F168  F081   	movff	print_hop_table@entry,??_print_hop_table+2
  5221  0056BA  0060  F16C  F082   	movff	print_hop_table@entry+1,??_print_hop_table+3
  5222  0056C0  50F3               	movf	243,w,c
  5223  0056C2  2781               	addwf	(??_print_hop_table+2)& (0+255),f,b
  5224  0056C4  50F4               	movf	244,w,c
  5225  0056C6  2382               	addwfc	(??_print_hop_table+3)& (0+255),f,b
  5226  0056C8  0E03               	movlw	3
  5227  0056CA  2581               	addwf	(??_print_hop_table+2)& (0+255),w,b
  5228  0056CC  6ED9               	movwf	fsr2l,c
  5229  0056CE  0E00               	movlw	0
  5230  0056D0  2182               	addwfc	(??_print_hop_table+3)& (0+255),w,b
  5231  0056D2  6EDA               	movwf	fsr2h,c
  5232  0056D4  006F FF78  F079    	movff	postinc2,?_printf+4
  5233  0056DA  006F FF74  F07A    	movff	postdec2,?_printf+5
  5234  0056E0  505C               	movf	print_hop_table@i^0,w,c
  5235  0056E2  0D07               	mullw	7
  5236  0056E4  006F FFCC  F083    	movff	prodl,??_print_hop_table+4
  5237  0056EA  006F FFD0  F084    	movff	prodh,??_print_hop_table+5
  5238  0056F0  5183               	movf	(??_print_hop_table+4)& (0+255),w,b
  5239  0056F2  245A               	addwf	print_hop_table@entry^0,w,c
  5240  0056F4  6ED9               	movwf	fsr2l,c
  5241  0056F6  5184               	movf	(??_print_hop_table+5)& (0+255),w,b
  5242  0056F8  205B               	addwfc	(print_hop_table@entry+1)^0,w,c
  5243  0056FA  6EDA               	movwf	fsr2h,c
  5244  0056FC  38DF               	swapf	indf2,w,c
  5245  0056FE  0B0F               	andlw	15
  5246  005700  6F85               	movwf	(??_print_hop_table+6)& (0+255),b
  5247  005702  5185               	movf	(??_print_hop_table+6)& (0+255),w,b
  5248  005704  6F7B               	movwf	(?_printf+6)& (0+255),b
  5249  005706  6B7C               	clrf	(?_printf+7)& (0+255),b
  5250  005708  505C               	movf	print_hop_table@i^0,w,c
  5251  00570A  0D07               	mullw	7
  5252  00570C  0060  F168  F086   	movff	print_hop_table@entry,??_print_hop_table+7
  5253  005712  0060  F16C  F087   	movff	print_hop_table@entry+1,??_print_hop_table+8
  5254  005718  50F3               	movf	243,w,c
  5255  00571A  2786               	addwf	(??_print_hop_table+7)& (0+255),f,b
  5256  00571C  50F4               	movf	244,w,c
  5257  00571E  2387               	addwfc	(??_print_hop_table+8)& (0+255),f,b
  5258  005720  0E06               	movlw	6
  5259  005722  2586               	addwf	(??_print_hop_table+7)& (0+255),w,b
  5260  005724  6ED9               	movwf	fsr2l,c
  5261  005726  0E00               	movlw	0
  5262  005728  2187               	addwfc	(??_print_hop_table+8)& (0+255),w,b
  5263  00572A  6EDA               	movwf	fsr2h,c
  5264  00572C  50DF               	movf	indf2,w,c
  5265  00572E  6F88               	movwf	(??_print_hop_table+9)& (0+255),b
  5266  005730  5188               	movf	(??_print_hop_table+9)& (0+255),w,b
  5267  005732  6F7D               	movwf	(?_printf+8)& (0+255),b
  5268  005734  6B7E               	clrf	(?_printf+9)& (0+255),b
  5269  005736  EC77  F044         	call	_printf	;wreg free
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;../app/app_src/application.c: 819:     }
  5273  00573A  2A5C               	incf	print_hop_table@i^0,f,c
  5274                           
  5275                           ; BSR set to: 0
  5276  00573C  0E09               	movlw	9
  5277  00573E  645C               	cpfsgt	print_hop_table@i^0,c
  5278  005740  D79A               	goto	l16022
  5279  005742  0012               	return	
  5280  005744                     __end_of_print_hop_table:
  5281                           	opt callstack 0
  5282                           
  5283 ;; *************** function _NWK_RouteTable *****************
  5284 ;; Defined at:
  5285 ;;		line 157 in file "../nwk/nwk_src/nwkRoute.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;Total ram usage:        2 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    7
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_print_hop_table
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text10
  5314  008DBC                     __ptext10:
  5315                           	opt callstack 0
  5316  008DBC                     _NWK_RouteTable:
  5317                           	opt callstack 20
  5318                           
  5319                           ;../nwk/nwk_src/nwkRoute.c: 159:   return nwkRouteTable;
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;incstack = 0
  5323  008DBC  0E34               	movlw	low _nwkRouteTable
  5324  008DBE  6E02               	movwf	?_NWK_RouteTable^0,c
  5325  008DC0  0E02               	movlw	high _nwkRouteTable
  5326  008DC2  6E03               	movwf	(?_NWK_RouteTable+1)^0,c
  5327  008DC4  0012               	return		;funcret
  5328  008DC6                     __end_of_NWK_RouteTable:
  5329                           	opt callstack 0
  5330                           
  5331 ;; *************** function _cmdSetTX *****************
  5332 ;; Defined at:
  5333 ;;		line 632 in file "../app/app_src/application.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5336 ;;		 -> atCommand(80), 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  CHstr           3   36[BANK0 ] unsigned char [3]
  5339 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  5340 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  5341 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  5342 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  5343 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5344 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5345 ;;  temp            1   35[BANK0 ] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 3F/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;Total ram usage:       10 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:   16
  5362 ;; This function calls:
  5363 ;;		_DATAEE_WriteByte_Platform
  5364 ;;		_initRadio
  5365 ;;		_memcpy
  5366 ;;		_memset
  5367 ;;		_printf
  5368 ;;		_strstr
  5369 ;;		_strtoul
  5370 ;; This function is called by:
  5371 ;;		_executeATCommand
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text11
  5376  005744                     __ptext11:
  5377                           	opt callstack 0
  5378  005744                     _cmdSetTX:
  5379                           	opt callstack 12
  5380                           
  5381                           ;../app/app_src/application.c: 633:  char *p1,*p2;;../app/app_src/application.c: 634:  c
      +                          har CHstr[3];;../app/app_src/application.c: 635:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 636:  p1 = strstr(atCommand,"=") + 1;
  5382                           
  5383                           ;incstack = 0
  5384  005744  0E5B               	movlw	low _atCommand
  5385  005746  6E0D               	movwf	strstr@h^0,c
  5386  005748  0E01               	movlw	high _atCommand
  5387  00574A  6E0E               	movwf	(strstr@h+1)^0,c
  5388  00574C  0EDE               	movlw	low (STR_19+3)
  5389  00574E  6E0F               	movwf	strstr@n^0,c
  5390  005750  0EFF               	movlw	high (STR_19+3)
  5391  005752  6E10               	movwf	(strstr@n+1)^0,c
  5392  005754  EC5F  F02D         	call	_strstr	;wreg free
  5393  005758  0E01               	movlw	1
  5394  00575A  240D               	addwf	?_strstr^0,w,c
  5395  00575C  0100               	movlb	0	; () banked
  5396  00575E  6F81               	movwf	cmdSetTX@p1& (0+255),b
  5397  005760  0E00               	movlw	0
  5398  005762  200E               	addwfc	(?_strstr+1)^0,w,c
  5399  005764  6F82               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;../app/app_src/application.c: 637:     if(!p1){
  5403  005766  5181               	movf	cmdSetTX@p1& (0+255),w,b
  5404  005768  1182               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5405  00576A  A4D8               	btfss	status,2,c
  5406  00576C  D00A               	goto	l15910
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;../app/app_src/application.c: 638:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5410  00576E  0EC5               	movlw	low STR_3
  5411  005770  6F75               	movwf	printf@fmt& (0+255),b
  5412  005772  0EFE               	movlw	high STR_3
  5413  005774  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5414  005776  0E00               	movlw	0
  5415  005778  6F78               	movwf	(?_printf+3)& (0+255),b
  5416  00577A  0E0B               	movlw	11
  5417  00577C  6F77               	movwf	(?_printf+2)& (0+255),b
  5418  00577E  EC77  F044         	call	_printf	;wreg free
  5419  005782                     l15910:
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;../app/app_src/application.c: 640:     memset(CHstr, 0 , sizeof(CHstr));
  5423  005782  0E84               	movlw	low cmdSetTX@CHstr
  5424  005784  6E02               	movwf	memset@dest^0,c
  5425  005786  6A03               	clrf	(memset@dest+1)^0,c
  5426  005788  0E00               	movlw	0
  5427  00578A  6E05               	movwf	(memset@c+1)^0,c
  5428  00578C  0E00               	movlw	0
  5429  00578E  6E04               	movwf	memset@c^0,c
  5430  005790  0E00               	movlw	0
  5431  005792  6E07               	movwf	(memset@n+1)^0,c
  5432  005794  0E03               	movlw	3
  5433  005796  6E06               	movwf	memset@n^0,c
  5434  005798  ECFB  F021         	call	_memset	;wreg free
  5435                           
  5436                           ;../app/app_src/application.c: 641:  memcpy(CHstr,p1,2);
  5437  00579C  0E84               	movlw	low cmdSetTX@CHstr
  5438  00579E  6E08               	movwf	memcpy@d1^0,c
  5439  0057A0  6A09               	clrf	(memcpy@d1+1)^0,c
  5440  0057A2  0060  F204  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5441  0057A8  0060  F208  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5442  0057AE  0E00               	movlw	0
  5443  0057B0  6E0D               	movwf	(memcpy@n+1)^0,c
  5444  0057B2  0E02               	movlw	2
  5445  0057B4  6E0C               	movwf	memcpy@n^0,c
  5446  0057B6  ECE5  F039         	call	_memcpy	;wreg free
  5447                           
  5448                           ;../app/app_src/application.c: 642:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5449  0057BA  0E84               	movlw	low cmdSetTX@CHstr
  5450  0057BC  6E34               	movwf	strtoul@s^0,c
  5451  0057BE  6A35               	clrf	(strtoul@s+1)^0,c
  5452  0057C0  0E7F               	movlw	low cmdSetTX@p2
  5453  0057C2  6E36               	movwf	strtoul@endptr^0,c
  5454  0057C4  6A37               	clrf	(strtoul@endptr+1)^0,c
  5455  0057C6  0E00               	movlw	0
  5456  0057C8  6E39               	movwf	(strtoul@base+1)^0,c
  5457  0057CA  0E0A               	movlw	10
  5458  0057CC  6E38               	movwf	strtoul@base^0,c
  5459  0057CE  EC74  F03F         	call	_strtoul	;wreg free
  5460  0057D2  5034               	movf	?_strtoul^0,w,c
  5461  0057D4  0100               	movlb	0	; () banked
  5462  0057D6  6F83               	movwf	cmdSetTX@temp& (0+255),b
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;../app/app_src/application.c: 643:  if((temp > 13) || (temp < 2)){
  5466  0057D8  0E0E               	movlw	14
  5467  0057DA  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5468  0057DC  D003               	goto	u16020
  5469                           
  5470                           ; BSR set to: 0
  5471  0057DE  0E02               	movlw	2
  5472  0057E0  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5473  0057E2  D00B               	goto	l359
  5474  0057E4                     u16020:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;../app/app_src/application.c: 644:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5478  0057E4  0EC5               	movlw	low STR_3
  5479  0057E6  6F75               	movwf	printf@fmt& (0+255),b
  5480  0057E8  0EFE               	movlw	high STR_3
  5481  0057EA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5482  0057EC  0E00               	movlw	0
  5483  0057EE  6F78               	movwf	(?_printf+3)& (0+255),b
  5484  0057F0  0E0B               	movlw	11
  5485  0057F2  6F77               	movwf	(?_printf+2)& (0+255),b
  5486  0057F4  EC77  F044         	call	_printf	;wreg free
  5487                           
  5488                           ;../app/app_src/application.c: 645:  }
  5489  0057F8  0012               	return	
  5490  0057FA                     l359:
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;../app/app_src/application.c: 647:   TXPower = temp;
  5494  0057FA  0060  F20C  F0CC   	movff	cmdSetTX@temp,_TXPower
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;../app/app_src/application.c: 648:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5498  005800  0E00               	movlw	0
  5499  005802  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5500  005804  0E1D               	movlw	29
  5501  005806  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5502  005808  0060  F330  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5503  00580E  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5504                           
  5505                           ;../app/app_src/application.c: 649:   initRadio();
  5506  005812  ECA0  F020         	call	_initRadio	;wreg free
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;../app/app_src/application.c: 650:   printf("OK\r\n");
  5510  005816  0ED6               	movlw	low STR_12
  5511  005818  6F75               	movwf	printf@fmt& (0+255),b
  5512  00581A  0EFF               	movlw	high STR_12
  5513  00581C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5514  00581E  EC77  F044         	call	_printf	;wreg free
  5515                           
  5516                           ; BSR set to: 0
  5517  005822  0012               	return		;funcret
  5518  005824                     __end_of_cmdSetTX:
  5519                           	opt callstack 0
  5520                           
  5521 ;; *************** function _cmdSetTTL *****************
  5522 ;; Defined at:
  5523 ;;		line 530 in file "../app/app_src/application.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5526 ;;		 -> atCommand(80), 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		None
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;Total ram usage:        2 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    7
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_executeATCommand
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text12
  5553  008E02                     __ptext12:
  5554                           	opt callstack 0
  5555  008E02                     _cmdSetTTL:
  5556                           	opt callstack 21
  5557                           
  5558                           ;../app/app_src/application.c: 537:  return;
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;incstack = 0
  5562  008E02  0012               	return		;funcret
  5563  008E04                     __end_of_cmdSetTTL:
  5564                           	opt callstack 0
  5565                           
  5566 ;; *************** function _cmdSetSink *****************
  5567 ;; Defined at:
  5568 ;;		line 419 in file "../app/app_src/application.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 3F/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:   16
  5589 ;; This function calls:
  5590 ;;		_printf
  5591 ;; This function is called by:
  5592 ;;		_executeATCommand
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text13
  5597  008CB2                     __ptext13:
  5598                           	opt callstack 0
  5599  008CB2                     _cmdSetSink:
  5600                           	opt callstack 12
  5601                           
  5602                           ;../app/app_src/application.c: 433:  printf("OK\r\n");
  5603                           
  5604                           ;incstack = 0
  5605  008CB2  0ED6               	movlw	low STR_12
  5606  008CB4  0100               	movlb	0	; () banked
  5607  008CB6  6F75               	movwf	printf@fmt& (0+255),b
  5608  008CB8  0EFF               	movlw	high STR_12
  5609  008CBA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5610  008CBC  EC77  F044         	call	_printf	;wreg free
  5611                           
  5612                           ; BSR set to: 0
  5613  008CC0  0012               	return		;funcret
  5614  008CC2                     __end_of_cmdSetSink:
  5615                           	opt callstack 0
  5616                           
  5617 ;; *************** function _cmdSetSF *****************
  5618 ;; Defined at:
  5619 ;;		line 773 in file "../app/app_src/application.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5622 ;;		 -> atCommand(80), 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5625 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5626 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  5627 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5628 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5629 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5630 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  5631 ;;  temp            1   38[BANK0 ] char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 3F/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;Total ram usage:       10 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:   16
  5648 ;; This function calls:
  5649 ;;		_DATAEE_WriteByte_Platform
  5650 ;;		_initRadio
  5651 ;;		_memcpy
  5652 ;;		_printf
  5653 ;;		_strstr
  5654 ;;		_strtol
  5655 ;; This function is called by:
  5656 ;;		_executeATCommand
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text14
  5661  006672                     __ptext14:
  5662                           	opt callstack 0
  5663  006672                     _cmdSetSF:
  5664                           	opt callstack 12
  5665                           
  5666                           ;../app/app_src/application.c: 774:  char *p1,*p2;;../app/app_src/application.c: 775:  c
      +                          har CHstr[3];;../app/app_src/application.c: 776:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 777:  p1 = strstr(atCommand,"=") + 1;
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;incstack = 0
  5670  006672  0060  F160  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5671  006678  0060  F164  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5672  00667E  0EDE               	movlw	low (STR_19+3)
  5673  006680  6E0F               	movwf	strstr@n^0,c
  5674  006682  0EFF               	movlw	high (STR_19+3)
  5675  006684  6E10               	movwf	(strstr@n+1)^0,c
  5676  006686  EC5F  F02D         	call	_strstr	;wreg free
  5677  00668A  0E01               	movlw	1
  5678  00668C  240D               	addwf	?_strstr^0,w,c
  5679  00668E  0100               	movlb	0	; () banked
  5680  006690  6F7F               	movwf	cmdSetSF@p1& (0+255),b
  5681  006692  0E00               	movlw	0
  5682  006694  200E               	addwfc	(?_strstr+1)^0,w,c
  5683  006696  6F80               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;../app/app_src/application.c: 778:  memcpy(CHstr,p1,2);
  5687  006698  0E81               	movlw	low cmdSetSF@CHstr
  5688  00669A  6E08               	movwf	memcpy@d1^0,c
  5689  00669C  6A09               	clrf	(memcpy@d1+1)^0,c
  5690  00669E  0060  F1FC  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5691  0066A4  0060  F200  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5692  0066AA  0E00               	movlw	0
  5693  0066AC  6E0D               	movwf	(memcpy@n+1)^0,c
  5694  0066AE  0E02               	movlw	2
  5695  0066B0  6E0C               	movwf	memcpy@n^0,c
  5696  0066B2  ECE5  F039         	call	_memcpy	;wreg free
  5697                           
  5698                           ;../app/app_src/application.c: 779:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5699  0066B6  0E81               	movlw	low cmdSetSF@CHstr
  5700  0066B8  6E34               	movwf	strtol@s^0,c
  5701  0066BA  0E84               	movlw	low cmdSetSF@p2
  5702  0066BC  6E35               	movwf	strtol@endptr^0,c
  5703  0066BE  0E00               	movlw	0
  5704  0066C0  6E37               	movwf	(strtol@base+1)^0,c
  5705  0066C2  0E10               	movlw	16
  5706  0066C4  6E36               	movwf	strtol@base^0,c
  5707  0066C6  ECC2  F040         	call	_strtol	;wreg free
  5708  0066CA  5034               	movf	?_strtol^0,w,c
  5709  0066CC  0100               	movlb	0	; () banked
  5710  0066CE  6F86               	movwf	cmdSetSF@temp& (0+255),b
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;../app/app_src/application.c: 780:  if((temp > 12) || (temp < 7)){
  5714  0066D0  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5715  0066D2  0A80               	xorlw	128
  5716  0066D4  0F73               	addlw	-141
  5717  0066D6  B0D8               	btfsc	status,0,c
  5718  0066D8  D005               	goto	u16090
  5719                           
  5720                           ; BSR set to: 0
  5721  0066DA  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5722  0066DC  0A80               	xorlw	128
  5723  0066DE  0F79               	addlw	-135
  5724  0066E0  B0D8               	btfsc	status,0,c
  5725  0066E2  D009               	goto	l400
  5726  0066E4                     u16090:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;../app/app_src/application.c: 781:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5730  0066E4  0EC5               	movlw	low STR_3
  5731  0066E6  6F75               	movwf	printf@fmt& (0+255),b
  5732  0066E8  0EFE               	movlw	high STR_3
  5733  0066EA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5734  0066EC  0E0D               	movlw	13
  5735  0066EE  6F77               	movwf	(?_printf+2)& (0+255),b
  5736  0066F0  EC77  F044         	call	_printf	;wreg free
  5737                           
  5738                           ;../app/app_src/application.c: 782:  }
  5739  0066F4  0012               	return	
  5740  0066F6                     l400:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;../app/app_src/application.c: 784:   current_sf = temp;
  5744  0066F6  0060  F218  F0CF   	movff	cmdSetSF@temp,_current_sf
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;../app/app_src/application.c: 785:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5748  0066FC  0E00               	movlw	0
  5749  0066FE  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5750  006700  0E21               	movlw	33
  5751  006702  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5752  006704  0060  F218  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5753  00670A  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5754                           
  5755                           ;../app/app_src/application.c: 786:   initRadio();
  5756  00670E  ECA0  F020         	call	_initRadio	;wreg free
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;../app/app_src/application.c: 787:   printf("OK\r\n");
  5760  006712  0ED6               	movlw	low STR_12
  5761  006714  6F75               	movwf	printf@fmt& (0+255),b
  5762  006716  0EFF               	movlw	high STR_12
  5763  006718  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5764  00671A  EC77  F044         	call	_printf	;wreg free
  5765                           
  5766                           ; BSR set to: 0
  5767  00671E  0012               	return		;funcret
  5768  006720                     __end_of_cmdSetSF:
  5769                           	opt callstack 0
  5770                           
  5771 ;; *************** function _cmdSetRFCH *****************
  5772 ;; Defined at:
  5773 ;;		line 596 in file "../app/app_src/application.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5776 ;;		 -> atCommand(80), 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5779 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5780 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  5781 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5782 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5783 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5784 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  5785 ;;  temp            1   38[BANK0 ] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 3F/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;Total ram usage:       10 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:   16
  5802 ;; This function calls:
  5803 ;;		_DATAEE_WriteByte_Platform
  5804 ;;		_initRadio
  5805 ;;		_memcpy
  5806 ;;		_printf
  5807 ;;		_strstr
  5808 ;;		_strtoul
  5809 ;; This function is called by:
  5810 ;;		_executeATCommand
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text15
  5815  006A68                     __ptext15:
  5816                           	opt callstack 0
  5817  006A68                     _cmdSetRFCH:
  5818                           	opt callstack 12
  5819                           
  5820                           ;../app/app_src/application.c: 597:  char *p1,*p2;;../app/app_src/application.c: 598:  c
      +                          har CHstr[3];;../app/app_src/application.c: 599:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 600:  p1 = strstr(atCommand,"=") + 1;
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;incstack = 0
  5824  006A68  0E5B               	movlw	low _atCommand
  5825  006A6A  6E0D               	movwf	strstr@h^0,c
  5826  006A6C  0E01               	movlw	high _atCommand
  5827  006A6E  6E0E               	movwf	(strstr@h+1)^0,c
  5828  006A70  0EDE               	movlw	low (STR_19+3)
  5829  006A72  6E0F               	movwf	strstr@n^0,c
  5830  006A74  0EFF               	movlw	high (STR_19+3)
  5831  006A76  6E10               	movwf	(strstr@n+1)^0,c
  5832  006A78  EC5F  F02D         	call	_strstr	;wreg free
  5833  006A7C  0E01               	movlw	1
  5834  006A7E  240D               	addwf	?_strstr^0,w,c
  5835  006A80  0100               	movlb	0	; () banked
  5836  006A82  6F7F               	movwf	cmdSetRFCH@p1& (0+255),b
  5837  006A84  0E00               	movlw	0
  5838  006A86  200E               	addwfc	(?_strstr+1)^0,w,c
  5839  006A88  6F80               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;../app/app_src/application.c: 601:  memcpy(CHstr,p1,2);
  5843  006A8A  0E81               	movlw	low cmdSetRFCH@CHstr
  5844  006A8C  6E08               	movwf	memcpy@d1^0,c
  5845  006A8E  6A09               	clrf	(memcpy@d1+1)^0,c
  5846  006A90  0060  F1FC  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5847  006A96  0060  F200  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5848  006A9C  0E00               	movlw	0
  5849  006A9E  6E0D               	movwf	(memcpy@n+1)^0,c
  5850  006AA0  0E02               	movlw	2
  5851  006AA2  6E0C               	movwf	memcpy@n^0,c
  5852  006AA4  ECE5  F039         	call	_memcpy	;wreg free
  5853                           
  5854                           ;../app/app_src/application.c: 602:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5855  006AA8  0E81               	movlw	low cmdSetRFCH@CHstr
  5856  006AAA  6E34               	movwf	strtoul@s^0,c
  5857  006AAC  6A35               	clrf	(strtoul@s+1)^0,c
  5858  006AAE  0E84               	movlw	low cmdSetRFCH@p2
  5859  006AB0  6E36               	movwf	strtoul@endptr^0,c
  5860  006AB2  6A37               	clrf	(strtoul@endptr+1)^0,c
  5861  006AB4  0E00               	movlw	0
  5862  006AB6  6E39               	movwf	(strtoul@base+1)^0,c
  5863  006AB8  0E10               	movlw	16
  5864  006ABA  6E38               	movwf	strtoul@base^0,c
  5865  006ABC  EC74  F03F         	call	_strtoul	;wreg free
  5866  006AC0  0434               	decf	?_strtoul^0,w,c
  5867  006AC2  0100               	movlb	0	; () banked
  5868  006AC4  6F86               	movwf	cmdSetRFCH@temp& (0+255),b
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;../app/app_src/application.c: 603:  if(temp > sizeof(fhssList)){
  5872  006AC6  0EFC               	movlw	252
  5873  006AC8  6586               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5874  006ACA  D009               	goto	l350
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;../app/app_src/application.c: 604:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5878  006ACC  0EC5               	movlw	low STR_3
  5879  006ACE  6F75               	movwf	printf@fmt& (0+255),b
  5880  006AD0  0EFE               	movlw	high STR_3
  5881  006AD2  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5882  006AD4  0E0A               	movlw	10
  5883  006AD6  6F77               	movwf	(?_printf+2)& (0+255),b
  5884  006AD8  EC77  F044         	call	_printf	;wreg free
  5885                           
  5886                           ;../app/app_src/application.c: 605:  }
  5887  006ADC  0012               	return	
  5888  006ADE                     l350:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;../app/app_src/application.c: 607:   channel = temp;
  5892  006ADE  0060  F218  F0CE   	movff	cmdSetRFCH@temp,_channel
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;../app/app_src/application.c: 608:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5896  006AE4  0E00               	movlw	0
  5897  006AE6  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5898  006AE8  0E1C               	movlw	28
  5899  006AEA  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5900  006AEC  0060  F338  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5901  006AF2  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5902                           
  5903                           ;../app/app_src/application.c: 609:   initRadio();
  5904  006AF6  ECA0  F020         	call	_initRadio	;wreg free
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;../app/app_src/application.c: 610:         printf("OK\r\n");
  5908  006AFA  0ED6               	movlw	low STR_12
  5909  006AFC  6F75               	movwf	printf@fmt& (0+255),b
  5910  006AFE  0EFF               	movlw	high STR_12
  5911  006B00  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5912  006B02  EC77  F044         	call	_printf	;wreg free
  5913                           
  5914                           ; BSR set to: 0
  5915  006B06  0012               	return		;funcret
  5916  006B08                     __end_of_cmdSetRFCH:
  5917                           	opt callstack 0
  5918                           
  5919 ;; *************** function _cmdSetParity *****************
  5920 ;; Defined at:
  5921 ;;		line 708 in file "../app/app_src/application.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5924 ;;		 -> atCommand(80), 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;Total ram usage:        2 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:   16
  5943 ;; This function calls:
  5944 ;;		_printf
  5945 ;;		_set_parity
  5946 ;;		_strstr
  5947 ;; This function is called by:
  5948 ;;		_executeATCommand
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text16
  5953  006E90                     __ptext16:
  5954                           	opt callstack 0
  5955  006E90                     _cmdSetParity:
  5956                           	opt callstack 12
  5957                           
  5958                           ;../app/app_src/application.c: 709:     if(strstr(atCommand,"=ODD"))
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;incstack = 0
  5962  006E90  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5963  006E96  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5964  006E9C  0EEA               	movlw	low STR_47
  5965  006E9E  6E0F               	movwf	strstr@n^0,c
  5966  006EA0  0EFF               	movlw	high STR_47
  5967  006EA2  6E10               	movwf	(strstr@n+1)^0,c
  5968  006EA4  EC5F  F02D         	call	_strstr	;wreg free
  5969  006EA8  500D               	movf	?_strstr^0,w,c
  5970  006EAA  100E               	iorwf	(?_strstr+1)^0,w,c
  5971  006EAC  B4D8               	btfsc	status,2,c
  5972  006EAE  D004               	goto	l15960
  5973                           
  5974                           ;../app/app_src/application.c: 710:     {;../app/app_src/application.c: 711:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  5975  006EB0  0E02               	movlw	2
  5976  006EB2  EC83  F03C         	call	_set_parity
  5977                           
  5978                           ;../app/app_src/application.c: 712:     }
  5979  006EB6  0012               	return	
  5980  006EB8                     l15960:
  5981  006EB8  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5982  006EBE  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5983  006EC4  0EBF               	movlw	low STR_49
  5984  006EC6  6E0F               	movwf	strstr@n^0,c
  5985  006EC8  0EFF               	movlw	high STR_49
  5986  006ECA  6E10               	movwf	(strstr@n+1)^0,c
  5987  006ECC  EC5F  F02D         	call	_strstr	;wreg free
  5988  006ED0  500D               	movf	?_strstr^0,w,c
  5989  006ED2  100E               	iorwf	(?_strstr+1)^0,w,c
  5990  006ED4  B4D8               	btfsc	status,2,c
  5991  006ED6  D004               	goto	l15964
  5992                           
  5993                           ;../app/app_src/application.c: 714:     {;../app/app_src/application.c: 715:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  5994  006ED8  0E00               	movlw	0
  5995  006EDA  EC83  F03C         	call	_set_parity
  5996                           
  5997                           ;../app/app_src/application.c: 716:     }
  5998  006EDE  0012               	return	
  5999  006EE0                     l15964:
  6000  006EE0  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  6001  006EE6  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  6002  006EEC  0EC5               	movlw	low STR_51
  6003  006EEE  6E0F               	movwf	strstr@n^0,c
  6004  006EF0  0EFF               	movlw	high STR_51
  6005  006EF2  6E10               	movwf	(strstr@n+1)^0,c
  6006  006EF4  EC5F  F02D         	call	_strstr	;wreg free
  6007  006EF8  500D               	movf	?_strstr^0,w,c
  6008  006EFA  100E               	iorwf	(?_strstr+1)^0,w,c
  6009  006EFC  B4D8               	btfsc	status,2,c
  6010  006EFE  D004               	goto	l15968
  6011                           
  6012                           ;../app/app_src/application.c: 718:     {;../app/app_src/application.c: 719:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  6013  006F00  0E03               	movlw	3
  6014  006F02  EC83  F03C         	call	_set_parity
  6015                           
  6016                           ;../app/app_src/application.c: 720:     }
  6017  006F06  0012               	return	
  6018  006F08                     l15968:
  6019                           
  6020                           ;../app/app_src/application.c: 722:     {;../app/app_src/application.c: 723:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  6021  006F08  0EC5               	movlw	low STR_3
  6022  006F0A  0100               	movlb	0	; () banked
  6023  006F0C  6F75               	movwf	printf@fmt& (0+255),b
  6024  006F0E  0EFE               	movlw	high STR_3
  6025  006F10  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6026  006F12  0E0D               	movlw	13
  6027  006F14  6F77               	movwf	(?_printf+2)& (0+255),b
  6028  006F16  EC77  F044         	call	_printf	;wreg free
  6029  006F1A  0012               	return		;funcret
  6030  006F1C                     __end_of_cmdSetParity:
  6031                           	opt callstack 0
  6032                           
  6033 ;; *************** function _cmdSetNaddr *****************
  6034 ;; Defined at:
  6035 ;;		line 357 in file "../app/app_src/application.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6038 ;;		 -> atCommand(80), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6041 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  6042 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6043 ;;  tempaddr        1   35[BANK0 ] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 3F/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;Total ram usage:        7 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:   16
  6060 ;; This function calls:
  6061 ;;		_DATAEE_WriteByte_Platform
  6062 ;;		_initRadio
  6063 ;;		_printf
  6064 ;;		_setSyncWord
  6065 ;;		_strstr
  6066 ;;		_strtoul
  6067 ;; This function is called by:
  6068 ;;		_executeATCommand
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text17
  6073  00734E                     __ptext17:
  6074                           	opt callstack 0
  6075  00734E                     _cmdSetNaddr:
  6076                           	opt callstack 12
  6077                           
  6078                           ;../app/app_src/application.c: 358:  uint8_t tempaddr;;../app/app_src/application.c: 359
      +                          :  char *p1,*p2;;../app/app_src/application.c: 360:  p1 = strstr(atCommand,"=") + 1;
  6079                           
  6080                           ;incstack = 0
  6081  00734E  0E5B               	movlw	low _atCommand
  6082  007350  6E0D               	movwf	strstr@h^0,c
  6083  007352  0E01               	movlw	high _atCommand
  6084  007354  6E0E               	movwf	(strstr@h+1)^0,c
  6085  007356  0EDE               	movlw	low (STR_19+3)
  6086  007358  6E0F               	movwf	strstr@n^0,c
  6087  00735A  0EFF               	movlw	high (STR_19+3)
  6088  00735C  6E10               	movwf	(strstr@n+1)^0,c
  6089  00735E  EC5F  F02D         	call	_strstr	;wreg free
  6090  007362  0E01               	movlw	1
  6091  007364  240D               	addwf	?_strstr^0,w,c
  6092  007366  0100               	movlb	0	; () banked
  6093  007368  6F81               	movwf	cmdSetNaddr@p1& (0+255),b
  6094  00736A  0E00               	movlw	0
  6095  00736C  200E               	addwfc	(?_strstr+1)^0,w,c
  6096  00736E  6F82               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;../app/app_src/application.c: 362:  tempaddr = strtoul(p1,p2,16);
  6100  007370  0060  F204  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6101  007376  0060  F208  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6102  00737C  0060  F1FC  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6103  007382  0060  F200  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6104  007388  0E00               	movlw	0
  6105  00738A  6E39               	movwf	(strtoul@base+1)^0,c
  6106  00738C  0E10               	movlw	16
  6107  00738E  6E38               	movwf	strtoul@base^0,c
  6108  007390  EC74  F03F         	call	_strtoul	;wreg free
  6109  007394  5034               	movf	?_strtoul^0,w,c
  6110  007396  0100               	movlb	0	; () banked
  6111  007398  6F83               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;../app/app_src/application.c: 363:  currentNetID = tempaddr;
  6115  00739A  0060  F20C  F0F8   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;../app/app_src/application.c: 364:  setSyncWord(currentNetID);
  6119  0073A0  51F8               	movf	_currentNetID& (0+255),w,b
  6120  0073A2  EC61  F046         	call	_setSyncWord
  6121                           
  6122                           ;../app/app_src/application.c: 366:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  6123  0073A6  0E00               	movlw	0
  6124  0073A8  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6125  0073AA  0E19               	movlw	25
  6126  0073AC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6127  0073AE  0060  F3E0  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6128  0073B4  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6129                           
  6130                           ;../app/app_src/application.c: 367:     initRadio();
  6131  0073B8  ECA0  F020         	call	_initRadio	;wreg free
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;../app/app_src/application.c: 368:  printf("OK\r\n");
  6135  0073BC  0ED6               	movlw	low STR_12
  6136  0073BE  6F75               	movwf	printf@fmt& (0+255),b
  6137  0073C0  0EFF               	movlw	high STR_12
  6138  0073C2  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6139  0073C4  EC77  F044         	call	_printf	;wreg free
  6140                           
  6141                           ; BSR set to: 0
  6142  0073C8  0012               	return		;funcret
  6143  0073CA                     __end_of_cmdSetNaddr:
  6144                           	opt callstack 0
  6145                           
  6146 ;; *************** function _setSyncWord *****************
  6147 ;; Defined at:
  6148 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  sw              1    wreg     unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  sw              1   16[COMRAM] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 3F/0
  6159 ;;		On exit  : 3F/3D
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;Total ram usage:        1 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:   11
  6169 ;; This function calls:
  6170 ;;		_SX1276Write
  6171 ;; This function is called by:
  6172 ;;		_cmdSetNaddr
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text18
  6177  008CC2                     __ptext18:
  6178                           	opt callstack 0
  6179  008CC2                     _setSyncWord:
  6180                           	opt callstack 16
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;incstack = 0
  6184                           ;setSyncWord@sw stored from wreg
  6185  008CC2  6E11               	movwf	setSyncWord@sw^0,c
  6186                           
  6187                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6188  008CC4  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6189  008CCA  0E39               	movlw	57
  6190  008CCC  EC48  F046         	call	_SX1276Write
  6191                           
  6192                           ; BSR set to: 61
  6193  008CD0  0012               	return		;funcret
  6194  008CD2                     __end_of_setSyncWord:
  6195                           	opt callstack 0
  6196                           
  6197 ;; *************** function _cmdSetCADRSSI *****************
  6198 ;; Defined at:
  6199 ;;		line 672 in file "../app/app_src/application.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  6202 ;;		 -> atCommand(80), 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  6205 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  6206 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  6207 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6208 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6209 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  6210 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  6211 ;;  temp            1   38[BANK0 ] char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 3F/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:       10 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:   16
  6228 ;; This function calls:
  6229 ;;		_DATAEE_WriteByte_Platform
  6230 ;;		_initRadio
  6231 ;;		_memcpy
  6232 ;;		_printf
  6233 ;;		_strstr
  6234 ;;		_strtol
  6235 ;; This function is called by:
  6236 ;;		_executeATCommand
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text19
  6241  006720                     __ptext19:
  6242                           	opt callstack 0
  6243  006720                     _cmdSetCADRSSI:
  6244                           	opt callstack 12
  6245                           
  6246                           ;../app/app_src/application.c: 673:  char *p1,*p2;;../app/app_src/application.c: 674:  c
      +                          har CHstr[3];;../app/app_src/application.c: 675:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 676:  p1 = strstr(atCommand,"=") + 1;
  6247                           
  6248                           ; BSR set to: 61
  6249                           ;incstack = 0
  6250  006720  0060  F160  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6251  006726  0060  F164  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6252  00672C  0EDE               	movlw	low (STR_19+3)
  6253  00672E  6E0F               	movwf	strstr@n^0,c
  6254  006730  0EFF               	movlw	high (STR_19+3)
  6255  006732  6E10               	movwf	(strstr@n+1)^0,c
  6256  006734  EC5F  F02D         	call	_strstr	;wreg free
  6257  006738  0E01               	movlw	1
  6258  00673A  240D               	addwf	?_strstr^0,w,c
  6259  00673C  0100               	movlb	0	; () banked
  6260  00673E  6F7F               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6261  006740  0E00               	movlw	0
  6262  006742  200E               	addwfc	(?_strstr+1)^0,w,c
  6263  006744  6F80               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;../app/app_src/application.c: 677:  memcpy(CHstr,p1,3);
  6267  006746  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6268  006748  6E08               	movwf	memcpy@d1^0,c
  6269  00674A  6A09               	clrf	(memcpy@d1+1)^0,c
  6270  00674C  0060  F1FC  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6271  006752  0060  F200  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6272  006758  0E00               	movlw	0
  6273  00675A  6E0D               	movwf	(memcpy@n+1)^0,c
  6274  00675C  0E03               	movlw	3
  6275  00675E  6E0C               	movwf	memcpy@n^0,c
  6276  006760  ECE5  F039         	call	_memcpy	;wreg free
  6277                           
  6278                           ;../app/app_src/application.c: 678:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6279  006764  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6280  006766  6E34               	movwf	strtol@s^0,c
  6281  006768  0E84               	movlw	low cmdSetCADRSSI@p2
  6282  00676A  6E35               	movwf	strtol@endptr^0,c
  6283  00676C  0E00               	movlw	0
  6284  00676E  6E37               	movwf	(strtol@base+1)^0,c
  6285  006770  0E0A               	movlw	10
  6286  006772  6E36               	movwf	strtol@base^0,c
  6287  006774  ECC2  F040         	call	_strtol	;wreg free
  6288  006778  5034               	movf	?_strtol^0,w,c
  6289  00677A  0100               	movlb	0	; () banked
  6290  00677C  6F86               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;../app/app_src/application.c: 679:  if((temp > 0) || (temp < -120)){
  6294  00677E  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6295  006780  0A80               	xorlw	128
  6296  006782  0F7F               	addlw	-129
  6297  006784  B0D8               	btfsc	status,0,c
  6298  006786  D005               	goto	u16040
  6299                           
  6300                           ; BSR set to: 0
  6301  006788  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6302  00678A  0A80               	xorlw	128
  6303  00678C  0FF8               	addlw	248
  6304  00678E  B0D8               	btfsc	status,0,c
  6305  006790  D009               	goto	l369
  6306  006792                     u16040:
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;../app/app_src/application.c: 680:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6310  006792  0EC5               	movlw	low STR_3
  6311  006794  6F75               	movwf	printf@fmt& (0+255),b
  6312  006796  0EFE               	movlw	high STR_3
  6313  006798  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6314  00679A  0E0B               	movlw	11
  6315  00679C  6F77               	movwf	(?_printf+2)& (0+255),b
  6316  00679E  EC77  F044         	call	_printf	;wreg free
  6317                           
  6318                           ;../app/app_src/application.c: 681:  }
  6319  0067A2  0012               	return	
  6320  0067A4                     l369:
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;../app/app_src/application.c: 683:   RSSITarget = temp;
  6324  0067A4  0060  F218  F0F7   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;../app/app_src/application.c: 684:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6328  0067AA  0E00               	movlw	0
  6329  0067AC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6330  0067AE  0E1E               	movlw	30
  6331  0067B0  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6332  0067B2  0060  F3DC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6333  0067B8  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6334                           
  6335                           ;../app/app_src/application.c: 685:   initRadio();
  6336  0067BC  ECA0  F020         	call	_initRadio	;wreg free
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;../app/app_src/application.c: 686:   printf("OK\r\n");
  6340  0067C0  0ED6               	movlw	low STR_12
  6341  0067C2  6F75               	movwf	printf@fmt& (0+255),b
  6342  0067C4  0EFF               	movlw	high STR_12
  6343  0067C6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6344  0067C8  EC77  F044         	call	_printf	;wreg free
  6345                           
  6346                           ; BSR set to: 0
  6347  0067CC  0012               	return		;funcret
  6348  0067CE                     __end_of_cmdSetCADRSSI:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function _strtol *****************
  6352 ;; Defined at:
  6353 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6356 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6357 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6358 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6359 ;;  base            2   53[COMRAM] int 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  4   51[COMRAM] long 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;Total ram usage:        4 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:   10
  6378 ;; This function calls:
  6379 ;;		___strtoxl
  6380 ;; This function is called by:
  6381 ;;		_cmdSetCADRSSI
  6382 ;;		_cmdSetSF
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text20
  6387  008184                     __ptext20:
  6388                           	opt callstack 0
  6389  008184                     _strtol:
  6390                           	opt callstack 17
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;incstack = 0
  6394  008184  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6395  00818A  6A11               	clrf	(___strtoxl@s+1)^0,c
  6396  00818C  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6397  008192  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6398  008194  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6399  00819A  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6400  0081A0  0E01               	movlw	1
  6401  0081A2  6E16               	movwf	___strtoxl@is_signed^0,c
  6402  0081A4  EC5D  F005         	call	___strtoxl	;wreg free
  6403  0081A8  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6404  0081AE  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6405  0081B4  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6406  0081BA  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6407  0081C0  0012               	return		;funcret
  6408  0081C2                     __end_of_strtol:
  6409                           	opt callstack 0
  6410                           
  6411 ;; *************** function _cmdSetBaud *****************
  6412 ;; Defined at:
  6413 ;;		line 747 in file "../app/app_src/application.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6416 ;;		 -> atCommand(80), 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6419 ;;		 -> atCommand(80), NULL(0), 
  6420 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;Total ram usage:        5 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:   11
  6437 ;; This function calls:
  6438 ;;		_strtok
  6439 ;;		_strtoul
  6440 ;; This function is called by:
  6441 ;;		_executeATCommand
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text21
  6446  0074AA                     __ptext21:
  6447                           	opt callstack 0
  6448  0074AA                     _cmdSetBaud:
  6449                           	opt callstack 17
  6450                           
  6451                           ;../app/app_src/application.c: 747: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 748: {;../app/app_src/application.c: 749:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 750:     char *ptr;;../app/app_src/application.c: 751:     ptr =
      +                           strtok(atCommand,"=");
  6452                           
  6453                           ;incstack = 0
  6454  0074AA  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6455  0074B0  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6456  0074B6  0EDE               	movlw	low (STR_19+3)
  6457  0074B8  6E11               	movwf	strtok@sep^0,c
  6458  0074BA  0EFF               	movlw	high (STR_19+3)
  6459  0074BC  6E12               	movwf	(strtok@sep+1)^0,c
  6460  0074BE  ECF1  F02C         	call	_strtok	;wreg free
  6461  0074C2  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6462  0074C8  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6463                           
  6464                           ;../app/app_src/application.c: 752:     ptr = strtok(((void*)0),"\r");
  6465  0074CE  0E00               	movlw	0
  6466  0074D0  6E0F               	movwf	strtok@s^0,c
  6467  0074D2  0E00               	movlw	0
  6468  0074D4  6E10               	movwf	(strtok@s+1)^0,c
  6469  0074D6  0EFC               	movlw	low STR_56
  6470  0074D8  6E11               	movwf	strtok@sep^0,c
  6471  0074DA  0EFF               	movlw	high STR_56
  6472  0074DC  6E12               	movwf	(strtok@sep+1)^0,c
  6473  0074DE  ECF1  F02C         	call	_strtok	;wreg free
  6474  0074E2  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6475  0074E8  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6476                           
  6477                           ;../app/app_src/application.c: 753:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6478  0074EE  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6479  0074F4  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6480  0074FA  0E00               	movlw	0
  6481  0074FC  6E36               	movwf	strtoul@endptr^0,c
  6482  0074FE  0E00               	movlw	0
  6483  007500  6E37               	movwf	(strtoul@endptr+1)^0,c
  6484  007502  0E00               	movlw	0
  6485  007504  6E39               	movwf	(strtoul@base+1)^0,c
  6486  007506  0E0A               	movlw	10
  6487  007508  6E38               	movwf	strtoul@base^0,c
  6488  00750A  EC74  F03F         	call	_strtoul	;wreg free
  6489  00750E  5034               	movf	?_strtoul^0,w,c
  6490  007510  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6491                           
  6492                           ;../app/app_src/application.c: 754:     tempbaud++;
  6493  007512  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6494  007514  0012               	return		;funcret
  6495  007516                     __end_of_cmdSetBaud:
  6496                           	opt callstack 0
  6497                           
  6498 ;; *************** function _strtok *****************
  6499 ;; Defined at:
  6500 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  s               2   14[COMRAM] PTR unsigned char 
  6503 ;;		 -> atCommand(80), NULL(0), 
  6504 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6505 ;;		 -> STR_56(2), STR_55(2), 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  2   14[COMRAM] PTR unsigned char 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        4 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    9
  6524 ;; This function calls:
  6525 ;;		_strcspn
  6526 ;;		_strspn
  6527 ;; This function is called by:
  6528 ;;		_cmdSetBaud
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text22
  6533  0059E2                     __ptext22:
  6534                           	opt callstack 0
  6535  0059E2                     _strtok:
  6536                           	opt callstack 18
  6537                           
  6538                           ;incstack = 0
  6539  0059E2  500F               	movf	strtok@s^0,w,c
  6540  0059E4  1010               	iorwf	(strtok@s+1)^0,w,c
  6541  0059E6  A4D8               	btfss	status,2,c
  6542  0059E8  D00F               	goto	l15324
  6543  0059EA  0060  F2C4  F00F   	movff	strtok@p,strtok@s
  6544  0059F0  0060  F2C8  F010   	movff	strtok@p+1,strtok@s+1
  6545  0059F6  500F               	movf	strtok@s^0,w,c
  6546  0059F8  1010               	iorwf	(strtok@s+1)^0,w,c
  6547  0059FA  A4D8               	btfss	status,2,c
  6548  0059FC  D005               	goto	l15324
  6549  0059FE  0E00               	movlw	0
  6550  005A00  6E0F               	movwf	?_strtok^0,c
  6551  005A02  0E00               	movlw	0
  6552  005A04  6E10               	movwf	(?_strtok+1)^0,c
  6553  005A06  0012               	return	
  6554  005A08                     l15324:
  6555  005A08  0060  F03C  F008   	movff	strtok@s,strspn@s
  6556  005A0E  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6557  005A14  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6558  005A1A  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6559  005A20  ECC3  F03B         	call	_strspn	;wreg free
  6560  005A24  5008               	movf	?_strspn^0,w,c
  6561  005A26  260F               	addwf	strtok@s^0,f,c
  6562  005A28  5009               	movf	(?_strspn+1)^0,w,c
  6563  005A2A  2210               	addwfc	(strtok@s+1)^0,f,c
  6564  005A2C  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6565  005A32  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6566  005A38  50DF               	movf	indf2,w,c
  6567  005A3A  A4D8               	btfss	status,2,c
  6568  005A3C  D00C               	goto	l15332
  6569  005A3E  0E00               	movlw	0
  6570  005A40  0100               	movlb	0	; () banked
  6571  005A42  6FB1               	movwf	strtok@p& (0+255),b
  6572  005A44  0E00               	movlw	0
  6573  005A46  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6574  005A48  0060  F2C4  F00F   	movff	strtok@p,?_strtok
  6575  005A4E  0060  F2C8  F010   	movff	strtok@p+1,?_strtok+1
  6576  005A54  0012               	return	
  6577  005A56                     l15332:
  6578  005A56  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6579  005A5C  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6580  005A62  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6581  005A68  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6582  005A6E  ECF3  F03B         	call	_strcspn	;wreg free
  6583  005A72  5008               	movf	?_strcspn^0,w,c
  6584  005A74  240F               	addwf	strtok@s^0,w,c
  6585  005A76  0100               	movlb	0	; () banked
  6586  005A78  6FB1               	movwf	strtok@p& (0+255),b
  6587  005A7A  5009               	movf	(?_strcspn+1)^0,w,c
  6588  005A7C  2010               	addwfc	(strtok@s+1)^0,w,c
  6589  005A7E  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6590                           
  6591                           ; BSR set to: 0
  6592  005A80  0060  F2C7  FFD9   	movff	strtok@p,fsr2l
  6593  005A86  0060  F2CB  FFDA   	movff	strtok@p+1,fsr2h
  6594  005A8C  50DF               	movf	indf2,w,c
  6595  005A8E  B4D8               	btfsc	status,2,c
  6596  005A90  D00B               	goto	l15340
  6597                           
  6598                           ; BSR set to: 0
  6599  005A92  0060  F2C7  FFD9   	movff	strtok@p,fsr2l
  6600  005A98  0060  F2CB  FFDA   	movff	strtok@p+1,fsr2h
  6601  005A9E  0E00               	movlw	0
  6602  005AA0  6EDF               	movwf	indf2,c
  6603                           
  6604                           ; BSR set to: 0
  6605  005AA2  4BB1               	infsnz	strtok@p& (0+255),f,b
  6606  005AA4  2BB2               	incf	(strtok@p+1)& (0+255),f,b
  6607  005AA6  D004               	goto	l4026
  6608  005AA8                     l15340:
  6609                           
  6610                           ; BSR set to: 0
  6611  005AA8  0E00               	movlw	0
  6612  005AAA  6FB1               	movwf	strtok@p& (0+255),b
  6613  005AAC  0E00               	movlw	0
  6614  005AAE  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6615  005AB0                     l4026:
  6616                           
  6617                           ; BSR set to: 0
  6618  005AB0  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6619  005AB6  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6620  005ABC  0012               	return		;funcret
  6621  005ABE                     __end_of_strtok:
  6622                           	opt callstack 0
  6623                           
  6624 ;; *************** function _strspn *****************
  6625 ;; Defined at:
  6626 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6629 ;;		 -> atCommand(80), NULL(0), 
  6630 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6631 ;;		 -> STR_56(2), STR_55(2), 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  i               2   12[COMRAM] unsigned int 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  2    7[COMRAM] unsigned int 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;Total ram usage:        7 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    8
  6650 ;; This function calls:
  6651 ;;		_strchr
  6652 ;; This function is called by:
  6653 ;;		_strtok
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text23
  6658  007786                     __ptext23:
  6659                           	opt callstack 0
  6660  007786                     _strspn:
  6661                           	opt callstack 18
  6662                           
  6663                           ;incstack = 0
  6664  007786  0E00               	movlw	0
  6665  007788  6E0E               	movwf	(strspn@i+1)^0,c
  6666  00778A  0E00               	movlw	0
  6667  00778C  6E0D               	movwf	strspn@i^0,c
  6668  00778E  D004               	goto	l15034
  6669  007790                     l15032:
  6670  007790  4A08               	infsnz	strspn@s^0,f,c
  6671  007792  2A09               	incf	(strspn@s+1)^0,f,c
  6672  007794  4A0D               	infsnz	strspn@i^0,f,c
  6673  007796  2A0E               	incf	(strspn@i+1)^0,f,c
  6674  007798                     l15034:
  6675  007798  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6676  00779E  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6677  0077A4  50DF               	movf	indf2,w,c
  6678  0077A6  B4D8               	btfsc	status,2,c
  6679  0077A8  D017               	goto	u14720
  6680  0077AA  0060  F028  F002   	movff	strspn@c,strchr@s
  6681  0077B0  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6682  0077B6  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6683  0077BC  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6684  0077C2  50DF               	movf	indf2,w,c
  6685  0077C4  6E0C               	movwf	??_strspn^0,c
  6686  0077C6  500C               	movf	??_strspn^0,w,c
  6687  0077C8  6E04               	movwf	strchr@c^0,c
  6688  0077CA  6A05               	clrf	(strchr@c+1)^0,c
  6689  0077CC  ECA2  F038         	call	_strchr	;wreg free
  6690  0077D0  5002               	movf	?_strchr^0,w,c
  6691  0077D2  1003               	iorwf	(?_strchr+1)^0,w,c
  6692  0077D4  A4D8               	btfss	status,2,c
  6693  0077D6  D7DC               	goto	l15032
  6694  0077D8                     u14720:
  6695  0077D8  0060  F034  F008   	movff	strspn@i,?_strspn
  6696  0077DE  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6697  0077E4  0012               	return		;funcret
  6698  0077E6                     __end_of_strspn:
  6699                           	opt callstack 0
  6700                           
  6701 ;; *************** function _strcspn *****************
  6702 ;; Defined at:
  6703 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6706 ;;		 -> atCommand(80), NULL(0), 
  6707 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6708 ;;		 -> STR_56(2), STR_55(2), 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  i               2   12[COMRAM] unsigned int 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  2    7[COMRAM] unsigned int 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:        7 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    8
  6727 ;; This function calls:
  6728 ;;		_strchr
  6729 ;; This function is called by:
  6730 ;;		_strtok
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text24
  6735  0077E6                     __ptext24:
  6736                           	opt callstack 0
  6737  0077E6                     _strcspn:
  6738                           	opt callstack 18
  6739                           
  6740                           ;incstack = 0
  6741  0077E6  0E00               	movlw	0
  6742  0077E8  6E0E               	movwf	(strcspn@i+1)^0,c
  6743  0077EA  0E00               	movlw	0
  6744  0077EC  6E0D               	movwf	strcspn@i^0,c
  6745  0077EE  D004               	goto	l15042
  6746  0077F0                     l15040:
  6747  0077F0  4A08               	infsnz	strcspn@s^0,f,c
  6748  0077F2  2A09               	incf	(strcspn@s+1)^0,f,c
  6749  0077F4  4A0D               	infsnz	strcspn@i^0,f,c
  6750  0077F6  2A0E               	incf	(strcspn@i+1)^0,f,c
  6751  0077F8                     l15042:
  6752  0077F8  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6753  0077FE  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6754  007804  50DF               	movf	indf2,w,c
  6755  007806  B4D8               	btfsc	status,2,c
  6756  007808  D017               	goto	u14740
  6757  00780A  0060  F028  F002   	movff	strcspn@c,strchr@s
  6758  007810  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6759  007816  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6760  00781C  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6761  007822  50DF               	movf	indf2,w,c
  6762  007824  6E0C               	movwf	??_strcspn^0,c
  6763  007826  500C               	movf	??_strcspn^0,w,c
  6764  007828  6E04               	movwf	strchr@c^0,c
  6765  00782A  6A05               	clrf	(strchr@c+1)^0,c
  6766  00782C  ECA2  F038         	call	_strchr	;wreg free
  6767  007830  5002               	movf	?_strchr^0,w,c
  6768  007832  1003               	iorwf	(?_strchr+1)^0,w,c
  6769  007834  B4D8               	btfsc	status,2,c
  6770  007836  D7DC               	goto	l15040
  6771  007838                     u14740:
  6772  007838  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6773  00783E  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6774  007844  0012               	return		;funcret
  6775  007846                     __end_of_strcspn:
  6776                           	opt callstack 0
  6777                           
  6778 ;; *************** function _cmdSetAddr *****************
  6779 ;; Defined at:
  6780 ;;		line 322 in file "../app/app_src/application.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6783 ;;		 -> atCommand(80), 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  tempaddr        2   35[BANK0 ] unsigned short 
  6786 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6787 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  6788 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 3F/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;Total ram usage:        8 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:   16
  6805 ;; This function calls:
  6806 ;;		_printf
  6807 ;;		_strstr
  6808 ;;		_strtoul
  6809 ;; This function is called by:
  6810 ;;		_executeATCommand
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text25
  6815  006D6E                     __ptext25:
  6816                           	opt callstack 0
  6817  006D6E                     _cmdSetAddr:
  6818                           	opt callstack 12
  6819                           
  6820                           ;../app/app_src/application.c: 323:  uint16_t tempaddr;;../app/app_src/application.c: 32
      +                          4:  char *p1,*p2;;../app/app_src/application.c: 325:  p1 = strstr(atCommand,"=") + 1;
  6821                           
  6822                           ;incstack = 0
  6823  006D6E  0E5B               	movlw	low _atCommand
  6824  006D70  6E0D               	movwf	strstr@h^0,c
  6825  006D72  0E01               	movlw	high _atCommand
  6826  006D74  6E0E               	movwf	(strstr@h+1)^0,c
  6827  006D76  0EDE               	movlw	low (STR_19+3)
  6828  006D78  6E0F               	movwf	strstr@n^0,c
  6829  006D7A  0EFF               	movlw	high (STR_19+3)
  6830  006D7C  6E10               	movwf	(strstr@n+1)^0,c
  6831  006D7E  EC5F  F02D         	call	_strstr	;wreg free
  6832  006D82  0E01               	movlw	1
  6833  006D84  240D               	addwf	?_strstr^0,w,c
  6834  006D86  0100               	movlb	0	; () banked
  6835  006D88  6F81               	movwf	cmdSetAddr@p1& (0+255),b
  6836  006D8A  0E00               	movlw	0
  6837  006D8C  200E               	addwfc	(?_strstr+1)^0,w,c
  6838  006D8E  6F82               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;../app/app_src/application.c: 327:  tempaddr = strtoul(p1,p2,16);
  6842  006D90  0060  F204  F034   	movff	cmdSetAddr@p1,strtoul@s
  6843  006D96  0060  F208  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6844  006D9C  0060  F1FC  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6845  006DA2  0060  F200  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6846  006DA8  0E00               	movlw	0
  6847  006DAA  6E39               	movwf	(strtoul@base+1)^0,c
  6848  006DAC  0E10               	movlw	16
  6849  006DAE  6E38               	movwf	strtoul@base^0,c
  6850  006DB0  EC74  F03F         	call	_strtoul	;wreg free
  6851  006DB4  0060  F0D0  F083   	movff	?_strtoul,cmdSetAddr@tempaddr
  6852  006DBA  0060  F0D4  F084   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6853                           
  6854                           ;../app/app_src/application.c: 329:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6855  006DC0  0100               	movlb	0	; () banked
  6856  006DC2  5183               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6857  006DC4  1184               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6858  006DC6  B4D8               	btfsc	status,2,c
  6859  006DC8  D012               	goto	l15720
  6860                           
  6861                           ; BSR set to: 0
  6862  006DCA  2983               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6863  006DCC  E103               	bnz	u15880
  6864  006DCE  2984               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6865  006DD0  B4D8               	btfsc	status,2,c
  6866  006DD2  D00D               	goto	l15720
  6867  006DD4                     u15880:
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;../app/app_src/application.c: 330:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6871  006DD4  0060  F210  F0FA   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6872                           
  6873                           ;../app/app_src/application.c: 331:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6874  006DDA  0060  F20C  F0F9   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;../app/app_src/application.c: 332:   printf("OK\r\n");
  6878  006DE0  0ED6               	movlw	low STR_12
  6879  006DE2  6F75               	movwf	printf@fmt& (0+255),b
  6880  006DE4  0EFF               	movlw	high STR_12
  6881  006DE6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6882  006DE8  EC77  F044         	call	_printf	;wreg free
  6883                           
  6884                           ;../app/app_src/application.c: 333:  }
  6885  006DEC  0012               	return	
  6886  006DEE                     l15720:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;../app/app_src/application.c: 335:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6890  006DEE  0EC5               	movlw	low STR_3
  6891  006DF0  6F75               	movwf	printf@fmt& (0+255),b
  6892  006DF2  0EFE               	movlw	high STR_3
  6893  006DF4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6894  006DF6  0E05               	movlw	5
  6895  006DF8  6F77               	movwf	(?_printf+2)& (0+255),b
  6896  006DFA  EC77  F044         	call	_printf	;wreg free
  6897                           
  6898                           ; BSR set to: 0
  6899  006DFE  0012               	return		;funcret
  6900  006E00                     __end_of_cmdSetAddr:
  6901                           	opt callstack 0
  6902                           
  6903 ;; *************** function _cmdSetAES *****************
  6904 ;; Defined at:
  6905 ;;		line 465 in file "../app/app_src/application.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6908 ;;		 -> atCommand(80), 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  temp            3   65[BANK0 ] unsigned char [3]
  6911 ;;  p2              2   63[BANK0 ] PTR unsigned char 
  6912 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  6913 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6914 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6915 ;;  byte            1   69[BANK0 ] unsigned char 
  6916 ;;  i               1   72[BANK0 ] unsigned char 
  6917 ;;  AESstr         32   31[BANK0 ] unsigned char [32]
  6918 ;;  p1              2   70[BANK0 ] PTR unsigned char 
  6919 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  6920 ;;  key_type        1   68[BANK0 ] unsigned char 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      void 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 3F/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Totals:         4      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;Total ram usage:       46 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:   16
  6937 ;; This function calls:
  6938 ;;		_DATAEE_WriteByte_Platform
  6939 ;;		_memcpy
  6940 ;;		_printf
  6941 ;;		_strlen
  6942 ;;		_strstr
  6943 ;;		_strtoul
  6944 ;; This function is called by:
  6945 ;;		_executeATCommand
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text26
  6950  00307A                     __ptext26:
  6951                           	opt callstack 0
  6952  00307A                     _cmdSetAES:
  6953                           	opt callstack 12
  6954                           
  6955                           ;../app/app_src/application.c: 469:  p1 = strstr(atCommand,":") + 1;
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;incstack = 0
  6959  00307A  0E5B               	movlw	low _atCommand
  6960  00307C  6E0D               	movwf	strstr@h^0,c
  6961  00307E  0E01               	movlw	high _atCommand
  6962  003080  6E0E               	movwf	(strstr@h+1)^0,c
  6963  003082  0E5F               	movlw	low (STR_64+5)
  6964  003084  6E0F               	movwf	strstr@n^0,c
  6965  003086  0EFF               	movlw	high (STR_64+5)
  6966  003088  6E10               	movwf	(strstr@n+1)^0,c
  6967  00308A  EC5F  F02D         	call	_strstr	;wreg free
  6968  00308E  0E01               	movlw	1
  6969  003090  240D               	addwf	?_strstr^0,w,c
  6970  003092  0100               	movlb	0	; () banked
  6971  003094  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  6972  003096  0E00               	movlw	0
  6973  003098  200E               	addwfc	(?_strstr+1)^0,w,c
  6974  00309A  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;../app/app_src/application.c: 470:     if(!p1){
  6978  00309C  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  6979  00309E  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6980  0030A0  A4D8               	btfss	status,2,c
  6981  0030A2  D019               	goto	l15806
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;../app/app_src/application.c: 471:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6985  0030A4  0EC5               	movlw	low STR_3
  6986  0030A6  6F75               	movwf	printf@fmt& (0+255),b
  6987  0030A8  0EFE               	movlw	high STR_3
  6988  0030AA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6989  0030AC  0E09               	movlw	9
  6990  0030AE  6F77               	movwf	(?_printf+2)& (0+255),b
  6991  0030B0  EC77  F044         	call	_printf	;wreg free
  6992  0030B4  0012               	return	
  6993  0030B6                     l15796:
  6994  0030B6  0E4E               	movlw	78
  6995  0030B8  D001               	goto	L1
  6996  0030BA                     l15798:
  6997  0030BA  0E41               	movlw	65
  6998  0030BC                     L1:
  6999  0030BC  0100               	movlb	0	; () banked
  7000  0030BE  6FA4               	movwf	cmdSetAES@key_type& (0+255),b
  7001  0030C0  D02D               	goto	l15808
  7002  0030C2                     l15800:
  7003                           
  7004                           ;../app/app_src/application.c: 478:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  7005  0030C2  0EC5               	movlw	low STR_3
  7006  0030C4  0100               	movlb	0	; () banked
  7007  0030C6  6F75               	movwf	printf@fmt& (0+255),b
  7008  0030C8  0EFE               	movlw	high STR_3
  7009  0030CA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7010  0030CC  0E0D               	movlw	13
  7011  0030CE  6F77               	movwf	(?_printf+2)& (0+255),b
  7012  0030D0  EC77  F044         	call	_printf	;wreg free
  7013  0030D4  0012               	return	
  7014  0030D6                     l15806:
  7015                           
  7016                           ; BSR set to: 0
  7017  0030D6  0060  F29B  FFF6   	movff	cmdSetAES@p1,tblptrl
  7018  0030DC  0060  F29F  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  7019  0030E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7020  0030E4  6EF8               	movwf	tblptru,c
  7021  0030E6  0E0F               	movlw	(high __ramtop+-1)
  7022  0030E8  64F7               	cpfsgt	tblptrh,c
  7023  0030EA  D003               	bra	u15947
  7024  0030EC  0008               	tblrd		*
  7025  0030EE  50F5               	movf	tablat,w,c
  7026  0030F0  D007               	bra	u15940
  7027  0030F2                     u15947:
  7028  0030F2  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7029  0030F8  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7030  0030FE  50EF               	movf	indf0,w,c
  7031  003100                     u15940:
  7032  003100  6E5A               	movwf	??_cmdSetAES^0,c
  7033  003102  6A5B               	clrf	(??_cmdSetAES+1)^0,c
  7034                           
  7035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7036                           ; Switch size 1, requested type "simple"
  7037                           ; Number of cases is 1, Range of values is 0 to 0
  7038                           ; switch strategies available:
  7039                           ; Name         Instructions Cycles
  7040                           ; simple_byte            4     3 (average)
  7041                           ;	Chosen strategy is simple_byte
  7042  003104  505B               	movf	(??_cmdSetAES+1)^0,w,c
  7043  003106  0A00               	xorlw	0	; case 0
  7044  003108  A4D8               	btfss	status,2,c
  7045  00310A  D7DB               	goto	l15800
  7046                           
  7047                           ; Switch size 1, requested type "simple"
  7048                           ; Number of cases is 2, Range of values is 65 to 78
  7049                           ; switch strategies available:
  7050                           ; Name         Instructions Cycles
  7051                           ; simple_byte            7     4 (average)
  7052                           ;	Chosen strategy is simple_byte
  7053  00310C  505A               	movf	??_cmdSetAES^0,w,c
  7054  00310E  0A41               	xorlw	65	; case 65
  7055  003110  B4D8               	btfsc	status,2,c
  7056  003112  D7D3               	goto	l15798
  7057  003114  0A0F               	xorlw	15	; case 78
  7058  003116  B4D8               	btfsc	status,2,c
  7059  003118  D7CE               	goto	l15796
  7060  00311A  D7D3               	goto	l15800
  7061  00311C                     l15808:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;../app/app_src/application.c: 481:     p1 = strstr(atCommand,"=") + 1;
  7065  00311C  0E5B               	movlw	low _atCommand
  7066  00311E  6E0D               	movwf	strstr@h^0,c
  7067  003120  0E01               	movlw	high _atCommand
  7068  003122  6E0E               	movwf	(strstr@h+1)^0,c
  7069  003124  0EDE               	movlw	low (STR_19+3)
  7070  003126  6E0F               	movwf	strstr@n^0,c
  7071  003128  0EFF               	movlw	high (STR_19+3)
  7072  00312A  6E10               	movwf	(strstr@n+1)^0,c
  7073  00312C  EC5F  F02D         	call	_strstr	;wreg free
  7074  003130  0E01               	movlw	1
  7075  003132  240D               	addwf	?_strstr^0,w,c
  7076  003134  0100               	movlb	0	; () banked
  7077  003136  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  7078  003138  0E00               	movlw	0
  7079  00313A  200E               	addwfc	(?_strstr+1)^0,w,c
  7080  00313C  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;../app/app_src/application.c: 482:     if(!p1){
  7084  00313E  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  7085  003140  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7086  003142  A4D8               	btfss	status,2,c
  7087  003144  D009               	goto	l15816
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;../app/app_src/application.c: 483:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7091  003146  0EC5               	movlw	low STR_3
  7092  003148  6F75               	movwf	printf@fmt& (0+255),b
  7093  00314A  0EFE               	movlw	high STR_3
  7094  00314C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7095  00314E  0E09               	movlw	9
  7096  003150  6F77               	movwf	(?_printf+2)& (0+255),b
  7097  003152  EC77  F044         	call	_printf	;wreg free
  7098  003156  0012               	return	
  7099  003158                     l15816:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;../app/app_src/application.c: 487:  if(strlen(p1) != 32){
  7103  003158  0060  F298  F002   	movff	cmdSetAES@p1,strlen@s
  7104  00315E  0060  F29C  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7105  003164  EC42  F03E         	call	_strlen	;wreg free
  7106  003168  0E20               	movlw	32
  7107  00316A  1802               	xorwf	?_strlen^0,w,c
  7108  00316C  1003               	iorwf	(?_strlen+1)^0,w,c
  7109  00316E  B4D8               	btfsc	status,2,c
  7110  003170  D00A               	goto	l15822
  7111                           
  7112                           ;../app/app_src/application.c: 488:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7113  003172  0EC5               	movlw	low STR_3
  7114  003174  0100               	movlb	0	; () banked
  7115  003176  6F75               	movwf	printf@fmt& (0+255),b
  7116  003178  0EFE               	movlw	high STR_3
  7117  00317A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7118  00317C  0E08               	movlw	8
  7119  00317E  6F77               	movwf	(?_printf+2)& (0+255),b
  7120  003180  EC77  F044         	call	_printf	;wreg free
  7121  003184  0012               	return	
  7122  003186                     l15822:
  7123                           
  7124                           ;../app/app_src/application.c: 491:  memcpy(AESstr,p1,32);
  7125  003186  0E7F               	movlw	low cmdSetAES@AESstr
  7126  003188  6E08               	movwf	memcpy@d1^0,c
  7127  00318A  6A09               	clrf	(memcpy@d1+1)^0,c
  7128  00318C  0060  F298  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7129  003192  0060  F29C  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7130  003198  0E00               	movlw	0
  7131  00319A  6E0D               	movwf	(memcpy@n+1)^0,c
  7132  00319C  0E20               	movlw	32
  7133  00319E  6E0C               	movwf	memcpy@n^0,c
  7134  0031A0  ECE5  F039         	call	_memcpy	;wreg free
  7135                           
  7136                           ;../app/app_src/application.c: 493:  for(uint8_t i = 0; i < 16; i++){
  7137  0031A4  0E00               	movlw	0
  7138  0031A6  0100               	movlb	0	; () banked
  7139  0031A8  6FA8               	movwf	cmdSetAES@i& (0+255),b
  7140  0031AA                     l15830:
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;../app/app_src/application.c: 494:   char temp[3];;../app/app_src/application.c: 495:  
      +                           char *p2;;../app/app_src/application.c: 496:   uint8_t byte;;../app/app_src/application
      +                          .c: 497:   memcpy(temp,0,sizeof(temp));
  7144  0031AA  0EA1               	movlw	low cmdSetAES@temp
  7145  0031AC  6E08               	movwf	memcpy@d1^0,c
  7146  0031AE  6A09               	clrf	(memcpy@d1+1)^0,c
  7147  0031B0  0E00               	movlw	0
  7148  0031B2  6E0A               	movwf	memcpy@s1^0,c
  7149  0031B4  0E00               	movlw	0
  7150  0031B6  6E0B               	movwf	(memcpy@s1+1)^0,c
  7151  0031B8  0E00               	movlw	0
  7152  0031BA  6E0D               	movwf	(memcpy@n+1)^0,c
  7153  0031BC  0E03               	movlw	3
  7154  0031BE  6E0C               	movwf	memcpy@n^0,c
  7155  0031C0  ECE5  F039         	call	_memcpy	;wreg free
  7156                           
  7157                           ;../app/app_src/application.c: 498:   memcpy(temp,(AESstr + i*2),2);
  7158  0031C4  0EA1               	movlw	low cmdSetAES@temp
  7159  0031C6  6E08               	movwf	memcpy@d1^0,c
  7160  0031C8  6A09               	clrf	(memcpy@d1+1)^0,c
  7161  0031CA  0100               	movlb	0	; () banked
  7162  0031CC  51A8               	movf	cmdSetAES@i& (0+255),w,b
  7163  0031CE  0D02               	mullw	2
  7164  0031D0  50F3               	movf	243,w,c
  7165  0031D2  0F7F               	addlw	low cmdSetAES@AESstr
  7166  0031D4  6E5A               	movwf	??_cmdSetAES^0,c
  7167  0031D6  0060  F168  F00A   	movff	??_cmdSetAES,memcpy@s1
  7168  0031DC  6A0B               	clrf	(memcpy@s1+1)^0,c
  7169  0031DE  0E00               	movlw	0
  7170  0031E0  6E0D               	movwf	(memcpy@n+1)^0,c
  7171  0031E2  0E02               	movlw	2
  7172  0031E4  6E0C               	movwf	memcpy@n^0,c
  7173  0031E6  ECE5  F039         	call	_memcpy	;wreg free
  7174                           
  7175                           ;../app/app_src/application.c: 499:   byte = (uint8_t)strtoul(temp,&p2,16);
  7176  0031EA  0EA1               	movlw	low cmdSetAES@temp
  7177  0031EC  6E34               	movwf	strtoul@s^0,c
  7178  0031EE  6A35               	clrf	(strtoul@s+1)^0,c
  7179  0031F0  0E9F               	movlw	low cmdSetAES@p2
  7180  0031F2  6E36               	movwf	strtoul@endptr^0,c
  7181  0031F4  6A37               	clrf	(strtoul@endptr+1)^0,c
  7182  0031F6  0E00               	movlw	0
  7183  0031F8  6E39               	movwf	(strtoul@base+1)^0,c
  7184  0031FA  0E10               	movlw	16
  7185  0031FC  6E38               	movwf	strtoul@base^0,c
  7186  0031FE  EC74  F03F         	call	_strtoul	;wreg free
  7187  003202  5034               	movf	?_strtoul^0,w,c
  7188  003204  0100               	movlb	0	; () banked
  7189  003206  6FA5               	movwf	cmdSetAES@byte& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;../app/app_src/application.c: 500:         if('A' == key_type){
  7193  003208  0E41               	movlw	65
  7194  00320A  19A4               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7195  00320C  A4D8               	btfss	status,2,c
  7196  00320E  D015               	goto	l15842
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;../app/app_src/application.c: 501:             aes_key[i] = byte;
  7200  003210  0E24               	movlw	low _aes_key
  7201  003212  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7202  003214  6ED9               	movwf	fsr2l,c
  7203  003216  6ADA               	clrf	fsr2h,c
  7204  003218  0E02               	movlw	high _aes_key
  7205  00321A  22DA               	addwfc	fsr2h,f,c
  7206  00321C  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;../app/app_src/application.c: 502:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7210  003222  0E09               	movlw	9
  7211  003224  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7212  003226  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7213  003228  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7214  00322A  0E00               	movlw	0
  7215  00322C  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7216  00322E  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7217  003234  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7218                           
  7219                           ;../app/app_src/application.c: 503:         }
  7220  003238  D014               	goto	l15846
  7221  00323A                     l15842:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;../app/app_src/application.c: 505:             net_key[i] = byte;
  7225  00323A  0E14               	movlw	low _net_key
  7226  00323C  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7227  00323E  6ED9               	movwf	fsr2l,c
  7228  003240  6ADA               	clrf	fsr2h,c
  7229  003242  0E02               	movlw	high _net_key
  7230  003244  22DA               	addwfc	fsr2h,f,c
  7231  003246  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;../app/app_src/application.c: 506:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7235  00324C  0E23               	movlw	35
  7236  00324E  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7237  003250  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7238  003252  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7239  003254  0E00               	movlw	0
  7240  003256  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7241  003258  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7242  00325E  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7243  003262                     l15846:
  7244                           
  7245                           ;../app/app_src/application.c: 508:  }
  7246  003262  0100               	movlb	0	; () banked
  7247  003264  2BA8               	incf	cmdSetAES@i& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 0
  7250  003266  0E0F               	movlw	15
  7251  003268  65A8               	cpfsgt	cmdSetAES@i& (0+255),b
  7252  00326A  D79F               	goto	l15830
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;../app/app_src/application.c: 509:  printf("OK\r\n");
  7256  00326C  0ED6               	movlw	low STR_12
  7257  00326E  6F75               	movwf	printf@fmt& (0+255),b
  7258  003270  0EFF               	movlw	high STR_12
  7259  003272  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7260  003274  EC77  F044         	call	_printf	;wreg free
  7261                           
  7262                           ; BSR set to: 0
  7263  003278  0012               	return		;funcret
  7264  00327A                     __end_of_cmdSetAES:
  7265                           	opt callstack 0
  7266                           
  7267 ;; *************** function _cmdSendSink *****************
  7268 ;; Defined at:
  7269 ;;		line 444 in file "../app/app_src/application.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7272 ;;		 -> atCommand(80), 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		None
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;Total ram usage:        2 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    7
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_executeATCommand
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text27
  7299  008E04                     __ptext27:
  7300                           	opt callstack 0
  7301  008E04                     _cmdSendSink:
  7302                           	opt callstack 21
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;incstack = 0
  7306  008E04  0012               	return		;funcret
  7307  008E06                     __end_of_cmdSendSink:
  7308                           	opt callstack 0
  7309                           
  7310 ;; *************** function _cmdSend *****************
  7311 ;; Defined at:
  7312 ;;		line 233 in file "../app/app_src/application.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  7315 ;;		 -> atCommand(80), 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  buf_id          1   42[BANK0 ] unsigned char 
  7318 ;;  destaddr        5   31[BANK0 ] unsigned char [5]
  7319 ;;  p1              2   40[BANK0 ] PTR unsigned char 
  7320 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  7321 ;;  p2              2   38[BANK0 ] PTR unsigned char 
  7322 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  7323 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7324 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7325 ;;  tempaddr        2   36[BANK0 ] unsigned short 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 3F/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;Total ram usage:       16 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:   16
  7342 ;; This function calls:
  7343 ;;		_NWK_DataReq
  7344 ;;		_get_free_tx_buffer
  7345 ;;		_memcpy
  7346 ;;		_memset
  7347 ;;		_printf
  7348 ;;		_strlen
  7349 ;;		_strstr
  7350 ;;		_strtoul
  7351 ;; This function is called by:
  7352 ;;		_executeATCommand
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text28
  7357  0027C2                     __ptext28:
  7358                           	opt callstack 0
  7359  0027C2                     _cmdSend:
  7360                           	opt callstack 12
  7361                           
  7362                           ;../app/app_src/application.c: 234:  uint16_t tempaddr;;../app/app_src/application.c: 23
      +                          5:  char *p1,*p2;;../app/app_src/application.c: 236:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 237:         destaddr[4] = 0;
  7363                           
  7364                           ;incstack = 0
  7365  0027C2  0E00               	movlw	0
  7366  0027C4  0100               	movlb	0	; () banked
  7367  0027C6  6F83               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;../app/app_src/application.c: 238:  p1 = strstr(cmd,":") + 1;
  7371  0027C8  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7372  0027CE  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7373  0027D4  0E5F               	movlw	low (STR_64+5)
  7374  0027D6  6E0F               	movwf	strstr@n^0,c
  7375  0027D8  0EFF               	movlw	high (STR_64+5)
  7376  0027DA  6E10               	movwf	(strstr@n+1)^0,c
  7377  0027DC  EC5F  F02D         	call	_strstr	;wreg free
  7378  0027E0  0E01               	movlw	1
  7379  0027E2  240D               	addwf	?_strstr^0,w,c
  7380  0027E4  0100               	movlb	0	; () banked
  7381  0027E6  6F88               	movwf	cmdSend@p1& (0+255),b
  7382  0027E8  0E00               	movlw	0
  7383  0027EA  200E               	addwfc	(?_strstr+1)^0,w,c
  7384  0027EC  6F89               	movwf	(cmdSend@p1+1)& (0+255),b
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;../app/app_src/application.c: 239:  memcpy(destaddr,p1,4);
  7388  0027EE  0E7F               	movlw	low cmdSend@destaddr
  7389  0027F0  6E08               	movwf	memcpy@d1^0,c
  7390  0027F2  6A09               	clrf	(memcpy@d1+1)^0,c
  7391  0027F4  0060  F220  F00A   	movff	cmdSend@p1,memcpy@s1
  7392  0027FA  0060  F224  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7393  002800  0E00               	movlw	0
  7394  002802  6E0D               	movwf	(memcpy@n+1)^0,c
  7395  002804  0E04               	movlw	4
  7396  002806  6E0C               	movwf	memcpy@n^0,c
  7397  002808  ECE5  F039         	call	_memcpy	;wreg free
  7398                           
  7399                           ;../app/app_src/application.c: 241:  tempaddr = strtoul(destaddr,&p2,16);
  7400  00280C  0E7F               	movlw	low cmdSend@destaddr
  7401  00280E  6E34               	movwf	strtoul@s^0,c
  7402  002810  6A35               	clrf	(strtoul@s+1)^0,c
  7403  002812  0E86               	movlw	low cmdSend@p2
  7404  002814  6E36               	movwf	strtoul@endptr^0,c
  7405  002816  6A37               	clrf	(strtoul@endptr+1)^0,c
  7406  002818  0E00               	movlw	0
  7407  00281A  6E39               	movwf	(strtoul@base+1)^0,c
  7408  00281C  0E10               	movlw	16
  7409  00281E  6E38               	movwf	strtoul@base^0,c
  7410  002820  EC74  F03F         	call	_strtoul	;wreg free
  7411  002824  0060  F0D0  F084   	movff	?_strtoul,cmdSend@tempaddr
  7412  00282A  0060  F0D4  F085   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7413                           
  7414                           ;../app/app_src/application.c: 243:  p1 = strstr(cmd,"=") + 1;
  7415  002830  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7416  002836  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7417  00283C  0EDE               	movlw	low (STR_19+3)
  7418  00283E  6E0F               	movwf	strstr@n^0,c
  7419  002840  0EFF               	movlw	high (STR_19+3)
  7420  002842  6E10               	movwf	(strstr@n+1)^0,c
  7421  002844  EC5F  F02D         	call	_strstr	;wreg free
  7422  002848  0E01               	movlw	1
  7423  00284A  240D               	addwf	?_strstr^0,w,c
  7424  00284C  0100               	movlb	0	; () banked
  7425  00284E  6F88               	movwf	cmdSend@p1& (0+255),b
  7426  002850  0E00               	movlw	0
  7427  002852  200E               	addwfc	(?_strstr+1)^0,w,c
  7428  002854  6F89               	movwf	(cmdSend@p1+1)& (0+255),b
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;../app/app_src/application.c: 244:  if(strlen(p1) > 64){
  7432  002856  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7433  00285C  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7434  002862  EC42  F03E         	call	_strlen	;wreg free
  7435  002866  5003               	movf	(?_strlen+1)^0,w,c
  7436  002868  E104               	bnz	u15820
  7437  00286A  0E41               	movlw	65
  7438  00286C  5C02               	subwf	?_strlen^0,w,c
  7439  00286E  A0D8               	btfss	status,0,c
  7440  002870  D00A               	goto	l15628
  7441  002872                     u15820:
  7442                           
  7443                           ;../app/app_src/application.c: 245:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7444  002872  0EC5               	movlw	low STR_3
  7445  002874  0100               	movlb	0	; () banked
  7446  002876  6F75               	movwf	printf@fmt& (0+255),b
  7447  002878  0EFE               	movlw	high STR_3
  7448  00287A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7449  00287C  0E07               	movlw	7
  7450  00287E  6F77               	movwf	(?_printf+2)& (0+255),b
  7451  002880  EC77  F044         	call	_printf	;wreg free
  7452                           
  7453                           ;../app/app_src/application.c: 246:  }
  7454  002884  0012               	return	
  7455  002886                     l15628:
  7456                           
  7457                           ;../app/app_src/application.c: 248:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 249:         if(!get_free_tx_buffer(&buf_id)){
  7458  002886  0E8A               	movlw	low cmdSend@buf_id
  7459  002888  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7460  00288A  EC61  F03B         	call	_get_free_tx_buffer	;wreg free
  7461  00288E  0900               	iorlw	0
  7462  002890  A4D8               	btfss	status,2,c
  7463  002892  D00A               	goto	l15634
  7464                           
  7465                           ;../app/app_src/application.c: 250:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7466  002894  0EC5               	movlw	low STR_3
  7467  002896  0100               	movlb	0	; () banked
  7468  002898  6F75               	movwf	printf@fmt& (0+255),b
  7469  00289A  0EFE               	movlw	high STR_3
  7470  00289C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7471  00289E  0E11               	movlw	17
  7472  0028A0  6F77               	movwf	(?_printf+2)& (0+255),b
  7473  0028A2  EC77  F044         	call	_printf	;wreg free
  7474  0028A6  0012               	return	
  7475  0028A8                     l15634:
  7476                           
  7477                           ;../app/app_src/application.c: 253:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7478  0028A8  0100               	movlb	0	; () banked
  7479  0028AA  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7480  0028AC  0D83               	mullw	131
  7481  0028AE  0EE2               	movlw	low (_tx_buffer+22)
  7482  0028B0  24F3               	addwf	243,w,c
  7483  0028B2  6E02               	movwf	memset@dest^0,c
  7484  0028B4  0E0A               	movlw	high (_tx_buffer+22)
  7485  0028B6  20F4               	addwfc	prodh,w,c
  7486  0028B8  6E03               	movwf	(memset@dest+1)^0,c
  7487  0028BA  0E00               	movlw	0
  7488  0028BC  6E05               	movwf	(memset@c+1)^0,c
  7489  0028BE  0E00               	movlw	0
  7490  0028C0  6E04               	movwf	memset@c^0,c
  7491  0028C2  0E00               	movlw	0
  7492  0028C4  6E07               	movwf	(memset@n+1)^0,c
  7493  0028C6  0E6D               	movlw	109
  7494  0028C8  6E06               	movwf	memset@n^0,c
  7495  0028CA  ECFB  F021         	call	_memset	;wreg free
  7496                           
  7497                           ;../app/app_src/application.c: 254:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7498  0028CE  0100               	movlb	0	; () banked
  7499  0028D0  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7500  0028D2  0D83               	mullw	131
  7501  0028D4  0EE2               	movlw	low (_tx_buffer+22)
  7502  0028D6  24F3               	addwf	243,w,c
  7503  0028D8  6E08               	movwf	memcpy@d1^0,c
  7504  0028DA  0E0A               	movlw	high (_tx_buffer+22)
  7505  0028DC  20F4               	addwfc	prodh,w,c
  7506  0028DE  6E09               	movwf	(memcpy@d1+1)^0,c
  7507  0028E0  0060  F220  F00A   	movff	cmdSend@p1,memcpy@s1
  7508  0028E6  0060  F224  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7509  0028EC  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7510  0028F2  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7511  0028F8  EC42  F03E         	call	_strlen	;wreg free
  7512  0028FC  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7513  002902  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7514  002908  ECE5  F039         	call	_memcpy	;wreg free
  7515                           
  7516                           ;../app/app_src/application.c: 255:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7517  00290C  0100               	movlb	0	; () banked
  7518  00290E  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7519  002910  0D83               	mullw	131
  7520  002912  0ED4               	movlw	low (_tx_buffer+8)
  7521  002914  24F3               	addwf	243,w,c
  7522  002916  6ED9               	movwf	fsr2l,c
  7523  002918  0E0A               	movlw	high (_tx_buffer+8)
  7524  00291A  20F4               	addwfc	prodh,w,c
  7525  00291C  6EDA               	movwf	fsr2h,c
  7526  00291E  0060  F213  FFDE   	movff	cmdSend@tempaddr,postinc2
  7527  002924  0060  F217  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;../app/app_src/application.c: 256:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7531  00292A  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7532  00292C  0D83               	mullw	131
  7533  00292E  0ED6               	movlw	low (_tx_buffer+10)
  7534  002930  24F3               	addwf	243,w,c
  7535  002932  6ED9               	movwf	fsr2l,c
  7536  002934  0E0A               	movlw	high (_tx_buffer+10)
  7537  002936  20F4               	addwfc	prodh,w,c
  7538  002938  6EDA               	movwf	fsr2h,c
  7539  00293A  0E01               	movlw	1
  7540  00293C  6EDF               	movwf	indf2,c
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;../app/app_src/application.c: 257:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7544  00293E  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7545  002940  0D83               	mullw	131
  7546  002942  0ED7               	movlw	low (_tx_buffer+11)
  7547  002944  24F3               	addwf	243,w,c
  7548  002946  6ED9               	movwf	fsr2l,c
  7549  002948  0E0A               	movlw	high (_tx_buffer+11)
  7550  00294A  20F4               	addwfc	prodh,w,c
  7551  00294C  6EDA               	movwf	fsr2h,c
  7552  00294E  0E01               	movlw	1
  7553  002950  6EDF               	movwf	indf2,c
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;../app/app_src/application.c: 258:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST;
  7557  002952  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7558  002954  0D83               	mullw	131
  7559  002956  0ED8               	movlw	low (_tx_buffer+12)
  7560  002958  24F3               	addwf	243,w,c
  7561  00295A  6ED9               	movwf	fsr2l,c
  7562  00295C  0E0A               	movlw	high (_tx_buffer+12)
  7563  00295E  20F4               	addwfc	prodh,w,c
  7564  002960  6EDA               	movwf	fsr2h,c
  7565  002962  0E01               	movlw	1
  7566  002964  6EDF               	movwf	indf2,c
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;../app/app_src/application.c: 259:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7570  002966  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7571  002968  0D83               	mullw	131
  7572  00296A  0ECC               	movlw	low _tx_buffer
  7573  00296C  6E5A               	movwf	??_cmdSend^0,c
  7574  00296E  0E0A               	movlw	high _tx_buffer
  7575  002970  6E5B               	movwf	(??_cmdSend+1)^0,c
  7576  002972  0E16               	movlw	22
  7577  002974  265A               	addwf	??_cmdSend^0,f,c
  7578  002976  0E00               	movlw	0
  7579  002978  225B               	addwfc	(??_cmdSend+1)^0,f,c
  7580  00297A  50F3               	movf	243,w,c
  7581  00297C  265A               	addwf	??_cmdSend^0,f,c
  7582  00297E  50F4               	movf	244,w,c
  7583  002980  225B               	addwfc	(??_cmdSend+1)^0,f,c
  7584  002982  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7585  002984  0D83               	mullw	131
  7586  002986  0EDB               	movlw	low (_tx_buffer+15)
  7587  002988  24F3               	addwf	243,w,c
  7588  00298A  6ED9               	movwf	fsr2l,c
  7589  00298C  0E0A               	movlw	high (_tx_buffer+15)
  7590  00298E  20F4               	addwfc	prodh,w,c
  7591  002990  6EDA               	movwf	fsr2h,c
  7592  002992  0060  F16B  FFDE   	movff	??_cmdSend,postinc2
  7593  002998  0060  F16F  FFDD   	movff	??_cmdSend+1,postdec2
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;../app/app_src/application.c: 260:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7597  00299E  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7598  0029A0  0D83               	mullw	131
  7599  0029A2  0EDD               	movlw	low (_tx_buffer+17)
  7600  0029A4  24F3               	addwf	243,w,c
  7601  0029A6  6ED9               	movwf	fsr2l,c
  7602  0029A8  0E0A               	movlw	high (_tx_buffer+17)
  7603  0029AA  20F4               	addwfc	prodh,w,c
  7604  0029AC  6EDA               	movwf	fsr2h,c
  7605  0029AE  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7606  0029B4  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7607  0029BA  EC42  F03E         	call	_strlen	;wreg free
  7608  0029BE  5002               	movf	?_strlen^0,w,c
  7609  0029C0  6EDF               	movwf	indf2,c
  7610                           
  7611                           ;../app/app_src/application.c: 261:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7612  0029C2  0100               	movlb	0	; () banked
  7613  0029C4  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7614  0029C6  0D83               	mullw	131
  7615  0029C8  0EDE               	movlw	low (_tx_buffer+18)
  7616  0029CA  24F3               	addwf	243,w,c
  7617  0029CC  6ED9               	movwf	fsr2l,c
  7618  0029CE  0E0A               	movlw	high (_tx_buffer+18)
  7619  0029D0  20F4               	addwfc	prodh,w,c
  7620  0029D2  6EDA               	movwf	fsr2h,c
  7621  0029D4  0E32               	movlw	low _appDataConf
  7622  0029D6  6EDE               	movwf	postinc2,c
  7623  0029D8  0E89               	movlw	high _appDataConf
  7624  0029DA  6EDD               	movwf	postdec2,c
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;../app/app_src/application.c: 262:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7628  0029DC  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7629  0029DE  0D83               	mullw	131
  7630  0029E0  0ECE               	movlw	low (_tx_buffer+2)
  7631  0029E2  24F3               	addwf	243,w,c
  7632  0029E4  6ED9               	movwf	fsr2l,c
  7633  0029E6  0E0A               	movlw	high (_tx_buffer+2)
  7634  0029E8  20F4               	addwfc	prodh,w,c
  7635  0029EA  6EDA               	movwf	fsr2h,c
  7636  0029EC  0060  F36F  FFDF   	movff	_msgIDCounter,indf2
  7637                           
  7638                           ; BSR set to: 0
  7639  0029F2  2BDB               	incf	_msgIDCounter& (0+255),f,b
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;../app/app_src/application.c: 263:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7643  0029F4  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7644  0029F6  0D83               	mullw	131
  7645  0029F8  0ECF               	movlw	low (_tx_buffer+3)
  7646  0029FA  24F3               	addwf	243,w,c
  7647  0029FC  6E02               	movwf	NWK_DataReq@req^0,c
  7648  0029FE  0E0A               	movlw	high (_tx_buffer+3)
  7649  002A00  20F4               	addwfc	prodh,w,c
  7650  002A02  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7651  002A04  EC67  F039         	call	_NWK_DataReq	;wreg free
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;../app/app_src/application.c: 264:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7655  002A08  0EC9               	movlw	low (STR_3+4)
  7656  002A0A  6F75               	movwf	printf@fmt& (0+255),b
  7657  002A0C  0EFE               	movlw	high (STR_3+4)
  7658  002A0E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7659  002A10  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7660  002A12  0D83               	mullw	131
  7661  002A14  0ECE               	movlw	low (_tx_buffer+2)
  7662  002A16  24F3               	addwf	243,w,c
  7663  002A18  6ED9               	movwf	fsr2l,c
  7664  002A1A  0E0A               	movlw	high (_tx_buffer+2)
  7665  002A1C  20F4               	addwfc	prodh,w,c
  7666  002A1E  6EDA               	movwf	fsr2h,c
  7667  002A20  50DF               	movf	indf2,w,c
  7668  002A22  6E5A               	movwf	??_cmdSend^0,c
  7669  002A24  505A               	movf	??_cmdSend^0,w,c
  7670  002A26  6F77               	movwf	(?_printf+2)& (0+255),b
  7671  002A28  6B78               	clrf	(?_printf+3)& (0+255),b
  7672  002A2A  EC77  F044         	call	_printf	;wreg free
  7673                           
  7674                           ; BSR set to: 0
  7675  002A2E  0012               	return		;funcret
  7676  002A30                     __end_of_cmdSend:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function _strtoul *****************
  7680 ;; Defined at:
  7681 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7684 ;;		 -> STR_56(2), STR_55(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7685 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7686 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7687 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7688 ;;		 -> cmdSend@p2(2), 
  7689 ;;  base            2   55[COMRAM] int 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  4   51[COMRAM] unsigned long 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7701 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;Total ram usage:        6 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:   10
  7708 ;; This function calls:
  7709 ;;		___strtoxl
  7710 ;; This function is called by:
  7711 ;;		_cmdSend
  7712 ;;		_cmdSetAddr
  7713 ;;		_cmdSetNaddr
  7714 ;;		_cmdSetAES
  7715 ;;		_cmdSetRFCH
  7716 ;;		_cmdSetTX
  7717 ;;		_cmdSetBaud
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text29
  7722  007EE8                     __ptext29:
  7723                           	opt callstack 0
  7724  007EE8                     _strtoul:
  7725                           	opt callstack 17
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;incstack = 0
  7729  007EE8  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7730  007EEE  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7731  007EF4  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7732  007EFA  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7733  007F00  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7734  007F06  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7735  007F0C  0E00               	movlw	0
  7736  007F0E  6E16               	movwf	___strtoxl@is_signed^0,c
  7737  007F10  EC5D  F005         	call	___strtoxl	;wreg free
  7738  007F14  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7739  007F1A  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7740  007F20  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7741  007F26  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7742  007F2C  0012               	return		;funcret
  7743  007F2E                     __end_of_strtoul:
  7744                           	opt callstack 0
  7745                           
  7746 ;; *************** function ___strtoxl *****************
  7747 ;; Defined at:
  7748 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7751 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  7752 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7753 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7754 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7755 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7756 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7757 ;;  base            2   19[COMRAM] int 
  7758 ;;  is_signed       1   21[COMRAM] unsigned char 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  a               4   44[COMRAM] unsigned long 
  7761 ;;  limit           4   38[COMRAM] unsigned long 
  7762 ;;  prev_a          4   26[COMRAM] unsigned long 
  7763 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7764 ;;		 -> cmdSetSF@CHstr(3), STR_56(2), STR_55(2), cmdSetCADRSSI@CHstr(3), 
  7765 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7766 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7767 ;;  c               1   50[COMRAM] unsigned char 
  7768 ;;  skip            1   43[COMRAM] unsigned char 
  7769 ;;  sign            1   42[COMRAM] unsigned char 
  7770 ;;  conv_done       1   37[COMRAM] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  4   15[COMRAM] unsigned long 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7780 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;Total ram usage:       36 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    9
  7787 ;; This function calls:
  7788 ;;		___lmul
  7789 ;;		_isalpha
  7790 ;;		_isdigit
  7791 ;;		_isspace
  7792 ;;		_toupper
  7793 ;; This function is called by:
  7794 ;;		_strtol
  7795 ;;		_strtoul
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text30
  7800  000ABA                     __ptext30:
  7801                           	opt callstack 0
  7802  000ABA                     ___strtoxl:
  7803                           	opt callstack 17
  7804                           
  7805                           ;incstack = 0
  7806  000ABA  0E00               	movlw	0
  7807  000ABC  6E2D               	movwf	___strtoxl@a^0,c
  7808  000ABE  0E00               	movlw	0
  7809  000AC0  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7810  000AC2  0E00               	movlw	0
  7811  000AC4  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7812  000AC6  0E00               	movlw	0
  7813  000AC8  6E30               	movwf	(___strtoxl@a+3)^0,c
  7814  000ACA  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7815  000AD0  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7816  000AD6  5031               	movf	___strtoxl@cp^0,w,c
  7817  000AD8  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7818  000ADA  B4D8               	btfsc	status,2,c
  7819  000ADC  D1DF               	goto	l15158
  7820  000ADE  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7821  000AE4  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7822  000AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  7823  000AEC  6EF8               	movwf	tblptru,c
  7824  000AEE  0E0F               	movlw	(high __ramtop+-1)
  7825  000AF0  64F7               	cpfsgt	tblptrh,c
  7826  000AF2  D003               	bra	u14767
  7827  000AF4  0008               	tblrd		*
  7828  000AF6  50F5               	movf	tablat,w,c
  7829  000AF8  D007               	bra	u14760
  7830  000AFA                     u14767:
  7831  000AFA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7832  000B00  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7833  000B06  50EF               	movf	indf0,w,c
  7834  000B08                     u14760:
  7835  000B08  0900               	iorlw	0
  7836  000B0A  B4D8               	btfsc	status,2,c
  7837  000B0C  D1C7               	goto	l15158
  7838  000B0E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7839  000B14  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7840  000B1A  0E00               	movlw	low (__mediumconst shr (0+16))
  7841  000B1C  6EF8               	movwf	tblptru,c
  7842  000B1E  0E0F               	movlw	(high __ramtop+-1)
  7843  000B20  64F7               	cpfsgt	tblptrh,c
  7844  000B22  D003               	bra	u14787
  7845  000B24  0008               	tblrd		*
  7846  000B26  50F5               	movf	tablat,w,c
  7847  000B28  D007               	bra	u14780
  7848  000B2A                     u14787:
  7849  000B2A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7850  000B30  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7851  000B36  50EF               	movf	indf0,w,c
  7852  000B38                     u14780:
  7853  000B38  D017               	goto	u14790
  7854  000B3A                     l15056:
  7855  000B3A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7856  000B3C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7857  000B3E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7858  000B44  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7859  000B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7860  000B4C  6EF8               	movwf	tblptru,c
  7861  000B4E  0E0F               	movlw	(high __ramtop+-1)
  7862  000B50  64F7               	cpfsgt	tblptrh,c
  7863  000B52  D003               	bra	u14797
  7864  000B54  0008               	tblrd		*
  7865  000B56  50F5               	movf	tablat,w,c
  7866  000B58  D007               	bra	u14790
  7867  000B5A                     u14797:
  7868  000B5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7869  000B60  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7870  000B66  50EF               	movf	indf0,w,c
  7871  000B68                     u14790:
  7872  000B68  6E33               	movwf	___strtoxl@c^0,c
  7873  000B6A  0E01               	movlw	1
  7874  000B6C  6E25               	movwf	___strtoxl$7988^0,c
  7875  000B6E  0E20               	movlw	32
  7876  000B70  1833               	xorwf	___strtoxl@c^0,w,c
  7877  000B72  B4D8               	btfsc	status,2,c
  7878  000B74  D013               	goto	l15066
  7879  000B76  0EF7               	movlw	247
  7880  000B78  6E17               	movwf	??___strtoxl^0,c
  7881  000B7A  0EFF               	movlw	255
  7882  000B7C  6E18               	movwf	(??___strtoxl+1)^0,c
  7883  000B7E  5033               	movf	___strtoxl@c^0,w,c
  7884  000B80  6E19               	movwf	(??___strtoxl+2)^0,c
  7885  000B82  6A1A               	clrf	(??___strtoxl+3)^0,c
  7886  000B84  5017               	movf	??___strtoxl^0,w,c
  7887  000B86  2619               	addwf	(??___strtoxl+2)^0,f,c
  7888  000B88  5018               	movf	(??___strtoxl+1)^0,w,c
  7889  000B8A  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7890  000B8C  501A               	movf	(??___strtoxl+3)^0,w,c
  7891  000B8E  E104               	bnz	u14810
  7892  000B90  0E05               	movlw	5
  7893  000B92  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7894  000B94  A0D8               	btfss	status,0,c
  7895  000B96  D002               	goto	l15066
  7896  000B98                     u14810:
  7897  000B98  0E00               	movlw	0
  7898  000B9A  6E25               	movwf	___strtoxl$7988^0,c
  7899  000B9C                     l15066:
  7900  000B9C  0060  F094  F01F   	movff	___strtoxl$7988,___strtoxl$7987
  7901  000BA2  6A20               	clrf	(___strtoxl$7987+1)^0,c
  7902  000BA4  501F               	movf	___strtoxl$7987^0,w,c
  7903  000BA6  1020               	iorwf	(___strtoxl$7987+1)^0,w,c
  7904  000BA8  A4D8               	btfss	status,2,c
  7905  000BAA  D7C7               	goto	l15056
  7906  000BAC  0E00               	movlw	0
  7907  000BAE  6E2B               	movwf	___strtoxl@sign^0,c
  7908  000BB0  0E00               	movlw	0
  7909  000BB2  6E26               	movwf	___strtoxl@conv_done^0,c
  7910  000BB4  0E00               	movlw	0
  7911  000BB6  6E2C               	movwf	___strtoxl@skip^0,c
  7912  000BB8  0E2D               	movlw	45
  7913  000BBA  1833               	xorwf	___strtoxl@c^0,w,c
  7914  000BBC  A4D8               	btfss	status,2,c
  7915  000BBE  D01B               	goto	l15080
  7916  000BC0  0E01               	movlw	1
  7917  000BC2  6E2B               	movwf	___strtoxl@sign^0,c
  7918  000BC4                     l15078:
  7919  000BC4  4A31               	infsnz	___strtoxl@cp^0,f,c
  7920  000BC6  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7921  000BC8  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7922  000BCE  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7923  000BD4  0E00               	movlw	low (__mediumconst shr (0+16))
  7924  000BD6  6EF8               	movwf	tblptru,c
  7925  000BD8  0E0F               	movlw	(high __ramtop+-1)
  7926  000BDA  64F7               	cpfsgt	tblptrh,c
  7927  000BDC  D003               	bra	u14847
  7928  000BDE  0008               	tblrd		*
  7929  000BE0  50F5               	movf	tablat,w,c
  7930  000BE2  D007               	bra	u14840
  7931  000BE4                     u14847:
  7932  000BE4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7933  000BEA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7934  000BF0  50EF               	movf	indf0,w,c
  7935  000BF2                     u14840:
  7936  000BF2  6E33               	movwf	___strtoxl@c^0,c
  7937  000BF4  D004               	goto	l15084
  7938  000BF6                     l15080:
  7939  000BF6  0E2B               	movlw	43
  7940  000BF8  1833               	xorwf	___strtoxl@c^0,w,c
  7941  000BFA  B4D8               	btfsc	status,2,c
  7942  000BFC  D7E3               	goto	l15078
  7943  000BFE                     l15084:
  7944  000BFE  0E30               	movlw	48
  7945  000C00  1833               	xorwf	___strtoxl@c^0,w,c
  7946  000C02  A4D8               	btfss	status,2,c
  7947  000C04  D050               	goto	l15106
  7948  000C06  4A31               	infsnz	___strtoxl@cp^0,f,c
  7949  000C08  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7950  000C0A  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7951  000C10  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7952  000C16  0E00               	movlw	low (__mediumconst shr (0+16))
  7953  000C18  6EF8               	movwf	tblptru,c
  7954  000C1A  0E0F               	movlw	(high __ramtop+-1)
  7955  000C1C  64F7               	cpfsgt	tblptrh,c
  7956  000C1E  D003               	bra	u14877
  7957  000C20  0008               	tblrd		*
  7958  000C22  50F5               	movf	tablat,w,c
  7959  000C24  D007               	bra	u14870
  7960  000C26                     u14877:
  7961  000C26  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7962  000C2C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7963  000C32  50EF               	movf	indf0,w,c
  7964  000C34                     u14870:
  7965  000C34  6E33               	movwf	___strtoxl@c^0,c
  7966  000C36  5014               	movf	___strtoxl@base^0,w,c
  7967  000C38  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7968  000C3A  B4D8               	btfsc	status,2,c
  7969  000C3C  D005               	goto	u14890
  7970  000C3E  0E10               	movlw	16
  7971  000C40  1814               	xorwf	___strtoxl@base^0,w,c
  7972  000C42  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7973  000C44  A4D8               	btfss	status,2,c
  7974  000C46  D025               	goto	l15100
  7975  000C48                     u14890:
  7976  000C48  0E78               	movlw	120
  7977  000C4A  1833               	xorwf	___strtoxl@c^0,w,c
  7978  000C4C  B4D8               	btfsc	status,2,c
  7979  000C4E  D004               	goto	u14910
  7980  000C50  0E58               	movlw	88
  7981  000C52  1833               	xorwf	___strtoxl@c^0,w,c
  7982  000C54  A4D8               	btfss	status,2,c
  7983  000C56  D01D               	goto	l15100
  7984  000C58                     u14910:
  7985  000C58  0E00               	movlw	0
  7986  000C5A  6E15               	movwf	(___strtoxl@base+1)^0,c
  7987  000C5C  0E10               	movlw	16
  7988  000C5E  6E14               	movwf	___strtoxl@base^0,c
  7989  000C60  4A31               	infsnz	___strtoxl@cp^0,f,c
  7990  000C62  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7991  000C64  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7992  000C6A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7993  000C70  0E00               	movlw	low (__mediumconst shr (0+16))
  7994  000C72  6EF8               	movwf	tblptru,c
  7995  000C74  0E0F               	movlw	(high __ramtop+-1)
  7996  000C76  64F7               	cpfsgt	tblptrh,c
  7997  000C78  D003               	bra	u14927
  7998  000C7A  0008               	tblrd		*
  7999  000C7C  50F5               	movf	tablat,w,c
  8000  000C7E  D007               	bra	u14920
  8001  000C80                     u14927:
  8002  000C80  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8003  000C86  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8004  000C8C  50EF               	movf	indf0,w,c
  8005  000C8E                     u14920:
  8006  000C8E  6E33               	movwf	___strtoxl@c^0,c
  8007  000C90  D00A               	goto	l15106
  8008  000C92                     l15100:
  8009  000C92  0E01               	movlw	1
  8010  000C94  6E26               	movwf	___strtoxl@conv_done^0,c
  8011  000C96  5014               	movf	___strtoxl@base^0,w,c
  8012  000C98  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8013  000C9A  A4D8               	btfss	status,2,c
  8014  000C9C  D004               	goto	l15106
  8015  000C9E  0E00               	movlw	0
  8016  000CA0  6E15               	movwf	(___strtoxl@base+1)^0,c
  8017  000CA2  0E08               	movlw	8
  8018  000CA4  6E14               	movwf	___strtoxl@base^0,c
  8019  000CA6                     l15106:
  8020  000CA6  5014               	movf	___strtoxl@base^0,w,c
  8021  000CA8  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8022  000CAA  A4D8               	btfss	status,2,c
  8023  000CAC  D004               	goto	l4086
  8024  000CAE  0E00               	movlw	0
  8025  000CB0  6E15               	movwf	(___strtoxl@base+1)^0,c
  8026  000CB2  0E0A               	movlw	10
  8027  000CB4  6E14               	movwf	___strtoxl@base^0,c
  8028  000CB6                     l4086:
  8029  000CB6  5016               	movf	___strtoxl@is_signed^0,w,c
  8030  000CB8  B4D8               	btfsc	status,2,c
  8031  000CBA  D014               	goto	l4087
  8032  000CBC  502B               	movf	___strtoxl@sign^0,w,c
  8033  000CBE  A4D8               	btfss	status,2,c
  8034  000CC0  D008               	goto	l15114
  8035  000CC2  0EFF               	movlw	255
  8036  000CC4  6E27               	movwf	___strtoxl@limit^0,c
  8037  000CC6  0EFF               	movlw	255
  8038  000CC8  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8039  000CCA  0EFF               	movlw	255
  8040  000CCC  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8041  000CCE  0E7F               	movlw	127
  8042  000CD0  D007               	goto	L2
  8043  000CD2                     l15114:
  8044  000CD2  0E00               	movlw	0
  8045  000CD4  6E27               	movwf	___strtoxl@limit^0,c
  8046  000CD6  0E00               	movlw	0
  8047  000CD8  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8048  000CDA  0E00               	movlw	0
  8049  000CDC  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8050  000CDE  0E80               	movlw	128
  8051  000CE0                     L2:
  8052  000CE0  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  8053  000CE2  D004               	goto	l4093
  8054  000CE4                     l4087:
  8055  000CE4  6827               	setf	___strtoxl@limit^0,c
  8056  000CE6  6828               	setf	(___strtoxl@limit+1)^0,c
  8057  000CE8  6829               	setf	(___strtoxl@limit+2)^0,c
  8058  000CEA  682A               	setf	(___strtoxl@limit+3)^0,c
  8059  000CEC                     l4093:
  8060  000CEC  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  8061  000CF2  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  8062  000CF8  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  8063  000CFE  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  8064  000D04  0E9F               	movlw	159
  8065  000D06  6E17               	movwf	??___strtoxl^0,c
  8066  000D08  0EFF               	movlw	255
  8067  000D0A  6E18               	movwf	(??___strtoxl+1)^0,c
  8068  000D0C  5033               	movf	___strtoxl@c^0,w,c
  8069  000D0E  6E19               	movwf	(??___strtoxl+2)^0,c
  8070  000D10  6A1A               	clrf	(??___strtoxl+3)^0,c
  8071  000D12  0E20               	movlw	32
  8072  000D14  1219               	iorwf	(??___strtoxl+2)^0,f,c
  8073  000D16  0E00               	movlw	0
  8074  000D18  121A               	iorwf	(??___strtoxl+3)^0,f,c
  8075  000D1A  5017               	movf	??___strtoxl^0,w,c
  8076  000D1C  2619               	addwf	(??___strtoxl+2)^0,f,c
  8077  000D1E  5018               	movf	(??___strtoxl+1)^0,w,c
  8078  000D20  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8079  000D22  501A               	movf	(??___strtoxl+3)^0,w,c
  8080  000D24  E106               	bnz	u14970
  8081  000D26  0E1A               	movlw	26
  8082  000D28  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8083  000D2A  B0D8               	btfsc	status,0,c
  8084  000D2C  D002               	goto	u14970
  8085  000D2E  0E01               	movlw	1
  8086  000D30  D001               	goto	u14980
  8087  000D32                     u14970:
  8088  000D32  0E00               	movlw	0
  8089  000D34                     u14980:
  8090  000D34  6E21               	movwf	___strtoxl$7989^0,c
  8091  000D36  6A22               	clrf	(___strtoxl$7989+1)^0,c
  8092  000D38  5021               	movf	___strtoxl$7989^0,w,c
  8093  000D3A  1022               	iorwf	(___strtoxl$7989+1)^0,w,c
  8094  000D3C  B4D8               	btfsc	status,2,c
  8095  000D3E  D00A               	goto	l15124
  8096  000D40  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8097  000D46  6A09               	clrf	(toupper@c+1)^0,c
  8098  000D48  EC19  F03E         	call	_toupper	;wreg free
  8099  000D4C  5008               	movf	?_toupper^0,w,c
  8100  000D4E  0FC9               	addlw	201
  8101  000D50  6E33               	movwf	___strtoxl@c^0,c
  8102  000D52  D01C               	goto	l15132
  8103  000D54                     l15124:
  8104  000D54  0ED0               	movlw	208
  8105  000D56  6E17               	movwf	??___strtoxl^0,c
  8106  000D58  0EFF               	movlw	255
  8107  000D5A  6E18               	movwf	(??___strtoxl+1)^0,c
  8108  000D5C  5033               	movf	___strtoxl@c^0,w,c
  8109  000D5E  6E19               	movwf	(??___strtoxl+2)^0,c
  8110  000D60  6A1A               	clrf	(??___strtoxl+3)^0,c
  8111  000D62  5017               	movf	??___strtoxl^0,w,c
  8112  000D64  2619               	addwf	(??___strtoxl+2)^0,f,c
  8113  000D66  5018               	movf	(??___strtoxl+1)^0,w,c
  8114  000D68  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8115  000D6A  501A               	movf	(??___strtoxl+3)^0,w,c
  8116  000D6C  E106               	bnz	u15000
  8117  000D6E  0E0A               	movlw	10
  8118  000D70  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8119  000D72  B0D8               	btfsc	status,0,c
  8120  000D74  D002               	goto	u15000
  8121  000D76  0E01               	movlw	1
  8122  000D78  D001               	goto	u15010
  8123  000D7A                     u15000:
  8124  000D7A  0E00               	movlw	0
  8125  000D7C                     u15010:
  8126  000D7C  6E23               	movwf	___strtoxl$7990^0,c
  8127  000D7E  6A24               	clrf	(___strtoxl$7990+1)^0,c
  8128  000D80  5023               	movf	___strtoxl$7990^0,w,c
  8129  000D82  1024               	iorwf	(___strtoxl$7990+1)^0,w,c
  8130  000D84  B4D8               	btfsc	status,2,c
  8131  000D86  D07C               	goto	l15152
  8132  000D88  0E30               	movlw	48
  8133  000D8A  5E33               	subwf	___strtoxl@c^0,f,c
  8134  000D8C                     l15132:
  8135  000D8C  5033               	movf	___strtoxl@c^0,w,c
  8136  000D8E  6E17               	movwf	??___strtoxl^0,c
  8137  000D90  6A18               	clrf	(??___strtoxl+1)^0,c
  8138  000D92  5014               	movf	___strtoxl@base^0,w,c
  8139  000D94  5C17               	subwf	??___strtoxl^0,w,c
  8140  000D96  5018               	movf	(??___strtoxl+1)^0,w,c
  8141  000D98  0A80               	xorlw	128
  8142  000D9A  6E19               	movwf	(??___strtoxl+2)^0,c
  8143  000D9C  5015               	movf	(___strtoxl@base+1)^0,w,c
  8144  000D9E  0A80               	xorlw	128
  8145  000DA0  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8146  000DA2  B0D8               	btfsc	status,0,c
  8147  000DA4  D06D               	goto	l15152
  8148  000DA6  502C               	movf	___strtoxl@skip^0,w,c
  8149  000DA8  A4D8               	btfss	status,2,c
  8150  000DAA  D04F               	goto	l15148
  8151  000DAC  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8152  000DB2  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8153  000DB8  0E00               	movlw	0
  8154  000DBA  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8155  000DBC  0EFF               	movlw	-1
  8156  000DBE  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8157  000DC0  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8158  000DC2  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8159  000DC8  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8160  000DCE  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8161  000DD4  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8162  000DDA  ECE2  F03C         	call	___lmul	;wreg free
  8163  000DDE  5033               	movf	___strtoxl@c^0,w,c
  8164  000DE0  2402               	addwf	?___lmul^0,w,c
  8165  000DE2  6E2D               	movwf	___strtoxl@a^0,c
  8166  000DE4  0E00               	movlw	0
  8167  000DE6  2003               	addwfc	(?___lmul+1)^0,w,c
  8168  000DE8  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8169  000DEA  0E00               	movlw	0
  8170  000DEC  2004               	addwfc	(?___lmul+2)^0,w,c
  8171  000DEE  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8172  000DF0  0E00               	movlw	0
  8173  000DF2  2005               	addwfc	(?___lmul+3)^0,w,c
  8174  000DF4  6E30               	movwf	(___strtoxl@a+3)^0,c
  8175  000DF6  501B               	movf	___strtoxl@prev_a^0,w,c
  8176  000DF8  5C2D               	subwf	___strtoxl@a^0,w,c
  8177  000DFA  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8178  000DFC  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8179  000DFE  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8180  000E00  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8181  000E02  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8182  000E04  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8183  000E06  A0D8               	btfss	status,0,c
  8184  000E08  D00D               	goto	u15070
  8185  000E0A  5016               	movf	___strtoxl@is_signed^0,w,c
  8186  000E0C  B4D8               	btfsc	status,2,c
  8187  000E0E  D01D               	goto	l15148
  8188  000E10  502D               	movf	___strtoxl@a^0,w,c
  8189  000E12  5C27               	subwf	___strtoxl@limit^0,w,c
  8190  000E14  502E               	movf	(___strtoxl@a+1)^0,w,c
  8191  000E16  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8192  000E18  502F               	movf	(___strtoxl@a+2)^0,w,c
  8193  000E1A  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8194  000E1C  5030               	movf	(___strtoxl@a+3)^0,w,c
  8195  000E1E  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8196  000E20  B0D8               	btfsc	status,0,c
  8197  000E22  D013               	goto	l15148
  8198  000E24                     u15070:
  8199  000E24  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8200  000E2A  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8201  000E30  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8202  000E36  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8203  000E3C  0E00               	movlw	0
  8204  000E3E  0101               	movlb	1	; () banked
  8205  000E40  6F56               	movwf	(_errno+1)& (0+255),b
  8206  000E42  0E22               	movlw	34
  8207  000E44  6F55               	movwf	_errno& (0+255),b
  8208  000E46  0E01               	movlw	1
  8209  000E48  6E2C               	movwf	___strtoxl@skip^0,c
  8210  000E4A                     l15148:
  8211  000E4A  4A31               	infsnz	___strtoxl@cp^0,f,c
  8212  000E4C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8213  000E4E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8214  000E54  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8215  000E5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8216  000E5C  6EF8               	movwf	tblptru,c
  8217  000E5E  0E0F               	movlw	(high __ramtop+-1)
  8218  000E60  64F7               	cpfsgt	tblptrh,c
  8219  000E62  D003               	bra	u15087
  8220  000E64  0008               	tblrd		*
  8221  000E66  50F5               	movf	tablat,w,c
  8222  000E68  D007               	bra	u15080
  8223  000E6A                     u15087:
  8224  000E6A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8225  000E70  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8226  000E76  50EF               	movf	indf0,w,c
  8227  000E78                     u15080:
  8228  000E78  6E33               	movwf	___strtoxl@c^0,c
  8229  000E7A  0E01               	movlw	1
  8230  000E7C  6E26               	movwf	___strtoxl@conv_done^0,c
  8231  000E7E  D736               	goto	l4093
  8232  000E80                     l15152:
  8233  000E80  502C               	movf	___strtoxl@skip^0,w,c
  8234  000E82  A4D8               	btfss	status,2,c
  8235  000E84  D00B               	goto	l15158
  8236  000E86  502B               	movf	___strtoxl@sign^0,w,c
  8237  000E88  B4D8               	btfsc	status,2,c
  8238  000E8A  D008               	goto	l15158
  8239  000E8C  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8240  000E8E  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8241  000E90  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8242  000E92  6C2D               	negf	___strtoxl@a^0,c
  8243  000E94  0E00               	movlw	0
  8244  000E96  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8245  000E98  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8246  000E9A  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8247  000E9C                     l15158:
  8248  000E9C  5012               	movf	___strtoxl@endptr^0,w,c
  8249  000E9E  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8250  000EA0  B4D8               	btfsc	status,2,c
  8251  000EA2  D015               	goto	l15166
  8252  000EA4  5026               	movf	___strtoxl@conv_done^0,w,c
  8253  000EA6  A4D8               	btfss	status,2,c
  8254  000EA8  D006               	goto	l15164
  8255  000EAA  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8256  000EB0  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8257  000EB6                     l15164:
  8258  000EB6  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8259  000EBC  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8260  000EC2  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8261  000EC8  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8262  000ECE                     l15166:
  8263  000ECE  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8264  000ED4  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8265  000EDA  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8266  000EE0  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8267  000EE6  0012               	return		;funcret
  8268  000EE8                     __end_of___strtoxl:
  8269                           	opt callstack 0
  8270                           
  8271 ;; *************** function ___lmul *****************
  8272 ;; Defined at:
  8273 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  multiplier      4    1[COMRAM] unsigned long 
  8276 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  product         4    9[COMRAM] unsigned long 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  4    1[COMRAM] unsigned long 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2, status,0
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8288 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;Total ram usage:       12 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    7
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		___strtoxl
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text31
  8303  0079C4                     __ptext31:
  8304                           	opt callstack 0
  8305  0079C4                     ___lmul:
  8306                           	opt callstack 18
  8307                           
  8308                           ;incstack = 0
  8309  0079C4  0E00               	movlw	0
  8310  0079C6  6E0A               	movwf	___lmul@product^0,c
  8311  0079C8  0E00               	movlw	0
  8312  0079CA  6E0B               	movwf	(___lmul@product+1)^0,c
  8313  0079CC  0E00               	movlw	0
  8314  0079CE  6E0C               	movwf	(___lmul@product+2)^0,c
  8315  0079D0  0E00               	movlw	0
  8316  0079D2  6E0D               	movwf	(___lmul@product+3)^0,c
  8317  0079D4                     l14532:
  8318  0079D4  A002               	btfss	___lmul@multiplier^0,0,c
  8319  0079D6  D008               	goto	l14536
  8320  0079D8  5006               	movf	___lmul@multiplicand^0,w,c
  8321  0079DA  260A               	addwf	___lmul@product^0,f,c
  8322  0079DC  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8323  0079DE  220B               	addwfc	(___lmul@product+1)^0,f,c
  8324  0079E0  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8325  0079E2  220C               	addwfc	(___lmul@product+2)^0,f,c
  8326  0079E4  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8327  0079E6  220D               	addwfc	(___lmul@product+3)^0,f,c
  8328  0079E8                     l14536:
  8329  0079E8  90D8               	bcf	status,0,c
  8330  0079EA  3606               	rlcf	___lmul@multiplicand^0,f,c
  8331  0079EC  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8332  0079EE  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8333  0079F0  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8334  0079F2  90D8               	bcf	status,0,c
  8335  0079F4  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8336  0079F6  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8337  0079F8  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8338  0079FA  3202               	rrcf	___lmul@multiplier^0,f,c
  8339  0079FC  5002               	movf	___lmul@multiplier^0,w,c
  8340  0079FE  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8341  007A00  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8342  007A02  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8343  007A04  A4D8               	btfss	status,2,c
  8344  007A06  D7E6               	goto	l14532
  8345  007A08  0060  F028  F002   	movff	___lmul@product,?___lmul
  8346  007A0E  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8347  007A14  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8348  007A1A  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8349  007A20  0012               	return		;funcret
  8350  007A22                     __end_of___lmul:
  8351                           	opt callstack 0
  8352                           
  8353 ;; *************** function _cmdRstCAD *****************
  8354 ;; Defined at:
  8355 ;;		line 557 in file "../app/app_src/application.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 3F/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;Total ram usage:        0 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:   16
  8376 ;; This function calls:
  8377 ;;		_printf
  8378 ;; This function is called by:
  8379 ;;		_executeATCommand
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text32
  8384  008C6A                     __ptext32:
  8385                           	opt callstack 0
  8386  008C6A                     _cmdRstCAD:
  8387                           	opt callstack 12
  8388                           
  8389                           ;../app/app_src/application.c: 558:  cadCounter = 0;
  8390                           
  8391                           ;incstack = 0
  8392  008C6A  0E00               	movlw	0
  8393  008C6C  0100               	movlb	0	; () banked
  8394  008C6E  6FD4               	movwf	_cadCounter& (0+255),b
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;../app/app_src/application.c: 559:  printf("OK\r\n");
  8398  008C70  0ED6               	movlw	low STR_12
  8399  008C72  6F75               	movwf	printf@fmt& (0+255),b
  8400  008C74  0EFF               	movlw	high STR_12
  8401  008C76  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8402  008C78  EC77  F044         	call	_printf	;wreg free
  8403                           
  8404                           ; BSR set to: 0
  8405  008C7C  0012               	return		;funcret
  8406  008C7E                     __end_of_cmdRstCAD:
  8407                           	opt callstack 0
  8408                           
  8409 ;; *************** function _cmdReset *****************
  8410 ;; Defined at:
  8411 ;;		line 697 in file "../app/app_src/application.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		None
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    7
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_executeATCommand
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text33
  8440  008DFE                     __ptext33:
  8441                           	opt callstack 0
  8442  008DFE                     _cmdReset:
  8443                           	opt callstack 21
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;incstack = 0
  8447  008DFE  00FF               	reset		;# 
  8448  008E00                     l376:
  8449  008E00  D7FF               	goto	l376
  8450  008E02                     __end_of_cmdReset:
  8451                           	opt callstack 0
  8452                           
  8453 ;; *************** function _cmdRecv *****************
  8454 ;; Defined at:
  8455 ;;		line 378 in file "../app/app_src/application.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  i               1   89[COMRAM] unsigned char 
  8460 ;;  buf_id          1   90[COMRAM] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 6/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        4 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:   16
  8477 ;; This function calls:
  8478 ;;		_printf
  8479 ;;		_putch
  8480 ;; This function is called by:
  8481 ;;		_executeATCommand
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text34
  8486  005FB0                     __ptext34:
  8487                           	opt callstack 0
  8488  005FB0                     _cmdRecv:
  8489                           	opt callstack 12
  8490                           
  8491                           ;../app/app_src/application.c: 380:     uint8_t buf_id = 0;
  8492                           
  8493                           ;incstack = 0
  8494  005FB0  0E00               	movlw	0
  8495  005FB2  6E5B               	movwf	cmdRecv@buf_id^0,c
  8496                           
  8497                           ;../app/app_src/application.c: 381:     while(buf_id++ < 5){
  8498  005FB4  D050               	goto	l15760
  8499  005FB6                     l15744:
  8500                           
  8501                           ;../app/app_src/application.c: 382:         if(!rx_buffer[buf_id].free){
  8502  005FB6  505B               	movf	cmdRecv@buf_id^0,w,c
  8503  005FB8  0D7A               	mullw	122
  8504  005FBA  0E6A               	movlw	low _rx_buffer
  8505  005FBC  24F3               	addwf	243,w,c
  8506  005FBE  6ED9               	movwf	fsr2l,c
  8507  005FC0  0E08               	movlw	high _rx_buffer
  8508  005FC2  20F4               	addwfc	prodh,w,c
  8509  005FC4  6EDA               	movwf	fsr2h,c
  8510  005FC6  B0DF               	btfsc	indf2,0,c
  8511  005FC8  D046               	goto	l15760
  8512                           
  8513                           ;../app/app_src/application.c: 383:             uint8_t i = 0;
  8514  005FCA  0E00               	movlw	0
  8515  005FCC  6E5A               	movwf	cmdRecv@i^0,c
  8516                           
  8517                           ;../app/app_src/application.c: 385:             printf("%04X:", rx_buffer[buf_id].rx_ind
      +                          .srcAddr);
  8518  005FCE  0EA7               	movlw	low STR_17
  8519  005FD0  0100               	movlb	0	; () banked
  8520  005FD2  6F75               	movwf	printf@fmt& (0+255),b
  8521  005FD4  0EFF               	movlw	high STR_17
  8522  005FD6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8523  005FD8  505B               	movf	cmdRecv@buf_id^0,w,c
  8524  005FDA  0D7A               	mullw	122
  8525  005FDC  0E6B               	movlw	low (_rx_buffer+1)
  8526  005FDE  24F3               	addwf	243,w,c
  8527  005FE0  6ED9               	movwf	fsr2l,c
  8528  005FE2  0E08               	movlw	high (_rx_buffer+1)
  8529  005FE4  20F4               	addwfc	prodh,w,c
  8530  005FE6  6EDA               	movwf	fsr2h,c
  8531  005FE8  006F FF78  F077    	movff	postinc2,?_printf+2
  8532  005FEE  006F FF74  F078    	movff	postdec2,?_printf+3
  8533  005FF4  EC77  F044         	call	_printf	;wreg free
  8534                           
  8535                           ;../app/app_src/application.c: 386:             while(rx_buffer[buf_id].rx_ind.size--){
  8536  005FF8  D018               	goto	l15754
  8537  005FFA                     l15750:
  8538                           
  8539                           ;../app/app_src/application.c: 387:                 putch(rx_buffer[buf_id].payload[i++]
      +                          );
  8540  005FFA  505B               	movf	cmdRecv@buf_id^0,w,c
  8541  005FFC  0D7A               	mullw	122
  8542  005FFE  0E6A               	movlw	low _rx_buffer
  8543  006000  6E58               	movwf	??_cmdRecv^0,c
  8544  006002  0E08               	movlw	high _rx_buffer
  8545  006004  6E59               	movwf	(??_cmdRecv+1)^0,c
  8546  006006  0E0D               	movlw	13
  8547  006008  2658               	addwf	??_cmdRecv^0,f,c
  8548  00600A  0E00               	movlw	0
  8549  00600C  2259               	addwfc	(??_cmdRecv+1)^0,f,c
  8550  00600E  50F3               	movf	243,w,c
  8551  006010  2658               	addwf	??_cmdRecv^0,f,c
  8552  006012  50F4               	movf	244,w,c
  8553  006014  2259               	addwfc	(??_cmdRecv+1)^0,f,c
  8554  006016  505A               	movf	cmdRecv@i^0,w,c
  8555  006018  2458               	addwf	??_cmdRecv^0,w,c
  8556  00601A  6ED9               	movwf	fsr2l,c
  8557  00601C  0E00               	movlw	0
  8558  00601E  2059               	addwfc	(??_cmdRecv+1)^0,w,c
  8559  006020  6EDA               	movwf	fsr2h,c
  8560  006022  50DF               	movf	indf2,w,c
  8561  006024  ECE3  F046         	call	_putch
  8562                           
  8563                           ; BSR set to: 57
  8564  006028  2A5A               	incf	cmdRecv@i^0,f,c
  8565  00602A                     l15754:
  8566                           
  8567                           ;../app/app_src/application.c: 386:             while(rx_buffer[buf_id].rx_ind.size--){
  8568  00602A  505B               	movf	cmdRecv@buf_id^0,w,c
  8569  00602C  0D7A               	mullw	122
  8570  00602E  0E74               	movlw	low (_rx_buffer+10)
  8571  006030  24F3               	addwf	243,w,c
  8572  006032  6ED9               	movwf	fsr2l,c
  8573  006034  0E08               	movlw	high (_rx_buffer+10)
  8574  006036  20F4               	addwfc	prodh,w,c
  8575  006038  6EDA               	movwf	fsr2h,c
  8576  00603A  06DF               	decf	indf2,f,c
  8577  00603C  28DE               	incf	postinc2,w,c
  8578  00603E  A4D8               	btfss	status,2,c
  8579  006040  D7DC               	goto	l15750
  8580                           
  8581                           ;../app/app_src/application.c: 389:             rx_buffer[buf_id].free = 1;
  8582  006042  505B               	movf	cmdRecv@buf_id^0,w,c
  8583  006044  0D7A               	mullw	122
  8584  006046  0E6A               	movlw	low _rx_buffer
  8585  006048  24F3               	addwf	243,w,c
  8586  00604A  6ED9               	movwf	fsr2l,c
  8587  00604C  0E08               	movlw	high _rx_buffer
  8588  00604E  20F4               	addwfc	prodh,w,c
  8589  006050  6EDA               	movwf	fsr2h,c
  8590  006052  80DF               	bsf	indf2,0,c
  8591  006054  0012               	return	
  8592  006056                     l15760:
  8593                           
  8594                           ;../app/app_src/application.c: 381:     while(buf_id++ < 5){
  8595  006056  2A5B               	incf	cmdRecv@buf_id^0,f,c
  8596  006058  045B               	decf	cmdRecv@buf_id^0,w,c
  8597  00605A  6E58               	movwf	??_cmdRecv^0,c
  8598  00605C  0E04               	movlw	4
  8599  00605E  6458               	cpfsgt	??_cmdRecv^0,c
  8600  006060  D7AA               	goto	l15744
  8601                           
  8602                           ;../app/app_src/application.c: 393:     printf("NOT OK:%u\r\n", (uint16_t)NO_RX_MESSAGES
      +                          );
  8603  006062  0EC5               	movlw	low STR_3
  8604  006064  0100               	movlb	0	; () banked
  8605  006066  6F75               	movwf	printf@fmt& (0+255),b
  8606  006068  0EFE               	movlw	high STR_3
  8607  00606A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8608  00606C  0E00               	movlw	0
  8609  00606E  6F78               	movwf	(?_printf+3)& (0+255),b
  8610  006070  0E10               	movlw	16
  8611  006072  6F77               	movwf	(?_printf+2)& (0+255),b
  8612  006074  EC77  F044         	call	_printf	;wreg free
  8613  006078  0012               	return		;funcret
  8614  00607A                     __end_of_cmdRecv:
  8615                           	opt callstack 0
  8616                           
  8617 ;; *************** function _cmdNaddr *****************
  8618 ;; Defined at:
  8619 ;;		line 346 in file "../app/app_src/application.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 3F/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:   16
  8640 ;; This function calls:
  8641 ;;		_printf
  8642 ;; This function is called by:
  8643 ;;		_executeATCommand
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text35
  8648  008BAC                     __ptext35:
  8649                           	opt callstack 0
  8650  008BAC                     _cmdNaddr:
  8651                           	opt callstack 12
  8652                           
  8653                           ;../app/app_src/application.c: 347:  printf("NADDR=%02X\r\n",currentNetID);
  8654                           
  8655                           ;incstack = 0
  8656  008BAC  0E85               	movlw	low STR_14
  8657  008BAE  0100               	movlb	0	; () banked
  8658  008BB0  6F75               	movwf	printf@fmt& (0+255),b
  8659  008BB2  0EFE               	movlw	high STR_14
  8660  008BB4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8661  008BB6  0060  F3E0  F077   	movff	_currentNetID,?_printf+2
  8662  008BBC  6B78               	clrf	(?_printf+3)& (0+255),b
  8663  008BBE  EC77  F044         	call	_printf	;wreg free
  8664                           
  8665                           ; BSR set to: 0
  8666  008BC2  0012               	return		;funcret
  8667  008BC4                     __end_of_cmdNaddr:
  8668                           	opt callstack 0
  8669                           
  8670 ;; *************** function _cmdMac *****************
  8671 ;; Defined at:
  8672 ;;		line 403 in file "../app/app_src/application.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  i               1   88[COMRAM] unsigned char 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 3F/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;Total ram usage:        2 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:   16
  8693 ;; This function calls:
  8694 ;;		_printf
  8695 ;; This function is called by:
  8696 ;;		_executeATCommand
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text36
  8701  007E0A                     __ptext36:
  8702                           	opt callstack 0
  8703  007E0A                     _cmdMac:
  8704                           	opt callstack 12
  8705                           
  8706                           ;../app/app_src/application.c: 404:  printf("MAC=");
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;incstack = 0
  8710  007E0A  0EDB               	movlw	low STR_19
  8711  007E0C  0100               	movlb	0	; () banked
  8712  007E0E  6F75               	movwf	printf@fmt& (0+255),b
  8713  007E10  0EFF               	movlw	high STR_19
  8714  007E12  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8715  007E14  EC77  F044         	call	_printf	;wreg free
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;../app/app_src/application.c: 405:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8719  007E18  0E00               	movlw	0
  8720  007E1A  6E59               	movwf	cmdMac@i^0,c
  8721  007E1C                     l15774:
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;../app/app_src/application.c: 406:   printf("%02X", EUIDbyte[i]);
  8725  007E1C  0EF4               	movlw	low STR_20
  8726  007E1E  6F75               	movwf	printf@fmt& (0+255),b
  8727  007E20  0EFF               	movlw	high STR_20
  8728  007E22  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8729  007E24  0ED2               	movlw	low _EUIDbyte
  8730  007E26  2459               	addwf	cmdMac@i^0,w,c
  8731  007E28  6ED9               	movwf	fsr2l,c
  8732  007E2A  6ADA               	clrf	fsr2h,c
  8733  007E2C  0E01               	movlw	high _EUIDbyte
  8734  007E2E  22DA               	addwfc	fsr2h,f,c
  8735  007E30  50DF               	movf	indf2,w,c
  8736  007E32  6E58               	movwf	??_cmdMac^0,c
  8737  007E34  5058               	movf	??_cmdMac^0,w,c
  8738  007E36  6F77               	movwf	(?_printf+2)& (0+255),b
  8739  007E38  6B78               	clrf	(?_printf+3)& (0+255),b
  8740  007E3A  EC77  F044         	call	_printf	;wreg free
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;../app/app_src/application.c: 407:  }
  8744  007E3E  2A59               	incf	cmdMac@i^0,f,c
  8745                           
  8746                           ; BSR set to: 0
  8747  007E40  0E0B               	movlw	11
  8748  007E42  6459               	cpfsgt	cmdMac@i^0,c
  8749  007E44  D7EB               	goto	l15774
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;../app/app_src/application.c: 408:  printf("\r\n");
  8753  007E46  0ED3               	movlw	low (STR_137+2)
  8754  007E48  6F75               	movwf	printf@fmt& (0+255),b
  8755  007E4A  0EFF               	movlw	high (STR_137+2)
  8756  007E4C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8757  007E4E  EC77  F044         	call	_printf	;wreg free
  8758                           
  8759                           ; BSR set to: 0
  8760  007E52  0012               	return		;funcret
  8761  007E54                     __end_of_cmdMac:
  8762                           	opt callstack 0
  8763                           
  8764 ;; *************** function _cmdI *****************
  8765 ;; Defined at:
  8766 ;;		line 221 in file "../app/app_src/application.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 3F/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;Total ram usage:        0 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:   17
  8787 ;; This function calls:
  8788 ;;		_sendInfo
  8789 ;; This function is called by:
  8790 ;;		_executeATCommand
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text37
  8795  008DE6                     __ptext37:
  8796                           	opt callstack 0
  8797  008DE6                     _cmdI:
  8798                           	opt callstack 11
  8799                           
  8800                           ;../app/app_src/application.c: 223:     sendInfo();
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;incstack = 0
  8804  008DE6  EC23  F03C         	call	_sendInfo	;wreg free
  8805                           
  8806                           ; BSR set to: 0
  8807  008DEA  0012               	return		;funcret
  8808  008DEC                     __end_of_cmdI:
  8809                           	opt callstack 0
  8810                           
  8811 ;; *************** function _sendInfo *****************
  8812 ;; Defined at:
  8813 ;;		line 1165 in file "../app/app_src/application.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;		None
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;		None
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      void 
  8820 ;; Registers used:
  8821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 3F/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;Total ram usage:        0 bytes
  8832 ;; Hardware stack levels used:    1
  8833 ;; Hardware stack levels required when called:   16
  8834 ;; This function calls:
  8835 ;;		_printf
  8836 ;; This function is called by:
  8837 ;;		_cmdI
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           	psect	text38
  8842  007846                     __ptext38:
  8843                           	opt callstack 0
  8844  007846                     _sendInfo:
  8845                           	opt callstack 11
  8846                           
  8847                           ;../app/app_src/application.c: 1167:     printf("LoRa Mesh\r\n");
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;incstack = 0
  8851  007846  0EB9               	movlw	low STR_133
  8852  007848  0100               	movlb	0	; () banked
  8853  00784A  6F75               	movwf	printf@fmt& (0+255),b
  8854  00784C  0EFE               	movlw	high STR_133
  8855  00784E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8856  007850  EC77  F044         	call	_printf	;wreg free
  8857  007854  0EF7               	movlw	low STR_134
  8858  007856  6F75               	movwf	printf@fmt& (0+255),b
  8859  007858  0EFD               	movlw	high STR_134
  8860  00785A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8861  00785C  0E00               	movlw	0
  8862  00785E  6F78               	movwf	(?_printf+3)& (0+255),b
  8863  007860  0E01               	movlw	1
  8864  007862  6F77               	movwf	(?_printf+2)& (0+255),b
  8865  007864  0E00               	movlw	0
  8866  007866  6F7A               	movwf	(?_printf+5)& (0+255),b
  8867  007868  0E00               	movlw	0
  8868  00786A  6F79               	movwf	(?_printf+4)& (0+255),b
  8869  00786C  EC77  F044         	call	_printf	;wreg free
  8870  007870  0EDB               	movlw	low STR_135
  8871  007872  6F75               	movwf	printf@fmt& (0+255),b
  8872  007874  0EFD               	movlw	high STR_135
  8873  007876  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8874  007878  0E00               	movlw	0
  8875  00787A  6F78               	movwf	(?_printf+3)& (0+255),b
  8876  00787C  0E02               	movlw	2
  8877  00787E  6F77               	movwf	(?_printf+2)& (0+255),b
  8878  007880  0E00               	movlw	0
  8879  007882  6F7A               	movwf	(?_printf+5)& (0+255),b
  8880  007884  0E01               	movlw	1
  8881  007886  6F79               	movwf	(?_printf+4)& (0+255),b
  8882  007888  EC77  F044         	call	_printf	;wreg free
  8883                           
  8884                           ;../app/app_src/application.c: 1171:     printf("Region ");
  8885  00788C  0E3A               	movlw	low STR_136
  8886  00788E  6F75               	movwf	printf@fmt& (0+255),b
  8887  007890  0EFF               	movlw	high STR_136
  8888  007892  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8889  007894  EC77  F044         	call	_printf	;wreg free
  8890                           
  8891                           ;../app/app_src/application.c: 1173:     printf("NA\r\n");
  8892  007898  0ED1               	movlw	low STR_137
  8893  00789A  6F75               	movwf	printf@fmt& (0+255),b
  8894  00789C  0EFF               	movlw	high STR_137
  8895  00789E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8896  0078A0  EC77  F044         	call	_printf	;wreg free
  8897                           
  8898                           ; BSR set to: 0
  8899  0078A4  0012               	return		;funcret
  8900  0078A6                     __end_of_sendInfo:
  8901                           	opt callstack 0
  8902                           
  8903 ;; *************** function _cmdGetTX *****************
  8904 ;; Defined at:
  8905 ;;		line 621 in file "../app/app_src/application.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;		None
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 3F/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8923 ;;Total ram usage:        0 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:   16
  8926 ;; This function calls:
  8927 ;;		_printf
  8928 ;; This function is called by:
  8929 ;;		_executeATCommand
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text39
  8934  008BC4                     __ptext39:
  8935                           	opt callstack 0
  8936  008BC4                     _cmdGetTX:
  8937                           	opt callstack 12
  8938                           
  8939                           ;../app/app_src/application.c: 622:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;incstack = 0
  8943  008BC4  0E77               	movlw	low STR_38
  8944  008BC6  0100               	movlb	0	; () banked
  8945  008BC8  6F75               	movwf	printf@fmt& (0+255),b
  8946  008BCA  0EFE               	movlw	high STR_38
  8947  008BCC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8948  008BCE  0060  F330  F077   	movff	_TXPower,?_printf+2
  8949  008BD4  6B78               	clrf	(?_printf+3)& (0+255),b
  8950  008BD6  EC77  F044         	call	_printf	;wreg free
  8951                           
  8952                           ; BSR set to: 0
  8953  008BDA  0012               	return		;funcret
  8954  008BDC                     __end_of_cmdGetTX:
  8955                           	opt callstack 0
  8956                           
  8957 ;; *************** function _cmdGetTTL *****************
  8958 ;; Defined at:
  8959 ;;		line 519 in file "../app/app_src/application.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;		None
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;		None
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      void 
  8966 ;; Registers used:
  8967 ;;		None
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;Total ram usage:        0 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:    7
  8980 ;; This function calls:
  8981 ;;		Nothing
  8982 ;; This function is called by:
  8983 ;;		_executeATCommand
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text40
  8988  008E06                     __ptext40:
  8989                           	opt callstack 0
  8990  008E06                     _cmdGetTTL:
  8991                           	opt callstack 21
  8992                           
  8993                           ;../app/app_src/application.c: 521:  return;
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;incstack = 0
  8997  008E06  0012               	return		;funcret
  8998  008E08                     __end_of_cmdGetTTL:
  8999                           	opt callstack 0
  9000                           
  9001 ;; *************** function _cmdGetSF *****************
  9002 ;; Defined at:
  9003 ;;		line 763 in file "../app/app_src/application.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 3F/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:   16
  9024 ;; This function calls:
  9025 ;;		_printf
  9026 ;; This function is called by:
  9027 ;;		_executeATCommand
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text41
  9032  008BDC                     __ptext41:
  9033                           	opt callstack 0
  9034  008BDC                     _cmdGetSF:
  9035                           	opt callstack 12
  9036                           
  9037                           ;../app/app_src/application.c: 764:     printf("SF=%u\r\n", current_sf);
  9038                           
  9039                           ;incstack = 0
  9040  008BDC  0E32               	movlw	low STR_57
  9041  008BDE  0100               	movlb	0	; () banked
  9042  008BE0  6F75               	movwf	printf@fmt& (0+255),b
  9043  008BE2  0EFF               	movlw	high STR_57
  9044  008BE4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9045  008BE6  0060  F33C  F077   	movff	_current_sf,?_printf+2
  9046  008BEC  6B78               	clrf	(?_printf+3)& (0+255),b
  9047  008BEE  EC77  F044         	call	_printf	;wreg free
  9048                           
  9049                           ; BSR set to: 0
  9050  008BF2  0012               	return		;funcret
  9051  008BF4                     __end_of_cmdGetSF:
  9052                           	opt callstack 0
  9053                           
  9054 ;; *************** function _cmdGetRxCnt *****************
  9055 ;; Defined at:
  9056 ;;		line 798 in file "../app/app_src/application.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  9059 ;;		 -> atCommand(80), 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  buf_id          1   91[COMRAM] unsigned char 
  9062 ;;  count           1   90[COMRAM] unsigned char 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 3F/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9075 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;Total ram usage:        5 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:   16
  9079 ;; This function calls:
  9080 ;;		_printf
  9081 ;; This function is called by:
  9082 ;;		_executeATCommand
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           	psect	text42
  9087  007E54                     __ptext42:
  9088                           	opt callstack 0
  9089  007E54                     _cmdGetRxCnt:
  9090                           	opt callstack 12
  9091                           
  9092                           ;../app/app_src/application.c: 799:     uint8_t count = 0, buf_id = 0;
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;incstack = 0
  9096  007E54  0E00               	movlw	0
  9097  007E56  6E5B               	movwf	cmdGetRxCnt@count^0,c
  9098  007E58  0E00               	movlw	0
  9099  007E5A  6E5C               	movwf	cmdGetRxCnt@buf_id^0,c
  9100                           
  9101                           ;../app/app_src/application.c: 800:     while(buf_id++ < 5){
  9102  007E5C  D00A               	goto	l16010
  9103  007E5E                     l16006:
  9104                           
  9105                           ;../app/app_src/application.c: 801:         if(!rx_buffer[buf_id].free){
  9106  007E5E  505C               	movf	cmdGetRxCnt@buf_id^0,w,c
  9107  007E60  0D7A               	mullw	122
  9108  007E62  0E6A               	movlw	low _rx_buffer
  9109  007E64  24F3               	addwf	243,w,c
  9110  007E66  6ED9               	movwf	fsr2l,c
  9111  007E68  0E08               	movlw	high _rx_buffer
  9112  007E6A  20F4               	addwfc	prodh,w,c
  9113  007E6C  6EDA               	movwf	fsr2h,c
  9114  007E6E  A0DF               	btfss	indf2,0,c
  9115                           
  9116                           ;../app/app_src/application.c: 802:             count++;
  9117  007E70  2A5B               	incf	cmdGetRxCnt@count^0,f,c
  9118  007E72                     l16010:
  9119                           
  9120                           ;../app/app_src/application.c: 800:     while(buf_id++ < 5){
  9121  007E72  2A5C               	incf	cmdGetRxCnt@buf_id^0,f,c
  9122  007E74  045C               	decf	cmdGetRxCnt@buf_id^0,w,c
  9123  007E76  6E5A               	movwf	??_cmdGetRxCnt^0,c
  9124  007E78  0E04               	movlw	4
  9125  007E7A  645A               	cpfsgt	??_cmdGetRxCnt^0,c
  9126  007E7C  D7F0               	goto	l16006
  9127                           
  9128                           ;../app/app_src/application.c: 805:     printf("RXCNT=%u/%u\r\n", count, 5);
  9129  007E7E  0E69               	movlw	low STR_61
  9130  007E80  0100               	movlb	0	; () banked
  9131  007E82  6F75               	movwf	printf@fmt& (0+255),b
  9132  007E84  0EFE               	movlw	high STR_61
  9133  007E86  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9134  007E88  0060  F16C  F077   	movff	cmdGetRxCnt@count,?_printf+2
  9135  007E8E  6B78               	clrf	(?_printf+3)& (0+255),b
  9136  007E90  0E00               	movlw	0
  9137  007E92  6F7A               	movwf	(?_printf+5)& (0+255),b
  9138  007E94  0E05               	movlw	5
  9139  007E96  6F79               	movwf	(?_printf+4)& (0+255),b
  9140  007E98  EC77  F044         	call	_printf	;wreg free
  9141                           
  9142                           ; BSR set to: 0
  9143  007E9C  0012               	return		;funcret
  9144  007E9E                     __end_of_cmdGetRxCnt:
  9145                           	opt callstack 0
  9146                           
  9147 ;; *************** function _cmdGetRFCH *****************
  9148 ;; Defined at:
  9149 ;;		line 585 in file "../app/app_src/application.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 3F/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;Total ram usage:        0 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:   16
  9170 ;; This function calls:
  9171 ;;		_printf
  9172 ;; This function is called by:
  9173 ;;		_executeATCommand
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text43
  9178  008ADA                     __ptext43:
  9179                           	opt callstack 0
  9180  008ADA                     _cmdGetRFCH:
  9181                           	opt callstack 12
  9182                           
  9183                           ;../app/app_src/application.c: 586:  printf("CHANNEL=%u\r\n",(channel + 1));
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;incstack = 0
  9187  008ADA  0E9F               	movlw	low STR_34
  9188  008ADC  0100               	movlb	0	; () banked
  9189  008ADE  6F75               	movwf	printf@fmt& (0+255),b
  9190  008AE0  0EFE               	movlw	high STR_34
  9191  008AE2  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9192  008AE4  0E01               	movlw	1
  9193  008AE6  25CE               	addwf	_channel& (0+255),w,b
  9194  008AE8  6F77               	movwf	(?_printf+2)& (0+255),b
  9195  008AEA  6B78               	clrf	(?_printf+3)& (0+255),b
  9196  008AEC  0E00               	movlw	0
  9197  008AEE  2378               	addwfc	(?_printf+3)& (0+255),f,b
  9198  008AF0  EC77  F044         	call	_printf	;wreg free
  9199                           
  9200                           ; BSR set to: 0
  9201  008AF4  0012               	return		;funcret
  9202  008AF6                     __end_of_cmdGetRFCH:
  9203                           	opt callstack 0
  9204                           
  9205 ;; *************** function _cmdGetMode *****************
  9206 ;; Defined at:
  9207 ;;		line 569 in file "../app/app_src/application.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      void 
  9214 ;; Registers used:
  9215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 3F/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;Total ram usage:        0 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:   16
  9228 ;; This function calls:
  9229 ;;		_printf
  9230 ;; This function is called by:
  9231 ;;		_executeATCommand
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           	psect	text44
  9236  008CD2                     __ptext44:
  9237                           	opt callstack 0
  9238  008CD2                     _cmdGetMode:
  9239                           	opt callstack 12
  9240                           
  9241                           ;../app/app_src/application.c: 571:   printf("MODE = REPEATER\r\n");
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;incstack = 0
  9245  008CD2  0E38               	movlw	low STR_32
  9246  008CD4  0100               	movlb	0	; () banked
  9247  008CD6  6F75               	movwf	printf@fmt& (0+255),b
  9248  008CD8  0EFE               	movlw	high STR_32
  9249  008CDA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9250  008CDC  EC77  F044         	call	_printf	;wreg free
  9251                           
  9252                           ; BSR set to: 0
  9253                           
  9254                           ;../app/app_src/application.c: 572:  }
  9255  008CE0  0012               	return		;funcret
  9256  008CE2                     __end_of_cmdGetMode:
  9257                           	opt callstack 0
  9258                           
  9259 ;; *************** function _cmdGetCADRSSI *****************
  9260 ;; Defined at:
  9261 ;;		line 661 in file "../app/app_src/application.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;		None
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;		None
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 3F/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9279 ;;Total ram usage:        0 bytes
  9280 ;; Hardware stack levels used:    1
  9281 ;; Hardware stack levels required when called:   16
  9282 ;; This function calls:
  9283 ;;		_printf
  9284 ;; This function is called by:
  9285 ;;		_executeATCommand
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text45
  9290  008AF6                     __ptext45:
  9291                           	opt callstack 0
  9292  008AF6                     _cmdGetCADRSSI:
  9293                           	opt callstack 12
  9294                           
  9295                           ;../app/app_src/application.c: 662:  printf("CAD RSS=%i\r\n",RSSITarget);
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299  008AF6  0E92               	movlw	low STR_43
  9300  008AF8  0100               	movlb	0	; () banked
  9301  008AFA  6F75               	movwf	printf@fmt& (0+255),b
  9302  008AFC  0EFE               	movlw	high STR_43
  9303  008AFE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9304  008B00  51F7               	movf	_RSSITarget& (0+255),w,b
  9305  008B02  6F77               	movwf	(?_printf+2)& (0+255),b
  9306  008B04  6B78               	clrf	(?_printf+3)& (0+255),b
  9307  008B06  BF77               	btfsc	(?_printf+2)& (0+255),7,b
  9308  008B08  0778               	decf	(?_printf+3)& (0+255),f,b
  9309  008B0A  EC77  F044         	call	_printf	;wreg free
  9310                           
  9311                           ; BSR set to: 0
  9312  008B0E  0012               	return		;funcret
  9313  008B10                     __end_of_cmdGetCADRSSI:
  9314                           	opt callstack 0
  9315                           
  9316 ;; *************** function _cmdGetCAD *****************
  9317 ;; Defined at:
  9318 ;;		line 546 in file "../app/app_src/application.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 3F/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;Total ram usage:        0 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:   16
  9339 ;; This function calls:
  9340 ;;		_printf
  9341 ;; This function is called by:
  9342 ;;		_executeATCommand
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text46
  9347  008BF4                     __ptext46:
  9348                           	opt callstack 0
  9349  008BF4                     _cmdGetCAD:
  9350                           	opt callstack 12
  9351                           
  9352                           ;../app/app_src/application.c: 547:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;incstack = 0
  9356  008BF4  0E11               	movlw	low STR_30
  9357  008BF6  0100               	movlb	0	; () banked
  9358  008BF8  6F75               	movwf	printf@fmt& (0+255),b
  9359  008BFA  0EFE               	movlw	high STR_30
  9360  008BFC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9361  008BFE  0060  F350  F077   	movff	_cadCounter,?_printf+2
  9362  008C04  6B78               	clrf	(?_printf+3)& (0+255),b
  9363  008C06  EC77  F044         	call	_printf	;wreg free
  9364                           
  9365                           ; BSR set to: 0
  9366  008C0A  0012               	return		;funcret
  9367  008C0C                     __end_of_cmdGetCAD:
  9368                           	opt callstack 0
  9369                           
  9370 ;; *************** function _cmdBootLoad *****************
  9371 ;; Defined at:
  9372 ;;		line 734 in file "../app/app_src/application.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;		None
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;Total ram usage:        2 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:   16
  9393 ;; This function calls:
  9394 ;;		_DATAEE_WriteByte_Platform
  9395 ;;		_printf
  9396 ;; This function is called by:
  9397 ;;		_executeATCommand
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text47
  9402  0083E6                     __ptext47:
  9403                           	opt callstack 0
  9404  0083E6                     _cmdBootLoad:
  9405                           	opt callstack 12
  9406                           
  9407                           ;../app/app_src/application.c: 735:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;incstack = 0
  9411  0083E6  0E00               	movlw	0
  9412  0083E8  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9413  0083EA  0E00               	movlw	0
  9414  0083EC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9415  0083EE  0E00               	movlw	0
  9416  0083F0  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9417  0083F2  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  9418                           
  9419                           ;../app/app_src/application.c: 736:     printf("OK\r\n");
  9420  0083F6  0ED6               	movlw	low STR_12
  9421  0083F8  0100               	movlb	0	; () banked
  9422  0083FA  6F75               	movwf	printf@fmt& (0+255),b
  9423  0083FC  0EFF               	movlw	high STR_12
  9424  0083FE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9425  008400  EC77  F044         	call	_printf	;wreg free
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;../app/app_src/application.c: 737:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9429  008404  0E52               	movlw	82
  9430  008406  6E59               	movwf	(??_cmdBootLoad+1)^0,c
  9431  008408  0E2B               	movlw	43
  9432  00840A  6E58               	movwf	??_cmdBootLoad^0,c
  9433  00840C  0E00               	movlw	0
  9434  00840E                     u17047:
  9435  00840E  2EE8               	decfsz	wreg,f,c
  9436  008410  D7FE               	bra	u17047
  9437  008412  2E58               	decfsz	??_cmdBootLoad^0,f,c
  9438  008414  D7FC               	bra	u17047
  9439  008416  2E59               	decfsz	(??_cmdBootLoad+1)^0,f,c
  9440  008418  D7FA               	bra	u17047
  9441  00841A  D000               	nop2	
  9442  00841C  00FF               	reset		;# 
  9443  00841E  0012               	return		;funcret
  9444  008420                     __end_of_cmdBootLoad:
  9445                           	opt callstack 0
  9446                           
  9447 ;; *************** function _cmdBcast *****************
  9448 ;; Defined at:
  9449 ;;		line 275 in file "../app/app_src/application.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  9452 ;;		 -> atCommand(80), 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  buf_id          1   33[BANK0 ] unsigned char 
  9455 ;;  p2              3    0        PTR unsigned char 
  9456 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  9457 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 3F/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;Total ram usage:        7 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:   16
  9474 ;; This function calls:
  9475 ;;		_NWK_DataReq
  9476 ;;		_get_free_tx_buffer
  9477 ;;		_memcpy
  9478 ;;		_memset
  9479 ;;		_printf
  9480 ;;		_strlen
  9481 ;;		_strstr
  9482 ;; This function is called by:
  9483 ;;		_executeATCommand
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text48
  9488  002E76                     __ptext48:
  9489                           	opt callstack 0
  9490  002E76                     _cmdBcast:
  9491                           	opt callstack 12
  9492                           
  9493                           ;../app/app_src/application.c: 276:  char *p1,*p2;;../app/app_src/application.c: 278:  p
      +                          1 = strstr(cmd,"=") + 1;
  9494                           
  9495                           ;incstack = 0
  9496  002E76  0060  F160  F00D   	movff	cmdBcast@cmd,strstr@h
  9497  002E7C  0060  F164  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9498  002E82  0EDE               	movlw	low (STR_19+3)
  9499  002E84  6E0F               	movwf	strstr@n^0,c
  9500  002E86  0EFF               	movlw	high (STR_19+3)
  9501  002E88  6E10               	movwf	(strstr@n+1)^0,c
  9502  002E8A  EC5F  F02D         	call	_strstr	;wreg free
  9503  002E8E  0E01               	movlw	1
  9504  002E90  240D               	addwf	?_strstr^0,w,c
  9505  002E92  0100               	movlb	0	; () banked
  9506  002E94  6F7F               	movwf	cmdBcast@p1& (0+255),b
  9507  002E96  0E00               	movlw	0
  9508  002E98  200E               	addwfc	(?_strstr+1)^0,w,c
  9509  002E9A  6F80               	movwf	(cmdBcast@p1+1)& (0+255),b
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;../app/app_src/application.c: 280:  if((!p1) || (strlen(p1) > 64)){
  9513  002E9C  517F               	movf	cmdBcast@p1& (0+255),w,b
  9514  002E9E  1180               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9515  002EA0  B4D8               	btfsc	status,2,c
  9516  002EA2  D00E               	goto	u15850
  9517                           
  9518                           ; BSR set to: 0
  9519  002EA4  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9520  002EAA  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9521  002EB0  EC42  F03E         	call	_strlen	;wreg free
  9522  002EB4  5003               	movf	(?_strlen+1)^0,w,c
  9523  002EB6  E104               	bnz	u15850
  9524  002EB8  0E41               	movlw	65
  9525  002EBA  5C02               	subwf	?_strlen^0,w,c
  9526  002EBC  A0D8               	btfss	status,0,c
  9527  002EBE  D00A               	goto	l15670
  9528  002EC0                     u15850:
  9529                           
  9530                           ;../app/app_src/application.c: 281:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9531  002EC0  0EC5               	movlw	low STR_3
  9532  002EC2  0100               	movlb	0	; () banked
  9533  002EC4  6F75               	movwf	printf@fmt& (0+255),b
  9534  002EC6  0EFE               	movlw	high STR_3
  9535  002EC8  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9536  002ECA  0E07               	movlw	7
  9537  002ECC  6F77               	movwf	(?_printf+2)& (0+255),b
  9538  002ECE  EC77  F044         	call	_printf	;wreg free
  9539                           
  9540                           ;../app/app_src/application.c: 282:  }
  9541  002ED2  0012               	return	
  9542  002ED4                     l15670:
  9543                           
  9544                           ;../app/app_src/application.c: 284:   uint8_t buf_id;;../app/app_src/application.c: 285:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9545  002ED4  0E81               	movlw	low cmdBcast@buf_id
  9546  002ED6  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9547  002ED8  EC61  F03B         	call	_get_free_tx_buffer	;wreg free
  9548  002EDC  0900               	iorlw	0
  9549  002EDE  A4D8               	btfss	status,2,c
  9550  002EE0  D00A               	goto	l15676
  9551                           
  9552                           ;../app/app_src/application.c: 286:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9553  002EE2  0EC5               	movlw	low STR_3
  9554  002EE4  0100               	movlb	0	; () banked
  9555  002EE6  6F75               	movwf	printf@fmt& (0+255),b
  9556  002EE8  0EFE               	movlw	high STR_3
  9557  002EEA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9558  002EEC  0E11               	movlw	17
  9559  002EEE  6F77               	movwf	(?_printf+2)& (0+255),b
  9560  002EF0  EC77  F044         	call	_printf	;wreg free
  9561  002EF4  0012               	return	
  9562  002EF6                     l15676:
  9563                           
  9564                           ;../app/app_src/application.c: 289:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9565  002EF6  0100               	movlb	0	; () banked
  9566  002EF8  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9567  002EFA  0D83               	mullw	131
  9568  002EFC  0EE2               	movlw	low (_tx_buffer+22)
  9569  002EFE  24F3               	addwf	243,w,c
  9570  002F00  6E02               	movwf	memset@dest^0,c
  9571  002F02  0E0A               	movlw	high (_tx_buffer+22)
  9572  002F04  20F4               	addwfc	prodh,w,c
  9573  002F06  6E03               	movwf	(memset@dest+1)^0,c
  9574  002F08  0E00               	movlw	0
  9575  002F0A  6E05               	movwf	(memset@c+1)^0,c
  9576  002F0C  0E00               	movlw	0
  9577  002F0E  6E04               	movwf	memset@c^0,c
  9578  002F10  0E00               	movlw	0
  9579  002F12  6E07               	movwf	(memset@n+1)^0,c
  9580  002F14  0E6D               	movlw	109
  9581  002F16  6E06               	movwf	memset@n^0,c
  9582  002F18  ECFB  F021         	call	_memset	;wreg free
  9583                           
  9584                           ;../app/app_src/application.c: 290:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9585  002F1C  0100               	movlb	0	; () banked
  9586  002F1E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9587  002F20  0D83               	mullw	131
  9588  002F22  0EE2               	movlw	low (_tx_buffer+22)
  9589  002F24  24F3               	addwf	243,w,c
  9590  002F26  6E08               	movwf	memcpy@d1^0,c
  9591  002F28  0E0A               	movlw	high (_tx_buffer+22)
  9592  002F2A  20F4               	addwfc	prodh,w,c
  9593  002F2C  6E09               	movwf	(memcpy@d1+1)^0,c
  9594  002F2E  0060  F1FC  F00A   	movff	cmdBcast@p1,memcpy@s1
  9595  002F34  0060  F200  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9596  002F3A  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9597  002F40  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9598  002F46  EC42  F03E         	call	_strlen	;wreg free
  9599  002F4A  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9600  002F50  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9601  002F56  ECE5  F039         	call	_memcpy	;wreg free
  9602                           
  9603                           ;../app/app_src/application.c: 291:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9604  002F5A  0100               	movlb	0	; () banked
  9605  002F5C  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9606  002F5E  0D83               	mullw	131
  9607  002F60  0ED4               	movlw	low (_tx_buffer+8)
  9608  002F62  24F3               	addwf	243,w,c
  9609  002F64  6ED9               	movwf	fsr2l,c
  9610  002F66  0E0A               	movlw	high (_tx_buffer+8)
  9611  002F68  20F4               	addwfc	prodh,w,c
  9612  002F6A  6EDA               	movwf	fsr2h,c
  9613  002F6C  0EFF               	movlw	255
  9614  002F6E  6EDE               	movwf	postinc2,c
  9615  002F70  0EFF               	movlw	255
  9616  002F72  6EDD               	movwf	postdec2,c
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;../app/app_src/application.c: 292:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9620  002F74  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9621  002F76  0D83               	mullw	131
  9622  002F78  0ED6               	movlw	low (_tx_buffer+10)
  9623  002F7A  24F3               	addwf	243,w,c
  9624  002F7C  6ED9               	movwf	fsr2l,c
  9625  002F7E  0E0A               	movlw	high (_tx_buffer+10)
  9626  002F80  20F4               	addwfc	prodh,w,c
  9627  002F82  6EDA               	movwf	fsr2h,c
  9628  002F84  0E01               	movlw	1
  9629  002F86  6EDF               	movwf	indf2,c
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;../app/app_src/application.c: 293:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9633  002F88  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9634  002F8A  0D83               	mullw	131
  9635  002F8C  0ED7               	movlw	low (_tx_buffer+11)
  9636  002F8E  24F3               	addwf	243,w,c
  9637  002F90  6ED9               	movwf	fsr2l,c
  9638  002F92  0E0A               	movlw	high (_tx_buffer+11)
  9639  002F94  20F4               	addwfc	prodh,w,c
  9640  002F96  6EDA               	movwf	fsr2h,c
  9641  002F98  0E01               	movlw	1
  9642  002F9A  6EDF               	movwf	indf2,c
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;../app/app_src/application.c: 294:         tx_buffer[buf_id].nwkDataReq.options = 0;
  9646  002F9C  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9647  002F9E  0D83               	mullw	131
  9648  002FA0  0ED8               	movlw	low (_tx_buffer+12)
  9649  002FA2  24F3               	addwf	243,w,c
  9650  002FA4  6ED9               	movwf	fsr2l,c
  9651  002FA6  0E0A               	movlw	high (_tx_buffer+12)
  9652  002FA8  20F4               	addwfc	prodh,w,c
  9653  002FAA  6EDA               	movwf	fsr2h,c
  9654  002FAC  0E00               	movlw	0
  9655  002FAE  6EDF               	movwf	indf2,c
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;../app/app_src/application.c: 295:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9659  002FB0  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9660  002FB2  0D83               	mullw	131
  9661  002FB4  0ECC               	movlw	low _tx_buffer
  9662  002FB6  6E5A               	movwf	??_cmdBcast^0,c
  9663  002FB8  0E0A               	movlw	high _tx_buffer
  9664  002FBA  6E5B               	movwf	(??_cmdBcast+1)^0,c
  9665  002FBC  0E16               	movlw	22
  9666  002FBE  265A               	addwf	??_cmdBcast^0,f,c
  9667  002FC0  0E00               	movlw	0
  9668  002FC2  225B               	addwfc	(??_cmdBcast+1)^0,f,c
  9669  002FC4  50F3               	movf	243,w,c
  9670  002FC6  265A               	addwf	??_cmdBcast^0,f,c
  9671  002FC8  50F4               	movf	244,w,c
  9672  002FCA  225B               	addwfc	(??_cmdBcast+1)^0,f,c
  9673  002FCC  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9674  002FCE  0D83               	mullw	131
  9675  002FD0  0EDB               	movlw	low (_tx_buffer+15)
  9676  002FD2  24F3               	addwf	243,w,c
  9677  002FD4  6ED9               	movwf	fsr2l,c
  9678  002FD6  0E0A               	movlw	high (_tx_buffer+15)
  9679  002FD8  20F4               	addwfc	prodh,w,c
  9680  002FDA  6EDA               	movwf	fsr2h,c
  9681  002FDC  0060  F16B  FFDE   	movff	??_cmdBcast,postinc2
  9682  002FE2  0060  F16F  FFDD   	movff	??_cmdBcast+1,postdec2
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;../app/app_src/application.c: 296:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9686  002FE8  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9687  002FEA  0D83               	mullw	131
  9688  002FEC  0EDD               	movlw	low (_tx_buffer+17)
  9689  002FEE  24F3               	addwf	243,w,c
  9690  002FF0  6ED9               	movwf	fsr2l,c
  9691  002FF2  0E0A               	movlw	high (_tx_buffer+17)
  9692  002FF4  20F4               	addwfc	prodh,w,c
  9693  002FF6  6EDA               	movwf	fsr2h,c
  9694  002FF8  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9695  002FFE  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9696  003004  EC42  F03E         	call	_strlen	;wreg free
  9697  003008  5002               	movf	?_strlen^0,w,c
  9698  00300A  6EDF               	movwf	indf2,c
  9699                           
  9700                           ;../app/app_src/application.c: 297:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9701  00300C  0100               	movlb	0	; () banked
  9702  00300E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9703  003010  0D83               	mullw	131
  9704  003012  0EDE               	movlw	low (_tx_buffer+18)
  9705  003014  24F3               	addwf	243,w,c
  9706  003016  6ED9               	movwf	fsr2l,c
  9707  003018  0E0A               	movlw	high (_tx_buffer+18)
  9708  00301A  20F4               	addwfc	prodh,w,c
  9709  00301C  6EDA               	movwf	fsr2h,c
  9710  00301E  0E32               	movlw	low _appDataConf
  9711  003020  6EDE               	movwf	postinc2,c
  9712  003022  0E89               	movlw	high _appDataConf
  9713  003024  6EDD               	movwf	postdec2,c
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;../app/app_src/application.c: 298:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9717  003026  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9718  003028  0D83               	mullw	131
  9719  00302A  0ECE               	movlw	low (_tx_buffer+2)
  9720  00302C  24F3               	addwf	243,w,c
  9721  00302E  6ED9               	movwf	fsr2l,c
  9722  003030  0E0A               	movlw	high (_tx_buffer+2)
  9723  003032  20F4               	addwfc	prodh,w,c
  9724  003034  6EDA               	movwf	fsr2h,c
  9725  003036  0060  F36F  FFDF   	movff	_msgIDCounter,indf2
  9726                           
  9727                           ; BSR set to: 0
  9728  00303C  2BDB               	incf	_msgIDCounter& (0+255),f,b
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;../app/app_src/application.c: 299:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9732  00303E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9733  003040  0D83               	mullw	131
  9734  003042  0ECF               	movlw	low (_tx_buffer+3)
  9735  003044  24F3               	addwf	243,w,c
  9736  003046  6E02               	movwf	NWK_DataReq@req^0,c
  9737  003048  0E0A               	movlw	high (_tx_buffer+3)
  9738  00304A  20F4               	addwfc	prodh,w,c
  9739  00304C  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9740  00304E  EC67  F039         	call	_NWK_DataReq	;wreg free
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;../app/app_src/application.c: 300:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9744  003052  0EC9               	movlw	low (STR_3+4)
  9745  003054  6F75               	movwf	printf@fmt& (0+255),b
  9746  003056  0EFE               	movlw	high (STR_3+4)
  9747  003058  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9748  00305A  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9749  00305C  0D83               	mullw	131
  9750  00305E  0ECE               	movlw	low (_tx_buffer+2)
  9751  003060  24F3               	addwf	243,w,c
  9752  003062  6ED9               	movwf	fsr2l,c
  9753  003064  0E0A               	movlw	high (_tx_buffer+2)
  9754  003066  20F4               	addwfc	prodh,w,c
  9755  003068  6EDA               	movwf	fsr2h,c
  9756  00306A  50DF               	movf	indf2,w,c
  9757  00306C  6E5A               	movwf	??_cmdBcast^0,c
  9758  00306E  505A               	movf	??_cmdBcast^0,w,c
  9759  003070  6F77               	movwf	(?_printf+2)& (0+255),b
  9760  003072  6B78               	clrf	(?_printf+3)& (0+255),b
  9761  003074  EC77  F044         	call	_printf	;wreg free
  9762                           
  9763                           ; BSR set to: 0
  9764  003078  0012               	return		;funcret
  9765  00307A                     __end_of_cmdBcast:
  9766                           	opt callstack 0
  9767                           
  9768 ;; *************** function _strstr *****************
  9769 ;; Defined at:
  9770 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9773 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  9774 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9775 ;;		 -> STR_131(10), STR_129(10), STR_127(6), STR_125(6), 
  9776 ;;		 -> STR_123(7), STR_121(5), STR_119(7), STR_117(7), 
  9777 ;;		 -> STR_115(6), STR_113(9), STR_111(8), STR_109(8), 
  9778 ;;		 -> STR_107(7), STR_105(6), STR_103(3), STR_101(9), 
  9779 ;;		 -> STR_99(7), STR_97(7), STR_95(10), STR_93(10), 
  9780 ;;		 -> STR_91(15), STR_89(13), STR_87(9), STR_85(7), 
  9781 ;;		 -> STR_83(7), STR_81(10), STR_79(7), STR_77(8), 
  9782 ;;		 -> STR_75(11), STR_73(5), STR_71(5), STR_69(7), 
  9783 ;;		 -> STR_67(9), STR_65(7), STR_58(2), STR_52(6), 
  9784 ;;		 -> STR_50(6), STR_48(5), STR_44(2), STR_39(2), 
  9785 ;;		 -> STR_35(2), STR_26(2), STR_23(2), STR_15(2), 
  9786 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  nl              2   16[COMRAM] unsigned int 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  2   12[COMRAM] PTR unsigned char 
  9791 ;; Registers used:
  9792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;Total ram usage:        6 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; Hardware stack levels required when called:    8
  9805 ;; This function calls:
  9806 ;;		_strchr
  9807 ;;		_strlen
  9808 ;;		_strncmp
  9809 ;; This function is called by:
  9810 ;;		_cmdSend
  9811 ;;		_cmdBcast
  9812 ;;		_cmdSetAddr
  9813 ;;		_cmdSetNaddr
  9814 ;;		_cmdSetAES
  9815 ;;		_cmdSetRFCH
  9816 ;;		_cmdSetTX
  9817 ;;		_cmdSetCADRSSI
  9818 ;;		_cmdSetParity
  9819 ;;		_cmdSetSF
  9820 ;;		_executeATCommand
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text49
  9825  005ABE                     __ptext49:
  9826                           	opt callstack 0
  9827  005ABE                     _strstr:
  9828                           	opt callstack 20
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;incstack = 0
  9832  005ABE  500F               	movf	strstr@n^0,w,c
  9833  005AC0  1010               	iorwf	(strstr@n+1)^0,w,c
  9834  005AC2  B4D8               	btfsc	status,2,c
  9835  005AC4  D063               	goto	u15210
  9836  005AC6  0060  F03C  F002   	movff	strstr@n,strlen@s
  9837  005ACC  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9838  005AD2  EC42  F03E         	call	_strlen	;wreg free
  9839  005AD6  0060  F008  F011   	movff	?_strlen,strstr@nl
  9840  005ADC  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9841  005AE2  D038               	goto	l15228
  9842  005AE4                     l15220:
  9843  005AE4  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9844  005AEA  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9845  005AF0  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9846  005AF6  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9847  005AFC  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9848  005B02  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9849  005B08  EC9D  F025         	call	_strncmp	;wreg free
  9850  005B0C  5002               	movf	?_strncmp^0,w,c
  9851  005B0E  1003               	iorwf	(?_strncmp+1)^0,w,c
  9852  005B10  A4D8               	btfss	status,2,c
  9853  005B12  D007               	goto	l15226
  9854  005B14  0060  F034  F00D   	movff	strstr@h,?_strstr
  9855  005B1A  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9856  005B20  0012               	return	
  9857  005B22                     l15226:
  9858  005B22  0E01               	movlw	1
  9859  005B24  240D               	addwf	strstr@h^0,w,c
  9860  005B26  6E02               	movwf	strchr@s^0,c
  9861  005B28  0E00               	movlw	0
  9862  005B2A  200E               	addwfc	(strstr@h+1)^0,w,c
  9863  005B2C  6E03               	movwf	(strchr@s+1)^0,c
  9864  005B2E  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9865  005B34  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9866  005B3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9867  005B3A  6AF8               	clrf	tblptru,c
  9868  005B3C                     	endif
  9869  005B3C                     	if	0	;tblptru may be non-zero
  9870  005B3C                     	endif
  9871  005B3C  0008               	tblrd		*
  9872  005B3E  50F5               	movf	tablat,w,c
  9873  005B40  6E04               	movwf	strchr@c^0,c
  9874  005B42  6A05               	clrf	(strchr@c+1)^0,c
  9875  005B44  ECA2  F038         	call	_strchr	;wreg free
  9876  005B48  0060  F008  F00D   	movff	?_strchr,strstr@h
  9877  005B4E  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
  9878  005B54                     l15228:
  9879  005B54  500D               	movf	strstr@h^0,w,c
  9880  005B56  100E               	iorwf	(strstr@h+1)^0,w,c
  9881  005B58  B4D8               	btfsc	status,2,c
  9882  005B5A  D018               	goto	u15210
  9883  005B5C  0060  F037  FFF6   	movff	strstr@h,tblptrl
  9884  005B62  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
  9885  005B68  0E00               	movlw	low (__mediumconst shr (0+16))
  9886  005B6A  6EF8               	movwf	tblptru,c
  9887  005B6C  0E0F               	movlw	(high __ramtop+-1)
  9888  005B6E  64F7               	cpfsgt	tblptrh,c
  9889  005B70  D003               	bra	u15207
  9890  005B72  0008               	tblrd		*
  9891  005B74  50F5               	movf	tablat,w,c
  9892  005B76  D007               	bra	u15200
  9893  005B78                     u15207:
  9894  005B78  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9895  005B7E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9896  005B84  50EF               	movf	indf0,w,c
  9897  005B86                     u15200:
  9898  005B86  0900               	iorlw	0
  9899  005B88  A4D8               	btfss	status,2,c
  9900  005B8A  D7AC               	goto	l15220
  9901  005B8C                     u15210:
  9902  005B8C  0E00               	movlw	0
  9903  005B8E  6E0D               	movwf	?_strstr^0,c
  9904  005B90  0E00               	movlw	0
  9905  005B92  6E0E               	movwf	(?_strstr+1)^0,c
  9906  005B94  0012               	return		;funcret
  9907  005B96                     __end_of_strstr:
  9908                           	opt callstack 0
  9909                           
  9910 ;; *************** function _strncmp *****************
  9911 ;; Defined at:
  9912 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  9915 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  9916 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  9917 ;;		 -> STR_131(10), STR_129(10), STR_127(6), STR_125(6), 
  9918 ;;		 -> STR_123(7), STR_121(5), STR_119(7), STR_117(7), 
  9919 ;;		 -> STR_115(6), STR_113(9), STR_111(8), STR_109(8), 
  9920 ;;		 -> STR_107(7), STR_105(6), STR_103(3), STR_101(9), 
  9921 ;;		 -> STR_99(7), STR_97(7), STR_95(10), STR_93(10), 
  9922 ;;		 -> STR_91(15), STR_89(13), STR_87(9), STR_85(7), 
  9923 ;;		 -> STR_83(7), STR_81(10), STR_79(7), STR_77(8), 
  9924 ;;		 -> STR_75(11), STR_73(5), STR_71(5), STR_69(7), 
  9925 ;;		 -> STR_67(9), STR_65(7), STR_58(2), STR_52(6), 
  9926 ;;		 -> STR_50(6), STR_48(5), STR_44(2), STR_39(2), 
  9927 ;;		 -> STR_35(2), STR_26(2), STR_23(2), STR_15(2), 
  9928 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
  9929 ;;  n               2    5[COMRAM] unsigned int 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  r               2   10[COMRAM] PTR const unsigned char 
  9932 ;;		 -> STR_131(10), STR_129(10), STR_127(6), STR_125(6), 
  9933 ;;		 -> STR_123(7), STR_121(5), STR_119(7), STR_117(7), 
  9934 ;;		 -> STR_115(6), STR_113(9), STR_111(8), STR_109(8), 
  9935 ;;		 -> STR_107(7), STR_105(6), STR_103(3), STR_101(9), 
  9936 ;;		 -> STR_99(7), STR_97(7), STR_95(10), STR_93(10), 
  9937 ;;		 -> STR_91(15), STR_89(13), STR_87(9), STR_85(7), 
  9938 ;;		 -> STR_83(7), STR_81(10), STR_79(7), STR_77(8), 
  9939 ;;		 -> STR_75(11), STR_73(5), STR_71(5), STR_69(7), 
  9940 ;;		 -> STR_67(9), STR_65(7), STR_58(2), STR_52(6), 
  9941 ;;		 -> STR_50(6), STR_48(5), STR_44(2), STR_39(2), 
  9942 ;;		 -> STR_35(2), STR_26(2), STR_23(2), STR_15(2), 
  9943 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
  9944 ;;  l               2    8[COMRAM] PTR const unsigned char 
  9945 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  2    1[COMRAM] int 
  9948 ;; Registers used:
  9949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9955 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;Total ram usage:       11 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    7
  9962 ;; This function calls:
  9963 ;;		Nothing
  9964 ;; This function is called by:
  9965 ;;		_strstr
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           	psect	text50
  9970  004B3A                     __ptext50:
  9971                           	opt callstack 0
  9972  004B3A                     _strncmp:
  9973                           	opt callstack 20
  9974                           
  9975                           ;incstack = 0
  9976  004B3A  0060  F008  F009   	movff	strncmp@_l,strncmp@l
  9977  004B40  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
  9978  004B46  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
  9979  004B4C  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
  9980  004B52  0606               	decf	strncmp@n^0,f,c
  9981  004B54  A0D8               	btfss	status,0,c
  9982  004B56  0607               	decf	(strncmp@n+1)^0,f,c
  9983  004B58  2806               	incf	strncmp@n^0,w,c
  9984  004B5A  E10F               	bnz	l15018
  9985  004B5C  2807               	incf	(strncmp@n+1)^0,w,c
  9986  004B5E  A4D8               	btfss	status,2,c
  9987  004B60  D00C               	goto	l15018
  9988  004B62  0E00               	movlw	0
  9989  004B64  6E03               	movwf	(?_strncmp+1)^0,c
  9990  004B66  0E00               	movlw	0
  9991  004B68  6E02               	movwf	?_strncmp^0,c
  9992  004B6A  0012               	return	
  9993  004B6C                     l15016:
  9994  004B6C  4A09               	infsnz	strncmp@l^0,f,c
  9995  004B6E  2A0A               	incf	(strncmp@l+1)^0,f,c
  9996  004B70  4A0B               	infsnz	strncmp@r^0,f,c
  9997  004B72  2A0C               	incf	(strncmp@r+1)^0,f,c
  9998  004B74  0606               	decf	strncmp@n^0,f,c
  9999  004B76  A0D8               	btfss	status,0,c
 10000  004B78  0607               	decf	(strncmp@n+1)^0,f,c
 10001  004B7A                     l15018:
 10002  004B7A  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10003  004B80  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10004  004B86  0E00               	movlw	low (__mediumconst shr (0+16))
 10005  004B88  6EF8               	movwf	tblptru,c
 10006  004B8A  0E0F               	movlw	(high __ramtop+-1)
 10007  004B8C  64F7               	cpfsgt	tblptrh,c
 10008  004B8E  D003               	bra	u14657
 10009  004B90  0008               	tblrd		*
 10010  004B92  50F5               	movf	tablat,w,c
 10011  004B94  D007               	bra	u14650
 10012  004B96                     u14657:
 10013  004B96  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10014  004B9C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10015  004BA2  50EF               	movf	indf0,w,c
 10016  004BA4                     u14650:
 10017  004BA4  0900               	iorlw	0
 10018  004BA6  B4D8               	btfsc	status,2,c
 10019  004BA8  D033               	goto	u14690
 10020  004BAA  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10021  004BB0  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10022  004BB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10023  004BB6  6AF8               	clrf	tblptru,c
 10024  004BB8                     	endif
 10025  004BB8                     	if	0	;tblptru may be non-zero
 10026  004BB8                     	endif
 10027  004BB8  0008               	tblrd		*
 10028  004BBA  50F5               	movf	tablat,w,c
 10029  004BBC  0900               	iorlw	0
 10030  004BBE  B4D8               	btfsc	status,2,c
 10031  004BC0  D027               	goto	u14690
 10032  004BC2  5006               	movf	strncmp@n^0,w,c
 10033  004BC4  1007               	iorwf	(strncmp@n+1)^0,w,c
 10034  004BC6  B4D8               	btfsc	status,2,c
 10035  004BC8  D023               	goto	u14690
 10036  004BCA  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10037  004BD0  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10038  004BD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10039  004BD6  6AF8               	clrf	tblptru,c
 10040  004BD8                     	endif
 10041  004BD8                     	if	0	;tblptru may be non-zero
 10042  004BD8                     	endif
 10043  004BD8  0008               	tblrd		*
 10044  004BDA  006F FFD4  F008    	movff	tablat,??_strncmp
 10045  004BE0  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10046  004BE6  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10047  004BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 10048  004BEE  6EF8               	movwf	tblptru,c
 10049  004BF0  0E0F               	movlw	(high __ramtop+-1)
 10050  004BF2  64F7               	cpfsgt	tblptrh,c
 10051  004BF4  D003               	bra	u14697
 10052  004BF6  0008               	tblrd		*
 10053  004BF8  50F5               	movf	tablat,w,c
 10054  004BFA  D007               	bra	u14695
 10055  004BFC                     u14697:
 10056  004BFC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10057  004C02  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10058  004C08  50EF               	movf	indf0,w,c
 10059  004C0A                     u14695:
 10060  004C0A  1808               	xorwf	??_strncmp^0,w,c
 10061  004C0C  B4D8               	btfsc	status,2,c
 10062  004C0E  D7AE               	goto	l15016
 10063  004C10                     u14690:
 10064  004C10  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10065  004C16  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10066  004C1C  0E00               	movlw	low (__mediumconst shr (0+16))
 10067  004C1E  6EF8               	movwf	tblptru,c
 10068  004C20  0E0F               	movlw	(high __ramtop+-1)
 10069  004C22  64F7               	cpfsgt	tblptrh,c
 10070  004C24  D003               	bra	u14707
 10071  004C26  0008               	tblrd		*
 10072  004C28  50F5               	movf	tablat,w,c
 10073  004C2A  D007               	bra	u14700
 10074  004C2C                     u14707:
 10075  004C2C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10076  004C32  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10077  004C38  50EF               	movf	indf0,w,c
 10078  004C3A                     u14700:
 10079  004C3A  6E08               	movwf	??_strncmp^0,c
 10080  004C3C  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10081  004C42  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10082  004C48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10083  004C48  6AF8               	clrf	tblptru,c
 10084  004C4A                     	endif
 10085  004C4A                     	if	0	;tblptru may be non-zero
 10086  004C4A                     	endif
 10087  004C4A  0008               	tblrd		*
 10088  004C4C  50F5               	movf	tablat,w,c
 10089  004C4E  5C08               	subwf	??_strncmp^0,w,c
 10090  004C50  6E02               	movwf	?_strncmp^0,c
 10091  004C52  6A03               	clrf	(?_strncmp+1)^0,c
 10092  004C54  A0D8               	btfss	status,0,c
 10093  004C56  0603               	decf	(?_strncmp+1)^0,f,c
 10094  004C58  0012               	return		;funcret
 10095  004C5A                     __end_of_strncmp:
 10096                           	opt callstack 0
 10097                           
 10098 ;; *************** function _strchr *****************
 10099 ;; Defined at:
 10100 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  s               2    1[COMRAM] PTR const unsigned char 
 10103 ;;		 -> STR_56(2), STR_55(2), atCommand(80), NULL(0), 
 10104 ;;  c               2    3[COMRAM] int 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;		None
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  2    1[COMRAM] PTR unsigned char 
 10109 ;; Registers used:
 10110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;Total ram usage:        6 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; Hardware stack levels required when called:    7
 10123 ;; This function calls:
 10124 ;;		Nothing
 10125 ;; This function is called by:
 10126 ;;		_strstr
 10127 ;;		_strcspn
 10128 ;;		_strspn
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text51
 10133  007144                     __ptext51:
 10134                           	opt callstack 0
 10135  007144                     _strchr:
 10136                           	opt callstack 20
 10137                           
 10138                           ;incstack = 0
 10139  007144  0060  F00B  FFF6   	movff	strchr@s,tblptrl
 10140  00714A  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
 10141  007150  0E00               	movlw	low (__mediumconst shr (0+16))
 10142  007152  6EF8               	movwf	tblptru,c
 10143  007154  0E0F               	movlw	(high __ramtop+-1)
 10144  007156  64F7               	cpfsgt	tblptrh,c
 10145  007158  D003               	bra	u14217
 10146  00715A  0008               	tblrd		*
 10147  00715C  50F5               	movf	tablat,w,c
 10148  00715E  D007               	bra	u14210
 10149  007160                     u14217:
 10150  007160  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10151  007166  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10152  00716C  50EF               	movf	indf0,w,c
 10153  00716E                     u14210:
 10154  00716E  1804               	xorwf	strchr@c^0,w,c
 10155  007170  A4D8               	btfss	status,2,c
 10156  007172  D007               	goto	l14652
 10157  007174  0060  F008  F002   	movff	strchr@s,?_strchr
 10158  00717A  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
 10159  007180  0012               	return	
 10160  007182                     l14652:
 10161  007182  5002               	movf	strchr@s^0,w,c
 10162  007184  6E06               	movwf	??_strchr^0,c
 10163  007186  5003               	movf	(strchr@s+1)^0,w,c
 10164  007188  6E07               	movwf	(??_strchr+1)^0,c
 10165  00718A  4A02               	infsnz	strchr@s^0,f,c
 10166  00718C  2A03               	incf	(strchr@s+1)^0,f,c
 10167  00718E  0060  F01B  FFF6   	movff	??_strchr,tblptrl
 10168  007194  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
 10169  00719A  0E00               	movlw	low (__mediumconst shr (0+16))
 10170  00719C  6EF8               	movwf	tblptru,c
 10171  00719E  0E0F               	movlw	(high __ramtop+-1)
 10172  0071A0  64F7               	cpfsgt	tblptrh,c
 10173  0071A2  D003               	bra	u14237
 10174  0071A4  0008               	tblrd		*
 10175  0071A6  50F5               	movf	tablat,w,c
 10176  0071A8  D007               	bra	u14230
 10177  0071AA                     u14237:
 10178  0071AA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10179  0071B0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10180  0071B6  50EF               	movf	indf0,w,c
 10181  0071B8                     u14230:
 10182  0071B8  0900               	iorlw	0
 10183  0071BA  A4D8               	btfss	status,2,c
 10184  0071BC  D7C3               	goto	_strchr
 10185  0071BE  0E00               	movlw	0
 10186  0071C0  6E02               	movwf	?_strchr^0,c
 10187  0071C2  0E00               	movlw	0
 10188  0071C4  6E03               	movwf	(?_strchr+1)^0,c
 10189  0071C6  0012               	return		;funcret
 10190  0071C8                     __end_of_strchr:
 10191                           	opt callstack 0
 10192                           
 10193 ;; *************** function _get_free_tx_buffer *****************
 10194 ;; Defined at:
 10195 ;;		line 60 in file "../app/app_src/application.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 10198 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      _Bool 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;Total ram usage:        2 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    7
 10217 ;; This function calls:
 10218 ;;		Nothing
 10219 ;; This function is called by:
 10220 ;;		_cmdSend
 10221 ;;		_cmdBcast
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text52
 10226  0076C2                     __ptext52:
 10227                           	opt callstack 0
 10228  0076C2                     _get_free_tx_buffer:
 10229                           	opt callstack 20
 10230                           
 10231                           ;../app/app_src/application.c: 61:     *buf_id = 0;
 10232                           
 10233                           ;incstack = 0
 10234  0076C2  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10235  0076C4  6ED9               	movwf	fsr2l,c
 10236  0076C6  6ADA               	clrf	fsr2h,c
 10237  0076C8  0E00               	movlw	0
 10238  0076CA  6EDF               	movwf	indf2,c
 10239                           
 10240                           ;../app/app_src/application.c: 62:     while(*buf_id < 4){
 10241  0076CC  D023               	goto	l213
 10242  0076CE                     l15172:
 10243                           
 10244                           ;../app/app_src/application.c: 63:         if(tx_buffer[*buf_id].free){
 10245  0076CE  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10246  0076D0  6ED9               	movwf	fsr2l,c
 10247  0076D2  6ADA               	clrf	fsr2h,c
 10248  0076D4  50DF               	movf	indf2,w,c
 10249  0076D6  6E03               	movwf	??_get_free_tx_buffer^0,c
 10250  0076D8  5003               	movf	??_get_free_tx_buffer^0,w,c
 10251  0076DA  0D83               	mullw	131
 10252  0076DC  0ECC               	movlw	low _tx_buffer
 10253  0076DE  24F3               	addwf	243,w,c
 10254  0076E0  6ED9               	movwf	fsr2l,c
 10255  0076E2  0E0A               	movlw	high _tx_buffer
 10256  0076E4  20F4               	addwfc	prodh,w,c
 10257  0076E6  6EDA               	movwf	fsr2h,c
 10258  0076E8  A4DF               	btfss	indf2,2,c
 10259  0076EA  D010               	goto	l15180
 10260                           
 10261                           ;../app/app_src/application.c: 64:             tx_buffer[*buf_id].free = 0;
 10262  0076EC  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10263  0076EE  6ED9               	movwf	fsr2l,c
 10264  0076F0  6ADA               	clrf	fsr2h,c
 10265  0076F2  50DF               	movf	indf2,w,c
 10266  0076F4  6E03               	movwf	??_get_free_tx_buffer^0,c
 10267  0076F6  5003               	movf	??_get_free_tx_buffer^0,w,c
 10268  0076F8  0D83               	mullw	131
 10269  0076FA  0ECC               	movlw	low _tx_buffer
 10270  0076FC  24F3               	addwf	243,w,c
 10271  0076FE  6ED9               	movwf	fsr2l,c
 10272  007700  0E0A               	movlw	high _tx_buffer
 10273  007702  20F4               	addwfc	prodh,w,c
 10274  007704  6EDA               	movwf	fsr2h,c
 10275  007706  94DF               	bcf	indf2,2,c
 10276                           
 10277                           ;../app/app_src/application.c: 65:             return 1;
 10278  007708  0E01               	movlw	1
 10279  00770A  0012               	return	
 10280  00770C                     l15180:
 10281                           
 10282                           ;../app/app_src/application.c: 67:         (*buf_id)++;
 10283  00770C  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10284  00770E  6ED9               	movwf	fsr2l,c
 10285  007710  6ADA               	clrf	fsr2h,c
 10286  007712  2ADF               	incf	indf2,f,c
 10287  007714                     l213:
 10288                           
 10289                           ;../app/app_src/application.c: 62:     while(*buf_id < 4){
 10290  007714  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10291  007716  6ED9               	movwf	fsr2l,c
 10292  007718  6ADA               	clrf	fsr2h,c
 10293  00771A  0E03               	movlw	3
 10294  00771C  64DF               	cpfsgt	indf2,c
 10295  00771E  D7D7               	goto	l15172
 10296                           
 10297                           ;../app/app_src/application.c: 69:     return 0;
 10298  007720  0E00               	movlw	0
 10299  007722  0012               	return		;funcret
 10300  007724                     __end_of_get_free_tx_buffer:
 10301                           	opt callstack 0
 10302                           
 10303 ;; *************** function _NWK_DataReq *****************
 10304 ;; Defined at:
 10305 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 10308 ;;		 -> tx_buffer(524), 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10315 ;; Tracked objects:
 10316 ;;		On entry : 3F/0
 10317 ;;		On exit  : 3F/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;Total ram usage:        2 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    7
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_cmdSend
 10331 ;;		_cmdBcast
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text53
 10336  0072CE                     __ptext53:
 10337                           	opt callstack 0
 10338  0072CE                     _NWK_DataReq:
 10339                           	opt callstack 20
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10343                           
 10344                           ;incstack = 0
 10345  0072CE  EE20 F004          	lfsr	2,4
 10346  0072D2  5002               	movf	NWK_DataReq@req^0,w,c
 10347  0072D4  26D9               	addwf	fsr2l,f,c
 10348  0072D6  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10349  0072D8  22DA               	addwfc	fsr2h,f,c
 10350  0072DA  0E00               	movlw	0
 10351  0072DC  6EDF               	movwf	indf2,c
 10352                           
 10353                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10354  0072DE  EE20 F011          	lfsr	2,17
 10355  0072E2  5002               	movf	NWK_DataReq@req^0,w,c
 10356  0072E4  26D9               	addwf	fsr2l,f,c
 10357  0072E6  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10358  0072E8  22DA               	addwfc	fsr2h,f,c
 10359  0072EA  0E00               	movlw	0
 10360  0072EC  6EDF               	movwf	indf2,c
 10361                           
 10362                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10363  0072EE  EE20 F002          	lfsr	2,2
 10364  0072F2  5002               	movf	NWK_DataReq@req^0,w,c
 10365  0072F4  26D9               	addwf	fsr2l,f,c
 10366  0072F6  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10367  0072F8  22DA               	addwfc	fsr2h,f,c
 10368  0072FA  0E00               	movlw	0
 10369  0072FC  6EDE               	movwf	postinc2,c
 10370  0072FE  0E00               	movlw	0
 10371  007300  6EDD               	movwf	postdec2,c
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10375  007302  0101               	movlb	1	; () banked
 10376  007304  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10377  007306  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10378                           
 10379                           ; BSR set to: 1
 10380                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10381  007308  0100               	movlb	0	; () banked
 10382  00730A  51BF               	movf	_nwkDataReqQueue& (0+255),w,b
 10383  00730C  11C0               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10384  00730E  A4D8               	btfss	status,2,c
 10385  007310  D011               	goto	l15250
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10389  007312  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10390  007318  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10391  00731E  0E00               	movlw	0
 10392  007320  6EDE               	movwf	postinc2,c
 10393  007322  0E00               	movlw	0
 10394  007324  6EDD               	movwf	postdec2,c
 10395  007326                     l15248:
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10399  007326  0060  F008  F0BF   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10400  00732C  0060  F00C  F0C0   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10401                           
 10402                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10403  007332  0012               	return	
 10404  007334                     l15250:
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10408  007334  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10409  00733A  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10410  007340  0060  F2FF  FFDE   	movff	_nwkDataReqQueue,postinc2
 10411  007346  0060  F303  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10412  00734C  D7EC               	goto	l15248
 10413  00734E                     __end_of_NWK_DataReq:
 10414                           	opt callstack 0
 10415                           
 10416 ;; *************** function _cmdAddr *****************
 10417 ;; Defined at:
 10418 ;;		line 311 in file "../app/app_src/application.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 3F/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10436 ;;Total ram usage:        0 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:   16
 10439 ;; This function calls:
 10440 ;;		_printf
 10441 ;; This function is called by:
 10442 ;;		_executeATCommand
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           	psect	text54
 10447  0089DE                     __ptext54:
 10448                           	opt callstack 0
 10449  0089DE                     _cmdAddr:
 10450                           	opt callstack 12
 10451                           
 10452                           ;../app/app_src/application.c: 312:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;incstack = 0
 10456  0089DE  0E4A               	movlw	low STR_10
 10457  0089E0  0100               	movlb	0	; () banked
 10458  0089E2  6F75               	movwf	printf@fmt& (0+255),b
 10459  0089E4  0EFE               	movlw	high STR_10
 10460  0089E6  6F76               	movwf	(printf@fmt+1)& (0+255),b
 10461  0089E8  0060  F3E8  F077   	movff	_currentAddr0,?_printf+2
 10462  0089EE  6B78               	clrf	(?_printf+3)& (0+255),b
 10463  0089F0  0060  F3E4  F079   	movff	_currentAddr1,?_printf+4
 10464  0089F6  6B7A               	clrf	(?_printf+5)& (0+255),b
 10465  0089F8  EC77  F044         	call	_printf	;wreg free
 10466                           
 10467                           ; BSR set to: 0
 10468  0089FC  0012               	return		;funcret
 10469  0089FE                     __end_of_cmdAddr:
 10470                           	opt callstack 0
 10471                           
 10472 ;; *************** function _printf *****************
 10473 ;; Defined at:
 10474 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
 10477 ;;		 -> STR_137(5), STR_136(8), STR_135(28), STR_134(26), 
 10478 ;;		 -> STR_133(12), STR_132(12), STR_63(5), STR_62(34), 
 10479 ;;		 -> STR_61(14), STR_60(5), STR_59(12), STR_57(8), 
 10480 ;;		 -> STR_54(5), STR_53(12), STR_46(5), STR_45(12), 
 10481 ;;		 -> STR_43(13), STR_42(5), STR_41(12), STR_40(12), 
 10482 ;;		 -> STR_38(14), STR_37(5), STR_36(12), STR_34(13), 
 10483 ;;		 -> STR_33(18), STR_32(18), STR_31(5), STR_30(21), 
 10484 ;;		 -> STR_29(5), STR_28(12), STR_27(12), STR_25(12), 
 10485 ;;		 -> STR_24(12), STR_22(5), STR_21(3), STR_20(5), 
 10486 ;;		 -> STR_19(5), STR_18(12), STR_17(6), STR_16(5), 
 10487 ;;		 -> STR_14(13), STR_13(12), STR_12(5), STR_10(16), 
 10488 ;;		 -> STR_9(8), STR_8(12), STR_7(12), STR_5(8), 
 10489 ;;		 -> STR_4(12), STR_3(12), 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  ret             2    0        int 
 10492 ;;  ap              1   86[COMRAM] PTR void [1]
 10493 ;;		 -> ?_printf(2), 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  2   21[BANK0 ] int 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 3F/0
 10500 ;;		On exit  : 3F/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10503 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;Total ram usage:       13 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:   15
 10510 ;; This function calls:
 10511 ;;		_vfprintf
 10512 ;; This function is called by:
 10513 ;;		_cmdSend
 10514 ;;		_cmdBcast
 10515 ;;		_cmdAddr
 10516 ;;		_cmdSetAddr
 10517 ;;		_cmdNaddr
 10518 ;;		_cmdSetNaddr
 10519 ;;		_cmdRecv
 10520 ;;		_cmdMac
 10521 ;;		_cmdSetSink
 10522 ;;		_cmdSetAES
 10523 ;;		_cmdGetCAD
 10524 ;;		_cmdRstCAD
 10525 ;;		_cmdGetMode
 10526 ;;		_cmdGetRFCH
 10527 ;;		_cmdSetRFCH
 10528 ;;		_cmdGetTX
 10529 ;;		_cmdSetTX
 10530 ;;		_cmdGetCADRSSI
 10531 ;;		_cmdSetCADRSSI
 10532 ;;		_cmdSetParity
 10533 ;;		_cmdBootLoad
 10534 ;;		_cmdGetSF
 10535 ;;		_cmdSetSF
 10536 ;;		_cmdGetRxCnt
 10537 ;;		_print_hop_table
 10538 ;;		_set_hop_table_ttl
 10539 ;;		_executeATCommand
 10540 ;;		_sendInfo
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text55
 10545  0088EE                     __ptext55:
 10546                           	opt callstack 0
 10547  0088EE                     _printf:
 10548                           	opt callstack 12
 10549                           
 10550                           ; BSR set to: 0
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;incstack = 0
 10554  0088EE  0E77               	movlw	low (?_printf+2)
 10555  0088F0  6E57               	movwf	printf@ap^0,c
 10556                           
 10557                           ; BSR set to: 0
 10558  0088F2  0E00               	movlw	0
 10559  0088F4  6E4E               	movwf	vfprintf@fp^0,c
 10560  0088F6  0E00               	movlw	0
 10561  0088F8  6E4F               	movwf	(vfprintf@fp+1)^0,c
 10562  0088FA  0060  F1D4  F050   	movff	printf@fmt,vfprintf@fmt
 10563  008900  0060  F1D8  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 10564  008906  0E57               	movlw	low printf@ap
 10565  008908  6E52               	movwf	vfprintf@ap^0,c
 10566  00890A  EC53  F03C         	call	_vfprintf	;wreg free
 10567                           
 10568                           ; BSR set to: 0
 10569  00890E  0012               	return		;funcret
 10570  008910                     __end_of_printf:
 10571                           	opt callstack 0
 10572                           
 10573 ;; *************** function _vfprintf *****************
 10574 ;; Defined at:
 10575 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 10578 ;;		 -> NULL(0), 
 10579 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 10580 ;;		 -> STR_137(5), STR_136(8), STR_135(28), STR_134(26), 
 10581 ;;		 -> STR_133(12), STR_132(12), STR_63(5), STR_62(34), 
 10582 ;;		 -> STR_61(14), STR_60(5), STR_59(12), STR_57(8), 
 10583 ;;		 -> STR_54(5), STR_53(12), STR_46(5), STR_45(12), 
 10584 ;;		 -> STR_43(13), STR_42(5), STR_41(12), STR_40(12), 
 10585 ;;		 -> STR_38(14), STR_37(5), STR_36(12), STR_34(13), 
 10586 ;;		 -> STR_33(18), STR_32(18), STR_31(5), STR_30(21), 
 10587 ;;		 -> STR_29(5), STR_28(12), STR_27(12), STR_25(12), 
 10588 ;;		 -> STR_24(12), STR_22(5), STR_21(3), STR_20(5), 
 10589 ;;		 -> STR_19(5), STR_18(12), STR_17(6), STR_16(5), 
 10590 ;;		 -> STR_14(13), STR_13(12), STR_12(5), STR_10(16), 
 10591 ;;		 -> STR_9(8), STR_8(12), STR_7(12), STR_5(8), 
 10592 ;;		 -> STR_4(12), STR_3(12), 
 10593 ;;  ap              1   81[COMRAM] PTR PTR void 
 10594 ;;		 -> printf@ap(1), 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 10597 ;;		 -> STR_137(5), STR_136(8), STR_135(28), STR_134(26), 
 10598 ;;		 -> STR_133(12), STR_132(12), STR_63(5), STR_62(34), 
 10599 ;;		 -> STR_61(14), STR_60(5), STR_59(12), STR_57(8), 
 10600 ;;		 -> STR_54(5), STR_53(12), STR_46(5), STR_45(12), 
 10601 ;;		 -> STR_43(13), STR_42(5), STR_41(12), STR_40(12), 
 10602 ;;		 -> STR_38(14), STR_37(5), STR_36(12), STR_34(13), 
 10603 ;;		 -> STR_33(18), STR_32(18), STR_31(5), STR_30(21), 
 10604 ;;		 -> STR_29(5), STR_28(12), STR_27(12), STR_25(12), 
 10605 ;;		 -> STR_24(12), STR_22(5), STR_21(3), STR_20(5), 
 10606 ;;		 -> STR_19(5), STR_18(12), STR_17(6), STR_16(5), 
 10607 ;;		 -> STR_14(13), STR_13(12), STR_12(5), STR_10(16), 
 10608 ;;		 -> STR_9(8), STR_8(12), STR_7(12), STR_5(8), 
 10609 ;;		 -> STR_4(12), STR_3(12), 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  2   77[COMRAM] int 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 3F/0
 10616 ;;		On exit  : 3F/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10619 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;Total ram usage:        7 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:   14
 10626 ;; This function calls:
 10627 ;;		_vfpfcnvrt
 10628 ;; This function is called by:
 10629 ;;		_printf
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text56
 10634  0078A6                     __ptext56:
 10635                           	opt callstack 0
 10636  0078A6                     _vfprintf:
 10637                           	opt callstack 12
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;incstack = 0
 10644  0078A6  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 10645  0078AC  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10649  0078B2  0E00               	movlw	0
 10650  0078B4  6FB4               	movwf	(_nout+1)& (0+255),b
 10651  0078B6  0E00               	movlw	0
 10652  0078B8  6FB3               	movwf	_nout& (0+255),b
 10653                           
 10654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10655  0078BA  D012               	goto	l14528
 10656  0078BC                     l14526:
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10660  0078BC  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 10661  0078C2  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10662  0078C8  0E53               	movlw	low vfprintf@cfmt
 10663  0078CA  6E48               	movwf	vfpfcnvrt@fmt^0,c
 10664  0078CC  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 10665  0078D2  EC17  F003         	call	_vfpfcnvrt	;wreg free
 10666  0078D6  5046               	movf	?_vfpfcnvrt^0,w,c
 10667  0078D8  0100               	movlb	0	; () banked
 10668  0078DA  27B3               	addwf	_nout& (0+255),f,b
 10669  0078DC  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 10670  0078DE  23B4               	addwfc	(_nout+1)& (0+255),f,b
 10671  0078E0                     l14528:
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10675  0078E0  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 10676  0078E6  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 10677  0078EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10678  0078EC  6AF8               	clrf	tblptru,c
 10679  0078EE                     	endif
 10680  0078EE                     	if	0	;tblptru may be non-zero
 10681  0078EE                     	endif
 10682  0078EE  0008               	tblrd		*
 10683  0078F0  50F5               	movf	tablat,w,c
 10684  0078F2  0900               	iorlw	0
 10685  0078F4  A4D8               	btfss	status,2,c
 10686  0078F6  D7E2               	goto	l14526
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10690  0078F8  0060  F2CC  F04E   	movff	_nout,?_vfprintf
 10691  0078FE  0060  F2D0  F04F   	movff	_nout+1,?_vfprintf+1
 10692                           
 10693                           ; BSR set to: 0
 10694  007904  0012               	return		;funcret
 10695  007906                     __end_of_vfprintf:
 10696                           	opt callstack 0
 10697                           
 10698 ;; *************** function _vfpfcnvrt *****************
 10699 ;; Defined at:
 10700 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 10703 ;;		 -> NULL(0), 
 10704 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 10705 ;;		 -> vfprintf@cfmt(2), 
 10706 ;;  ap              1   72[COMRAM] PTR PTR void 
 10707 ;;		 -> printf@ap(1), 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  llu             8   13[BANK0 ] unsigned long long 
 10710 ;;  ll              8    0[BANK0 ] long long 
 10711 ;;  f               4    0        long long 
 10712 ;;  vp              3    0        PTR void 
 10713 ;;  ct              3    0        unsigned char [3]
 10714 ;;  cp              3    0        PTR unsigned char 
 10715 ;;  done            2    9[BANK0 ] int 
 10716 ;;  i               2    0        int 
 10717 ;;  c               1    8[BANK0 ] unsigned char 
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  2   69[COMRAM] int 
 10720 ;; Registers used:
 10721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 3F/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10728 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Totals:         8      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;Total ram usage:       29 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:   13
 10734 ;; This function calls:
 10735 ;;		_atoi
 10736 ;;		_dtoa
 10737 ;;		_fputc
 10738 ;;		_isdigit
 10739 ;;		_utoa
 10740 ;;		_xtoa
 10741 ;; This function is called by:
 10742 ;;		_vfprintf
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text57
 10747  00062E                     __ptext57:
 10748                           	opt callstack 0
 10749  00062E                     _vfpfcnvrt:
 10750                           	opt callstack 12
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10754                           
 10755                           ; BSR set to: 0
 10756                           ;incstack = 0
 10757  00062E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10758  000630  6ED9               	movwf	fsr2l,c
 10759  000632  6ADA               	clrf	fsr2h,c
 10760  000634  006F FF7B FFF6     	movff	postinc2,tblptrl
 10761  00063A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10762  000640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10763  000640  6AF8               	clrf	tblptru,c
 10764  000642                     	endif
 10765  000642                     	if	0	;tblptru may be non-zero
 10766  000642                     	endif
 10767  000642  0008               	tblrd		*
 10768  000644  50F5               	movf	tablat,w,c
 10769  000646  0A25               	xorlw	37
 10770  000648  A4D8               	btfss	status,2,c
 10771  00064A  D21A               	goto	l14400
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10775  00064C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10776  00064E  6ED9               	movwf	fsr2l,c
 10777  000650  6ADA               	clrf	fsr2h,c
 10778  000652  2ADE               	incf	postinc2,f,c
 10779  000654  0E00               	movlw	0
 10780  000656  22DD               	addwfc	postdec2,f,c
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10784  000658  0E00               	movlw	0
 10785  00065A  6FB6               	movwf	(_width+1)& (0+255),b
 10786  00065C  0E00               	movlw	0
 10787  00065E  6FB5               	movwf	_width& (0+255),b
 10788  000660  C0B5  F0B9         	movff	_width,_flags
 10789  000664  C0B6  F0BA         	movff	_width+1,_flags+1
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10793  000668  69B7               	setf	_prec& (0+255),b
 10794  00066A  69B8               	setf	(_prec+1)& (0+255),b
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10798  00066C  0E00               	movlw	0
 10799  00066E  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10800  000670  0E00               	movlw	0
 10801  000672  D013               	goto	L3
 10802  000674                     l14298:
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10806  000674  81B9               	bsf	_flags& (0+255),0,b
 10807  000676                     l14300:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10811  000676  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10812  000678  6ED9               	movwf	fsr2l,c
 10813  00067A  6ADA               	clrf	fsr2h,c
 10814  00067C  2ADE               	incf	postinc2,f,c
 10815  00067E  0E00               	movlw	0
 10816  000680  22DD               	addwfc	postdec2,f,c
 10817                           
 10818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10819  000682  D030               	goto	l14324
 10820  000684                     l14302:
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10824  000684  83B9               	bsf	_flags& (0+255),1,b
 10825  000686  D7F7               	goto	l14300
 10826  000688                     l14306:
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10830  000688  85B9               	bsf	_flags& (0+255),2,b
 10831  00068A  D7F5               	goto	l14300
 10832  00068C                     l14310:
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10836  00068C  87B9               	bsf	_flags& (0+255),3,b
 10837  00068E  D7F3               	goto	l14300
 10838  000690                     l14314:
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10842  000690  89B9               	bsf	_flags& (0+255),4,b
 10843  000692  D7F1               	goto	l14300
 10844  000694                     l14318:
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10848  000694  0E00               	movlw	0
 10849  000696  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10850  000698  0E01               	movlw	1
 10851  00069A                     L3:
 10852  00069A  6F69               	movwf	vfpfcnvrt@done& (0+255),b
 10853                           
 10854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10855  00069C  D023               	goto	l14324
 10856  00069E                     l14322:
 10857                           
 10858                           ; BSR set to: 0
 10859  00069E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10860  0006A0  6ED9               	movwf	fsr2l,c
 10861  0006A2  6ADA               	clrf	fsr2h,c
 10862  0006A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10863  0006AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10864  0006B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10865  0006B0  6AF8               	clrf	tblptru,c
 10866  0006B2                     	endif
 10867  0006B2                     	if	0	;tblptru may be non-zero
 10868  0006B2                     	endif
 10869  0006B2  0008               	tblrd		*
 10870  0006B4  50F5               	movf	tablat,w,c
 10871  0006B6  6E4A               	movwf	??_vfpfcnvrt^0,c
 10872  0006B8  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 10873                           
 10874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10875                           ; Switch size 1, requested type "simple"
 10876                           ; Number of cases is 1, Range of values is 0 to 0
 10877                           ; switch strategies available:
 10878                           ; Name         Instructions Cycles
 10879                           ; simple_byte            4     3 (average)
 10880                           ;	Chosen strategy is simple_byte
 10881  0006BA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 10882  0006BC  0A00               	xorlw	0	; case 0
 10883  0006BE  A4D8               	btfss	status,2,c
 10884  0006C0  D7E9               	goto	l14318
 10885                           
 10886                           ; BSR set to: 0
 10887                           ; Switch size 1, requested type "simple"
 10888                           ; Number of cases is 5, Range of values is 32 to 48
 10889                           ; switch strategies available:
 10890                           ; Name         Instructions Cycles
 10891                           ; simple_byte           16     9 (average)
 10892                           ;	Chosen strategy is simple_byte
 10893  0006C2  504A               	movf	??_vfpfcnvrt^0,w,c
 10894  0006C4  0A20               	xorlw	32	; case 32
 10895  0006C6  B4D8               	btfsc	status,2,c
 10896  0006C8  D7E1               	goto	l14310
 10897  0006CA  0A03               	xorlw	3	; case 35
 10898  0006CC  B4D8               	btfsc	status,2,c
 10899  0006CE  D7E0               	goto	l14314
 10900  0006D0  0A08               	xorlw	8	; case 43
 10901  0006D2  B4D8               	btfsc	status,2,c
 10902  0006D4  D7D9               	goto	l14306
 10903  0006D6  0A06               	xorlw	6	; case 45
 10904  0006D8  B4D8               	btfsc	status,2,c
 10905  0006DA  D7CC               	goto	l14298
 10906  0006DC  0A1D               	xorlw	29	; case 48
 10907  0006DE  B4D8               	btfsc	status,2,c
 10908  0006E0  D7D1               	goto	l14302
 10909  0006E2  D7D8               	goto	l14318
 10910  0006E4                     l14324:
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10914  0006E4  5169               	movf	vfpfcnvrt@done& (0+255),w,b
 10915  0006E6  116A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10916  0006E8  B4D8               	btfsc	status,2,c
 10917  0006EA  D7D9               	goto	l14322
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 10921  0006EC  B1B9               	btfsc	_flags& (0+255),0,b
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 10925  0006EE  93B9               	bcf	_flags& (0+255),1,b
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 10929  0006F0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10930  0006F2  6ED9               	movwf	fsr2l,c
 10931  0006F4  6ADA               	clrf	fsr2h,c
 10932  0006F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10933  0006FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10934  000702                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10935  000702  6AF8               	clrf	tblptru,c
 10936  000704                     	endif
 10937  000704                     	if	0	;tblptru may be non-zero
 10938  000704                     	endif
 10939  000704  0008               	tblrd		*
 10940  000706  50F5               	movf	tablat,w,c
 10941  000708  0A2A               	xorlw	42
 10942  00070A  A4D8               	btfss	status,2,c
 10943  00070C  D01C               	goto	l14338
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 10947  00070E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10948  000710  6ED9               	movwf	fsr2l,c
 10949  000712  6ADA               	clrf	fsr2h,c
 10950  000714  2ADE               	incf	postinc2,f,c
 10951  000716  0E00               	movlw	0
 10952  000718  22DD               	addwfc	postdec2,f,c
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10956  00071A  5049               	movf	vfpfcnvrt@ap^0,w,c
 10957  00071C  6ED9               	movwf	fsr2l,c
 10958  00071E  6ADA               	clrf	fsr2h,c
 10959  000720  0E02               	movlw	2
 10960  000722  26DF               	addwf	indf2,f,c
 10961  000724  5CDF               	subwf	indf2,w,c
 10962  000726  6ED9               	movwf	fsr2l,c
 10963  000728  6ADA               	clrf	fsr2h,c
 10964  00072A  006F FF78  F0B5    	movff	postinc2,_width
 10965  000730  006F FF78  F0B6    	movff	postinc2,_width+1
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 10969  000736  AFB6               	btfss	(_width+1)& (0+255),7,b
 10970  000738  D044               	goto	u13860
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 10974  00073A  81B9               	bsf	_flags& (0+255),0,b
 10975                           
 10976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 10977  00073C  6DB5               	negf	_width& (0+255),b
 10978  00073E  1FB6               	comf	(_width+1)& (0+255),f,b
 10979  000740  B0D8               	btfsc	status,0,c
 10980  000742  2BB6               	incf	(_width+1)& (0+255),f,b
 10981  000744  D03E               	goto	u13860
 10982  000746                     l14338:
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 10986  000746  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10987  000748  6ED9               	movwf	fsr2l,c
 10988  00074A  6ADA               	clrf	fsr2h,c
 10989  00074C  006F FF78  F009    	movff	postinc2,atoi@s
 10990  000752  006F FF74  F00A    	movff	postdec2,atoi@s+1
 10991  000758  EC36  F01F         	call	_atoi	;wreg free
 10992  00075C  0060  F024  F0B5   	movff	?_atoi,_width
 10993  000762  0060  F028  F0B6   	movff	?_atoi+1,_width+1
 10994                           
 10995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10996  000768  D006               	goto	l14342
 10997  00076A                     l14340:
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11001  00076A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11002  00076C  6ED9               	movwf	fsr2l,c
 11003  00076E  6ADA               	clrf	fsr2h,c
 11004  000770  2ADE               	incf	postinc2,f,c
 11005  000772  0E00               	movlw	0
 11006  000774  22DD               	addwfc	postdec2,f,c
 11007  000776                     l14342:
 11008  000776  0ED0               	movlw	208
 11009  000778  6E4A               	movwf	??_vfpfcnvrt^0,c
 11010  00077A  0EFF               	movlw	255
 11011  00077C  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 11012  00077E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11013  000780  6ED9               	movwf	fsr2l,c
 11014  000782  6ADA               	clrf	fsr2h,c
 11015  000784  006F FF7B FFF6     	movff	postinc2,tblptrl
 11016  00078A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11017  000790                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11018  000790  6AF8               	clrf	tblptru,c
 11019  000792                     	endif
 11020  000792                     	if	0	;tblptru may be non-zero
 11021  000792                     	endif
 11022  000792  0008               	tblrd		*
 11023  000794  50F5               	movf	tablat,w,c
 11024  000796  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 11025  000798  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 11026  00079A  504A               	movf	??_vfpfcnvrt^0,w,c
 11027  00079C  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11028  00079E  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 11029  0007A0  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11030  0007A2  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 11031  0007A4  E106               	bnz	u13840
 11032  0007A6  0E0A               	movlw	10
 11033  0007A8  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11034  0007AA  B0D8               	btfsc	status,0,c
 11035  0007AC  D002               	goto	u13840
 11036  0007AE  0E01               	movlw	1
 11037  0007B0  D001               	goto	u13850
 11038  0007B2                     u13840:
 11039  0007B2  0E00               	movlw	0
 11040  0007B4                     u13850:
 11041  0007B4  0100               	movlb	0	; () banked
 11042  0007B6  6F6B               	movwf	_vfpfcnvrt$7341& (0+255),b
 11043  0007B8  6B6C               	clrf	(_vfpfcnvrt$7341+1)& (0+255),b
 11044                           
 11045                           ; BSR set to: 0
 11046  0007BA  516B               	movf	_vfpfcnvrt$7341& (0+255),w,b
 11047  0007BC  116C               	iorwf	(_vfpfcnvrt$7341+1)& (0+255),w,b
 11048  0007BE  A4D8               	btfss	status,2,c
 11049  0007C0  D7D4               	goto	l14340
 11050  0007C2                     u13860:
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11054  0007C2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11055  0007C4  6ED9               	movwf	fsr2l,c
 11056  0007C6  6ADA               	clrf	fsr2h,c
 11057  0007C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11058  0007CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11059  0007D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11060  0007D4  6AF8               	clrf	tblptru,c
 11061  0007D6                     	endif
 11062  0007D6                     	if	0	;tblptru may be non-zero
 11063  0007D6                     	endif
 11064  0007D6  0008               	tblrd		*
 11065  0007D8  50F5               	movf	tablat,w,c
 11066  0007DA  0A64               	xorlw	100
 11067  0007DC  B4D8               	btfsc	status,2,c
 11068  0007DE  D00F               	goto	u13880
 11069                           
 11070                           ; BSR set to: 0
 11071  0007E0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11072  0007E2  6ED9               	movwf	fsr2l,c
 11073  0007E4  6ADA               	clrf	fsr2h,c
 11074  0007E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11075  0007EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11076  0007F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11077  0007F2  6AF8               	clrf	tblptru,c
 11078  0007F4                     	endif
 11079  0007F4                     	if	0	;tblptru may be non-zero
 11080  0007F4                     	endif
 11081  0007F4  0008               	tblrd		*
 11082  0007F6  50F5               	movf	tablat,w,c
 11083  0007F8  0A69               	xorlw	105
 11084  0007FA  A4D8               	btfss	status,2,c
 11085  0007FC  D044               	goto	l14360
 11086  0007FE                     u13880:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11090  0007FE  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11091  000800  6ED9               	movwf	fsr2l,c
 11092  000802  6ADA               	clrf	fsr2h,c
 11093  000804  2ADE               	incf	postinc2,f,c
 11094  000806  0E00               	movlw	0
 11095  000808  22DD               	addwfc	postdec2,f,c
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11099  00080A  5049               	movf	vfpfcnvrt@ap^0,w,c
 11100  00080C  6ED9               	movwf	fsr2l,c
 11101  00080E  6ADA               	clrf	fsr2h,c
 11102  000810  50DF               	movf	indf2,w,c
 11103  000812  2ADF               	incf	indf2,f,c
 11104  000814  2ADF               	incf	indf2,f,c
 11105  000816  6ED9               	movwf	fsr2l,c
 11106  000818  6ADA               	clrf	fsr2h,c
 11107  00081A  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 11108  000820  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 11109  000826  0E00               	movlw	0
 11110  000828  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 11111  00082A  0EFF               	movlw	-1
 11112  00082C  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 11113  00082E  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 11114  000830  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 11115  000832  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 11116  000834  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 11117  000836  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11121  000838  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 11122  00083E  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11123  000844  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 11124  00084A  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11125  000850  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11126  000856  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11127  00085C  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11128  000862  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11129  000868  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11130  00086E  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11131  000874  EC0D  F010         	call	_dtoa	;wreg free
 11132  000878  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 11133  00087E  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 11134  000884  0012               	return	
 11135  000886                     l14360:
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11139  000886  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11140  000888  6ED9               	movwf	fsr2l,c
 11141  00088A  6ADA               	clrf	fsr2h,c
 11142  00088C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11143  000892  006F FF77 FFF7     	movff	postdec2,tblptrh
 11144  000898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11145  000898  6AF8               	clrf	tblptru,c
 11146  00089A                     	endif
 11147  00089A                     	if	0	;tblptru may be non-zero
 11148  00089A                     	endif
 11149  00089A  0008               	tblrd		*
 11150  00089C  50F5               	movf	tablat,w,c
 11151  00089E  0A75               	xorlw	117
 11152  0008A0  A4D8               	btfss	status,2,c
 11153  0008A2  D047               	goto	l14370
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11157  0008A4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11158  0008A6  6ED9               	movwf	fsr2l,c
 11159  0008A8  6ADA               	clrf	fsr2h,c
 11160  0008AA  2ADE               	incf	postinc2,f,c
 11161  0008AC  0E00               	movlw	0
 11162  0008AE  22DD               	addwfc	postdec2,f,c
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11166  0008B0  5049               	movf	vfpfcnvrt@ap^0,w,c
 11167  0008B2  6ED9               	movwf	fsr2l,c
 11168  0008B4  6ADA               	clrf	fsr2h,c
 11169  0008B6  50DF               	movf	indf2,w,c
 11170  0008B8  2ADF               	incf	indf2,f,c
 11171  0008BA  2ADF               	incf	indf2,f,c
 11172  0008BC  6ED9               	movwf	fsr2l,c
 11173  0008BE  6ADA               	clrf	fsr2h,c
 11174  0008C0  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 11175  0008C6  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 11176  0008CC  0060  F128  F06D   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 11177  0008D2  0060  F12C  F06E   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 11178  0008D8  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11179  0008DA  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11180  0008DC  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11181  0008DE  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11182  0008E0  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11183  0008E2  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11187  0008E4  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 11188  0008EA  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11189  0008F0  0060  F1B4  F021   	movff	vfpfcnvrt@llu,utoa@d
 11190  0008F6  0060  F1B8  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 11191  0008FC  0060  F1BC  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 11192  000902  0060  F1C0  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 11193  000908  0060  F1C4  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 11194  00090E  0060  F1C8  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 11195  000914  0060  F1CC  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 11196  00091A  0060  F1D0  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 11197  000920  EC31  F016         	call	_utoa	;wreg free
 11198  000924  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 11199  00092A  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 11200  000930  0012               	return	
 11201  000932                     l14370:
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11205  000932  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11206  000934  6ED9               	movwf	fsr2l,c
 11207  000936  6ADA               	clrf	fsr2h,c
 11208  000938  006F FF7B FFF6     	movff	postinc2,tblptrl
 11209  00093E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11210  000944                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11211  000944  6AF8               	clrf	tblptru,c
 11212  000946                     	endif
 11213  000946                     	if	0	;tblptru may be non-zero
 11214  000946                     	endif
 11215  000946  0008               	tblrd		*
 11216  000948  50F5               	movf	tablat,w,c
 11217  00094A  0A78               	xorlw	120
 11218  00094C  B4D8               	btfsc	status,2,c
 11219  00094E  D00F               	goto	u13910
 11220                           
 11221                           ; BSR set to: 0
 11222  000950  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11223  000952  6ED9               	movwf	fsr2l,c
 11224  000954  6ADA               	clrf	fsr2h,c
 11225  000956  006F FF7B FFF6     	movff	postinc2,tblptrl
 11226  00095C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11227  000962                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11228  000962  6AF8               	clrf	tblptru,c
 11229  000964                     	endif
 11230  000964                     	if	0	;tblptru may be non-zero
 11231  000964                     	endif
 11232  000964  0008               	tblrd		*
 11233  000966  50F5               	movf	tablat,w,c
 11234  000968  0A58               	xorlw	88
 11235  00096A  A4D8               	btfss	status,2,c
 11236  00096C  D058               	goto	l14384
 11237  00096E                     u13910:
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11241  00096E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11242  000970  6ED9               	movwf	fsr2l,c
 11243  000972  6ADA               	clrf	fsr2h,c
 11244  000974  006F FF7B FFF6     	movff	postinc2,tblptrl
 11245  00097A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11246  000980                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11247  000980  6AF8               	clrf	tblptru,c
 11248  000982                     	endif
 11249  000982                     	if	0	;tblptru may be non-zero
 11250  000982                     	endif
 11251  000982  0008               	tblrd		*
 11252  000984  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11256  00098A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11257  00098C  6ED9               	movwf	fsr2l,c
 11258  00098E  6ADA               	clrf	fsr2h,c
 11259  000990  2ADE               	incf	postinc2,f,c
 11260  000992  0E00               	movlw	0
 11261  000994  22DD               	addwfc	postdec2,f,c
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11265  000996  5049               	movf	vfpfcnvrt@ap^0,w,c
 11266  000998  6ED9               	movwf	fsr2l,c
 11267  00099A  6ADA               	clrf	fsr2h,c
 11268  00099C  50DF               	movf	indf2,w,c
 11269  00099E  2ADF               	incf	indf2,f,c
 11270  0009A0  2ADF               	incf	indf2,f,c
 11271  0009A2  6ED9               	movwf	fsr2l,c
 11272  0009A4  6ADA               	clrf	fsr2h,c
 11273  0009A6  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 11274  0009AC  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 11275  0009B2  0060  F128  F06D   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 11276  0009B8  0060  F12C  F06E   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 11277  0009BE  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11278  0009C0  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11279  0009C2  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11280  0009C4  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11281  0009C6  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11282  0009C8  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11286  0009CA  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 11287  0009D0  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11288  0009D6  0060  F1B4  F021   	movff	vfpfcnvrt@llu,xtoa@d
 11289  0009DC  0060  F1B8  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11290  0009E2  0060  F1BC  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11291  0009E8  0060  F1C0  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11292  0009EE  0060  F1C4  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11293  0009F4  0060  F1C8  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11294  0009FA  0060  F1CC  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11295  000A00  0060  F1D0  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11296  000A06  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 11297  000A0C  EC65  F011         	call	_xtoa	;wreg free
 11298  000A10  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 11299  000A16  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 11300  000A1C  0012               	return	
 11301  000A1E                     l14384:
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11305  000A1E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11306  000A20  6ED9               	movwf	fsr2l,c
 11307  000A22  6ADA               	clrf	fsr2h,c
 11308  000A24  006F FF7B FFF6     	movff	postinc2,tblptrl
 11309  000A2A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11310  000A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11311  000A30  6AF8               	clrf	tblptru,c
 11312  000A32                     	endif
 11313  000A32                     	if	0	;tblptru may be non-zero
 11314  000A32                     	endif
 11315  000A32  0008               	tblrd		*
 11316  000A34  50F5               	movf	tablat,w,c
 11317  000A36  0A25               	xorlw	37
 11318  000A38  A4D8               	btfss	status,2,c
 11319  000A3A  D017               	goto	l14394
 11320                           
 11321                           ; BSR set to: 0
 11322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11323  000A3C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11324  000A3E  6ED9               	movwf	fsr2l,c
 11325  000A40  6ADA               	clrf	fsr2h,c
 11326  000A42  2ADE               	incf	postinc2,f,c
 11327  000A44  0E00               	movlw	0
 11328  000A46  22DD               	addwfc	postdec2,f,c
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11332  000A48  0E00               	movlw	0
 11333  000A4A  6E05               	movwf	(fputc@c+1)^0,c
 11334  000A4C  0E25               	movlw	37
 11335  000A4E  6E04               	movwf	fputc@c^0,c
 11336  000A50  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 11337  000A56  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11338  000A5C  EC8B  F03A         	call	_fputc	;wreg free
 11339  000A60                     l14390:
 11340                           
 11341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11342  000A60  0E00               	movlw	0
 11343  000A62  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 11344  000A64  0E01               	movlw	1
 11345  000A66  6E46               	movwf	?_vfpfcnvrt^0,c
 11346  000A68  0012               	return	
 11347  000A6A                     l14394:
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11351  000A6A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11352  000A6C  6ED9               	movwf	fsr2l,c
 11353  000A6E  6ADA               	clrf	fsr2h,c
 11354  000A70  2ADE               	incf	postinc2,f,c
 11355  000A72  0E00               	movlw	0
 11356  000A74  22DD               	addwfc	postdec2,f,c
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11360  000A76  0E00               	movlw	0
 11361  000A78  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 11362  000A7A  0E00               	movlw	0
 11363  000A7C  6E46               	movwf	?_vfpfcnvrt^0,c
 11364  000A7E  0012               	return	
 11365  000A80                     l14400:
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11369  000A80  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11370  000A82  6ED9               	movwf	fsr2l,c
 11371  000A84  6ADA               	clrf	fsr2h,c
 11372  000A86  006F FF7B FFF6     	movff	postinc2,tblptrl
 11373  000A8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11374  000A92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11375  000A92  6AF8               	clrf	tblptru,c
 11376  000A94                     	endif
 11377  000A94                     	if	0	;tblptru may be non-zero
 11378  000A94                     	endif
 11379  000A94  0008               	tblrd		*
 11380  000A96  50F5               	movf	tablat,w,c
 11381  000A98  6E04               	movwf	fputc@c^0,c
 11382  000A9A  6A05               	clrf	(fputc@c+1)^0,c
 11383  000A9C  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 11384  000AA2  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11385  000AA8  EC8B  F03A         	call	_fputc	;wreg free
 11386                           
 11387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11388  000AAC  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11389  000AAE  6ED9               	movwf	fsr2l,c
 11390  000AB0  6ADA               	clrf	fsr2h,c
 11391  000AB2  2ADE               	incf	postinc2,f,c
 11392  000AB4  0E00               	movlw	0
 11393  000AB6  22DD               	addwfc	postdec2,f,c
 11394  000AB8  D7D3               	goto	l14390
 11395  000ABA                     __end_of_vfpfcnvrt:
 11396                           	opt callstack 0
 11397                           
 11398 ;; *************** function _xtoa *****************
 11399 ;; Defined at:
 11400 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 11403 ;;		 -> NULL(0), 
 11404 ;;  d               8   32[COMRAM] unsigned long long 
 11405 ;;  x               1   40[COMRAM] unsigned char 
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;  n               8   57[COMRAM] unsigned long long 
 11408 ;;  c               2   67[COMRAM] int 
 11409 ;;  i               2   65[COMRAM] int 
 11410 ;;  w               2   55[COMRAM] int 
 11411 ;;  p               2   53[COMRAM] int 
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  2   30[COMRAM] int 
 11414 ;; Registers used:
 11415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11416 ;; Tracked objects:
 11417 ;;		On entry : 3F/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11421 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;Total ram usage:       39 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:   12
 11428 ;; This function calls:
 11429 ;;		_isalpha
 11430 ;;		_isupper
 11431 ;;		_pad
 11432 ;;		_toupper
 11433 ;; This function is called by:
 11434 ;;		_vfpfcnvrt
 11435 ;; This function uses a non-reentrant model
 11436 ;;
 11437                           
 11438                           	psect	text58
 11439  0022CA                     __ptext58:
 11440                           	opt callstack 0
 11441  0022CA                     _xtoa:
 11442                           	opt callstack 12
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 11446                           
 11447                           ;incstack = 0
 11448  0022CA  AFB8               	btfss	(_prec+1)& (0+255),7,b
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 11452  0022CC  93B9               	bcf	_flags& (0+255),1,b
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 11456  0022CE  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 11457  0022D0  D005               	goto	u13490
 11458  0022D2  51B8               	movf	(_prec+1)& (0+255),w,b
 11459  0022D4  E108               	bnz	l3137
 11460  0022D6  05B7               	decf	_prec& (0+255),w,b
 11461  0022D8  B0D8               	btfsc	status,0,c
 11462  0022DA  D005               	goto	l3137
 11463  0022DC                     u13490:
 11464                           
 11465                           ; BSR set to: 0
 11466  0022DC  0E00               	movlw	0
 11467  0022DE  6E37               	movwf	(xtoa@p+1)^0,c
 11468  0022E0  0E01               	movlw	1
 11469  0022E2  6E36               	movwf	xtoa@p^0,c
 11470  0022E4  D006               	goto	l3139
 11471  0022E6                     l3137:
 11472                           
 11473                           ; BSR set to: 0
 11474  0022E6  0060  F2DC  F036   	movff	_prec,xtoa@p
 11475  0022EC  0060  F2E0  F037   	movff	_prec+1,xtoa@p+1
 11476  0022F2                     l3139:
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11480  0022F2  0060  F2D4  F038   	movff	_width,xtoa@w
 11481  0022F8  0060  F2D8  F039   	movff	_width+1,xtoa@w+1
 11482                           
 11483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11484  0022FE  A9B9               	btfss	_flags& (0+255),4,b
 11485  002300  D004               	goto	l14136
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11489  002302  0EFE               	movlw	254
 11490  002304  2638               	addwf	xtoa@w^0,f,c
 11491  002306  0EFF               	movlw	255
 11492  002308  2239               	addwfc	(xtoa@w+1)^0,f,c
 11493  00230A                     l14136:
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11497  00230A  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 11498  002310  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 11499  002316  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 11500  00231C  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 11501  002322  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 11502  002328  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 11503  00232E  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 11504  002334  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11508  00233A  0E00               	movlw	0
 11509  00233C  6E43               	movwf	(xtoa@i+1)^0,c
 11510  00233E  0E1F               	movlw	31
 11511  002340  6E42               	movwf	xtoa@i^0,c
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11515  002342  0E00               	movlw	0
 11516  002344  0102               	movlb	2	; () banked
 11517  002346  6FCB               	movwf	(_dbuf+31)& (0+255),b
 11518                           
 11519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11520  002348  D0A8               	goto	l14172
 11521  00234A                     l14142:
 11522                           
 11523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11524  00234A  0642               	decf	xtoa@i^0,f,c
 11525  00234C  A0D8               	btfss	status,0,c
 11526  00234E  0643               	decf	(xtoa@i+1)^0,f,c
 11527                           
 11528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11529  002350  0E0F               	movlw	15
 11530  002352  143A               	andwf	xtoa@n^0,w,c
 11531  002354  6E44               	movwf	xtoa@c^0,c
 11532  002356  6A45               	clrf	(xtoa@c+1)^0,c
 11533                           
 11534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11535  002358  BE45               	btfsc	(xtoa@c+1)^0,7,c
 11536  00235A  D008               	goto	l14150
 11537  00235C  5045               	movf	(xtoa@c+1)^0,w,c
 11538  00235E  E104               	bnz	u13510
 11539  002360  0E0A               	movlw	10
 11540  002362  5C44               	subwf	xtoa@c^0,w,c
 11541  002364  A0D8               	btfss	status,0,c
 11542  002366  D002               	goto	l14150
 11543  002368                     u13510:
 11544  002368  0E57               	movlw	87
 11545  00236A  D001               	goto	L4
 11546  00236C                     l14150:
 11547  00236C  0E30               	movlw	48
 11548  00236E                     L4:
 11549  00236E  2444               	addwf	xtoa@c^0,w,c
 11550  002370  6E44               	movwf	xtoa@c^0,c
 11551  002372  0E00               	movlw	0
 11552  002374  2045               	addwfc	(xtoa@c+1)^0,w,c
 11553  002376  6E45               	movwf	(xtoa@c+1)^0,c
 11554                           
 11555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 11556  002378  0EBF               	movlw	191
 11557  00237A  6E2A               	movwf	??_xtoa^0,c
 11558  00237C  0EFF               	movlw	255
 11559  00237E  6E2B               	movwf	(??_xtoa+1)^0,c
 11560  002380  5029               	movf	xtoa@x^0,w,c
 11561  002382  6E2C               	movwf	(??_xtoa+2)^0,c
 11562  002384  6A2D               	clrf	(??_xtoa+3)^0,c
 11563  002386  502A               	movf	??_xtoa^0,w,c
 11564  002388  262C               	addwf	(??_xtoa+2)^0,f,c
 11565  00238A  502B               	movf	(??_xtoa+1)^0,w,c
 11566  00238C  222D               	addwfc	(??_xtoa+3)^0,f,c
 11567  00238E  502D               	movf	(??_xtoa+3)^0,w,c
 11568  002390  E106               	bnz	u13520
 11569  002392  0E1A               	movlw	26
 11570  002394  5C2C               	subwf	(??_xtoa+2)^0,w,c
 11571  002396  B0D8               	btfsc	status,0,c
 11572  002398  D002               	goto	u13520
 11573  00239A  0E01               	movlw	1
 11574  00239C  D001               	goto	u13530
 11575  00239E                     u13520:
 11576  00239E  0E00               	movlw	0
 11577  0023A0                     u13530:
 11578  0023A0  6E32               	movwf	_xtoa$7326^0,c
 11579  0023A2  6A33               	clrf	(_xtoa$7326+1)^0,c
 11580  0023A4  5032               	movf	_xtoa$7326^0,w,c
 11581  0023A6  1033               	iorwf	(_xtoa$7326+1)^0,w,c
 11582  0023A8  B4D8               	btfsc	status,2,c
 11583  0023AA  D02B               	goto	l14164
 11584  0023AC  0E9F               	movlw	159
 11585  0023AE  6E2A               	movwf	??_xtoa^0,c
 11586  0023B0  0EFF               	movlw	255
 11587  0023B2  6E2B               	movwf	(??_xtoa+1)^0,c
 11588  0023B4  0E20               	movlw	32
 11589  0023B6  1044               	iorwf	xtoa@c^0,w,c
 11590  0023B8  6E2C               	movwf	(??_xtoa+2)^0,c
 11591  0023BA  0E00               	movlw	0
 11592  0023BC  1045               	iorwf	(xtoa@c+1)^0,w,c
 11593  0023BE  6E2D               	movwf	(??_xtoa+3)^0,c
 11594  0023C0  502A               	movf	??_xtoa^0,w,c
 11595  0023C2  262C               	addwf	(??_xtoa+2)^0,f,c
 11596  0023C4  502B               	movf	(??_xtoa+1)^0,w,c
 11597  0023C6  222D               	addwfc	(??_xtoa+3)^0,f,c
 11598  0023C8  502D               	movf	(??_xtoa+3)^0,w,c
 11599  0023CA  E106               	bnz	u13550
 11600  0023CC  0E1A               	movlw	26
 11601  0023CE  5C2C               	subwf	(??_xtoa+2)^0,w,c
 11602  0023D0  B0D8               	btfsc	status,0,c
 11603  0023D2  D002               	goto	u13550
 11604  0023D4  0E01               	movlw	1
 11605  0023D6  D001               	goto	u13560
 11606  0023D8                     u13550:
 11607  0023D8  0E00               	movlw	0
 11608  0023DA                     u13560:
 11609  0023DA  6E34               	movwf	_xtoa$7327^0,c
 11610  0023DC  6A35               	clrf	(_xtoa$7327+1)^0,c
 11611  0023DE  5034               	movf	_xtoa$7327^0,w,c
 11612  0023E0  1035               	iorwf	(_xtoa$7327+1)^0,w,c
 11613  0023E2  B4D8               	btfsc	status,2,c
 11614  0023E4  D00E               	goto	l14164
 11615                           
 11616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11617  0023E6  0060  F110  F008   	movff	xtoa@c,toupper@c
 11618  0023EC  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 11619  0023F2  EC19  F03E         	call	_toupper	;wreg free
 11620  0023F6  0060  F020  F044   	movff	?_toupper,xtoa@c
 11621  0023FC  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 11622  002402                     l14164:
 11623                           
 11624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11625  002402  0EAC               	movlw	low _dbuf
 11626  002404  2442               	addwf	xtoa@i^0,w,c
 11627  002406  6ED9               	movwf	fsr2l,c
 11628  002408  0E02               	movlw	high _dbuf
 11629  00240A  2043               	addwfc	(xtoa@i+1)^0,w,c
 11630  00240C  6EDA               	movwf	fsr2h,c
 11631  00240E  0060  F113  FFDF   	movff	xtoa@c,indf2
 11632                           
 11633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11634  002414  0636               	decf	xtoa@p^0,f,c
 11635  002416  A0D8               	btfss	status,0,c
 11636  002418  0637               	decf	(xtoa@p+1)^0,f,c
 11637                           
 11638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11639  00241A  0638               	decf	xtoa@w^0,f,c
 11640  00241C  A0D8               	btfss	status,0,c
 11641  00241E  0639               	decf	(xtoa@w+1)^0,f,c
 11642                           
 11643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11644  002420  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 11645  002426  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 11646  00242C  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 11647  002432  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 11648  002438  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 11649  00243E  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 11650  002444  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 11651  00244A  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 11652  002450  0E05               	movlw	5
 11653  002452  D009               	goto	u13580
 11654  002454                     u13585:
 11655  002454  90D8               	bcf	status,0,c
 11656  002456  3231               	rrcf	(??_xtoa+7)^0,f,c
 11657  002458  3230               	rrcf	(??_xtoa+6)^0,f,c
 11658  00245A  322F               	rrcf	(??_xtoa+5)^0,f,c
 11659  00245C  322E               	rrcf	(??_xtoa+4)^0,f,c
 11660  00245E  322D               	rrcf	(??_xtoa+3)^0,f,c
 11661  002460  322C               	rrcf	(??_xtoa+2)^0,f,c
 11662  002462  322B               	rrcf	(??_xtoa+1)^0,f,c
 11663  002464  322A               	rrcf	??_xtoa^0,f,c
 11664  002466                     u13580:
 11665  002466  2EE8               	decfsz	wreg,f,c
 11666  002468  D7F5               	goto	u13585
 11667  00246A  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 11668  002470  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 11669  002476  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 11670  00247C  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 11671  002482  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 11672  002488  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 11673  00248E  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 11674  002494  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 11675  00249A                     l14172:
 11676                           
 11677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11678  00249A  BE43               	btfsc	(xtoa@i+1)^0,7,c
 11679  00249C  D021               	goto	u13630
 11680  00249E  5043               	movf	(xtoa@i+1)^0,w,c
 11681  0024A0  E104               	bnz	u13590
 11682  0024A2  0E02               	movlw	2
 11683  0024A4  5C42               	subwf	xtoa@i^0,w,c
 11684  0024A6  A0D8               	btfss	status,0,c
 11685  0024A8  D01B               	goto	u13630
 11686  0024AA                     u13590:
 11687  0024AA  503A               	movf	xtoa@n^0,w,c
 11688  0024AC  103B               	iorwf	(xtoa@n+1)^0,w,c
 11689  0024AE  103C               	iorwf	(xtoa@n+2)^0,w,c
 11690  0024B0  103D               	iorwf	(xtoa@n+3)^0,w,c
 11691  0024B2  103E               	iorwf	(xtoa@n+4)^0,w,c
 11692  0024B4  103F               	iorwf	(xtoa@n+5)^0,w,c
 11693  0024B6  1040               	iorwf	(xtoa@n+6)^0,w,c
 11694  0024B8  1041               	iorwf	(xtoa@n+7)^0,w,c
 11695  0024BA  A4D8               	btfss	status,2,c
 11696  0024BC  D746               	goto	l14142
 11697  0024BE  BE37               	btfsc	(xtoa@p+1)^0,7,c
 11698  0024C0  D005               	goto	u13610
 11699  0024C2  5037               	movf	(xtoa@p+1)^0,w,c
 11700  0024C4  E102               	bnz	u13611
 11701  0024C6  0436               	decf	xtoa@p^0,w,c
 11702  0024C8  B0D8               	btfsc	status,0,c
 11703  0024CA                     u13611:
 11704  0024CA  D73F               	goto	l14142
 11705  0024CC                     u13610:
 11706  0024CC  BE39               	btfsc	(xtoa@w+1)^0,7,c
 11707  0024CE  D008               	goto	u13630
 11708  0024D0  5039               	movf	(xtoa@w+1)^0,w,c
 11709  0024D2  E103               	bnz	u13620
 11710  0024D4  0438               	decf	xtoa@w^0,w,c
 11711  0024D6  A0D8               	btfss	status,0,c
 11712  0024D8  D003               	goto	u13630
 11713  0024DA                     u13620:
 11714  0024DA  0100               	movlb	0	; () banked
 11715  0024DC  B3B9               	btfsc	_flags& (0+255),1,b
 11716  0024DE  D735               	goto	l14142
 11717  0024E0                     u13630:
 11718                           
 11719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11720  0024E0  0100               	movlb	0	; () banked
 11721  0024E2  A9B9               	btfss	_flags& (0+255),4,b
 11722  0024E4  D017               	goto	l14188
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11726  0024E6  0642               	decf	xtoa@i^0,f,c
 11727  0024E8  A0D8               	btfss	status,0,c
 11728  0024EA  0643               	decf	(xtoa@i+1)^0,f,c
 11729                           
 11730                           ; BSR set to: 0
 11731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11732  0024EC  0EAC               	movlw	low _dbuf
 11733  0024EE  2442               	addwf	xtoa@i^0,w,c
 11734  0024F0  6ED9               	movwf	fsr2l,c
 11735  0024F2  0E02               	movlw	high _dbuf
 11736  0024F4  2043               	addwfc	(xtoa@i+1)^0,w,c
 11737  0024F6  6EDA               	movwf	fsr2h,c
 11738  0024F8  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11742  0024FE  0642               	decf	xtoa@i^0,f,c
 11743  002500  A0D8               	btfss	status,0,c
 11744  002502  0643               	decf	(xtoa@i+1)^0,f,c
 11745                           
 11746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11747  002504  0EAC               	movlw	low _dbuf
 11748  002506  2442               	addwf	xtoa@i^0,w,c
 11749  002508  6ED9               	movwf	fsr2l,c
 11750  00250A  0E02               	movlw	high _dbuf
 11751  00250C  2043               	addwfc	(xtoa@i+1)^0,w,c
 11752  00250E  6EDA               	movwf	fsr2h,c
 11753  002510  0E30               	movlw	48
 11754  002512  6EDF               	movwf	indf2,c
 11755  002514                     l14188:
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11759  002514  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 11760  00251A  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 11761  002520  0EAC               	movlw	low _dbuf
 11762  002522  2442               	addwf	xtoa@i^0,w,c
 11763  002524  6E16               	movwf	pad@buf^0,c
 11764  002526  0E02               	movlw	high _dbuf
 11765  002528  2043               	addwfc	(xtoa@i+1)^0,w,c
 11766  00252A  6E17               	movwf	(pad@buf+1)^0,c
 11767  00252C  0060  F0E0  F018   	movff	xtoa@w,pad@p
 11768  002532  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 11769  002538  EC84  F032         	call	_pad	;wreg free
 11770  00253C  0060  F050  F01F   	movff	?_pad,?_xtoa
 11771  002542  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 11772  002548  0012               	return		;funcret
 11773  00254A                     __end_of_xtoa:
 11774                           	opt callstack 0
 11775                           
 11776 ;; *************** function _toupper *****************
 11777 ;; Defined at:
 11778 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  c               2    7[COMRAM] int 
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;		None
 11783 ;; Return value:  Size  Location     Type
 11784 ;;                  2    7[COMRAM] int 
 11785 ;; Registers used:
 11786 ;;		wreg, status,2, status,0
 11787 ;; Tracked objects:
 11788 ;;		On entry : 0/0
 11789 ;;		On exit  : 0/0
 11790 ;;		Unchanged: 0/0
 11791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11794 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;Total ram usage:        8 bytes
 11797 ;; Hardware stack levels used:    1
 11798 ;; Hardware stack levels required when called:    8
 11799 ;; This function calls:
 11800 ;;		_islower
 11801 ;; This function is called by:
 11802 ;;		_xtoa
 11803 ;;		___strtoxl
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text59
 11808  007C32                     __ptext59:
 11809                           	opt callstack 0
 11810  007C32                     _toupper:
 11811                           	opt callstack 15
 11812                           
 11813                           ;incstack = 0
 11814  007C32  0E9F               	movlw	159
 11815  007C34  6E0A               	movwf	??_toupper^0,c
 11816  007C36  0EFF               	movlw	255
 11817  007C38  6E0B               	movwf	(??_toupper+1)^0,c
 11818  007C3A  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 11819  007C40  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 11820  007C46  500A               	movf	??_toupper^0,w,c
 11821  007C48  260C               	addwf	(??_toupper+2)^0,f,c
 11822  007C4A  500B               	movf	(??_toupper+1)^0,w,c
 11823  007C4C  220D               	addwfc	(??_toupper+3)^0,f,c
 11824  007C4E  500D               	movf	(??_toupper+3)^0,w,c
 11825  007C50  E106               	bnz	u12990
 11826  007C52  0E1A               	movlw	26
 11827  007C54  5C0C               	subwf	(??_toupper+2)^0,w,c
 11828  007C56  B0D8               	btfsc	status,0,c
 11829  007C58  D002               	goto	u12990
 11830  007C5A  0E01               	movlw	1
 11831  007C5C  D001               	goto	u13000
 11832  007C5E                     u12990:
 11833  007C5E  0E00               	movlw	0
 11834  007C60                     u13000:
 11835  007C60  6E0E               	movwf	_toupper$7965^0,c
 11836  007C62  6A0F               	clrf	(_toupper$7965+1)^0,c
 11837  007C64  500E               	movf	_toupper$7965^0,w,c
 11838  007C66  100F               	iorwf	(_toupper$7965+1)^0,w,c
 11839  007C68  B4D8               	btfsc	status,2,c
 11840  007C6A  D005               	goto	l4041
 11841  007C6C  0E5F               	movlw	95
 11842  007C6E  1408               	andwf	toupper@c^0,w,c
 11843  007C70  6E08               	movwf	?_toupper^0,c
 11844  007C72  6A09               	clrf	(?_toupper+1)^0,c
 11845  007C74  0012               	return	
 11846  007C76                     l4041:
 11847  007C76  0060  F020  F008   	movff	toupper@c,?_toupper
 11848  007C7C  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 11849  007C82  0012               	return		;funcret
 11850  007C84                     __end_of_toupper:
 11851                           	opt callstack 0
 11852                           
 11853 ;; *************** function _islower *****************
 11854 ;; Defined at:
 11855 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  c               2    1[COMRAM] int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  2    1[COMRAM] int 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2, status,0
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;Total ram usage:        6 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    7
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_toupper
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text60
 11884  008610                     __ptext60:
 11885                           	opt callstack 0
 11886  008610                     _islower:
 11887                           	opt callstack 15
 11888                           
 11889                           ;incstack = 0
 11890  008610  0E9F               	movlw	159
 11891  008612  6E04               	movwf	??_islower^0,c
 11892  008614  0EFF               	movlw	255
 11893  008616  6E05               	movwf	(??_islower+1)^0,c
 11894  008618  0060  F008  F006   	movff	islower@c,??_islower+2
 11895  00861E  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 11896  008624  5004               	movf	??_islower^0,w,c
 11897  008626  2606               	addwf	(??_islower+2)^0,f,c
 11898  008628  5005               	movf	(??_islower+1)^0,w,c
 11899  00862A  2207               	addwfc	(??_islower+3)^0,f,c
 11900  00862C  5007               	movf	(??_islower+3)^0,w,c
 11901  00862E  E106               	bnz	u12860
 11902  008630  0E1A               	movlw	26
 11903  008632  5C06               	subwf	(??_islower+2)^0,w,c
 11904  008634  B0D8               	btfsc	status,0,c
 11905  008636  D002               	goto	u12860
 11906  008638  0E01               	movlw	1
 11907  00863A  D001               	goto	u12870
 11908  00863C                     u12860:
 11909  00863C  0E00               	movlw	0
 11910  00863E                     u12870:
 11911  00863E  6E02               	movwf	?_islower^0,c
 11912  008640  6A03               	clrf	(?_islower+1)^0,c
 11913  008642  0012               	return		;funcret
 11914  008644                     __end_of_islower:
 11915                           	opt callstack 0
 11916                           
 11917 ;; *************** function _isupper *****************
 11918 ;; Defined at:
 11919 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;  c               2    1[COMRAM] int 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;		None
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  2    1[COMRAM] int 
 11926 ;; Registers used:
 11927 ;;		wreg, status,2, status,0
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;Total ram usage:        6 bytes
 11938 ;; Hardware stack levels used:    1
 11939 ;; Hardware stack levels required when called:    7
 11940 ;; This function calls:
 11941 ;;		Nothing
 11942 ;; This function is called by:
 11943 ;;		_xtoa
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           	psect	text61
 11948  008644                     __ptext61:
 11949                           	opt callstack 0
 11950  008644                     _isupper:
 11951                           	opt callstack 16
 11952                           
 11953                           ;incstack = 0
 11954  008644  0EBF               	movlw	191
 11955  008646  6E04               	movwf	??_isupper^0,c
 11956  008648  0EFF               	movlw	255
 11957  00864A  6E05               	movwf	(??_isupper+1)^0,c
 11958  00864C  0060  F008  F006   	movff	isupper@c,??_isupper+2
 11959  008652  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 11960  008658  5004               	movf	??_isupper^0,w,c
 11961  00865A  2606               	addwf	(??_isupper+2)^0,f,c
 11962  00865C  5005               	movf	(??_isupper+1)^0,w,c
 11963  00865E  2207               	addwfc	(??_isupper+3)^0,f,c
 11964  008660  5007               	movf	(??_isupper+3)^0,w,c
 11965  008662  E106               	bnz	u12950
 11966  008664  0E1A               	movlw	26
 11967  008666  5C06               	subwf	(??_isupper+2)^0,w,c
 11968  008668  B0D8               	btfsc	status,0,c
 11969  00866A  D002               	goto	u12950
 11970  00866C  0E01               	movlw	1
 11971  00866E  D001               	goto	u12960
 11972  008670                     u12950:
 11973  008670  0E00               	movlw	0
 11974  008672                     u12960:
 11975  008672  6E02               	movwf	?_isupper^0,c
 11976  008674  6A03               	clrf	(?_isupper+1)^0,c
 11977  008676  0012               	return		;funcret
 11978  008678                     __end_of_isupper:
 11979                           	opt callstack 0
 11980                           
 11981 ;; *************** function _isalpha *****************
 11982 ;; Defined at:
 11983 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;  c               2    1[COMRAM] int 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  2    1[COMRAM] int 
 11990 ;; Registers used:
 11991 ;;		wreg, status,2, status,0
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;Total ram usage:        6 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:    7
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_xtoa
 12008 ;;		___strtoxl
 12009 ;; This function uses a non-reentrant model
 12010 ;;
 12011                           
 12012                           	psect	text62
 12013  008678                     __ptext62:
 12014                           	opt callstack 0
 12015  008678                     _isalpha:
 12016                           	opt callstack 16
 12017                           
 12018                           ;incstack = 0
 12019  008678  0E9F               	movlw	159
 12020  00867A  6E04               	movwf	??_isalpha^0,c
 12021  00867C  0EFF               	movlw	255
 12022  00867E  6E05               	movwf	(??_isalpha+1)^0,c
 12023  008680  0E20               	movlw	32
 12024  008682  1002               	iorwf	isalpha@c^0,w,c
 12025  008684  6E06               	movwf	(??_isalpha+2)^0,c
 12026  008686  0E00               	movlw	0
 12027  008688  1003               	iorwf	(isalpha@c+1)^0,w,c
 12028  00868A  6E07               	movwf	(??_isalpha+3)^0,c
 12029  00868C  5004               	movf	??_isalpha^0,w,c
 12030  00868E  2606               	addwf	(??_isalpha+2)^0,f,c
 12031  008690  5005               	movf	(??_isalpha+1)^0,w,c
 12032  008692  2207               	addwfc	(??_isalpha+3)^0,f,c
 12033  008694  5007               	movf	(??_isalpha+3)^0,w,c
 12034  008696  E106               	bnz	u12970
 12035  008698  0E1A               	movlw	26
 12036  00869A  5C06               	subwf	(??_isalpha+2)^0,w,c
 12037  00869C  B0D8               	btfsc	status,0,c
 12038  00869E  D002               	goto	u12970
 12039  0086A0  0E01               	movlw	1
 12040  0086A2  D001               	goto	u12980
 12041  0086A4                     u12970:
 12042  0086A4  0E00               	movlw	0
 12043  0086A6                     u12980:
 12044  0086A6  6E02               	movwf	?_isalpha^0,c
 12045  0086A8  6A03               	clrf	(?_isalpha+1)^0,c
 12046  0086AA  0012               	return		;funcret
 12047  0086AC                     __end_of_isalpha:
 12048                           	opt callstack 0
 12049                           
 12050 ;; *************** function _utoa *****************
 12051 ;; Defined at:
 12052 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12055 ;;		 -> NULL(0), 
 12056 ;;  d               8   32[COMRAM] unsigned long long 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;  n               8   52[COMRAM] unsigned long long 
 12059 ;;  i               2   60[COMRAM] int 
 12060 ;;  w               2   50[COMRAM] int 
 12061 ;;  p               2   48[COMRAM] int 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  2   30[COMRAM] int 
 12064 ;; Registers used:
 12065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 3F/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12071 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12073 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12075 ;;Total ram usage:       32 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:   12
 12078 ;; This function calls:
 12079 ;;		___lodiv
 12080 ;;		___lomod
 12081 ;;		_pad
 12082 ;; This function is called by:
 12083 ;;		_vfpfcnvrt
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087                           	psect	text63
 12088  002C62                     __ptext63:
 12089                           	opt callstack 0
 12090  002C62                     _utoa:
 12091                           	opt callstack 12
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12095                           
 12096                           ;incstack = 0
 12097  002C62  AFB8               	btfss	(_prec+1)& (0+255),7,b
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12101  002C64  93B9               	bcf	_flags& (0+255),1,b
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12105  002C66  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 12106  002C68  D005               	goto	u13420
 12107  002C6A  51B8               	movf	(_prec+1)& (0+255),w,b
 12108  002C6C  E108               	bnz	l3122
 12109  002C6E  05B7               	decf	_prec& (0+255),w,b
 12110  002C70  B0D8               	btfsc	status,0,c
 12111  002C72  D005               	goto	l3122
 12112  002C74                     u13420:
 12113                           
 12114                           ; BSR set to: 0
 12115  002C74  0E00               	movlw	0
 12116  002C76  6E32               	movwf	(utoa@p+1)^0,c
 12117  002C78  0E01               	movlw	1
 12118  002C7A  6E31               	movwf	utoa@p^0,c
 12119  002C7C  D006               	goto	l3124
 12120  002C7E                     l3122:
 12121                           
 12122                           ; BSR set to: 0
 12123  002C7E  0060  F2DC  F031   	movff	_prec,utoa@p
 12124  002C84  0060  F2E0  F032   	movff	_prec+1,utoa@p+1
 12125  002C8A                     l3124:
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12129  002C8A  0060  F2D4  F033   	movff	_width,utoa@w
 12130  002C90  0060  F2D8  F034   	movff	_width+1,utoa@w+1
 12131                           
 12132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12133  002C96  0060  F084  F035   	movff	utoa@d,utoa@n
 12134  002C9C  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 12135  002CA2  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 12136  002CA8  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 12137  002CAE  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 12138  002CB4  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 12139  002CBA  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 12140  002CC0  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12144  002CC6  0E00               	movlw	0
 12145  002CC8  6E3E               	movwf	(utoa@i+1)^0,c
 12146  002CCA  0E1F               	movlw	31
 12147  002CCC  6E3D               	movwf	utoa@i^0,c
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12151  002CCE  0E00               	movlw	0
 12152  002CD0  0102               	movlb	2	; () banked
 12153  002CD2  6FCB               	movwf	(_dbuf+31)& (0+255),b
 12154                           
 12155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12156  002CD4  D096               	goto	l14112
 12157  002CD6                     l14102:
 12158                           
 12159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12160  002CD6  063D               	decf	utoa@i^0,f,c
 12161  002CD8  A0D8               	btfss	status,0,c
 12162  002CDA  063E               	decf	(utoa@i+1)^0,f,c
 12163                           
 12164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12165  002CDC  0EAC               	movlw	low _dbuf
 12166  002CDE  243D               	addwf	utoa@i^0,w,c
 12167  002CE0  6ED9               	movwf	fsr2l,c
 12168  002CE2  0E02               	movlw	high _dbuf
 12169  002CE4  203E               	addwfc	(utoa@i+1)^0,w,c
 12170  002CE6  6EDA               	movwf	fsr2h,c
 12171  002CE8  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 12172  002CEE  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 12173  002CF4  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 12174  002CFA  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 12175  002D00  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 12176  002D06  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 12177  002D0C  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 12178  002D12  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 12179  002D18  0E0A               	movlw	10
 12180  002D1A  6E0A               	movwf	___lomod@divisor^0,c
 12181  002D1C  0E00               	movlw	0
 12182  002D1E  6E0B               	movwf	(___lomod@divisor+1)^0,c
 12183  002D20  0E00               	movlw	0
 12184  002D22  6E0C               	movwf	(___lomod@divisor+2)^0,c
 12185  002D24  0E00               	movlw	0
 12186  002D26  6E0D               	movwf	(___lomod@divisor+3)^0,c
 12187  002D28  0E00               	movlw	0
 12188  002D2A  6E0E               	movwf	(___lomod@divisor+4)^0,c
 12189  002D2C  0E00               	movlw	0
 12190  002D2E  6E0F               	movwf	(___lomod@divisor+5)^0,c
 12191  002D30  0E00               	movlw	0
 12192  002D32  6E10               	movwf	(___lomod@divisor+6)^0,c
 12193  002D34  0E00               	movlw	0
 12194  002D36  6E11               	movwf	(___lomod@divisor+7)^0,c
 12195  002D38  ECC8  F031         	call	___lomod	;wreg free
 12196  002D3C  0060  F008  F029   	movff	?___lomod,??_utoa
 12197  002D42  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 12198  002D48  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 12199  002D4E  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 12200  002D54  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 12201  002D5A  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 12202  002D60  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 12203  002D66  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 12204  002D6C  5029               	movf	??_utoa^0,w,c
 12205  002D6E  0F30               	addlw	48
 12206  002D70  6EDF               	movwf	indf2,c
 12207                           
 12208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12209  002D72  0631               	decf	utoa@p^0,f,c
 12210  002D74  A0D8               	btfss	status,0,c
 12211  002D76  0632               	decf	(utoa@p+1)^0,f,c
 12212                           
 12213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12214  002D78  0633               	decf	utoa@w^0,f,c
 12215  002D7A  A0D8               	btfss	status,0,c
 12216  002D7C  0634               	decf	(utoa@w+1)^0,f,c
 12217                           
 12218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12219  002D7E  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 12220  002D84  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 12221  002D8A  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 12222  002D90  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 12223  002D96  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 12224  002D9C  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 12225  002DA2  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 12226  002DA8  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 12227  002DAE  0E0A               	movlw	10
 12228  002DB0  6E0A               	movwf	___lodiv@divisor^0,c
 12229  002DB2  0E00               	movlw	0
 12230  002DB4  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 12231  002DB6  0E00               	movlw	0
 12232  002DB8  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 12233  002DBA  0E00               	movlw	0
 12234  002DBC  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 12235  002DBE  0E00               	movlw	0
 12236  002DC0  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 12237  002DC2  0E00               	movlw	0
 12238  002DC4  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 12239  002DC6  0E00               	movlw	0
 12240  002DC8  6E10               	movwf	(___lodiv@divisor+6)^0,c
 12241  002DCA  0E00               	movlw	0
 12242  002DCC  6E11               	movwf	(___lodiv@divisor+7)^0,c
 12243  002DCE  EC82  F02C         	call	___lodiv	;wreg free
 12244  002DD2  0060  F008  F035   	movff	?___lodiv,utoa@n
 12245  002DD8  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 12246  002DDE  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 12247  002DE4  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 12248  002DEA  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 12249  002DF0  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 12250  002DF6  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 12251  002DFC  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 12252  002E02                     l14112:
 12253                           
 12254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12255  002E02  503D               	movf	utoa@i^0,w,c
 12256  002E04  103E               	iorwf	(utoa@i+1)^0,w,c
 12257  002E06  B4D8               	btfsc	status,2,c
 12258  002E08  D01B               	goto	u13470
 12259  002E0A  5035               	movf	utoa@n^0,w,c
 12260  002E0C  1036               	iorwf	(utoa@n+1)^0,w,c
 12261  002E0E  1037               	iorwf	(utoa@n+2)^0,w,c
 12262  002E10  1038               	iorwf	(utoa@n+3)^0,w,c
 12263  002E12  1039               	iorwf	(utoa@n+4)^0,w,c
 12264  002E14  103A               	iorwf	(utoa@n+5)^0,w,c
 12265  002E16  103B               	iorwf	(utoa@n+6)^0,w,c
 12266  002E18  103C               	iorwf	(utoa@n+7)^0,w,c
 12267  002E1A  A4D8               	btfss	status,2,c
 12268  002E1C  D75C               	goto	l14102
 12269  002E1E  BE32               	btfsc	(utoa@p+1)^0,7,c
 12270  002E20  D005               	goto	u13450
 12271  002E22  5032               	movf	(utoa@p+1)^0,w,c
 12272  002E24  E102               	bnz	u13451
 12273  002E26  0431               	decf	utoa@p^0,w,c
 12274  002E28  B0D8               	btfsc	status,0,c
 12275  002E2A                     u13451:
 12276  002E2A  D755               	goto	l14102
 12277  002E2C                     u13450:
 12278  002E2C  BE34               	btfsc	(utoa@w+1)^0,7,c
 12279  002E2E  D008               	goto	u13470
 12280  002E30  5034               	movf	(utoa@w+1)^0,w,c
 12281  002E32  E103               	bnz	u13460
 12282  002E34  0433               	decf	utoa@w^0,w,c
 12283  002E36  A0D8               	btfss	status,0,c
 12284  002E38  D003               	goto	u13470
 12285  002E3A                     u13460:
 12286  002E3A  0100               	movlb	0	; () banked
 12287  002E3C  B3B9               	btfsc	_flags& (0+255),1,b
 12288  002E3E  D74B               	goto	l14102
 12289  002E40                     u13470:
 12290                           
 12291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12292  002E40  0060  F07C  F014   	movff	utoa@fp,pad@fp
 12293  002E46  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 12294  002E4C  0EAC               	movlw	low _dbuf
 12295  002E4E  243D               	addwf	utoa@i^0,w,c
 12296  002E50  6E16               	movwf	pad@buf^0,c
 12297  002E52  0E02               	movlw	high _dbuf
 12298  002E54  203E               	addwfc	(utoa@i+1)^0,w,c
 12299  002E56  6E17               	movwf	(pad@buf+1)^0,c
 12300  002E58  0060  F0CC  F018   	movff	utoa@w,pad@p
 12301  002E5E  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 12302  002E64  EC84  F032         	call	_pad	;wreg free
 12303  002E68  0060  F050  F01F   	movff	?_pad,?_utoa
 12304  002E6E  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 12305  002E74  0012               	return		;funcret
 12306  002E76                     __end_of_utoa:
 12307                           	opt callstack 0
 12308                           
 12309 ;; *************** function ___lomod *****************
 12310 ;; Defined at:
 12311 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  dividend        8    1[COMRAM] unsigned long long 
 12314 ;;  divisor         8    9[COMRAM] unsigned long long 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  counter         1   17[COMRAM] unsigned char 
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  8    1[COMRAM] unsigned long long 
 12319 ;; Registers used:
 12320 ;;		wreg, status,2, status,0
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/2
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12326 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;Total ram usage:       17 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    7
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_utoa
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	text64
 12341  006390                     __ptext64:
 12342                           	opt callstack 0
 12343  006390                     ___lomod:
 12344                           	opt callstack 16
 12345                           
 12346                           ;incstack = 0
 12347  006390  500A               	movf	___lomod@divisor^0,w,c
 12348  006392  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 12349  006394  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 12350  006396  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 12351  006398  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 12352  00639A  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 12353  00639C  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 12354  00639E  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 12355  0063A0  B4D8               	btfsc	status,2,c
 12356  0063A2  D03C               	goto	l3653
 12357  0063A4  0E01               	movlw	1
 12358  0063A6  6E12               	movwf	___lomod@counter^0,c
 12359  0063A8  D00A               	goto	l13994
 12360  0063AA                     l13992:
 12361  0063AA  90D8               	bcf	status,0,c
 12362  0063AC  360A               	rlcf	___lomod@divisor^0,f,c
 12363  0063AE  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 12364  0063B0  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 12365  0063B2  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 12366  0063B4  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 12367  0063B6  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 12368  0063B8  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 12369  0063BA  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 12370  0063BC  2A12               	incf	___lomod@counter^0,f,c
 12371  0063BE                     l13994:
 12372  0063BE  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 12373  0063C0  D7F4               	goto	l13992
 12374  0063C2                     u13220:
 12375  0063C2  500A               	movf	___lomod@divisor^0,w,c
 12376  0063C4  5C02               	subwf	___lomod@dividend^0,w,c
 12377  0063C6  500B               	movf	(___lomod@divisor+1)^0,w,c
 12378  0063C8  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 12379  0063CA  500C               	movf	(___lomod@divisor+2)^0,w,c
 12380  0063CC  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 12381  0063CE  500D               	movf	(___lomod@divisor+3)^0,w,c
 12382  0063D0  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 12383  0063D2  500E               	movf	(___lomod@divisor+4)^0,w,c
 12384  0063D4  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 12385  0063D6  500F               	movf	(___lomod@divisor+5)^0,w,c
 12386  0063D8  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 12387  0063DA  5010               	movf	(___lomod@divisor+6)^0,w,c
 12388  0063DC  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 12389  0063DE  5011               	movf	(___lomod@divisor+7)^0,w,c
 12390  0063E0  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 12391  0063E2  A0D8               	btfss	status,0,c
 12392  0063E4  D010               	goto	l14000
 12393  0063E6  500A               	movf	___lomod@divisor^0,w,c
 12394  0063E8  5E02               	subwf	___lomod@dividend^0,f,c
 12395  0063EA  500B               	movf	(___lomod@divisor+1)^0,w,c
 12396  0063EC  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 12397  0063EE  500C               	movf	(___lomod@divisor+2)^0,w,c
 12398  0063F0  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 12399  0063F2  500D               	movf	(___lomod@divisor+3)^0,w,c
 12400  0063F4  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 12401  0063F6  500E               	movf	(___lomod@divisor+4)^0,w,c
 12402  0063F8  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 12403  0063FA  500F               	movf	(___lomod@divisor+5)^0,w,c
 12404  0063FC  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 12405  0063FE  5010               	movf	(___lomod@divisor+6)^0,w,c
 12406  006400  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 12407  006402  5011               	movf	(___lomod@divisor+7)^0,w,c
 12408  006404  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 12409  006406                     l14000:
 12410  006406  90D8               	bcf	status,0,c
 12411  006408  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 12412  00640A  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 12413  00640C  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 12414  00640E  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 12415  006410  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 12416  006412  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 12417  006414  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 12418  006416  320A               	rrcf	___lomod@divisor^0,f,c
 12419  006418  2E12               	decfsz	___lomod@counter^0,f,c
 12420  00641A  D7D3               	goto	u13220
 12421  00641C                     l3653:
 12422  00641C  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 12423  006422  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 12424  006428  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 12425  00642E  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 12426  006434  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 12427  00643A  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 12428  006440  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 12429  006446  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 12430  00644C  0012               	return		;funcret
 12431  00644E                     __end_of___lomod:
 12432                           	opt callstack 0
 12433                           
 12434 ;; *************** function ___lodiv *****************
 12435 ;; Defined at:
 12436 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  dividend        8    1[COMRAM] unsigned long long 
 12439 ;;  divisor         8    9[COMRAM] unsigned long long 
 12440 ;; Auto vars:     Size  Location     Type
 12441 ;;  quotient        8   17[COMRAM] unsigned long long 
 12442 ;;  counter         1   25[COMRAM] unsigned char 
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  8    1[COMRAM] unsigned long long 
 12445 ;; Registers used:
 12446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/2
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12452 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12456 ;;Total ram usage:       25 bytes
 12457 ;; Hardware stack levels used:    1
 12458 ;; Hardware stack levels required when called:    7
 12459 ;; This function calls:
 12460 ;;		Nothing
 12461 ;; This function is called by:
 12462 ;;		_utoa
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           	psect	text65
 12467  005904                     __ptext65:
 12468                           	opt callstack 0
 12469  005904                     ___lodiv:
 12470                           	opt callstack 16
 12471                           
 12472                           ;incstack = 0
 12473  005904  EE20  F012         	lfsr	2,___lodiv@quotient
 12474  005908  0E07               	movlw	7
 12475  00590A                     u13171:
 12476  00590A  6ADE               	clrf	postinc2,c
 12477  00590C  06E8               	decf	wreg,f,c
 12478  00590E  E2FD               	bc	u13171
 12479  005910  500A               	movf	___lodiv@divisor^0,w,c
 12480  005912  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 12481  005914  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 12482  005916  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 12483  005918  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 12484  00591A  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 12485  00591C  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 12486  00591E  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 12487  005920  B4D8               	btfsc	status,2,c
 12488  005922  D046               	goto	l3643
 12489  005924  0E01               	movlw	1
 12490  005926  6E1A               	movwf	___lodiv@counter^0,c
 12491  005928  D00A               	goto	l13974
 12492  00592A                     l13972:
 12493  00592A  90D8               	bcf	status,0,c
 12494  00592C  360A               	rlcf	___lodiv@divisor^0,f,c
 12495  00592E  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 12496  005930  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 12497  005932  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 12498  005934  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 12499  005936  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 12500  005938  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 12501  00593A  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 12502  00593C  2A1A               	incf	___lodiv@counter^0,f,c
 12503  00593E                     l13974:
 12504  00593E  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 12505  005940  D7F4               	goto	l13972
 12506  005942                     u13190:
 12507  005942  90D8               	bcf	status,0,c
 12508  005944  3612               	rlcf	___lodiv@quotient^0,f,c
 12509  005946  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 12510  005948  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 12511  00594A  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 12512  00594C  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 12513  00594E  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 12514  005950  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 12515  005952  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 12516  005954  500A               	movf	___lodiv@divisor^0,w,c
 12517  005956  5C02               	subwf	___lodiv@dividend^0,w,c
 12518  005958  500B               	movf	(___lodiv@divisor+1)^0,w,c
 12519  00595A  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 12520  00595C  500C               	movf	(___lodiv@divisor+2)^0,w,c
 12521  00595E  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 12522  005960  500D               	movf	(___lodiv@divisor+3)^0,w,c
 12523  005962  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 12524  005964  500E               	movf	(___lodiv@divisor+4)^0,w,c
 12525  005966  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 12526  005968  500F               	movf	(___lodiv@divisor+5)^0,w,c
 12527  00596A  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 12528  00596C  5010               	movf	(___lodiv@divisor+6)^0,w,c
 12529  00596E  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 12530  005970  5011               	movf	(___lodiv@divisor+7)^0,w,c
 12531  005972  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 12532  005974  A0D8               	btfss	status,0,c
 12533  005976  D011               	goto	l13984
 12534  005978  500A               	movf	___lodiv@divisor^0,w,c
 12535  00597A  5E02               	subwf	___lodiv@dividend^0,f,c
 12536  00597C  500B               	movf	(___lodiv@divisor+1)^0,w,c
 12537  00597E  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 12538  005980  500C               	movf	(___lodiv@divisor+2)^0,w,c
 12539  005982  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 12540  005984  500D               	movf	(___lodiv@divisor+3)^0,w,c
 12541  005986  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 12542  005988  500E               	movf	(___lodiv@divisor+4)^0,w,c
 12543  00598A  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 12544  00598C  500F               	movf	(___lodiv@divisor+5)^0,w,c
 12545  00598E  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 12546  005990  5010               	movf	(___lodiv@divisor+6)^0,w,c
 12547  005992  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 12548  005994  5011               	movf	(___lodiv@divisor+7)^0,w,c
 12549  005996  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 12550  005998  8012               	bsf	___lodiv@quotient^0,0,c
 12551  00599A                     l13984:
 12552  00599A  90D8               	bcf	status,0,c
 12553  00599C  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 12554  00599E  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 12555  0059A0  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 12556  0059A2  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 12557  0059A4  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 12558  0059A6  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 12559  0059A8  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 12560  0059AA  320A               	rrcf	___lodiv@divisor^0,f,c
 12561  0059AC  2E1A               	decfsz	___lodiv@counter^0,f,c
 12562  0059AE  D7C9               	goto	u13190
 12563  0059B0                     l3643:
 12564  0059B0  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 12565  0059B6  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 12566  0059BC  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 12567  0059C2  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 12568  0059C8  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 12569  0059CE  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 12570  0059D4  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 12571  0059DA  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 12572  0059E0  0012               	return		;funcret
 12573  0059E2                     __end_of___lodiv:
 12574                           	opt callstack 0
 12575                           
 12576 ;; *************** function _dtoa *****************
 12577 ;; Defined at:
 12578 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12581 ;;		 -> NULL(0), 
 12582 ;;  d               8   32[COMRAM] long long 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  n               8   56[COMRAM] long long 
 12585 ;;  i               2   64[COMRAM] int 
 12586 ;;  s               2   54[COMRAM] int 
 12587 ;;  w               2   52[COMRAM] int 
 12588 ;;  p               2   50[COMRAM] int 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  2   30[COMRAM] int 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 3F/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12598 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12599 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12600 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12602 ;;Total ram usage:       36 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:   12
 12605 ;; This function calls:
 12606 ;;		___aodiv
 12607 ;;		___aomod
 12608 ;;		_abs
 12609 ;;		_pad
 12610 ;; This function is called by:
 12611 ;;		_vfpfcnvrt
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           	psect	text66
 12616  00201A                     __ptext66:
 12617                           	opt callstack 0
 12618  00201A                     _dtoa:
 12619                           	opt callstack 12
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12623                           
 12624                           ;incstack = 0
 12625  00201A  0060  F084  F039   	movff	dtoa@d,dtoa@n
 12626  002020  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 12627  002026  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 12628  00202C  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 12629  002032  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 12630  002038  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 12631  00203E  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 12632  002044  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12636  00204A  AE40               	btfss	(dtoa@n+7)^0,7,c
 12637  00204C  D002               	goto	u13260
 12638  00204E  0E01               	movlw	1
 12639  002050  D001               	goto	u13270
 12640  002052                     u13260:
 12641  002052  0E00               	movlw	0
 12642  002054                     u13270:
 12643  002054  6E37               	movwf	dtoa@s^0,c
 12644  002056  6A38               	clrf	(dtoa@s+1)^0,c
 12645                           
 12646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12647  002058  5037               	movf	dtoa@s^0,w,c
 12648  00205A  1038               	iorwf	(dtoa@s+1)^0,w,c
 12649  00205C  B4D8               	btfsc	status,2,c
 12650  00205E  D010               	goto	l14034
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12654  002060  1E40               	comf	(dtoa@n+7)^0,f,c
 12655  002062  1E3F               	comf	(dtoa@n+6)^0,f,c
 12656  002064  1E3E               	comf	(dtoa@n+5)^0,f,c
 12657  002066  1E3D               	comf	(dtoa@n+4)^0,f,c
 12658  002068  1E3C               	comf	(dtoa@n+3)^0,f,c
 12659  00206A  1E3B               	comf	(dtoa@n+2)^0,f,c
 12660  00206C  1E3A               	comf	(dtoa@n+1)^0,f,c
 12661  00206E  6C39               	negf	dtoa@n^0,c
 12662  002070  0E00               	movlw	0
 12663  002072  223A               	addwfc	(dtoa@n+1)^0,f,c
 12664  002074  223B               	addwfc	(dtoa@n+2)^0,f,c
 12665  002076  223C               	addwfc	(dtoa@n+3)^0,f,c
 12666  002078  223D               	addwfc	(dtoa@n+4)^0,f,c
 12667  00207A  223E               	addwfc	(dtoa@n+5)^0,f,c
 12668  00207C  223F               	addwfc	(dtoa@n+6)^0,f,c
 12669  00207E  2240               	addwfc	(dtoa@n+7)^0,f,c
 12670  002080                     l14034:
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12674  002080  AFB8               	btfss	(_prec+1)& (0+255),7,b
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12678  002082  93B9               	bcf	_flags& (0+255),1,b
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12682  002084  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 12683  002086  D005               	goto	u13300
 12684  002088  51B8               	movf	(_prec+1)& (0+255),w,b
 12685  00208A  E108               	bnz	l3097
 12686  00208C  05B7               	decf	_prec& (0+255),w,b
 12687  00208E  B0D8               	btfsc	status,0,c
 12688  002090  D005               	goto	l3097
 12689  002092                     u13300:
 12690                           
 12691                           ; BSR set to: 0
 12692  002092  0E00               	movlw	0
 12693  002094  6E34               	movwf	(dtoa@p+1)^0,c
 12694  002096  0E01               	movlw	1
 12695  002098  6E33               	movwf	dtoa@p^0,c
 12696  00209A  D006               	goto	l3099
 12697  00209C                     l3097:
 12698                           
 12699                           ; BSR set to: 0
 12700  00209C  0060  F2DC  F033   	movff	_prec,dtoa@p
 12701  0020A2  0060  F2E0  F034   	movff	_prec+1,dtoa@p+1
 12702  0020A8                     l3099:
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12706  0020A8  0060  F2D4  F035   	movff	_width,dtoa@w
 12707  0020AE  0060  F2D8  F036   	movff	_width+1,dtoa@w+1
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12711  0020B4  5037               	movf	dtoa@s^0,w,c
 12712  0020B6  1038               	iorwf	(dtoa@s+1)^0,w,c
 12713  0020B8  A4D8               	btfss	status,2,c
 12714  0020BA  D002               	goto	u13320
 12715                           
 12716                           ; BSR set to: 0
 12717  0020BC  A5B9               	btfss	_flags& (0+255),2,b
 12718  0020BE  D003               	goto	l14048
 12719  0020C0                     u13320:
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12723  0020C0  0635               	decf	dtoa@w^0,f,c
 12724  0020C2  A0D8               	btfss	status,0,c
 12725  0020C4  0636               	decf	(dtoa@w+1)^0,f,c
 12726  0020C6                     l14048:
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12730  0020C6  0E00               	movlw	0
 12731  0020C8  6E42               	movwf	(dtoa@i+1)^0,c
 12732  0020CA  0E1F               	movlw	31
 12733  0020CC  6E41               	movwf	dtoa@i^0,c
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12737  0020CE  0E00               	movlw	0
 12738  0020D0  0102               	movlb	2	; () banked
 12739  0020D2  6FCB               	movwf	(_dbuf+31)& (0+255),b
 12740                           
 12741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12742  0020D4  D09E               	goto	l14062
 12743  0020D6                     l14052:
 12744                           
 12745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12746  0020D6  0641               	decf	dtoa@i^0,f,c
 12747  0020D8  A0D8               	btfss	status,0,c
 12748  0020DA  0642               	decf	(dtoa@i+1)^0,f,c
 12749                           
 12750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12751  0020DC  0EAC               	movlw	low _dbuf
 12752  0020DE  2441               	addwf	dtoa@i^0,w,c
 12753  0020E0  6ED9               	movwf	fsr2l,c
 12754  0020E2  0E02               	movlw	high _dbuf
 12755  0020E4  2042               	addwfc	(dtoa@i+1)^0,w,c
 12756  0020E6  6EDA               	movwf	fsr2h,c
 12757  0020E8  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 12758  0020EE  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 12759  0020F4  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 12760  0020FA  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 12761  002100  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 12762  002106  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 12763  00210C  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 12764  002112  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 12765  002118  0E0A               	movlw	10
 12766  00211A  6E0A               	movwf	___aomod@divisor^0,c
 12767  00211C  0E00               	movlw	0
 12768  00211E  6E0B               	movwf	(___aomod@divisor+1)^0,c
 12769  002120  0E00               	movlw	0
 12770  002122  6E0C               	movwf	(___aomod@divisor+2)^0,c
 12771  002124  0E00               	movlw	0
 12772  002126  6E0D               	movwf	(___aomod@divisor+3)^0,c
 12773  002128  0E00               	movlw	0
 12774  00212A  6E0E               	movwf	(___aomod@divisor+4)^0,c
 12775  00212C  0E00               	movlw	0
 12776  00212E  6E0F               	movwf	(___aomod@divisor+5)^0,c
 12777  002130  0E00               	movlw	0
 12778  002132  6E10               	movwf	(___aomod@divisor+6)^0,c
 12779  002134  0E00               	movlw	0
 12780  002136  6E11               	movwf	(___aomod@divisor+7)^0,c
 12781  002138  EC47  F023         	call	___aomod	;wreg free
 12782  00213C  0060  F008  F029   	movff	?___aomod,??_dtoa
 12783  002142  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 12784  002148  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 12785  00214E  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 12786  002154  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 12787  00215A  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 12788  002160  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 12789  002166  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 12790  00216C  0060  F0A4  F014   	movff	??_dtoa,abs@a
 12791  002172  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 12792  002178  EC00  F041         	call	_abs	;wreg free
 12793  00217C  5014               	movf	?_abs^0,w,c
 12794  00217E  0F30               	addlw	48
 12795  002180  6EDF               	movwf	indf2,c
 12796                           
 12797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12798  002182  0633               	decf	dtoa@p^0,f,c
 12799  002184  A0D8               	btfss	status,0,c
 12800  002186  0634               	decf	(dtoa@p+1)^0,f,c
 12801                           
 12802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12803  002188  0635               	decf	dtoa@w^0,f,c
 12804  00218A  A0D8               	btfss	status,0,c
 12805  00218C  0636               	decf	(dtoa@w+1)^0,f,c
 12806                           
 12807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12808  00218E  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 12809  002194  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 12810  00219A  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 12811  0021A0  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 12812  0021A6  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 12813  0021AC  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 12814  0021B2  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 12815  0021B8  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 12816  0021BE  0E0A               	movlw	10
 12817  0021C0  6E0A               	movwf	___aodiv@divisor^0,c
 12818  0021C2  0E00               	movlw	0
 12819  0021C4  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 12820  0021C6  0E00               	movlw	0
 12821  0021C8  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 12822  0021CA  0E00               	movlw	0
 12823  0021CC  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 12824  0021CE  0E00               	movlw	0
 12825  0021D0  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 12826  0021D2  0E00               	movlw	0
 12827  0021D4  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 12828  0021D6  0E00               	movlw	0
 12829  0021D8  6E10               	movwf	(___aodiv@divisor+6)^0,c
 12830  0021DA  0E00               	movlw	0
 12831  0021DC  6E11               	movwf	(___aodiv@divisor+7)^0,c
 12832  0021DE  EC4F  F021         	call	___aodiv	;wreg free
 12833  0021E2  0060  F008  F039   	movff	?___aodiv,dtoa@n
 12834  0021E8  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 12835  0021EE  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 12836  0021F4  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 12837  0021FA  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 12838  002200  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 12839  002206  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 12840  00220C  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 12841  002212                     l14062:
 12842                           
 12843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12844  002212  BE42               	btfsc	(dtoa@i+1)^0,7,c
 12845  002214  D020               	goto	u13370
 12846  002216  5042               	movf	(dtoa@i+1)^0,w,c
 12847  002218  E103               	bnz	u13330
 12848  00221A  0441               	decf	dtoa@i^0,w,c
 12849  00221C  A0D8               	btfss	status,0,c
 12850  00221E  D01B               	goto	u13370
 12851  002220                     u13330:
 12852  002220  5039               	movf	dtoa@n^0,w,c
 12853  002222  103A               	iorwf	(dtoa@n+1)^0,w,c
 12854  002224  103B               	iorwf	(dtoa@n+2)^0,w,c
 12855  002226  103C               	iorwf	(dtoa@n+3)^0,w,c
 12856  002228  103D               	iorwf	(dtoa@n+4)^0,w,c
 12857  00222A  103E               	iorwf	(dtoa@n+5)^0,w,c
 12858  00222C  103F               	iorwf	(dtoa@n+6)^0,w,c
 12859  00222E  1040               	iorwf	(dtoa@n+7)^0,w,c
 12860  002230  A4D8               	btfss	status,2,c
 12861  002232  D751               	goto	l14052
 12862  002234  BE34               	btfsc	(dtoa@p+1)^0,7,c
 12863  002236  D005               	goto	u13350
 12864  002238  5034               	movf	(dtoa@p+1)^0,w,c
 12865  00223A  E102               	bnz	u13351
 12866  00223C  0433               	decf	dtoa@p^0,w,c
 12867  00223E  B0D8               	btfsc	status,0,c
 12868  002240                     u13351:
 12869  002240  D74A               	goto	l14052
 12870  002242                     u13350:
 12871  002242  BE36               	btfsc	(dtoa@w+1)^0,7,c
 12872  002244  D008               	goto	u13370
 12873  002246  5036               	movf	(dtoa@w+1)^0,w,c
 12874  002248  E103               	bnz	u13360
 12875  00224A  0435               	decf	dtoa@w^0,w,c
 12876  00224C  A0D8               	btfss	status,0,c
 12877  00224E  D003               	goto	u13370
 12878  002250                     u13360:
 12879  002250  0100               	movlb	0	; () banked
 12880  002252  B3B9               	btfsc	_flags& (0+255),1,b
 12881  002254  D740               	goto	l14052
 12882  002256                     u13370:
 12883                           
 12884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12885  002256  5037               	movf	dtoa@s^0,w,c
 12886  002258  1038               	iorwf	(dtoa@s+1)^0,w,c
 12887  00225A  A4D8               	btfss	status,2,c
 12888  00225C  D003               	goto	u13390
 12889  00225E  0100               	movlb	0	; () banked
 12890  002260  A5B9               	btfss	_flags& (0+255),2,b
 12891  002262  D018               	goto	l14086
 12892  002264                     u13390:
 12893                           
 12894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12895  002264  0641               	decf	dtoa@i^0,f,c
 12896  002266  A0D8               	btfss	status,0,c
 12897  002268  0642               	decf	(dtoa@i+1)^0,f,c
 12898                           
 12899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12900  00226A  5037               	movf	dtoa@s^0,w,c
 12901  00226C  1038               	iorwf	(dtoa@s+1)^0,w,c
 12902  00226E  A4D8               	btfss	status,2,c
 12903  002270  D004               	goto	l14082
 12904  002272  0E00               	movlw	0
 12905  002274  6E32               	movwf	(_dtoa$7308+1)^0,c
 12906  002276  0E2B               	movlw	43
 12907  002278  D003               	goto	L5
 12908  00227A                     l14082:
 12909  00227A  0E00               	movlw	0
 12910  00227C  6E32               	movwf	(_dtoa$7308+1)^0,c
 12911  00227E  0E2D               	movlw	45
 12912  002280                     L5:
 12913  002280  6E31               	movwf	_dtoa$7308^0,c
 12914  002282  0EAC               	movlw	low _dbuf
 12915  002284  2441               	addwf	dtoa@i^0,w,c
 12916  002286  6ED9               	movwf	fsr2l,c
 12917  002288  0E02               	movlw	high _dbuf
 12918  00228A  2042               	addwfc	(dtoa@i+1)^0,w,c
 12919  00228C  6EDA               	movwf	fsr2h,c
 12920  00228E  0060  F0C7  FFDF   	movff	_dtoa$7308,indf2
 12921  002294                     l14086:
 12922                           
 12923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12924  002294  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 12925  00229A  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 12926  0022A0  0EAC               	movlw	low _dbuf
 12927  0022A2  2441               	addwf	dtoa@i^0,w,c
 12928  0022A4  6E16               	movwf	pad@buf^0,c
 12929  0022A6  0E02               	movlw	high _dbuf
 12930  0022A8  2042               	addwfc	(dtoa@i+1)^0,w,c
 12931  0022AA  6E17               	movwf	(pad@buf+1)^0,c
 12932  0022AC  0060  F0D4  F018   	movff	dtoa@w,pad@p
 12933  0022B2  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 12934  0022B8  EC84  F032         	call	_pad	;wreg free
 12935  0022BC  0060  F050  F01F   	movff	?_pad,?_dtoa
 12936  0022C2  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 12937  0022C8  0012               	return		;funcret
 12938  0022CA                     __end_of_dtoa:
 12939                           	opt callstack 0
 12940                           
 12941 ;; *************** function _pad *****************
 12942 ;; Defined at:
 12943 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 12946 ;;		 -> NULL(0), 
 12947 ;;  buf             2   21[COMRAM] PTR unsigned char 
 12948 ;;		 -> dbuf(32), 
 12949 ;;  p               2   23[COMRAM] int 
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;  w               2   28[COMRAM] int 
 12952 ;;  i               2   26[COMRAM] int 
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  2   19[COMRAM] int 
 12955 ;; Registers used:
 12956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/0
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12963 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;Total ram usage:       11 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:   11
 12969 ;; This function calls:
 12970 ;;		_fputc
 12971 ;;		_fputs
 12972 ;;		_strlen
 12973 ;; This function is called by:
 12974 ;;		_dtoa
 12975 ;;		_utoa
 12976 ;;		_xtoa
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text67
 12981  006508                     __ptext67:
 12982                           	opt callstack 0
 12983  006508                     _pad:
 12984                           	opt callstack 12
 12985                           
 12986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12987                           
 12988                           ;incstack = 0
 12989  006508  0100               	movlb	0	; () banked
 12990  00650A  A1B9               	btfss	_flags& (0+255),0,b
 12991  00650C  D00E               	goto	l13836
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12995  00650E  0060  F058  F00D   	movff	pad@buf,fputs@s
 12996  006514  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 12997  00651A  0060  F050  F00F   	movff	pad@fp,fputs@fp
 12998  006520  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 12999  006526  ECE1  F040         	call	_fputs	;wreg free
 13000  00652A                     l13836:
 13001                           
 13002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13003  00652A  BE19               	btfsc	(pad@p+1)^0,7,c
 13004  00652C  D007               	goto	l13840
 13005  00652E  0060  F060  F01D   	movff	pad@p,pad@w
 13006  006534  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 13007  00653A  D004               	goto	l3086
 13008  00653C                     l13840:
 13009  00653C  0E00               	movlw	0
 13010  00653E  6E1E               	movwf	(pad@w+1)^0,c
 13011  006540  0E00               	movlw	0
 13012  006542  6E1D               	movwf	pad@w^0,c
 13013  006544                     l3086:
 13014                           
 13015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13016  006544  0E00               	movlw	0
 13017  006546  6E1C               	movwf	(pad@i+1)^0,c
 13018  006548  0E00               	movlw	0
 13019  00654A  6E1B               	movwf	pad@i^0,c
 13020                           
 13021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13022  00654C  D00E               	goto	l13846
 13023  00654E                     l13842:
 13024                           
 13025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13026  00654E  0E00               	movlw	0
 13027  006550  6E05               	movwf	(fputc@c+1)^0,c
 13028  006552  0E20               	movlw	32
 13029  006554  6E04               	movwf	fputc@c^0,c
 13030  006556  0060  F050  F006   	movff	pad@fp,fputc@fp
 13031  00655C  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 13032  006562  EC8B  F03A         	call	_fputc	;wreg free
 13033                           
 13034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13035  006566  4A1B               	infsnz	pad@i^0,f,c
 13036  006568  2A1C               	incf	(pad@i+1)^0,f,c
 13037  00656A                     l13846:
 13038                           
 13039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13040  00656A  501D               	movf	pad@w^0,w,c
 13041  00656C  5C1B               	subwf	pad@i^0,w,c
 13042  00656E  501C               	movf	(pad@i+1)^0,w,c
 13043  006570  0A80               	xorlw	128
 13044  006572  6E1A               	movwf	??_pad^0,c
 13045  006574  501E               	movf	(pad@w+1)^0,w,c
 13046  006576  0A80               	xorlw	128
 13047  006578  581A               	subwfb	??_pad^0,w,c
 13048  00657A  A0D8               	btfss	status,0,c
 13049  00657C  D7E8               	goto	l13842
 13050                           
 13051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13052  00657E  0100               	movlb	0	; () banked
 13053  006580  B1B9               	btfsc	_flags& (0+255),0,b
 13054  006582  D00E               	goto	l13850
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13058  006584  0060  F058  F00D   	movff	pad@buf,fputs@s
 13059  00658A  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 13060  006590  0060  F050  F00F   	movff	pad@fp,fputs@fp
 13061  006596  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 13062  00659C  ECE1  F040         	call	_fputs	;wreg free
 13063  0065A0                     l13850:
 13064                           
 13065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13066  0065A0  0060  F058  F002   	movff	pad@buf,strlen@s
 13067  0065A6  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 13068  0065AC  EC42  F03E         	call	_strlen	;wreg free
 13069  0065B0  501D               	movf	pad@w^0,w,c
 13070  0065B2  2402               	addwf	?_strlen^0,w,c
 13071  0065B4  6E14               	movwf	?_pad^0,c
 13072  0065B6  501E               	movf	(pad@w+1)^0,w,c
 13073  0065B8  2003               	addwfc	(?_strlen+1)^0,w,c
 13074  0065BA  6E15               	movwf	(?_pad+1)^0,c
 13075  0065BC  0012               	return		;funcret
 13076  0065BE                     __end_of_pad:
 13077                           	opt callstack 0
 13078                           
 13079 ;; *************** function _strlen *****************
 13080 ;; Defined at:
 13081 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;  s               2    1[COMRAM] PTR const unsigned char 
 13084 ;;		 -> dbuf(32), STR_131(10), STR_129(10), STR_127(6), 
 13085 ;;		 -> STR_125(6), STR_123(7), STR_121(5), STR_119(7), 
 13086 ;;		 -> STR_117(7), STR_115(6), STR_113(9), STR_111(8), 
 13087 ;;		 -> STR_109(8), STR_107(7), STR_105(6), STR_103(3), 
 13088 ;;		 -> STR_101(9), STR_99(7), STR_97(7), STR_95(10), 
 13089 ;;		 -> STR_93(10), STR_91(15), STR_89(13), STR_87(9), 
 13090 ;;		 -> STR_85(7), STR_83(7), STR_81(10), STR_79(7), 
 13091 ;;		 -> STR_77(8), STR_75(11), STR_73(5), STR_71(5), 
 13092 ;;		 -> STR_69(7), STR_67(9), STR_65(7), STR_58(2), 
 13093 ;;		 -> STR_56(2), STR_55(2), STR_52(6), STR_50(6), 
 13094 ;;		 -> STR_48(5), STR_44(2), STR_39(2), STR_35(2), 
 13095 ;;		 -> STR_26(2), STR_23(2), STR_15(2), STR_11(2), 
 13096 ;;		 -> atCommand(80), NULL(0), STR_6(2), STR_2(2), 
 13097 ;;		 -> STR_1(2), 
 13098 ;; Auto vars:     Size  Location     Type
 13099 ;;  a               2    3[COMRAM] PTR const unsigned char 
 13100 ;;		 -> dbuf(32), STR_131(10), STR_129(10), STR_127(6), 
 13101 ;;		 -> STR_125(6), STR_123(7), STR_121(5), STR_119(7), 
 13102 ;;		 -> STR_117(7), STR_115(6), STR_113(9), STR_111(8), 
 13103 ;;		 -> STR_109(8), STR_107(7), STR_105(6), STR_103(3), 
 13104 ;;		 -> STR_101(9), STR_99(7), STR_97(7), STR_95(10), 
 13105 ;;		 -> STR_93(10), STR_91(15), STR_89(13), STR_87(9), 
 13106 ;;		 -> STR_85(7), STR_83(7), STR_81(10), STR_79(7), 
 13107 ;;		 -> STR_77(8), STR_75(11), STR_73(5), STR_71(5), 
 13108 ;;		 -> STR_69(7), STR_67(9), STR_65(7), STR_58(2), 
 13109 ;;		 -> STR_56(2), STR_55(2), STR_52(6), STR_50(6), 
 13110 ;;		 -> STR_48(5), STR_44(2), STR_39(2), STR_35(2), 
 13111 ;;		 -> STR_26(2), STR_23(2), STR_15(2), STR_11(2), 
 13112 ;;		 -> atCommand(80), NULL(0), STR_6(2), STR_2(2), 
 13113 ;;		 -> STR_1(2), 
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  2    1[COMRAM] unsigned int 
 13116 ;; Registers used:
 13117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13126 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13127 ;;Total ram usage:        4 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:    7
 13130 ;; This function calls:
 13131 ;;		Nothing
 13132 ;; This function is called by:
 13133 ;;		_cmdSend
 13134 ;;		_cmdBcast
 13135 ;;		_cmdSetAES
 13136 ;;		_pad
 13137 ;;		_strstr
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text68
 13142  007C84                     __ptext68:
 13143                           	opt callstack 0
 13144  007C84                     _strlen:
 13145                           	opt callstack 20
 13146                           
 13147                           ;incstack = 0
 13148  007C84  0060  F008  F004   	movff	strlen@s,strlen@a
 13149  007C8A  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 13150  007C90  D002               	goto	l13794
 13151  007C92                     l13792:
 13152  007C92  4A02               	infsnz	strlen@s^0,f,c
 13153  007C94  2A03               	incf	(strlen@s+1)^0,f,c
 13154  007C96                     l13794:
 13155  007C96  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 13156  007C9C  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 13157  007CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 13158  007CA4  6EF8               	movwf	tblptru,c
 13159  007CA6  0E0F               	movlw	(high __ramtop+-1)
 13160  007CA8  64F7               	cpfsgt	tblptrh,c
 13161  007CAA  D003               	bra	u12827
 13162  007CAC  0008               	tblrd		*
 13163  007CAE  50F5               	movf	tablat,w,c
 13164  007CB0  D007               	bra	u12820
 13165  007CB2                     u12827:
 13166  007CB2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13167  007CB8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13168  007CBE  50EF               	movf	indf0,w,c
 13169  007CC0                     u12820:
 13170  007CC0  0900               	iorlw	0
 13171  007CC2  A4D8               	btfss	status,2,c
 13172  007CC4  D7E6               	goto	l13792
 13173  007CC6  5004               	movf	strlen@a^0,w,c
 13174  007CC8  5C02               	subwf	strlen@s^0,w,c
 13175  007CCA  6E02               	movwf	?_strlen^0,c
 13176  007CCC  5005               	movf	(strlen@a+1)^0,w,c
 13177  007CCE  5803               	subwfb	(strlen@s+1)^0,w,c
 13178  007CD0  6E03               	movwf	(?_strlen+1)^0,c
 13179  007CD2  0012               	return		;funcret
 13180  007CD4                     __end_of_strlen:
 13181                           	opt callstack 0
 13182                           
 13183 ;; *************** function _fputs *****************
 13184 ;; Defined at:
 13185 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  s               2   12[COMRAM] PTR const unsigned char 
 13188 ;;		 -> dbuf(32), 
 13189 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 13190 ;;		 -> NULL(0), 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  i               2   17[COMRAM] int 
 13193 ;;  c               1   16[COMRAM] unsigned char 
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  2   12[COMRAM] int 
 13196 ;; Registers used:
 13197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13198 ;; Tracked objects:
 13199 ;;		On entry : 3F/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;Total ram usage:        7 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:   10
 13210 ;; This function calls:
 13211 ;;		_fputc
 13212 ;; This function is called by:
 13213 ;;		_pad
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text69
 13218  0081C2                     __ptext69:
 13219                           	opt callstack 0
 13220  0081C2                     _fputs:
 13221                           	opt callstack 12
 13222                           
 13223                           ; BSR set to: 0
 13224                           
 13225                           ;incstack = 0
 13226  0081C2  0E00               	movlw	0
 13227  0081C4  6E13               	movwf	(fputs@i+1)^0,c
 13228  0081C6  0E00               	movlw	0
 13229  0081C8  6E12               	movwf	fputs@i^0,c
 13230  0081CA  D00E               	goto	l13810
 13231  0081CC                     l13806:
 13232  0081CC  0060  F044  F004   	movff	fputs@c,fputc@c
 13233  0081D2  6A05               	clrf	(fputc@c+1)^0,c
 13234  0081D4  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 13235  0081DA  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 13236  0081E0  EC8B  F03A         	call	_fputc	;wreg free
 13237  0081E4  4A12               	infsnz	fputs@i^0,f,c
 13238  0081E6  2A13               	incf	(fputs@i+1)^0,f,c
 13239  0081E8                     l13810:
 13240  0081E8  5012               	movf	fputs@i^0,w,c
 13241  0081EA  240D               	addwf	fputs@s^0,w,c
 13242  0081EC  6ED9               	movwf	fsr2l,c
 13243  0081EE  5013               	movf	(fputs@i+1)^0,w,c
 13244  0081F0  200E               	addwfc	(fputs@s+1)^0,w,c
 13245  0081F2  6EDA               	movwf	fsr2h,c
 13246  0081F4  50DF               	movf	indf2,w,c
 13247  0081F6  6E11               	movwf	fputs@c^0,c
 13248  0081F8  5011               	movf	fputs@c^0,w,c
 13249  0081FA  B4D8               	btfsc	status,2,c
 13250  0081FC  0012               	return	
 13251  0081FE  D7E6               	goto	l13806
 13252  008200                     __end_of_fputs:
 13253                           	opt callstack 0
 13254                           
 13255 ;; *************** function _fputc *****************
 13256 ;; Defined at:
 13257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  c               2    3[COMRAM] int 
 13260 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 13261 ;;		 -> NULL(0), 
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;		None
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  2    3[COMRAM] int 
 13266 ;; Registers used:
 13267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;Total ram usage:        9 bytes
 13278 ;; Hardware stack levels used:    1
 13279 ;; Hardware stack levels required when called:    9
 13280 ;; This function calls:
 13281 ;;		_putch
 13282 ;; This function is called by:
 13283 ;;		_pad
 13284 ;;		_vfpfcnvrt
 13285 ;;		_fputs
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text70
 13290  007516                     __ptext70:
 13291                           	opt callstack 0
 13292  007516                     _fputc:
 13293                           	opt callstack 12
 13294                           
 13295                           ;incstack = 0
 13296  007516  5006               	movf	fputc@fp^0,w,c
 13297  007518  1007               	iorwf	(fputc@fp+1)^0,w,c
 13298  00751A  B4D8               	btfsc	status,2,c
 13299  00751C  D004               	goto	u12790
 13300  00751E  5006               	movf	fputc@fp^0,w,c
 13301  007520  1007               	iorwf	(fputc@fp+1)^0,w,c
 13302  007522  A4D8               	btfss	status,2,c
 13303  007524  D004               	goto	l13782
 13304  007526                     u12790:
 13305  007526  5004               	movf	fputc@c^0,w,c
 13306  007528  ECE3  F046         	call	_putch
 13307  00752C  0012               	return	
 13308  00752E                     l13782:
 13309  00752E  EE20 F004          	lfsr	2,4
 13310  007532  5006               	movf	fputc@fp^0,w,c
 13311  007534  26D9               	addwf	fsr2l,f,c
 13312  007536  5007               	movf	(fputc@fp+1)^0,w,c
 13313  007538  22DA               	addwfc	fsr2h,f,c
 13314  00753A  50DE               	movf	postinc2,w,c
 13315  00753C  10DE               	iorwf	postinc2,w,c
 13316  00753E  B4D8               	btfsc	status,2,c
 13317  007540  D016               	goto	u12810
 13318  007542  EE20 F004          	lfsr	2,4
 13319  007546  5006               	movf	fputc@fp^0,w,c
 13320  007548  26D9               	addwf	fsr2l,f,c
 13321  00754A  5007               	movf	(fputc@fp+1)^0,w,c
 13322  00754C  22DA               	addwfc	fsr2h,f,c
 13323  00754E  EE10 F002          	lfsr	1,2
 13324  007552  5006               	movf	fputc@fp^0,w,c
 13325  007554  26E1               	addwf	fsr1l,f,c
 13326  007556  5007               	movf	(fputc@fp+1)^0,w,c
 13327  007558  22E2               	addwfc	fsr1h,f,c
 13328  00755A  50DE               	movf	postinc2,w,c
 13329  00755C  5CE6               	subwf	postinc1,w,c
 13330  00755E  50E6               	movf	postinc1,w,c
 13331  007560  0A80               	xorlw	128
 13332  007562  6E0C               	movwf	(??_fputc+4)^0,c
 13333  007564  50DE               	movf	postinc2,w,c
 13334  007566  0A80               	xorlw	128
 13335  007568  580C               	subwfb	(??_fputc+4)^0,w,c
 13336  00756A  B0D8               	btfsc	status,0,c
 13337  00756C  0012               	return	
 13338  00756E                     u12810:
 13339  00756E  EE20 F002          	lfsr	2,2
 13340  007572  5006               	movf	fputc@fp^0,w,c
 13341  007574  26D9               	addwf	fsr2l,f,c
 13342  007576  5007               	movf	(fputc@fp+1)^0,w,c
 13343  007578  22DA               	addwfc	fsr2h,f,c
 13344  00757A  2ADE               	incf	postinc2,f,c
 13345  00757C  0E00               	movlw	0
 13346  00757E  22DD               	addwfc	postdec2,f,c
 13347  007580  0012               	return		;funcret
 13348  007582                     __end_of_fputc:
 13349                           	opt callstack 0
 13350                           
 13351 ;; *************** function _putch *****************
 13352 ;; Defined at:
 13353 ;;		line 242 in file "mcc_generated_files/uart1.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;  txData          1    wreg     unsigned char 
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;  txData          1    2[COMRAM] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  1    wreg      void 
 13360 ;; Registers used:
 13361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 3F/39
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;Total ram usage:        1 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    8
 13374 ;; This function calls:
 13375 ;;		_UART1_Write
 13376 ;; This function is called by:
 13377 ;;		_cmdRecv
 13378 ;;		_fputc
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text71
 13383  008DC6                     __ptext71:
 13384                           	opt callstack 0
 13385  008DC6                     _putch:
 13386                           	opt callstack 12
 13387                           
 13388                           ;incstack = 0
 13389                           ;putch@txData stored from wreg
 13390  008DC6  6E03               	movwf	putch@txData^0,c
 13391                           
 13392                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 13393  008DC8  5003               	movf	putch@txData^0,w,c
 13394  008DCA  EC20  F040         	call	_UART1_Write
 13395                           
 13396                           ; BSR set to: 57
 13397  008DCE  0012               	return		;funcret
 13398  008DD0                     __end_of_putch:
 13399                           	opt callstack 0
 13400                           
 13401 ;; *************** function _UART1_Write *****************
 13402 ;; Defined at:
 13403 ;;		line 210 in file "mcc_generated_files/uart1.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  txData          1    wreg     unsigned char 
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;  txData          1    1[COMRAM] unsigned char 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      void 
 13410 ;; Registers used:
 13411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 3F/39
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13421 ;;Total ram usage:        1 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    7
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_putch
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text72
 13432  008040                     __ptext72:
 13433                           	opt callstack 0
 13434  008040                     _UART1_Write:
 13435                           	opt callstack 12
 13436                           
 13437                           ; BSR set to: 57
 13438                           ;incstack = 0
 13439                           ;UART1_Write@txData stored from wreg
 13440  008040  6E02               	movwf	UART1_Write@txData^0,c
 13441  008042                     
 13442                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 13443                           
 13444                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 13445  008042  0100               	movlb	0	; () banked
 13446  008044  51FF               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 13447  008046  B4D8               	btfsc	status,2,c
 13448  008048  D7FC               	goto	l13756
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 13452  00804A  0139               	movlb	57	; () banked
 13453  00804C  B993               	btfsc	147,4,b	;volatile
 13454  00804E  D004               	goto	l1426
 13455                           
 13456                           ; BSR set to: 57
 13457                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 13458  008050  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 13459                           
 13460                           ;mcc_generated_files/uart1.c: 223:     }
 13461  008056  D012               	goto	l13772
 13462  008058                     l1426:
 13463                           
 13464                           ; BSR set to: 57
 13465                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 13466  008058  9993               	bcf	147,4,b	;volatile
 13467                           
 13468                           ; BSR set to: 57
 13469                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 13470  00805A  0E00               	movlw	low _uart1TxBuffer
 13471  00805C  0100               	movlb	0	; () banked
 13472  00805E  25C8               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 13473  008060  6ED9               	movwf	fsr2l,c
 13474  008062  6ADA               	clrf	fsr2h,c
 13475  008064  0E03               	movlw	high _uart1TxBuffer
 13476  008066  22DA               	addwfc	fsr2h,f,c
 13477  008068  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 13478                           
 13479                           ; BSR set to: 0
 13480  00806E  2BC8               	incf	_uart1TxHead& (0+255),f,b	;volatile
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 13484  008070  0E3F               	movlw	63
 13485  008072  65C8               	cpfsgt	_uart1TxHead& (0+255),b
 13486  008074  D002               	goto	l13770
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 13490  008076  0E00               	movlw	0
 13491  008078  6FC8               	movwf	_uart1TxHead& (0+255),b	;volatile
 13492  00807A                     l13770:
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 13496  00807A  07FF               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 13497  00807C                     l13772:
 13498                           
 13499                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 13500  00807C  0139               	movlb	57	; () banked
 13501  00807E  8993               	bsf	147,4,b	;volatile
 13502                           
 13503                           ; BSR set to: 57
 13504  008080  0012               	return		;funcret
 13505  008082                     __end_of_UART1_Write:
 13506                           	opt callstack 0
 13507                           
 13508 ;; *************** function _abs *****************
 13509 ;; Defined at:
 13510 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  a               2   19[COMRAM] int 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  2   19[COMRAM] int 
 13517 ;; Registers used:
 13518 ;;		wreg, status,2, status,0
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/2
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13528 ;;Total ram usage:        4 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    7
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		_dtoa
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538                           	psect	text73
 13539  008200                     __ptext73:
 13540                           	opt callstack 0
 13541  008200                     _abs:
 13542                           	opt callstack 16
 13543                           
 13544                           ; BSR set to: 57
 13545                           ;incstack = 0
 13546  008200  BE15               	btfsc	(abs@a+1)^0,7,c
 13547  008202  D005               	goto	u12940
 13548  008204  5015               	movf	(abs@a+1)^0,w,c
 13549  008206  E114               	bnz	l3880
 13550  008208  0414               	decf	abs@a^0,w,c
 13551  00820A  B0D8               	btfsc	status,0,c
 13552  00820C  D011               	goto	l3880
 13553  00820E                     u12940:
 13554  00820E  0060  F050  F016   	movff	abs@a,??_abs
 13555  008214  0060  F054  F017   	movff	abs@a+1,??_abs+1
 13556  00821A  1E16               	comf	??_abs^0,f,c
 13557  00821C  1E17               	comf	(??_abs+1)^0,f,c
 13558  00821E  4A16               	infsnz	??_abs^0,f,c
 13559  008220  2A17               	incf	(??_abs+1)^0,f,c
 13560  008222  0060  F058  F014   	movff	??_abs,?_abs
 13561  008228  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 13562  00822E  0012               	return	
 13563  008230                     l3880:
 13564  008230  0060  F050  F014   	movff	abs@a,?_abs
 13565  008236  0060  F054  F015   	movff	abs@a+1,?_abs+1
 13566  00823C  0012               	return		;funcret
 13567  00823E                     __end_of_abs:
 13568                           	opt callstack 0
 13569                           
 13570 ;; *************** function ___aomod *****************
 13571 ;; Defined at:
 13572 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;  dividend        8    1[COMRAM] long long 
 13575 ;;  divisor         8    9[COMRAM] long long 
 13576 ;; Auto vars:     Size  Location     Type
 13577 ;;  sign            1   18[COMRAM] unsigned char 
 13578 ;;  counter         1   17[COMRAM] unsigned char 
 13579 ;; Return value:  Size  Location     Type
 13580 ;;                  8    1[COMRAM] long long 
 13581 ;; Registers used:
 13582 ;;		wreg, status,2, status,0
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/2
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13588 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13591 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13592 ;;Total ram usage:       18 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    7
 13595 ;; This function calls:
 13596 ;;		Nothing
 13597 ;; This function is called by:
 13598 ;;		_dtoa
 13599 ;; This function uses a non-reentrant model
 13600 ;;
 13601                           
 13602                           	psect	text74
 13603  00468E                     __ptext74:
 13604                           	opt callstack 0
 13605  00468E                     ___aomod:
 13606                           	opt callstack 16
 13607                           
 13608                           ;incstack = 0
 13609  00468E  0E00               	movlw	0
 13610  004690  6E13               	movwf	___aomod@sign^0,c
 13611  004692  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 13612  004694  D012               	goto	l13938
 13613  004696  1E09               	comf	(___aomod@dividend+7)^0,f,c
 13614  004698  1E08               	comf	(___aomod@dividend+6)^0,f,c
 13615  00469A  1E07               	comf	(___aomod@dividend+5)^0,f,c
 13616  00469C  1E06               	comf	(___aomod@dividend+4)^0,f,c
 13617  00469E  1E05               	comf	(___aomod@dividend+3)^0,f,c
 13618  0046A0  1E04               	comf	(___aomod@dividend+2)^0,f,c
 13619  0046A2  1E03               	comf	(___aomod@dividend+1)^0,f,c
 13620  0046A4  6C02               	negf	___aomod@dividend^0,c
 13621  0046A6  0E00               	movlw	0
 13622  0046A8  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 13623  0046AA  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 13624  0046AC  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 13625  0046AE  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 13626  0046B0  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 13627  0046B2  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 13628  0046B4  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 13629  0046B6  0E01               	movlw	1
 13630  0046B8  6E13               	movwf	___aomod@sign^0,c
 13631  0046BA                     l13938:
 13632  0046BA  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 13633  0046BC  D010               	goto	l13942
 13634  0046BE  1E11               	comf	(___aomod@divisor+7)^0,f,c
 13635  0046C0  1E10               	comf	(___aomod@divisor+6)^0,f,c
 13636  0046C2  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 13637  0046C4  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 13638  0046C6  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 13639  0046C8  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 13640  0046CA  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 13641  0046CC  6C0A               	negf	___aomod@divisor^0,c
 13642  0046CE  0E00               	movlw	0
 13643  0046D0  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 13644  0046D2  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 13645  0046D4  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 13646  0046D6  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 13647  0046D8  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 13648  0046DA  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 13649  0046DC  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 13650  0046DE                     l13942:
 13651  0046DE  500A               	movf	___aomod@divisor^0,w,c
 13652  0046E0  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 13653  0046E2  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 13654  0046E4  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 13655  0046E6  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 13656  0046E8  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 13657  0046EA  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 13658  0046EC  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 13659  0046EE  B4D8               	btfsc	status,2,c
 13660  0046F0  D03C               	goto	l13958
 13661  0046F2  0E01               	movlw	1
 13662  0046F4  6E12               	movwf	___aomod@counter^0,c
 13663  0046F6  D00A               	goto	l13948
 13664  0046F8                     l13946:
 13665  0046F8  90D8               	bcf	status,0,c
 13666  0046FA  360A               	rlcf	___aomod@divisor^0,f,c
 13667  0046FC  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 13668  0046FE  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 13669  004700  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 13670  004702  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 13671  004704  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 13672  004706  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 13673  004708  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 13674  00470A  2A12               	incf	___aomod@counter^0,f,c
 13675  00470C                     l13948:
 13676  00470C  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 13677  00470E  D7F4               	goto	l13946
 13678  004710                     u13140:
 13679  004710  500A               	movf	___aomod@divisor^0,w,c
 13680  004712  5C02               	subwf	___aomod@dividend^0,w,c
 13681  004714  500B               	movf	(___aomod@divisor+1)^0,w,c
 13682  004716  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 13683  004718  500C               	movf	(___aomod@divisor+2)^0,w,c
 13684  00471A  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 13685  00471C  500D               	movf	(___aomod@divisor+3)^0,w,c
 13686  00471E  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 13687  004720  500E               	movf	(___aomod@divisor+4)^0,w,c
 13688  004722  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 13689  004724  500F               	movf	(___aomod@divisor+5)^0,w,c
 13690  004726  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 13691  004728  5010               	movf	(___aomod@divisor+6)^0,w,c
 13692  00472A  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 13693  00472C  5011               	movf	(___aomod@divisor+7)^0,w,c
 13694  00472E  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 13695  004730  A0D8               	btfss	status,0,c
 13696  004732  D010               	goto	l13954
 13697  004734  500A               	movf	___aomod@divisor^0,w,c
 13698  004736  5E02               	subwf	___aomod@dividend^0,f,c
 13699  004738  500B               	movf	(___aomod@divisor+1)^0,w,c
 13700  00473A  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 13701  00473C  500C               	movf	(___aomod@divisor+2)^0,w,c
 13702  00473E  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 13703  004740  500D               	movf	(___aomod@divisor+3)^0,w,c
 13704  004742  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 13705  004744  500E               	movf	(___aomod@divisor+4)^0,w,c
 13706  004746  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 13707  004748  500F               	movf	(___aomod@divisor+5)^0,w,c
 13708  00474A  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 13709  00474C  5010               	movf	(___aomod@divisor+6)^0,w,c
 13710  00474E  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 13711  004750  5011               	movf	(___aomod@divisor+7)^0,w,c
 13712  004752  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 13713  004754                     l13954:
 13714  004754  90D8               	bcf	status,0,c
 13715  004756  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 13716  004758  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 13717  00475A  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 13718  00475C  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 13719  00475E  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 13720  004760  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 13721  004762  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 13722  004764  320A               	rrcf	___aomod@divisor^0,f,c
 13723  004766  2E12               	decfsz	___aomod@counter^0,f,c
 13724  004768  D7D3               	goto	u13140
 13725  00476A                     l13958:
 13726  00476A  5013               	movf	___aomod@sign^0,w,c
 13727  00476C  B4D8               	btfsc	status,2,c
 13728  00476E  D010               	goto	l13962
 13729  004770  1E09               	comf	(___aomod@dividend+7)^0,f,c
 13730  004772  1E08               	comf	(___aomod@dividend+6)^0,f,c
 13731  004774  1E07               	comf	(___aomod@dividend+5)^0,f,c
 13732  004776  1E06               	comf	(___aomod@dividend+4)^0,f,c
 13733  004778  1E05               	comf	(___aomod@dividend+3)^0,f,c
 13734  00477A  1E04               	comf	(___aomod@dividend+2)^0,f,c
 13735  00477C  1E03               	comf	(___aomod@dividend+1)^0,f,c
 13736  00477E  6C02               	negf	___aomod@dividend^0,c
 13737  004780  0E00               	movlw	0
 13738  004782  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 13739  004784  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 13740  004786  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 13741  004788  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 13742  00478A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 13743  00478C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 13744  00478E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 13745  004790                     l13962:
 13746  004790  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 13747  004796  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 13748  00479C  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 13749  0047A2  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 13750  0047A8  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 13751  0047AE  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 13752  0047B4  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 13753  0047BA  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 13754  0047C0  0012               	return		;funcret
 13755  0047C2                     __end_of___aomod:
 13756                           	opt callstack 0
 13757                           
 13758 ;; *************** function ___aodiv *****************
 13759 ;; Defined at:
 13760 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13761 ;; Parameters:    Size  Location     Type
 13762 ;;  dividend        8    1[COMRAM] long long 
 13763 ;;  divisor         8    9[COMRAM] long long 
 13764 ;; Auto vars:     Size  Location     Type
 13765 ;;  quotient        8   19[COMRAM] long long 
 13766 ;;  sign            1   18[COMRAM] unsigned char 
 13767 ;;  counter         1   17[COMRAM] unsigned char 
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  8    1[COMRAM] long long 
 13770 ;; Registers used:
 13771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13772 ;; Tracked objects:
 13773 ;;		On entry : 0/2
 13774 ;;		On exit  : 0/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13777 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13778 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13780 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;Total ram usage:       26 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; Hardware stack levels required when called:    7
 13784 ;; This function calls:
 13785 ;;		Nothing
 13786 ;; This function is called by:
 13787 ;;		_dtoa
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           	psect	text75
 13792  00429E                     __ptext75:
 13793                           	opt callstack 0
 13794  00429E                     ___aodiv:
 13795                           	opt callstack 16
 13796                           
 13797                           ;incstack = 0
 13798  00429E  0E00               	movlw	0
 13799  0042A0  6E13               	movwf	___aodiv@sign^0,c
 13800  0042A2  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 13801  0042A4  D012               	goto	l13894
 13802  0042A6  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 13803  0042A8  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 13804  0042AA  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 13805  0042AC  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 13806  0042AE  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 13807  0042B0  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 13808  0042B2  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 13809  0042B4  6C0A               	negf	___aodiv@divisor^0,c
 13810  0042B6  0E00               	movlw	0
 13811  0042B8  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 13812  0042BA  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 13813  0042BC  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 13814  0042BE  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 13815  0042C0  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 13816  0042C2  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 13817  0042C4  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 13818  0042C6  0E01               	movlw	1
 13819  0042C8  6E13               	movwf	___aodiv@sign^0,c
 13820  0042CA                     l13894:
 13821  0042CA  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 13822  0042CC  D012               	goto	l13900
 13823  0042CE  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 13824  0042D0  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 13825  0042D2  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 13826  0042D4  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 13827  0042D6  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 13828  0042D8  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 13829  0042DA  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 13830  0042DC  6C02               	negf	___aodiv@dividend^0,c
 13831  0042DE  0E00               	movlw	0
 13832  0042E0  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 13833  0042E2  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 13834  0042E4  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 13835  0042E6  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 13836  0042E8  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 13837  0042EA  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 13838  0042EC  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 13839  0042EE  0E01               	movlw	1
 13840  0042F0  1A13               	xorwf	___aodiv@sign^0,f,c
 13841  0042F2                     l13900:
 13842  0042F2  EE20  F014         	lfsr	2,___aodiv@quotient
 13843  0042F6  0E07               	movlw	7
 13844  0042F8                     u13061:
 13845  0042F8  6ADE               	clrf	postinc2,c
 13846  0042FA  06E8               	decf	wreg,f,c
 13847  0042FC  E2FD               	bc	u13061
 13848  0042FE  500A               	movf	___aodiv@divisor^0,w,c
 13849  004300  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 13850  004302  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 13851  004304  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 13852  004306  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 13853  004308  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 13854  00430A  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 13855  00430C  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 13856  00430E  B4D8               	btfsc	status,2,c
 13857  004310  D046               	goto	l13922
 13858  004312  0E01               	movlw	1
 13859  004314  6E12               	movwf	___aodiv@counter^0,c
 13860  004316  D00A               	goto	l13908
 13861  004318                     l13906:
 13862  004318  90D8               	bcf	status,0,c
 13863  00431A  360A               	rlcf	___aodiv@divisor^0,f,c
 13864  00431C  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 13865  00431E  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 13866  004320  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 13867  004322  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 13868  004324  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 13869  004326  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 13870  004328  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 13871  00432A  2A12               	incf	___aodiv@counter^0,f,c
 13872  00432C                     l13908:
 13873  00432C  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 13874  00432E  D7F4               	goto	l13906
 13875  004330                     u13080:
 13876  004330  90D8               	bcf	status,0,c
 13877  004332  3614               	rlcf	___aodiv@quotient^0,f,c
 13878  004334  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 13879  004336  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 13880  004338  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 13881  00433A  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 13882  00433C  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 13883  00433E  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 13884  004340  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 13885  004342  500A               	movf	___aodiv@divisor^0,w,c
 13886  004344  5C02               	subwf	___aodiv@dividend^0,w,c
 13887  004346  500B               	movf	(___aodiv@divisor+1)^0,w,c
 13888  004348  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 13889  00434A  500C               	movf	(___aodiv@divisor+2)^0,w,c
 13890  00434C  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 13891  00434E  500D               	movf	(___aodiv@divisor+3)^0,w,c
 13892  004350  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 13893  004352  500E               	movf	(___aodiv@divisor+4)^0,w,c
 13894  004354  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 13895  004356  500F               	movf	(___aodiv@divisor+5)^0,w,c
 13896  004358  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 13897  00435A  5010               	movf	(___aodiv@divisor+6)^0,w,c
 13898  00435C  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 13899  00435E  5011               	movf	(___aodiv@divisor+7)^0,w,c
 13900  004360  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 13901  004362  A0D8               	btfss	status,0,c
 13902  004364  D011               	goto	l13918
 13903  004366  500A               	movf	___aodiv@divisor^0,w,c
 13904  004368  5E02               	subwf	___aodiv@dividend^0,f,c
 13905  00436A  500B               	movf	(___aodiv@divisor+1)^0,w,c
 13906  00436C  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 13907  00436E  500C               	movf	(___aodiv@divisor+2)^0,w,c
 13908  004370  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 13909  004372  500D               	movf	(___aodiv@divisor+3)^0,w,c
 13910  004374  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 13911  004376  500E               	movf	(___aodiv@divisor+4)^0,w,c
 13912  004378  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 13913  00437A  500F               	movf	(___aodiv@divisor+5)^0,w,c
 13914  00437C  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 13915  00437E  5010               	movf	(___aodiv@divisor+6)^0,w,c
 13916  004380  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 13917  004382  5011               	movf	(___aodiv@divisor+7)^0,w,c
 13918  004384  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 13919  004386  8014               	bsf	___aodiv@quotient^0,0,c
 13920  004388                     l13918:
 13921  004388  90D8               	bcf	status,0,c
 13922  00438A  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 13923  00438C  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 13924  00438E  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 13925  004390  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 13926  004392  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 13927  004394  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 13928  004396  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 13929  004398  320A               	rrcf	___aodiv@divisor^0,f,c
 13930  00439A  2E12               	decfsz	___aodiv@counter^0,f,c
 13931  00439C  D7C9               	goto	u13080
 13932  00439E                     l13922:
 13933  00439E  5013               	movf	___aodiv@sign^0,w,c
 13934  0043A0  B4D8               	btfsc	status,2,c
 13935  0043A2  D010               	goto	l13926
 13936  0043A4  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 13937  0043A6  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 13938  0043A8  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 13939  0043AA  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 13940  0043AC  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 13941  0043AE  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 13942  0043B0  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 13943  0043B2  6C14               	negf	___aodiv@quotient^0,c
 13944  0043B4  0E00               	movlw	0
 13945  0043B6  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 13946  0043B8  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 13947  0043BA  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 13948  0043BC  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 13949  0043BE  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 13950  0043C0  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 13951  0043C2  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 13952  0043C4                     l13926:
 13953  0043C4  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 13954  0043CA  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 13955  0043D0  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 13956  0043D6  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 13957  0043DC  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 13958  0043E2  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 13959  0043E8  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 13960  0043EE  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 13961  0043F4  0012               	return		;funcret
 13962  0043F6                     __end_of___aodiv:
 13963                           	opt callstack 0
 13964                           
 13965 ;; *************** function _atoi *****************
 13966 ;; Defined at:
 13967 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  s               2    8[COMRAM] PTR const unsigned char 
 13970 ;;		 -> STR_137(5), STR_136(8), STR_135(28), STR_134(26), 
 13971 ;;		 -> STR_133(12), STR_132(12), STR_63(5), STR_62(34), 
 13972 ;;		 -> STR_61(14), STR_60(5), STR_59(12), STR_57(8), 
 13973 ;;		 -> STR_54(5), STR_53(12), STR_46(5), STR_45(12), 
 13974 ;;		 -> STR_43(13), STR_42(5), STR_41(12), STR_40(12), 
 13975 ;;		 -> STR_38(14), STR_37(5), STR_36(12), STR_34(13), 
 13976 ;;		 -> STR_33(18), STR_32(18), STR_31(5), STR_30(21), 
 13977 ;;		 -> STR_29(5), STR_28(12), STR_27(12), STR_25(12), 
 13978 ;;		 -> STR_24(12), STR_22(5), STR_21(3), STR_20(5), 
 13979 ;;		 -> STR_19(5), STR_18(12), STR_17(6), STR_16(5), 
 13980 ;;		 -> STR_14(13), STR_13(12), STR_12(5), STR_10(16), 
 13981 ;;		 -> STR_9(8), STR_8(12), STR_7(12), STR_5(8), 
 13982 ;;		 -> STR_4(12), STR_3(12), 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;  n               2   21[COMRAM] int 
 13985 ;;  neg             2   14[COMRAM] int 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  2    8[COMRAM] int 
 13988 ;; Registers used:
 13989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : 3F/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;Total ram usage:       15 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    8
 14002 ;; This function calls:
 14003 ;;		___wmul
 14004 ;;		_isdigit
 14005 ;;		_isspace
 14006 ;; This function is called by:
 14007 ;;		_vfpfcnvrt
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text76
 14012  003E6C                     __ptext76:
 14013                           	opt callstack 0
 14014  003E6C                     _atoi:
 14015                           	opt callstack 16
 14016                           
 14017                           ; BSR set to: 0
 14018                           
 14019                           ;incstack = 0
 14020  003E6C  0E00               	movlw	0
 14021  003E6E  6E17               	movwf	(atoi@n+1)^0,c
 14022  003E70  0E00               	movlw	0
 14023  003E72  6E16               	movwf	atoi@n^0,c
 14024  003E74  0E00               	movlw	0
 14025  003E76  6E10               	movwf	(atoi@neg+1)^0,c
 14026  003E78  0E00               	movlw	0
 14027  003E7A  6E0F               	movwf	atoi@neg^0,c
 14028  003E7C  D002               	goto	l14196
 14029  003E7E                     l14194:
 14030                           
 14031                           ; BSR set to: 0
 14032  003E7E  4A09               	infsnz	atoi@s^0,f,c
 14033  003E80  2A0A               	incf	(atoi@s+1)^0,f,c
 14034  003E82                     l14196:
 14035                           
 14036                           ; BSR set to: 0
 14037  003E82  0E01               	movlw	1
 14038  003E84  6E15               	movwf	_atoi$7801^0,c
 14039                           
 14040                           ; BSR set to: 0
 14041  003E86  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14042  003E8C  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14043  003E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14044  003E92  6AF8               	clrf	tblptru,c
 14045  003E94                     	endif
 14046  003E94                     	if	0	;tblptru may be non-zero
 14047  003E94                     	endif
 14048  003E94  0008               	tblrd		*
 14049  003E96  50F5               	movf	tablat,w,c
 14050  003E98  0A20               	xorlw	32
 14051  003E9A  B4D8               	btfsc	status,2,c
 14052  003E9C  D01B               	goto	l14204
 14053                           
 14054                           ; BSR set to: 0
 14055  003E9E  0EF7               	movlw	247
 14056  003EA0  6E0B               	movwf	??_atoi^0,c
 14057  003EA2  0EFF               	movlw	255
 14058  003EA4  6E0C               	movwf	(??_atoi+1)^0,c
 14059  003EA6  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14060  003EAC  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14061  003EB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14062  003EB2  6AF8               	clrf	tblptru,c
 14063  003EB4                     	endif
 14064  003EB4                     	if	0	;tblptru may be non-zero
 14065  003EB4                     	endif
 14066  003EB4  0008               	tblrd		*
 14067  003EB6  50F5               	movf	tablat,w,c
 14068  003EB8  6E0D               	movwf	(??_atoi+2)^0,c
 14069  003EBA  6A0E               	clrf	(??_atoi+3)^0,c
 14070  003EBC  500B               	movf	??_atoi^0,w,c
 14071  003EBE  260D               	addwf	(??_atoi+2)^0,f,c
 14072  003EC0  500C               	movf	(??_atoi+1)^0,w,c
 14073  003EC2  220E               	addwfc	(??_atoi+3)^0,f,c
 14074  003EC4  500E               	movf	(??_atoi+3)^0,w,c
 14075  003EC6  E104               	bnz	u13660
 14076  003EC8  0E05               	movlw	5
 14077  003ECA  5C0D               	subwf	(??_atoi+2)^0,w,c
 14078  003ECC  A0D8               	btfss	status,0,c
 14079  003ECE  D002               	goto	l14204
 14080  003ED0                     u13660:
 14081                           
 14082                           ; BSR set to: 0
 14083  003ED0  0E00               	movlw	0
 14084  003ED2  6E15               	movwf	_atoi$7801^0,c
 14085  003ED4                     l14204:
 14086                           
 14087                           ; BSR set to: 0
 14088  003ED4  0060  F054  F011   	movff	_atoi$7801,_atoi$7800
 14089  003EDA  6A12               	clrf	(_atoi$7800+1)^0,c
 14090                           
 14091                           ; BSR set to: 0
 14092  003EDC  5011               	movf	_atoi$7800^0,w,c
 14093  003EDE  1012               	iorwf	(_atoi$7800+1)^0,w,c
 14094  003EE0  B4D8               	btfsc	status,2,c
 14095  003EE2  D008               	goto	l14214
 14096  003EE4  D7CC               	goto	l14194
 14097  003EE6                     l14210:
 14098                           
 14099                           ; BSR set to: 0
 14100  003EE6  0E00               	movlw	0
 14101  003EE8  6E10               	movwf	(atoi@neg+1)^0,c
 14102  003EEA  0E01               	movlw	1
 14103  003EEC  6E0F               	movwf	atoi@neg^0,c
 14104  003EEE                     l14212:
 14105  003EEE  4A09               	infsnz	atoi@s^0,f,c
 14106  003EF0  2A0A               	incf	(atoi@s+1)^0,f,c
 14107  003EF2  D036               	goto	l14220
 14108  003EF4                     l14214:
 14109                           
 14110                           ; BSR set to: 0
 14111  003EF4  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14112  003EFA  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14113  003F00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14114  003F00  6AF8               	clrf	tblptru,c
 14115  003F02                     	endif
 14116  003F02                     	if	0	;tblptru may be non-zero
 14117  003F02                     	endif
 14118  003F02  0008               	tblrd		*
 14119  003F04  50F5               	movf	tablat,w,c
 14120  003F06  6E0B               	movwf	??_atoi^0,c
 14121  003F08  6A0C               	clrf	(??_atoi+1)^0,c
 14122                           
 14123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14124                           ; Switch size 1, requested type "simple"
 14125                           ; Number of cases is 1, Range of values is 0 to 0
 14126                           ; switch strategies available:
 14127                           ; Name         Instructions Cycles
 14128                           ; simple_byte            4     3 (average)
 14129                           ;	Chosen strategy is simple_byte
 14130  003F0A  500C               	movf	(??_atoi+1)^0,w,c
 14131  003F0C  0A00               	xorlw	0	; case 0
 14132  003F0E  A4D8               	btfss	status,2,c
 14133  003F10  D027               	goto	l14220
 14134                           
 14135                           ; BSR set to: 0
 14136                           ; Switch size 1, requested type "simple"
 14137                           ; Number of cases is 2, Range of values is 43 to 45
 14138                           ; switch strategies available:
 14139                           ; Name         Instructions Cycles
 14140                           ; simple_byte            7     4 (average)
 14141                           ;	Chosen strategy is simple_byte
 14142  003F12  500B               	movf	??_atoi^0,w,c
 14143  003F14  0A2B               	xorlw	43	; case 43
 14144  003F16  B4D8               	btfsc	status,2,c
 14145  003F18  D7EA               	goto	l14212
 14146  003F1A  0A06               	xorlw	6	; case 45
 14147  003F1C  B4D8               	btfsc	status,2,c
 14148  003F1E  D7E3               	goto	l14210
 14149  003F20  D01F               	goto	l14220
 14150  003F22                     l14216:
 14151  003F22  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 14152  003F28  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 14153  003F2E  0E00               	movlw	0
 14154  003F30  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 14155  003F32  0E0A               	movlw	10
 14156  003F34  6E04               	movwf	___wmul@multiplicand^0,c
 14157  003F36  EC89  F043         	call	___wmul	;wreg free
 14158  003F3A  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14159  003F40  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14160  003F46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14161  003F46  6AF8               	clrf	tblptru,c
 14162  003F48                     	endif
 14163  003F48                     	if	0	;tblptru may be non-zero
 14164  003F48                     	endif
 14165  003F48  0008               	tblrd		*
 14166  003F4A  50F5               	movf	tablat,w,c
 14167  003F4C  5E02               	subwf	?___wmul^0,f,c
 14168  003F4E  0E00               	movlw	0
 14169  003F50  5A03               	subwfb	(?___wmul+1)^0,f,c
 14170  003F52  0E30               	movlw	48
 14171  003F54  2402               	addwf	?___wmul^0,w,c
 14172  003F56  6E16               	movwf	atoi@n^0,c
 14173  003F58  0E00               	movlw	0
 14174  003F5A  2003               	addwfc	(?___wmul+1)^0,w,c
 14175  003F5C  6E17               	movwf	(atoi@n+1)^0,c
 14176  003F5E  D7C7               	goto	l14212
 14177  003F60                     l14220:
 14178  003F60  0ED0               	movlw	208
 14179  003F62  6E0B               	movwf	??_atoi^0,c
 14180  003F64  0EFF               	movlw	255
 14181  003F66  6E0C               	movwf	(??_atoi+1)^0,c
 14182  003F68  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14183  003F6E  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14184  003F74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14185  003F74  6AF8               	clrf	tblptru,c
 14186  003F76                     	endif
 14187  003F76                     	if	0	;tblptru may be non-zero
 14188  003F76                     	endif
 14189  003F76  0008               	tblrd		*
 14190  003F78  50F5               	movf	tablat,w,c
 14191  003F7A  6E0D               	movwf	(??_atoi+2)^0,c
 14192  003F7C  6A0E               	clrf	(??_atoi+3)^0,c
 14193  003F7E  500B               	movf	??_atoi^0,w,c
 14194  003F80  260D               	addwf	(??_atoi+2)^0,f,c
 14195  003F82  500C               	movf	(??_atoi+1)^0,w,c
 14196  003F84  220E               	addwfc	(??_atoi+3)^0,f,c
 14197  003F86  500E               	movf	(??_atoi+3)^0,w,c
 14198  003F88  E106               	bnz	u13680
 14199  003F8A  0E0A               	movlw	10
 14200  003F8C  5C0D               	subwf	(??_atoi+2)^0,w,c
 14201  003F8E  B0D8               	btfsc	status,0,c
 14202  003F90  D002               	goto	u13680
 14203  003F92  0E01               	movlw	1
 14204  003F94  D001               	goto	u13690
 14205  003F96                     u13680:
 14206  003F96  0E00               	movlw	0
 14207  003F98                     u13690:
 14208  003F98  6E13               	movwf	_atoi$7802^0,c
 14209  003F9A  6A14               	clrf	(_atoi$7802+1)^0,c
 14210  003F9C  5013               	movf	_atoi$7802^0,w,c
 14211  003F9E  1014               	iorwf	(_atoi$7802+1)^0,w,c
 14212  003FA0  A4D8               	btfss	status,2,c
 14213  003FA2  D7BF               	goto	l14216
 14214  003FA4  500F               	movf	atoi@neg^0,w,c
 14215  003FA6  1010               	iorwf	(atoi@neg+1)^0,w,c
 14216  003FA8  A4D8               	btfss	status,2,c
 14217  003FAA  D011               	goto	l3911
 14218  003FAC  0060  F058  F00B   	movff	atoi@n,??_atoi
 14219  003FB2  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 14220  003FB8  1E0B               	comf	??_atoi^0,f,c
 14221  003FBA  1E0C               	comf	(??_atoi+1)^0,f,c
 14222  003FBC  4A0B               	infsnz	??_atoi^0,f,c
 14223  003FBE  2A0C               	incf	(??_atoi+1)^0,f,c
 14224  003FC0  0060  F02C  F009   	movff	??_atoi,?_atoi
 14225  003FC6  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 14226  003FCC  0012               	return	
 14227  003FCE                     l3911:
 14228  003FCE  0060  F058  F009   	movff	atoi@n,?_atoi
 14229  003FD4  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 14230  003FDA  0012               	return		;funcret
 14231  003FDC                     __end_of_atoi:
 14232                           	opt callstack 0
 14233                           
 14234 ;; *************** function _isspace *****************
 14235 ;; Defined at:
 14236 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14237 ;; Parameters:    Size  Location     Type
 14238 ;;  c               2    1[COMRAM] int 
 14239 ;; Auto vars:     Size  Location     Type
 14240 ;;		None
 14241 ;; Return value:  Size  Location     Type
 14242 ;;                  2    1[COMRAM] int 
 14243 ;; Registers used:
 14244 ;;		wreg, status,2, status,0
 14245 ;; Tracked objects:
 14246 ;;		On entry : 0/0
 14247 ;;		On exit  : 0/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;Total ram usage:        7 bytes
 14255 ;; Hardware stack levels used:    1
 14256 ;; Hardware stack levels required when called:    7
 14257 ;; This function calls:
 14258 ;;		Nothing
 14259 ;; This function is called by:
 14260 ;;		_atoi
 14261 ;;		___strtoxl
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text77
 14266  007F74                     __ptext77:
 14267                           	opt callstack 0
 14268  007F74                     _isspace:
 14269                           	opt callstack 16
 14270                           
 14271                           ;incstack = 0
 14272  007F74  0E01               	movlw	1
 14273  007F76  6E08               	movwf	_isspace$7827^0,c
 14274  007F78  0E20               	movlw	32
 14275  007F7A  1802               	xorwf	isspace@c^0,w,c
 14276  007F7C  1003               	iorwf	(isspace@c+1)^0,w,c
 14277  007F7E  B4D8               	btfsc	status,2,c
 14278  007F80  D016               	goto	l14012
 14279  007F82  0EF7               	movlw	247
 14280  007F84  6E04               	movwf	??_isspace^0,c
 14281  007F86  0EFF               	movlw	255
 14282  007F88  6E05               	movwf	(??_isspace+1)^0,c
 14283  007F8A  0060  F008  F006   	movff	isspace@c,??_isspace+2
 14284  007F90  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 14285  007F96  5004               	movf	??_isspace^0,w,c
 14286  007F98  2606               	addwf	(??_isspace+2)^0,f,c
 14287  007F9A  5005               	movf	(??_isspace+1)^0,w,c
 14288  007F9C  2207               	addwfc	(??_isspace+3)^0,f,c
 14289  007F9E  5007               	movf	(??_isspace+3)^0,w,c
 14290  007FA0  E104               	bnz	u13250
 14291  007FA2  0E05               	movlw	5
 14292  007FA4  5C06               	subwf	(??_isspace+2)^0,w,c
 14293  007FA6  A0D8               	btfss	status,0,c
 14294  007FA8  D002               	goto	l14012
 14295  007FAA                     u13250:
 14296  007FAA  0E00               	movlw	0
 14297  007FAC  6E08               	movwf	_isspace$7827^0,c
 14298  007FAE                     l14012:
 14299  007FAE  0060  F020  F002   	movff	_isspace$7827,?_isspace
 14300  007FB4  6A03               	clrf	(?_isspace+1)^0,c
 14301  007FB6  0012               	return		;funcret
 14302  007FB8                     __end_of_isspace:
 14303                           	opt callstack 0
 14304                           
 14305 ;; *************** function _isdigit *****************
 14306 ;; Defined at:
 14307 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;  c               2    1[COMRAM] int 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;		None
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  2    1[COMRAM] int 
 14314 ;; Registers used:
 14315 ;;		wreg, status,2, status,0
 14316 ;; Tracked objects:
 14317 ;;		On entry : 0/0
 14318 ;;		On exit  : 0/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14324 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14325 ;;Total ram usage:        6 bytes
 14326 ;; Hardware stack levels used:    1
 14327 ;; Hardware stack levels required when called:    7
 14328 ;; This function calls:
 14329 ;;		Nothing
 14330 ;; This function is called by:
 14331 ;;		_vfpfcnvrt
 14332 ;;		_atoi
 14333 ;;		___strtoxl
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337                           	psect	text78
 14338  0086AC                     __ptext78:
 14339                           	opt callstack 0
 14340  0086AC                     _isdigit:
 14341                           	opt callstack 17
 14342                           
 14343                           ;incstack = 0
 14344  0086AC  0ED0               	movlw	208
 14345  0086AE  6E04               	movwf	??_isdigit^0,c
 14346  0086B0  0EFF               	movlw	255
 14347  0086B2  6E05               	movwf	(??_isdigit+1)^0,c
 14348  0086B4  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 14349  0086BA  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 14350  0086C0  5004               	movf	??_isdigit^0,w,c
 14351  0086C2  2606               	addwf	(??_isdigit+2)^0,f,c
 14352  0086C4  5005               	movf	(??_isdigit+1)^0,w,c
 14353  0086C6  2207               	addwfc	(??_isdigit+3)^0,f,c
 14354  0086C8  5007               	movf	(??_isdigit+3)^0,w,c
 14355  0086CA  E106               	bnz	u13020
 14356  0086CC  0E0A               	movlw	10
 14357  0086CE  5C06               	subwf	(??_isdigit+2)^0,w,c
 14358  0086D0  B0D8               	btfsc	status,0,c
 14359  0086D2  D002               	goto	u13020
 14360  0086D4  0E01               	movlw	1
 14361  0086D6  D001               	goto	u13030
 14362  0086D8                     u13020:
 14363  0086D8  0E00               	movlw	0
 14364  0086DA                     u13030:
 14365  0086DA  6E02               	movwf	?_isdigit^0,c
 14366  0086DC  6A03               	clrf	(?_isdigit+1)^0,c
 14367  0086DE  0012               	return		;funcret
 14368  0086E0                     __end_of_isdigit:
 14369                           	opt callstack 0
 14370                           
 14371 ;; *************** function ___wmul *****************
 14372 ;; Defined at:
 14373 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  multiplier      2    1[COMRAM] unsigned int 
 14376 ;;  multiplicand    2    3[COMRAM] unsigned int 
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;  product         2    5[COMRAM] unsigned int 
 14379 ;; Return value:  Size  Location     Type
 14380 ;;                  2    1[COMRAM] unsigned int 
 14381 ;; Registers used:
 14382 ;;		wreg, status,2, status,0, prodl, prodh
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;Total ram usage:        6 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; Hardware stack levels required when called:    7
 14395 ;; This function calls:
 14396 ;;		Nothing
 14397 ;; This function is called by:
 14398 ;;		_atoi
 14399 ;;		_CircularBufferPushBack
 14400 ;;		_CircularBufferPopFront
 14401 ;; This function uses a non-reentrant model
 14402 ;;
 14403                           
 14404                           	psect	text79
 14405  008712                     __ptext79:
 14406                           	opt callstack 0
 14407  008712                     ___wmul:
 14408                           	opt callstack 19
 14409                           
 14410                           ;incstack = 0
 14411  008712  5002               	movf	___wmul@multiplier^0,w,c
 14412  008714  0204               	mulwf	___wmul@multiplicand^0,c
 14413  008716  006F FFCC  F006    	movff	prodl,___wmul@product
 14414  00871C  006F FFD0  F007    	movff	prodh,___wmul@product+1
 14415  008722  5002               	movf	___wmul@multiplier^0,w,c
 14416  008724  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 14417  008726  50F3               	movf	243,w,c
 14418  008728  2607               	addwf	(___wmul@product+1)^0,f,c
 14419  00872A  5003               	movf	(___wmul@multiplier+1)^0,w,c
 14420  00872C  0204               	mulwf	___wmul@multiplicand^0,c
 14421  00872E  50F3               	movf	243,w,c
 14422  008730  2607               	addwf	(___wmul@product+1)^0,f,c
 14423  008732  0060  F018  F002   	movff	___wmul@product,?___wmul
 14424  008738  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 14425  00873E  0012               	return		;funcret
 14426  008740                     __end_of___wmul:
 14427                           	opt callstack 0
 14428                           
 14429 ;; *************** function _UART1_is_rx_ready *****************
 14430 ;; Defined at:
 14431 ;;		line 169 in file "mcc_generated_files/uart1.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;		None
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;		None
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  1    wreg      _Bool 
 14438 ;; Registers used:
 14439 ;;		wreg, status,2
 14440 ;; Tracked objects:
 14441 ;;		On entry : 3F/0
 14442 ;;		On exit  : 3F/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;Total ram usage:        0 bytes
 14450 ;; Hardware stack levels used:    1
 14451 ;; Hardware stack levels required when called:    7
 14452 ;; This function calls:
 14453 ;;		Nothing
 14454 ;; This function is called by:
 14455 ;;		_processATCommand
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           	psect	text80
 14460  008D02                     __ptext80:
 14461                           	opt callstack 0
 14462  008D02                     _UART1_is_rx_ready:
 14463                           	opt callstack 22
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 14467                           
 14468                           ;incstack = 0
 14469  008D02  51C5               	movf	_uart1RxCount& (0+255),w,b	;volatile
 14470  008D04  B4D8               	btfsc	status,2,c
 14471  008D06  D002               	goto	u11690
 14472  008D08  0E01               	movlw	1
 14473  008D0A  0012               	return	
 14474  008D0C                     u11690:
 14475  008D0C  0E00               	movlw	0
 14476                           
 14477                           ; BSR set to: 0
 14478  008D0E  0012               	return		;funcret
 14479  008D10                     __end_of_UART1_is_rx_ready:
 14480                           	opt callstack 0
 14481                           
 14482 ;; *************** function _UART1_Read *****************
 14483 ;; Defined at:
 14484 ;;		line 188 in file "mcc_generated_files/uart1.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;		None
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;  readValue       1    1[COMRAM] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      unsigned char 
 14491 ;; Registers used:
 14492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14493 ;; Tracked objects:
 14494 ;;		On entry : 3F/0
 14495 ;;		On exit  : 3F/39
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14502 ;;Total ram usage:        1 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    7
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_processATCommand
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           	psect	text81
 14513  008082                     __ptext81:
 14514                           	opt callstack 0
 14515  008082                     _UART1_Read:
 14516                           	opt callstack 22
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;incstack = 0
 14526  008082  51C5               	movf	_uart1RxCount& (0+255),w,b	;volatile
 14527  008084  B4D8               	btfsc	status,2,c
 14528  008086  D7FD               	goto	_UART1_Read
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 14532  008088  0E28               	movlw	low _uart1RxStatusBuffer
 14533  00808A  25C6               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 14534  00808C  6ED9               	movwf	fsr2l,c
 14535  00808E  6ADA               	clrf	fsr2h,c
 14536  008090  0E01               	movlw	high _uart1RxStatusBuffer
 14537  008092  22DA               	addwfc	fsr2h,f,c
 14538  008094  50DF               	movf	indf2,w,c
 14539  008096  6FC4               	movwf	_uart1RxLastError& (0+255),b	;volatile
 14540                           
 14541                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 14542  008098  0E38               	movlw	low _uart1RxBuffer
 14543  00809A  25C6               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 14544  00809C  6ED9               	movwf	fsr2l,c
 14545  00809E  6ADA               	clrf	fsr2h,c
 14546  0080A0  0E01               	movlw	high _uart1RxBuffer
 14547  0080A2  22DA               	addwfc	fsr2h,f,c
 14548  0080A4  50DF               	movf	indf2,w,c
 14549  0080A6  6E02               	movwf	UART1_Read@readValue^0,c
 14550                           
 14551                           ; BSR set to: 0
 14552  0080A8  2BC6               	incf	_uart1RxTail& (0+255),f,b	;volatile
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 14556  0080AA  0E0F               	movlw	15
 14557  0080AC  65C6               	cpfsgt	_uart1RxTail& (0+255),b
 14558  0080AE  D002               	goto	l12600
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 14562  0080B0  0E00               	movlw	0
 14563  0080B2  6FC6               	movwf	_uart1RxTail& (0+255),b	;volatile
 14564  0080B4                     l12600:
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 14568  0080B4  0139               	movlb	57	; () banked
 14569  0080B6  9793               	bcf	147,3,b	;volatile
 14570                           
 14571                           ; BSR set to: 57
 14572                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 14573  0080B8  0100               	movlb	0	; () banked
 14574  0080BA  07C5               	decf	_uart1RxCount& (0+255),f,b	;volatile
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 14578  0080BC  0139               	movlb	57	; () banked
 14579  0080BE  8793               	bsf	147,3,b	;volatile
 14580                           
 14581                           ; BSR set to: 57
 14582                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 14583  0080C0  5002               	movf	UART1_Read@readValue^0,w,c
 14584                           
 14585                           ; BSR set to: 57
 14586  0080C2  0012               	return		;funcret
 14587  0080C4                     __end_of_UART1_Read:
 14588                           	opt callstack 0
 14589                           
 14590 ;; *************** function _bootLoadApplication *****************
 14591 ;; Defined at:
 14592 ;;		line 1296 in file "../app/app_src/application.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;		None
 14595 ;; Auto vars:     Size  Location     Type
 14596 ;;  buf_id          1   49[COMRAM] unsigned char 
 14597 ;;  temp            2   50[COMRAM] unsigned short 
 14598 ;;  i               1   52[COMRAM] unsigned char 
 14599 ;; Return value:  Size  Location     Type
 14600 ;;                  1    wreg      void 
 14601 ;; Registers used:
 14602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14603 ;; Tracked objects:
 14604 ;;		On entry : 3F/2
 14605 ;;		On exit  : 0/0
 14606 ;;		Unchanged: 0/0
 14607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14609 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14612 ;;Total ram usage:        6 bytes
 14613 ;; Hardware stack levels used:    1
 14614 ;; Hardware stack levels required when called:   14
 14615 ;; This function calls:
 14616 ;;		_DATAEE_ReadByte_Platform
 14617 ;;		_DATAEE_WriteByte_Platform
 14618 ;;		_NWK_OpenEndpoint
 14619 ;;		_NWK_SetAddr
 14620 ;;		_NWK_SetPanId
 14621 ;;		_PHY_SetChannel
 14622 ;;		_PHY_SetRxState
 14623 ;;		_crc16_app
 14624 ;;		_loadMACAddr
 14625 ;;		_set_parity
 14626 ;;		_set_uart_baud
 14627 ;; This function is called by:
 14628 ;;		_main
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text82
 14633  00254A                     __ptext82:
 14634                           	opt callstack 0
 14635  00254A                     _bootLoadApplication:
 14636                           	opt callstack 16
 14637                           
 14638                           ; BSR set to: 2
 14639                           ;../app/app_src/application.c: 1298:     uint16_t temp;;../app/app_src/application.c: 12
      +                          99:     uint8_t i;;../app/app_src/application.c: 1304:     loadMACAddr();
 14640                           
 14641                           ; BSR set to: 57
 14642                           ;incstack = 0
 14643  00254A  EC7C  F041         	call	_loadMACAddr	;wreg free
 14644                           
 14645                           ;../app/app_src/application.c: 1306:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 14646  00254E  0ED2               	movlw	low _EUIDbyte
 14647  002550  6E13               	movwf	crc16_app@dptr^0,c
 14648  002552  0E01               	movlw	high _EUIDbyte
 14649  002554  6E14               	movwf	(crc16_app@dptr+1)^0,c
 14650  002556  0E00               	movlw	0
 14651  002558  6E16               	movwf	(crc16_app@len+1)^0,c
 14652  00255A  0E0C               	movlw	12
 14653  00255C  6E15               	movwf	crc16_app@len^0,c
 14654  00255E  0E00               	movlw	0
 14655  002560  6E18               	movwf	(crc16_app@seed+1)^0,c
 14656  002562  0E00               	movlw	0
 14657  002564  6E17               	movwf	crc16_app@seed^0,c
 14658  002566  ECE4  F038         	call	_crc16_app	;wreg free
 14659  00256A  0060  F04C  F033   	movff	?_crc16_app,bootLoadApplication@temp
 14660  002570  0060  F050  F034   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 14661                           
 14662                           ; BSR set to: 57
 14663                           ;../app/app_src/application.c: 1307:     currentAddr0 = (temp >> 8) & 0xFF;
 14664  002576  0060  F0D0  F0FA   	movff	bootLoadApplication@temp+1,_currentAddr0
 14665                           
 14666                           ; BSR set to: 57
 14667                           ;../app/app_src/application.c: 1308:     currentAddr1 = (temp) & 0xFF;
 14668  00257C  0060  F0CC  F0F9   	movff	bootLoadApplication@temp,_currentAddr1
 14669                           
 14670                           ; BSR set to: 57
 14671                           ;../app/app_src/application.c: 1311:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 14672  002582  0E00               	movlw	0
 14673  002584  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14674  002586  0E19               	movlw	25
 14675  002588  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14676  00258A  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14677  00258E  0100               	movlb	0	; () banked
 14678  002590  6FF8               	movwf	_currentNetID& (0+255),b
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;../app/app_src/application.c: 1314:     for(i = 0; i < 16; i++){
 14682  002592  0E00               	movlw	0
 14683  002594  6E35               	movwf	bootLoadApplication@i^0,c
 14684  002596                     l16534:
 14685                           
 14686                           ;../app/app_src/application.c: 1315:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 14687  002596  0E24               	movlw	low _aes_key
 14688  002598  2435               	addwf	bootLoadApplication@i^0,w,c
 14689  00259A  6ED9               	movwf	fsr2l,c
 14690  00259C  6ADA               	clrf	fsr2h,c
 14691  00259E  0E02               	movlw	high _aes_key
 14692  0025A0  22DA               	addwfc	fsr2h,f,c
 14693  0025A2  0E09               	movlw	9
 14694  0025A4  2435               	addwf	bootLoadApplication@i^0,w,c
 14695  0025A6  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14696  0025A8  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14697  0025AA  0E00               	movlw	0
 14698  0025AC  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 14699  0025AE  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14700  0025B2  6EDF               	movwf	indf2,c
 14701                           
 14702                           ;../app/app_src/application.c: 1316:     }
 14703  0025B4  2A35               	incf	bootLoadApplication@i^0,f,c
 14704  0025B6  0E0F               	movlw	15
 14705  0025B8  6435               	cpfsgt	bootLoadApplication@i^0,c
 14706  0025BA  D7ED               	goto	l16534
 14707                           
 14708                           ;../app/app_src/application.c: 1317:     for(i = 0; i < 16; i++){
 14709  0025BC  0E00               	movlw	0
 14710  0025BE  6E35               	movwf	bootLoadApplication@i^0,c
 14711  0025C0                     l16546:
 14712                           
 14713                           ;../app/app_src/application.c: 1318:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 14714  0025C0  0E14               	movlw	low _net_key
 14715  0025C2  2435               	addwf	bootLoadApplication@i^0,w,c
 14716  0025C4  6ED9               	movwf	fsr2l,c
 14717  0025C6  6ADA               	clrf	fsr2h,c
 14718  0025C8  0E02               	movlw	high _net_key
 14719  0025CA  22DA               	addwfc	fsr2h,f,c
 14720  0025CC  0E23               	movlw	35
 14721  0025CE  2435               	addwf	bootLoadApplication@i^0,w,c
 14722  0025D0  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14723  0025D2  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14724  0025D4  0E00               	movlw	0
 14725  0025D6  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 14726  0025D8  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14727  0025DC  6EDF               	movwf	indf2,c
 14728                           
 14729                           ;../app/app_src/application.c: 1319:     }
 14730  0025DE  2A35               	incf	bootLoadApplication@i^0,f,c
 14731  0025E0  0E0F               	movlw	15
 14732  0025E2  6435               	cpfsgt	bootLoadApplication@i^0,c
 14733  0025E4  D7ED               	goto	l16546
 14734                           
 14735                           ;../app/app_src/application.c: 1326:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 14736  0025E6  0E00               	movlw	0
 14737  0025E8  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14738  0025EA  0E1A               	movlw	26
 14739  0025EC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14740  0025EE  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14741  0025F2  0100               	movlb	0	; () banked
 14742  0025F4  6FDE               	movwf	_sinkAddr0& (0+255),b
 14743                           
 14744                           ;../app/app_src/application.c: 1327:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 14745  0025F6  0E00               	movlw	0
 14746  0025F8  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14747  0025FA  0E1B               	movlw	27
 14748  0025FC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14749  0025FE  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14750  002602  0100               	movlb	0	; () banked
 14751  002604  6FDD               	movwf	_sinkAddr1& (0+255),b
 14752                           
 14753                           ;../app/app_src/application.c: 1330:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 14754  002606  0E00               	movlw	0
 14755  002608  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14756  00260A  0E1C               	movlw	28
 14757  00260C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14758  00260E  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14759  002612  0100               	movlb	0	; () banked
 14760  002614  6FCE               	movwf	_channel& (0+255),b
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;../app/app_src/application.c: 1331:     if(channel > sizeof(fhssList)){
 14764  002616  0EFC               	movlw	252
 14765  002618  65CE               	cpfsgt	_channel& (0+255),b
 14766  00261A  D00B               	goto	l16560
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;../app/app_src/application.c: 1332:         channel = 0;
 14770  00261C  0E00               	movlw	0
 14771  00261E  6FCE               	movwf	_channel& (0+255),b
 14772                           
 14773                           ; BSR set to: 0
 14774                           ;../app/app_src/application.c: 1333:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 14775  002620  0E00               	movlw	0
 14776  002622  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14777  002624  0E1C               	movlw	28
 14778  002626  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14779  002628  0060  F338  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 14780  00262E  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 14781  002632                     l16560:
 14782                           
 14783                           ;../app/app_src/application.c: 1337:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 14784  002632  0E00               	movlw	0
 14785  002634  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14786  002636  0E1D               	movlw	29
 14787  002638  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14788  00263A  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14789  00263E  0100               	movlb	0	; () banked
 14790  002640  6FCC               	movwf	_TXPower& (0+255),b
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;../app/app_src/application.c: 1338:     if((TXPower < 2) || (TXPower > 13)){
 14794  002642  0E01               	movlw	1
 14795  002644  65CC               	cpfsgt	_TXPower& (0+255),b
 14796  002646  D003               	goto	u16930
 14797                           
 14798                           ; BSR set to: 0
 14799  002648  0E0D               	movlw	13
 14800  00264A  65CC               	cpfsgt	_TXPower& (0+255),b
 14801  00264C  D00B               	goto	l16570
 14802  00264E                     u16930:
 14803                           
 14804                           ; BSR set to: 0
 14805                           ;../app/app_src/application.c: 1339:         TXPower = 13;
 14806  00264E  0E0D               	movlw	13
 14807  002650  6FCC               	movwf	_TXPower& (0+255),b
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;../app/app_src/application.c: 1340:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 14811  002652  0E00               	movlw	0
 14812  002654  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14813  002656  0E1D               	movlw	29
 14814  002658  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14815  00265A  0060  F330  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 14816  002660  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 14817  002664                     l16570:
 14818                           
 14819                           ;../app/app_src/application.c: 1344:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 14820  002664  0E00               	movlw	0
 14821  002666  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14822  002668  0E21               	movlw	33
 14823  00266A  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14824  00266C  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14825  002670  0100               	movlb	0	; () banked
 14826  002672  6FCF               	movwf	_current_sf& (0+255),b
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;../app/app_src/application.c: 1345:     if((current_sf < 7) || (current_sf > 12)){
 14830  002674  0E06               	movlw	6
 14831  002676  65CF               	cpfsgt	_current_sf& (0+255),b
 14832  002678  D003               	goto	u16950
 14833                           
 14834                           ; BSR set to: 0
 14835  00267A  0E0C               	movlw	12
 14836  00267C  65CF               	cpfsgt	_current_sf& (0+255),b
 14837  00267E  D00B               	goto	l16580
 14838  002680                     u16950:
 14839                           
 14840                           ; BSR set to: 0
 14841                           ;../app/app_src/application.c: 1346:         current_sf = 7;
 14842  002680  0E07               	movlw	7
 14843  002682  6FCF               	movwf	_current_sf& (0+255),b
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;../app/app_src/application.c: 1347:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 14847  002684  0E00               	movlw	0
 14848  002686  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14849  002688  0E21               	movlw	33
 14850  00268A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14851  00268C  0060  F33C  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 14852  002692  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 14853  002696                     l16580:
 14854                           
 14855                           ;../app/app_src/application.c: 1351:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 14856  002696  0E00               	movlw	0
 14857  002698  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14858  00269A  0E1E               	movlw	30
 14859  00269C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14860  00269E  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14861  0026A2  0100               	movlb	0	; () banked
 14862  0026A4  6FF7               	movwf	_RSSITarget& (0+255),b
 14863                           
 14864                           ; BSR set to: 0
 14865                           ;../app/app_src/application.c: 1352:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 14866  0026A6  51F7               	movf	_RSSITarget& (0+255),w,b
 14867  0026A8  0A80               	xorlw	128
 14868  0026AA  0F9E               	addlw	158
 14869  0026AC  B0D8               	btfsc	status,0,c
 14870  0026AE  D005               	goto	u16970
 14871                           
 14872                           ; BSR set to: 0
 14873  0026B0  51F7               	movf	_RSSITarget& (0+255),w,b
 14874  0026B2  0A80               	xorlw	128
 14875  0026B4  0FF8               	addlw	248
 14876  0026B6  B0D8               	btfsc	status,0,c
 14877  0026B8  D00B               	goto	l16590
 14878  0026BA                     u16970:
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;../app/app_src/application.c: 1353:         RSSITarget = -80;
 14882  0026BA  0EB0               	movlw	176
 14883  0026BC  6FF7               	movwf	_RSSITarget& (0+255),b
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;../app/app_src/application.c: 1354:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 14887  0026BE  0E00               	movlw	0
 14888  0026C0  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14889  0026C2  0E1E               	movlw	30
 14890  0026C4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14891  0026C6  0060  F3DC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 14892  0026CC  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 14893  0026D0                     l16590:
 14894                           
 14895                           ;../app/app_src/application.c: 1358:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 14896  0026D0  0E00               	movlw	0
 14897  0026D2  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14898  0026D4  0E1F               	movlw	31
 14899  0026D6  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14900  0026D8  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14901  0026DC  6E35               	movwf	bootLoadApplication@i^0,c
 14902                           
 14903                           ;../app/app_src/application.c: 1359:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 14904  0026DE  0E04               	movlw	4
 14905  0026E0  6035               	cpfslt	bootLoadApplication@i^0,c
 14906  0026E2  D003               	goto	u16990
 14907  0026E4  0435               	decf	bootLoadApplication@i^0,w,c
 14908  0026E6  A4D8               	btfss	status,2,c
 14909  0026E8  D00A               	goto	l16600
 14910  0026EA                     u16990:
 14911                           
 14912                           ;../app/app_src/application.c: 1360:         i = UART_9BIT_EVEN_PARITY;
 14913  0026EA  0E03               	movlw	3
 14914  0026EC  6E35               	movwf	bootLoadApplication@i^0,c
 14915                           
 14916                           ;../app/app_src/application.c: 1361:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 14917  0026EE  0E00               	movlw	0
 14918  0026F0  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14919  0026F2  0E1F               	movlw	31
 14920  0026F4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14921  0026F6  0E03               	movlw	3
 14922  0026F8  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 14923  0026FA  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 14924  0026FE                     l16600:
 14925                           
 14926                           ;../app/app_src/application.c: 1364:     set_parity(i);
 14927  0026FE  5035               	movf	bootLoadApplication@i^0,w,c
 14928  002700  EC83  F03C         	call	_set_parity
 14929                           
 14930                           ;../app/app_src/application.c: 1367:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 14931  002704  0E00               	movlw	0
 14932  002706  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14933  002708  0E20               	movlw	32
 14934  00270A  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14935  00270C  ECCE  F029         	call	_DATAEE_ReadByte_Platform	;wreg free
 14936  002710  6E35               	movwf	bootLoadApplication@i^0,c
 14937                           
 14938                           ;../app/app_src/application.c: 1368:     if(i > UART_BAUD_19200){
 14939  002712  0E01               	movlw	1
 14940  002714  6435               	cpfsgt	bootLoadApplication@i^0,c
 14941  002716  D00A               	goto	l16610
 14942                           
 14943                           ;../app/app_src/application.c: 1369:         i = UART_BAUD_19200;
 14944  002718  0E01               	movlw	1
 14945  00271A  6E35               	movwf	bootLoadApplication@i^0,c
 14946                           
 14947                           ;../app/app_src/application.c: 1370:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 14948  00271C  0E00               	movlw	0
 14949  00271E  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14950  002720  0E20               	movlw	32
 14951  002722  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14952  002724  0E01               	movlw	1
 14953  002726  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 14954  002728  ECDC  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 14955  00272C                     l16610:
 14956                           
 14957                           ;../app/app_src/application.c: 1372:     set_uart_baud(i);
 14958  00272C  5035               	movf	bootLoadApplication@i^0,w,c
 14959  00272E  EC71  F02F         	call	_set_uart_baud
 14960                           
 14961                           ;../app/app_src/application.c: 1411:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 14962  002732  0E00               	movlw	0
 14963  002734  6E32               	movwf	bootLoadApplication@buf_id^0,c
 14964  002736                     l16616:
 14965                           
 14966                           ;../app/app_src/application.c: 1412:         tx_buffer[buf_id].free = 1;
 14967  002736  5032               	movf	bootLoadApplication@buf_id^0,w,c
 14968  002738  0D83               	mullw	131
 14969  00273A  0ECC               	movlw	low _tx_buffer
 14970  00273C  24F3               	addwf	243,w,c
 14971  00273E  6ED9               	movwf	fsr2l,c
 14972  002740  0E0A               	movlw	high _tx_buffer
 14973  002742  20F4               	addwfc	prodh,w,c
 14974  002744  6EDA               	movwf	fsr2h,c
 14975  002746  84DF               	bsf	indf2,2,c
 14976                           
 14977                           ;../app/app_src/application.c: 1413:     }
 14978  002748  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 14979  00274A  0E03               	movlw	3
 14980  00274C  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 14981  00274E  D7F3               	goto	l16616
 14982                           
 14983                           ;../app/app_src/application.c: 1414:     temp = (currentAddr0 << 8) | currentAddr1;
 14984  002750  0100               	movlb	0	; () banked
 14985  002752  51F9               	movf	_currentAddr1& (0+255),w,b
 14986  002754  0060  F3E8  F030   	movff	_currentAddr0,??_bootLoadApplication
 14987  00275A  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 14988  00275C  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 14989  002762  6A30               	clrf	??_bootLoadApplication^0,c
 14990  002764  1030               	iorwf	??_bootLoadApplication^0,w,c
 14991  002766  6E33               	movwf	bootLoadApplication@temp^0,c
 14992  002768  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 14993  00276A  6E34               	movwf	(bootLoadApplication@temp+1)^0,c
 14994                           
 14995                           ;../app/app_src/application.c: 1415:     if(temp > 0x8000){
 14996  00276C  0433               	decf	bootLoadApplication@temp^0,w,c
 14997  00276E  0E80               	movlw	128
 14998  002770  5834               	subwfb	(bootLoadApplication@temp+1)^0,w,c
 14999  002772  A0D8               	btfss	status,0,c
 15000  002774  D00A               	goto	l16630
 15001                           
 15002                           ; BSR set to: 0
 15003                           ;../app/app_src/application.c: 1416:         temp -= 0x8000;
 15004  002776  0E00               	movlw	0
 15005  002778  5E33               	subwf	bootLoadApplication@temp^0,f,c
 15006  00277A  0E80               	movlw	128
 15007  00277C  5A34               	subwfb	(bootLoadApplication@temp+1)^0,f,c
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;../app/app_src/application.c: 1417:         currentAddr0 = (temp >> 8) & 0xFF;
 15011  00277E  0060  F0D0  F0FA   	movff	bootLoadApplication@temp+1,_currentAddr0
 15012                           
 15013                           ; BSR set to: 0
 15014                           ;../app/app_src/application.c: 1418:         currentAddr1 = temp & 0xFF;
 15015  002784  0060  F0CC  F0F9   	movff	bootLoadApplication@temp,_currentAddr1
 15016  00278A                     l16630:
 15017                           
 15018                           ; BSR set to: 0
 15019                           ;../app/app_src/application.c: 1420:     NWK_SetAddr(temp);
 15020  00278A  0060  F0CC  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 15021  002790  0060  F0D0  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 15022  002796  EC4F  F045         	call	_NWK_SetAddr	;wreg free
 15023                           
 15024                           ; BSR set to: 0
 15025                           ;../app/app_src/application.c: 1421:     NWK_SetPanId(0x1234);
 15026  00279A  0E12               	movlw	18
 15027  00279C  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 15028  00279E  0E34               	movlw	52
 15029  0027A0  6E04               	movwf	NWK_SetPanId@panId^0,c
 15030  0027A2  EC40  F045         	call	_NWK_SetPanId	;wreg free
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;../app/app_src/application.c: 1422:     PHY_SetChannel(0x00);
 15034  0027A6  0E00               	movlw	0
 15035  0027A8  EC1F  F041         	call	_PHY_SetChannel
 15036                           
 15037                           ; BSR set to: 61
 15038                           ;../app/app_src/application.c: 1423:     PHY_SetRxState(1);
 15039  0027AC  0E01               	movlw	1
 15040  0027AE  ECE8  F046         	call	_PHY_SetRxState
 15041                           
 15042                           ; BSR set to: 61
 15043                           ;../app/app_src/application.c: 1424:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 15044  0027B2  0EC6               	movlw	low _appDataInd
 15045  0027B4  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 15046  0027B6  0E69               	movlw	high _appDataInd
 15047  0027B8  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 15048  0027BA  0E01               	movlw	1
 15049  0027BC  ECFF  F044         	call	_NWK_OpenEndpoint
 15050  0027C0  0012               	return		;funcret
 15051  0027C2                     __end_of_bootLoadApplication:
 15052                           	opt callstack 0
 15053                           
 15054 ;; *************** function _set_uart_baud *****************
 15055 ;; Defined at:
 15056 ;;		line 162 in file "../app/app_src/application.c"
 15057 ;; Parameters:    Size  Location     Type
 15058 ;;  i               1    wreg     unsigned char 
 15059 ;; Auto vars:     Size  Location     Type
 15060 ;;  i               1    3[COMRAM] unsigned char 
 15061 ;; Return value:  Size  Location     Type
 15062 ;;                  1    wreg      unsigned char 
 15063 ;; Registers used:
 15064 ;;		wreg, status,2, status,0
 15065 ;; Tracked objects:
 15066 ;;		On entry : 0/0
 15067 ;;		On exit  : 3F/3D
 15068 ;;		Unchanged: 0/0
 15069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15073 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15074 ;;Total ram usage:        3 bytes
 15075 ;; Hardware stack levels used:    1
 15076 ;; Hardware stack levels required when called:    7
 15077 ;; This function calls:
 15078 ;;		Nothing
 15079 ;; This function is called by:
 15080 ;;		_bootLoadApplication
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text83
 15085  005EE2                     __ptext83:
 15086                           	opt callstack 0
 15087  005EE2                     _set_uart_baud:
 15088                           	opt callstack 22
 15089                           
 15090                           ;incstack = 0
 15091                           ;set_uart_baud@i stored from wreg
 15092  005EE2  6E04               	movwf	set_uart_baud@i^0,c
 15093                           
 15094                           ;../app/app_src/application.c: 162: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 163: {;../app/app_src/application.c: 164:     U1CON1 &= ~(1<<7);
 15095  005EE4  013D               	movlb	61	; () banked
 15096  005EE6  9FF3               	bcf	243,7,b	;volatile
 15097                           
 15098                           ;../app/app_src/application.c: 165:     switch(i)
 15099  005EE8  D048               	goto	l12668
 15100  005EEA                     l12616:
 15101                           
 15102                           ; BSR set to: 61
 15103                           ;../app/app_src/application.c: 169:             U1CON0 &=~ (1<<7);
 15104  005EEA  9FF2               	bcf	242,7,b	;volatile
 15105                           
 15106                           ; BSR set to: 61
 15107                           ;../app/app_src/application.c: 170:             U1BRGL = 0xA0;
 15108  005EEC  0EA0               	movlw	160
 15109  005EEE  6FF5               	movwf	245,b	;volatile
 15110                           
 15111                           ; BSR set to: 61
 15112                           ;../app/app_src/application.c: 171:             U1BRGH = 0x01;
 15113  005EF0  0E01               	movlw	1
 15114  005EF2  6FF6               	movwf	246,b	;volatile
 15115                           
 15116                           ; BSR set to: 61
 15117                           ;../app/app_src/application.c: 172:             current_baud_rate = 9600;
 15118  005EF4  0E80               	movlw	128
 15119  005EF6  0101               	movlb	1	; () banked
 15120  005EF8  6F52               	movwf	_current_baud_rate& (0+255),b
 15121  005EFA  0E25               	movlw	37
 15122  005EFC  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 15123  005EFE  0E00               	movlw	0
 15124  005F00  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 15125                           
 15126                           ; BSR set to: 1
 15127                           ;../app/app_src/application.c: 173:             uart_baud_rate = UART_BAUD_9600;
 15128  005F02  0E00               	movlw	0
 15129  005F04  D037               	goto	L9
 15130  005F06                     l12626:
 15131                           
 15132                           ; BSR set to: 61
 15133                           ;../app/app_src/application.c: 177:             U1CON0 &=~ (1<<7);
 15134  005F06  9FF2               	bcf	242,7,b	;volatile
 15135                           
 15136                           ; BSR set to: 61
 15137                           ;../app/app_src/application.c: 178:             U1BRGL = 0xCF;
 15138  005F08  0ECF               	movlw	207
 15139  005F0A  6FF5               	movwf	245,b	;volatile
 15140                           
 15141                           ; BSR set to: 61
 15142                           ;../app/app_src/application.c: 179:             U1BRGH = 0x00;
 15143  005F0C  0E00               	movlw	0
 15144  005F0E  6FF6               	movwf	246,b	;volatile
 15145                           
 15146                           ; BSR set to: 61
 15147                           ;../app/app_src/application.c: 180:             current_baud_rate = 19200;
 15148  005F10  0E00               	movlw	0
 15149  005F12  0101               	movlb	1	; () banked
 15150  005F14  6F52               	movwf	_current_baud_rate& (0+255),b
 15151  005F16  0E4B               	movlw	75
 15152  005F18  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 15153  005F1A  0E00               	movlw	0
 15154  005F1C  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 15155                           
 15156                           ; BSR set to: 1
 15157                           ;../app/app_src/application.c: 181:             uart_baud_rate = UART_BAUD_19200;
 15158  005F1E  0E01               	movlw	1
 15159  005F20  D029               	goto	L9
 15160  005F22                     l12636:
 15161                           
 15162                           ; BSR set to: 61
 15163                           ;../app/app_src/application.c: 185:             U1CON0 &=~ (1<<7);
 15164  005F22  9FF2               	bcf	242,7,b	;volatile
 15165                           
 15166                           ; BSR set to: 61
 15167                           ;../app/app_src/application.c: 186:             U1BRGL = 0x67;
 15168  005F24  0E67               	movlw	103
 15169  005F26  6FF5               	movwf	245,b	;volatile
 15170                           
 15171                           ; BSR set to: 61
 15172                           ;../app/app_src/application.c: 187:             U1BRGH = 0x00;
 15173  005F28  0E00               	movlw	0
 15174  005F2A  6FF6               	movwf	246,b	;volatile
 15175                           
 15176                           ; BSR set to: 61
 15177                           ;../app/app_src/application.c: 188:             current_baud_rate = 38400;
 15178  005F2C  0E00               	movlw	0
 15179  005F2E  0101               	movlb	1	; () banked
 15180  005F30  6F52               	movwf	_current_baud_rate& (0+255),b
 15181  005F32  0E96               	movlw	150
 15182  005F34  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 15183  005F36  0E00               	movlw	0
 15184  005F38  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 15185                           
 15186                           ; BSR set to: 1
 15187                           ;../app/app_src/application.c: 189:             uart_baud_rate = UART_BAUD_38400;
 15188  005F3A  0E02               	movlw	2
 15189  005F3C  D01B               	goto	L9
 15190  005F3E                     l12646:
 15191                           
 15192                           ; BSR set to: 61
 15193                           ;../app/app_src/application.c: 193:             U1CON0 |= (1<<7);
 15194  005F3E  8FF2               	bsf	242,7,b	;volatile
 15195                           
 15196                           ; BSR set to: 61
 15197                           ;../app/app_src/application.c: 194:             U1BRGL = 0x14;
 15198  005F40  0E14               	movlw	20
 15199  005F42  6FF5               	movwf	245,b	;volatile
 15200                           
 15201                           ; BSR set to: 61
 15202                           ;../app/app_src/application.c: 195:             U1BRGH = 0x01;
 15203  005F44  0E01               	movlw	1
 15204  005F46  6FF6               	movwf	246,b	;volatile
 15205                           
 15206                           ; BSR set to: 61
 15207                           ;../app/app_src/application.c: 196:             current_baud_rate = 57600;
 15208  005F48  0E00               	movlw	0
 15209  005F4A  0101               	movlb	1	; () banked
 15210  005F4C  6F52               	movwf	_current_baud_rate& (0+255),b
 15211  005F4E  0EE1               	movlw	225
 15212  005F50  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 15213  005F52  0E00               	movlw	0
 15214  005F54  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 15215                           
 15216                           ; BSR set to: 1
 15217                           ;../app/app_src/application.c: 197:             uart_baud_rate = UART_BAUD_57600;
 15218  005F56  0E03               	movlw	3
 15219  005F58  D00D               	goto	L9
 15220  005F5A                     l12656:
 15221                           
 15222                           ; BSR set to: 61
 15223                           ;../app/app_src/application.c: 201:             U1CON0 |= (1<<7);
 15224  005F5A  8FF2               	bsf	242,7,b	;volatile
 15225                           
 15226                           ; BSR set to: 61
 15227                           ;../app/app_src/application.c: 202:             U1BRGL = 0x89;
 15228  005F5C  0E89               	movlw	137
 15229  005F5E  6FF5               	movwf	245,b	;volatile
 15230                           
 15231                           ; BSR set to: 61
 15232                           ;../app/app_src/application.c: 203:             U1BRGH = 0x00;
 15233  005F60  0E00               	movlw	0
 15234  005F62  6FF6               	movwf	246,b	;volatile
 15235                           
 15236                           ; BSR set to: 61
 15237                           ;../app/app_src/application.c: 204:             current_baud_rate = 115200;
 15238  005F64  0E00               	movlw	0
 15239  005F66  0101               	movlb	1	; () banked
 15240  005F68  6F52               	movwf	_current_baud_rate& (0+255),b
 15241  005F6A  0EC2               	movlw	194
 15242  005F6C  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 15243  005F6E  0E01               	movlw	1
 15244  005F70  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 15245                           
 15246                           ; BSR set to: 1
 15247                           ;../app/app_src/application.c: 205:             uart_baud_rate = UART_BAUD_115200;
 15248  005F72  0E04               	movlw	4
 15249  005F74                     L9:
 15250  005F74  0100               	movlb	0	; () banked
 15251  005F76  6FE2               	movwf	_uart_baud_rate& (0+255),b
 15252                           
 15253                           ;../app/app_src/application.c: 206:             break;
 15254  005F78  D018               	goto	l12670
 15255  005F7A                     l12668:
 15256                           
 15257                           ; BSR set to: 61
 15258  005F7A  5004               	movf	set_uart_baud@i^0,w,c
 15259  005F7C  6E02               	movwf	??_set_uart_baud^0,c
 15260  005F7E  6A03               	clrf	(??_set_uart_baud+1)^0,c
 15261                           
 15262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15263                           ; Switch size 1, requested type "simple"
 15264                           ; Number of cases is 1, Range of values is 0 to 0
 15265                           ; switch strategies available:
 15266                           ; Name         Instructions Cycles
 15267                           ; simple_byte            4     3 (average)
 15268                           ;	Chosen strategy is simple_byte
 15269  005F80  5003               	movf	(??_set_uart_baud+1)^0,w,c
 15270  005F82  0A00               	xorlw	0	; case 0
 15271  005F84  A4D8               	btfss	status,2,c
 15272  005F86  0012               	return	
 15273                           
 15274                           ; BSR set to: 61
 15275                           ; Switch size 1, requested type "simple"
 15276                           ; Number of cases is 5, Range of values is 0 to 4
 15277                           ; switch strategies available:
 15278                           ; Name         Instructions Cycles
 15279                           ; simple_byte           16     9 (average)
 15280                           ;	Chosen strategy is simple_byte
 15281  005F88  5002               	movf	??_set_uart_baud^0,w,c
 15282  005F8A  0A00               	xorlw	0	; case 0
 15283  005F8C  B4D8               	btfsc	status,2,c
 15284  005F8E  D7AD               	goto	l12616
 15285  005F90  0A01               	xorlw	1	; case 1
 15286  005F92  B4D8               	btfsc	status,2,c
 15287  005F94  D7B8               	goto	l12626
 15288  005F96  0A03               	xorlw	3	; case 2
 15289  005F98  B4D8               	btfsc	status,2,c
 15290  005F9A  D7C3               	goto	l12636
 15291  005F9C  0A01               	xorlw	1	; case 3
 15292  005F9E  B4D8               	btfsc	status,2,c
 15293  005FA0  D7CE               	goto	l12646
 15294  005FA2  0A07               	xorlw	7	; case 4
 15295  005FA4  A4D8               	btfss	status,2,c
 15296  005FA6  0012               	return	
 15297  005FA8  D7D8               	goto	l12656
 15298  005FAA                     l12670:
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;../app/app_src/application.c: 210:     U1CON1 |= (1<<7);
 15302  005FAA  013D               	movlb	61	; () banked
 15303  005FAC  8FF3               	bsf	243,7,b	;volatile
 15304                           
 15305                           ; BSR set to: 61
 15306  005FAE  0012               	return		;funcret
 15307  005FB0                     __end_of_set_uart_baud:
 15308                           	opt callstack 0
 15309                           
 15310 ;; *************** function _set_parity *****************
 15311 ;; Defined at:
 15312 ;;		line 118 in file "../app/app_src/application.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;  parity          1    wreg     unsigned char 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;  parity          1    3[COMRAM] unsigned char 
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    wreg      unsigned char 
 15319 ;; Registers used:
 15320 ;;		wreg, status,2, status,0
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15329 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15330 ;;Total ram usage:        3 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:    7
 15333 ;; This function calls:
 15334 ;;		Nothing
 15335 ;; This function is called by:
 15336 ;;		_cmdSetParity
 15337 ;;		_bootLoadApplication
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341                           	psect	text84
 15342  007906                     __ptext84:
 15343                           	opt callstack 0
 15344  007906                     _set_parity:
 15345                           	opt callstack 20
 15346                           
 15347                           ; BSR set to: 61
 15348                           ;incstack = 0
 15349                           ;set_parity@parity stored from wreg
 15350  007906  6E04               	movwf	set_parity@parity^0,c
 15351                           
 15352                           ;../app/app_src/application.c: 118: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 119: {;../app/app_src/application.c: 120:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 15353  007908  0E04               	movlw	4
 15354  00790A  6004               	cpfslt	set_parity@parity^0,c
 15355  00790C  0012               	return	
 15356  00790E  0404               	decf	set_parity@parity^0,w,c
 15357  007910  B4D8               	btfsc	status,2,c
 15358  007912  0012               	return	
 15359                           
 15360                           ;../app/app_src/application.c: 123:     U1CON1 &= 0b01111111;
 15361  007914  013D               	movlb	61	; () banked
 15362  007916  9FF3               	bcf	243,7,b	;volatile
 15363                           
 15364                           ; BSR set to: 61
 15365                           ;../app/app_src/application.c: 124:     U1CON0 &= 0b11110000;
 15366  007918  0EF0               	movlw	240
 15367  00791A  17F2               	andwf	242,f,b	;volatile
 15368                           
 15369                           ; BSR set to: 61
 15370                           ;../app/app_src/application.c: 125:     U1CON0 |= (parity & 0b00001111);
 15371  00791C  5004               	movf	set_parity@parity^0,w,c
 15372  00791E  0B0F               	andlw	15
 15373  007920  13F2               	iorwf	242,f,b	;volatile
 15374                           
 15375                           ; BSR set to: 61
 15376                           ;../app/app_src/application.c: 126:     U1CON2 &=~ (0b00110000);
 15377  007922  0ECF               	movlw	207
 15378  007924  17F4               	andwf	244,f,b	;volatile
 15379                           
 15380                           ; BSR set to: 61
 15381                           ;../app/app_src/application.c: 127:     U1CON1 |= 0b10000000;
 15382  007926  8FF3               	bsf	243,7,b	;volatile
 15383                           
 15384                           ;../app/app_src/application.c: 128:     switch(parity){
 15385  007928  D00C               	goto	l15208
 15386  00792A                     l15200:
 15387                           
 15388                           ; BSR set to: 61
 15389                           ;../app/app_src/application.c: 130:             uart_parity = UART_8BIT_NO_PARITY;
 15390  00792A  0E00               	movlw	0
 15391  00792C  0100               	movlb	0	; () banked
 15392  00792E  6FE1               	movwf	_uart_parity& (0+255),b
 15393                           
 15394                           ;../app/app_src/application.c: 134:             break;
 15395  007930  0012               	return	
 15396  007932                     l15202:
 15397                           
 15398                           ; BSR set to: 61
 15399                           ;../app/app_src/application.c: 136:             uart_parity = UART_9BIT_ODD_PARITY;
 15400  007932  0E02               	movlw	2
 15401  007934  0100               	movlb	0	; () banked
 15402  007936  6FE1               	movwf	_uart_parity& (0+255),b
 15403                           
 15404                           ;../app/app_src/application.c: 140:             break;
 15405  007938  0012               	return	
 15406  00793A                     l15204:
 15407                           
 15408                           ; BSR set to: 61
 15409                           ;../app/app_src/application.c: 142:             uart_parity = UART_9BIT_EVEN_PARITY;
 15410  00793A  0E03               	movlw	3
 15411  00793C  0100               	movlb	0	; () banked
 15412  00793E  6FE1               	movwf	_uart_parity& (0+255),b
 15413                           
 15414                           ;../app/app_src/application.c: 146:             break;
 15415  007940  0012               	return	
 15416  007942                     l15208:
 15417                           
 15418                           ; BSR set to: 61
 15419  007942  5004               	movf	set_parity@parity^0,w,c
 15420  007944  6E02               	movwf	??_set_parity^0,c
 15421  007946  6A03               	clrf	(??_set_parity+1)^0,c
 15422                           
 15423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15424                           ; Switch size 1, requested type "simple"
 15425                           ; Number of cases is 1, Range of values is 0 to 0
 15426                           ; switch strategies available:
 15427                           ; Name         Instructions Cycles
 15428                           ; simple_byte            4     3 (average)
 15429                           ;	Chosen strategy is simple_byte
 15430  007948  5003               	movf	(??_set_parity+1)^0,w,c
 15431  00794A  0A00               	xorlw	0	; case 0
 15432  00794C  A4D8               	btfss	status,2,c
 15433  00794E  D7ED               	goto	l15200
 15434                           
 15435                           ; BSR set to: 61
 15436                           ; Switch size 1, requested type "simple"
 15437                           ; Number of cases is 3, Range of values is 0 to 3
 15438                           ; switch strategies available:
 15439                           ; Name         Instructions Cycles
 15440                           ; simple_byte           10     6 (average)
 15441                           ;	Chosen strategy is simple_byte
 15442  007950  5002               	movf	??_set_parity^0,w,c
 15443  007952  0A00               	xorlw	0	; case 0
 15444  007954  B4D8               	btfsc	status,2,c
 15445  007956  D7E9               	goto	l15200
 15446  007958  0A02               	xorlw	2	; case 2
 15447  00795A  B4D8               	btfsc	status,2,c
 15448  00795C  D7EA               	goto	l15202
 15449  00795E  0A01               	xorlw	1	; case 3
 15450  007960  B4D8               	btfsc	status,2,c
 15451  007962  D7EB               	goto	l15204
 15452  007964  D7E2               	goto	l15200
 15453  007966                     __end_of_set_parity:
 15454                           	opt callstack 0
 15455                           
 15456 ;; *************** function _loadMACAddr *****************
 15457 ;; Defined at:
 15458 ;;		line 1277 in file "../app/app_src/application.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;		None
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;  i               1    5[COMRAM] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      void 
 15465 ;; Registers used:
 15466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 3F/2
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15476 ;;Total ram usage:        1 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:    8
 15479 ;; This function calls:
 15480 ;;		_DIA_ReadByte
 15481 ;; This function is called by:
 15482 ;;		_bootLoadApplication
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text85
 15487  0082F8                     __ptext85:
 15488                           	opt callstack 0
 15489  0082F8                     _loadMACAddr:
 15490                           	opt callstack 21
 15491                           
 15492                           ; BSR set to: 2
 15493                           ;../app/app_src/application.c: 1280:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 15494                           
 15495                           ;incstack = 0
 15496  0082F8  0E00               	movlw	0
 15497  0082FA  6E06               	movwf	loadMACAddr@i^0,c
 15498  0082FC                     l12848:
 15499                           
 15500                           ;../app/app_src/application.c: 1281:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 15501  0082FC  5006               	movf	loadMACAddr@i^0,w,c
 15502  0082FE  08DD               	sublw	low (_EUIDbyte+11)
 15503  008300  6ED9               	movwf	fsr2l,c
 15504  008302  0E00               	movlw	0
 15505  008304  A0D8               	btfss	status,0,c
 15506  008306  2AE8               	incf	wreg,f,c
 15507  008308  0801               	sublw	high (_EUIDbyte+11)
 15508  00830A  6EDA               	movwf	fsr2h,c
 15509  00830C  0E00               	movlw	0
 15510  00830E  2406               	addwf	loadMACAddr@i^0,w,c
 15511  008310  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 15512  008312  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 15513  008314  0E00               	movlw	0
 15514  008316  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 15515  008318  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 15516  00831A  0E3F               	movlw	63
 15517  00831C  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 15518  00831E  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 15519  008320  0E00               	movlw	0
 15520  008322  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 15521  008324  EC88  F044         	call	_DIA_ReadByte	;wreg free
 15522  008328  6EDF               	movwf	indf2,c
 15523                           
 15524                           ;../app/app_src/application.c: 1282:     }
 15525  00832A  2A06               	incf	loadMACAddr@i^0,f,c
 15526  00832C  0E0B               	movlw	11
 15527  00832E  6406               	cpfsgt	loadMACAddr@i^0,c
 15528  008330  D7E5               	goto	l12848
 15529  008332  0012               	return	
 15530  008334                     __end_of_loadMACAddr:
 15531                           	opt callstack 0
 15532                           
 15533 ;; *************** function _DIA_ReadByte *****************
 15534 ;; Defined at:
 15535 ;;		line 212 in file "mcc_generated_files/memory.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  flashAddr       4    1[COMRAM] unsigned long 
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;		None
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      unsigned char 
 15542 ;; Registers used:
 15543 ;;		wreg, status,2
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/2
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;Total ram usage:        4 bytes
 15554 ;; Hardware stack levels used:    1
 15555 ;; Hardware stack levels required when called:    7
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		_loadMACAddr
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text86
 15564  008910                     __ptext86:
 15565                           	opt callstack 0
 15566  008910                     _DIA_ReadByte:
 15567                           	opt callstack 21
 15568                           
 15569                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 15570                           
 15571                           ;incstack = 0
 15572  008910  0139               	movlb	57	; () banked
 15573  008912  51E5               	movf	229,w,b	;volsfr
 15574  008914  0B3F               	andlw	-193
 15575  008916  0940               	iorlw	64
 15576  008918  6FE5               	movwf	229,b	;volsfr
 15577                           
 15578                           ; BSR set to: 57
 15579                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 15580  00891A  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 15581                           
 15582                           ; BSR set to: 57
 15583                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 15584  008920  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 15585                           
 15586                           ; BSR set to: 57
 15587                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 15588  008926  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 15589  00892C  0008               	tblrd		*	;# 
 15590                           
 15591                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 15592  00892E  50F5               	movf	245,w,c	;volatile
 15593  008930  0012               	return		;funcret
 15594  008932                     __end_of_DIA_ReadByte:
 15595                           	opt callstack 0
 15596                           
 15597 ;; *************** function _crc16_app *****************
 15598 ;; Defined at:
 15599 ;;		line 4 in file "../app/app_src/crc.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;  dptr            2   18[COMRAM] PTR void 
 15602 ;;		 -> EUIDbyte(12), 
 15603 ;;  len             2   20[COMRAM] unsigned short 
 15604 ;;  seed            2   22[COMRAM] unsigned short 
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;  i               2   28[COMRAM] unsigned short 
 15607 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 15608 ;;		 -> EUIDbyte(12), 
 15609 ;;  result          2   24[COMRAM] unsigned short 
 15610 ;; Return value:  Size  Location     Type
 15611 ;;                  2   18[COMRAM] unsigned short 
 15612 ;; Registers used:
 15613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15614 ;; Tracked objects:
 15615 ;;		On entry : 0/2
 15616 ;;		On exit  : 3F/39
 15617 ;;		Unchanged: 0/0
 15618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15619 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15620 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15622 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15623 ;;Total ram usage:       12 bytes
 15624 ;; Hardware stack levels used:    1
 15625 ;; Hardware stack levels required when called:    9
 15626 ;; This function calls:
 15627 ;;		_CRC_8BitDataWrite
 15628 ;;		_CRC_CalculatedResultGet
 15629 ;; This function is called by:
 15630 ;;		_bootLoadApplication
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text87
 15635  0071C8                     __ptext87:
 15636                           	opt callstack 0
 15637  0071C8                     _crc16_app:
 15638                           	opt callstack 20
 15639                           
 15640                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 15641                           
 15642                           ;incstack = 0
 15643  0071C8  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 15644  0071CE  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 15645                           
 15646                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 15647  0071D4  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 15648                           
 15649                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 15650  0071DA  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 15651                           
 15652                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 15653  0071E0  0139               	movlb	57	; () banked
 15654  0071E2  8F68               	bsf	104,7,b	;volatile
 15655                           
 15656                           ; BSR set to: 57
 15657                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 15658  0071E4  8D68               	bsf	104,6,b	;volatile
 15659                           
 15660                           ; BSR set to: 57
 15661                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 15662  0071E6  0E00               	movlw	0
 15663  0071E8  6E1E               	movwf	(crc16_app@i+1)^0,c
 15664  0071EA  0E00               	movlw	0
 15665  0071EC  6E1D               	movwf	crc16_app@i^0,c
 15666  0071EE  D00F               	goto	l12872
 15667  0071F0                     l633:
 15668                           
 15669                           ; BSR set to: 57
 15670  0071F0  B168               	btfsc	104,0,b	;volatile
 15671  0071F2  D7FE               	goto	l633
 15672                           
 15673                           ; BSR set to: 57
 15674                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 15675  0071F4  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 15676  0071FA  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 15677  007200  50DF               	movf	indf2,w,c
 15678  007202  EC71  F046         	call	_CRC_8BitDataWrite
 15679                           
 15680                           ; BSR set to: 57
 15681                           ;../app/app_src/crc.c: 18:         ptr++;
 15682  007206  4A1B               	infsnz	crc16_app@ptr^0,f,c
 15683  007208  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 15684                           
 15685                           ; BSR set to: 57
 15686                           ;../app/app_src/crc.c: 19:     }
 15687  00720A  4A1D               	infsnz	crc16_app@i^0,f,c
 15688  00720C  2A1E               	incf	(crc16_app@i+1)^0,f,c
 15689  00720E                     l12872:
 15690                           
 15691                           ; BSR set to: 57
 15692  00720E  5015               	movf	crc16_app@len^0,w,c
 15693  007210  5C1D               	subwf	crc16_app@i^0,w,c
 15694  007212  5016               	movf	(crc16_app@len+1)^0,w,c
 15695  007214  581E               	subwfb	(crc16_app@i+1)^0,w,c
 15696  007216  A0D8               	btfss	status,0,c
 15697  007218  D7EB               	goto	l633
 15698  00721A                     u12080:
 15699                           
 15700                           ; BSR set to: 57
 15701  00721A  BB68               	btfsc	104,5,b	;volatile
 15702  00721C  D7FE               	goto	u12080
 15703                           
 15704                           ; BSR set to: 57
 15705                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 15706  00721E  0E00               	movlw	0
 15707  007220  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 15708  007222  0E00               	movlw	0
 15709  007224  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 15710  007226  0E00               	movlw	0
 15711  007228  ECA1  F02E         	call	_CRC_CalculatedResultGet
 15712  00722C  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 15713  007232  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 15714                           
 15715                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 15716  007238  0139               	movlb	57	; () banked
 15717  00723A  9D68               	bcf	104,6,b	;volatile
 15718                           
 15719                           ; BSR set to: 57
 15720                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 15721  00723C  9F68               	bcf	104,7,b	;volatile
 15722                           
 15723                           ; BSR set to: 57
 15724                           ;../app/app_src/crc.c: 25:     return(result);
 15725  00723E  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 15726  007244  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 15727                           
 15728                           ; BSR set to: 57
 15729  00724A  0012               	return		;funcret
 15730  00724C                     __end_of_crc16_app:
 15731                           	opt callstack 0
 15732                           
 15733 ;; *************** function _CRC_CalculatedResultGet *****************
 15734 ;; Defined at:
 15735 ;;		line 159 in file "mcc_generated_files/crc.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;  reverse         1    wreg     _Bool 
 15738 ;;  xorValue        2    8[COMRAM] unsigned short 
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;  reverse         1   15[COMRAM] _Bool 
 15741 ;;  result          2   16[COMRAM] unsigned short 
 15742 ;;  mask            2   13[COMRAM] unsigned short 
 15743 ;; Return value:  Size  Location     Type
 15744 ;;                  2    8[COMRAM] unsigned short 
 15745 ;; Registers used:
 15746 ;;		wreg, status,2, status,0, cstack
 15747 ;; Tracked objects:
 15748 ;;		On entry : 3F/39
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15753 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15755 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15756 ;;Total ram usage:       10 bytes
 15757 ;; Hardware stack levels used:    1
 15758 ;; Hardware stack levels required when called:    8
 15759 ;; This function calls:
 15760 ;;		_CRC_ReverseValue
 15761 ;; This function is called by:
 15762 ;;		_crc16_app
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text88
 15767  005D42                     __ptext88:
 15768                           	opt callstack 0
 15769  005D42                     _CRC_CalculatedResultGet:
 15770                           	opt callstack 20
 15771                           
 15772                           ; BSR set to: 57
 15773                           ;incstack = 0
 15774                           ;CRC_CalculatedResultGet@reverse stored from wreg
 15775  005D42  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 15776                           
 15777                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 15778  005D44  0139               	movlb	57	; () banked
 15779  005D46  9D68               	bcf	104,6,b	;volatile
 15780                           
 15781                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 15782  005D48  9DA0               	bcf	160,6,b	;volatile
 15783                           
 15784                           ; BSR set to: 57
 15785                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 15786  005D4A  5169               	movf	105,w,b	;volatile
 15787  005D4C  0B0F               	andlw	15
 15788  005D4E  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 15789  005D50  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 15790  005D52  5169               	movf	105,w,b	;volatile
 15791  005D54  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15792  005D56  0B0F               	andlw	-241
 15793  005D58  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15794  005D5A  6F69               	movwf	105,b	;volatile
 15795                           
 15796                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 15797  005D5C  0E08               	movlw	8
 15798  005D5E  0100               	movlb	0	; () banked
 15799  005D60  65ED               	cpfsgt	(_crcObj+1)& (0+255),b
 15800  005D62  D005               	goto	l12234
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 15804  005D64  0E00               	movlw	0
 15805  005D66  0139               	movlb	57	; () banked
 15806  005D68  6F61               	movwf	97,b	;volatile
 15807                           
 15808                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 15809  005D6A  0E00               	movlw	0
 15810  005D6C  D002               	goto	L10
 15811  005D6E                     l12234:
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 15815  005D6E  0E00               	movlw	0
 15816  005D70  0139               	movlb	57	; () banked
 15817  005D72                     L10:
 15818  005D72  6F60               	movwf	96,b	;volatile
 15819                           
 15820                           ; BSR set to: 57
 15821                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 15822  005D74  8D68               	bsf	104,6,b	;volatile
 15823  005D76                     l1631:
 15824                           
 15825                           ; BSR set to: 57
 15826  005D76  ADA0               	btfss	160,6,b	;volatile
 15827  005D78  D7FE               	goto	l1631
 15828                           
 15829                           ; BSR set to: 57
 15830                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 15831  005D7A  9DA0               	bcf	160,6,b	;volatile
 15832                           
 15833                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 15834  005D7C  9D68               	bcf	104,6,b	;volatile
 15835                           
 15836                           ; BSR set to: 57
 15837                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 15838  005D7E  0060  F3B0  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 15839  005D84  0EFF               	movlw	255
 15840  005D86  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 15841  005D88  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 15842  005D8A  5169               	movf	105,w,b	;volatile
 15843  005D8C  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15844  005D8E  0B0F               	andlw	-241
 15845  005D90  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15846  005D92  6F69               	movwf	105,b	;volatile
 15847                           
 15848                           ; BSR set to: 57
 15849                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 15850  005D94  5163               	movf	99,w,b	;volatile
 15851  005D96  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 15852  005D98  5162               	movf	98,w,b	;volatile
 15853  005D9A  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 15854  005D9C  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 15855                           
 15856                           ; BSR set to: 57
 15857                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 15858  005DA2  0E10               	movlw	16
 15859  005DA4  0100               	movlb	0	; () banked
 15860  005DA6  61ED               	cpfslt	(_crcObj+1)& (0+255),b
 15861  005DA8  D018               	goto	l12246
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 15865  005DAA  0060  F3B4  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 15866  005DB0  0E01               	movlw	1
 15867  005DB2  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 15868  005DB4  0E00               	movlw	0
 15869  005DB6  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 15870  005DB8  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 15871  005DBA  D003               	goto	u11304
 15872  005DBC                     u11305:
 15873  005DBC  90D8               	bcf	status,0,c
 15874  005DBE  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 15875  005DC0  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 15876  005DC2                     u11304:
 15877  005DC2  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 15878  005DC4  D7FB               	goto	u11305
 15879  005DC6  0EFF               	movlw	255
 15880  005DC8  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 15881  005DCA  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 15882  005DCC  0EFF               	movlw	255
 15883  005DCE  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 15884  005DD0  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 15885                           
 15886                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 15887  005DD2  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 15888  005DD4  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 15889  005DD6  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 15890  005DD8  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 15891  005DDA                     l12246:
 15892                           
 15893                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 15894  005DDA  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 15895  005DDC  B4D8               	btfsc	status,2,c
 15896  005DDE  D00E               	goto	l12250
 15897                           
 15898                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 15899  005DE0  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 15900  005DE6  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 15901  005DEC  EC6D  F03D         	call	_CRC_ReverseValue	;wreg free
 15902  005DF0  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 15903  005DF6  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 15904  005DFC                     l12250:
 15905                           
 15906                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 15907  005DFC  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 15908  005DFE  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 15909  005E00  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 15910  005E02  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 15911                           
 15912                           ;mcc_generated_files/crc.c: 198:     return result;
 15913  005E04  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 15914  005E0A  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 15915  005E10  0012               	return		;funcret
 15916  005E12                     __end_of_CRC_CalculatedResultGet:
 15917                           	opt callstack 0
 15918                           
 15919 ;; *************** function _CRC_ReverseValue *****************
 15920 ;; Defined at:
 15921 ;;		line 138 in file "mcc_generated_files/crc.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;  crc             2    1[COMRAM] unsigned short 
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;  mask            2    6[COMRAM] unsigned short 
 15926 ;;  reverse         2    4[COMRAM] unsigned short 
 15927 ;; Return value:  Size  Location     Type
 15928 ;;                  2    1[COMRAM] unsigned short 
 15929 ;; Registers used:
 15930 ;;		wreg, status,2, status,0
 15931 ;; Tracked objects:
 15932 ;;		On entry : 0/0
 15933 ;;		On exit  : 0/0
 15934 ;;		Unchanged: 0/0
 15935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15937 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15939 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15940 ;;Total ram usage:        7 bytes
 15941 ;; Hardware stack levels used:    1
 15942 ;; Hardware stack levels required when called:    7
 15943 ;; This function calls:
 15944 ;;		Nothing
 15945 ;; This function is called by:
 15946 ;;		_CRC_CalculatedResultGet
 15947 ;; This function uses a non-reentrant model
 15948 ;;
 15949                           
 15950                           	psect	text89
 15951  007ADA                     __ptext89:
 15952                           	opt callstack 0
 15953  007ADA                     _CRC_ReverseValue:
 15954                           	opt callstack 20
 15955                           
 15956                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 15957                           
 15958                           ;incstack = 0
 15959  007ADA  0E00               	movlw	0
 15960  007ADC  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 15961  007ADE  0E01               	movlw	1
 15962  007AE0  6E07               	movwf	CRC_ReverseValue@mask^0,c
 15963                           
 15964                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 15965  007AE2  0060  F3B4  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 15966  007AE8  0EFF               	movlw	255
 15967  007AEA  2604               	addwf	??_CRC_ReverseValue^0,f,c
 15968  007AEC  2804               	incf	??_CRC_ReverseValue^0,w,c
 15969  007AEE  D003               	goto	u10270
 15970  007AF0                     u10275:
 15971  007AF0  90D8               	bcf	status,0,c
 15972  007AF2  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 15973  007AF4  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 15974  007AF6                     u10270:
 15975  007AF6  2EE8               	decfsz	wreg,f,c
 15976  007AF8  D7FB               	goto	u10275
 15977                           
 15978                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 15979  007AFA  0E00               	movlw	0
 15980  007AFC  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 15981  007AFE  0E00               	movlw	0
 15982  007B00  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 15983                           
 15984                           ;mcc_generated_files/crc.c: 147:     while(crc)
 15985  007B02  D00C               	goto	l1622
 15986  007B04                     l1623:
 15987                           
 15988                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 15989  007B04  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 15990  007B06  D004               	goto	l11474
 15991                           
 15992                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 15993  007B08  5007               	movf	CRC_ReverseValue@mask^0,w,c
 15994  007B0A  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 15995  007B0C  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 15996  007B0E  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 15997  007B10                     l11474:
 15998                           
 15999                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 16000  007B10  90D8               	bcf	status,0,c
 16001  007B12  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 16002  007B14  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 16003                           
 16004                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 16005  007B16  90D8               	bcf	status,0,c
 16006  007B18  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 16007  007B1A  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 16008  007B1C                     l1622:
 16009                           
 16010                           ;mcc_generated_files/crc.c: 147:     while(crc)
 16011  007B1C  5002               	movf	CRC_ReverseValue@crc^0,w,c
 16012  007B1E  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 16013  007B20  A4D8               	btfss	status,2,c
 16014  007B22  D7F0               	goto	l1623
 16015                           
 16016                           ;mcc_generated_files/crc.c: 156:     return reverse;
 16017  007B24  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 16018  007B2A  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 16019  007B30  0012               	return		;funcret
 16020  007B32                     __end_of_CRC_ReverseValue:
 16021                           	opt callstack 0
 16022                           
 16023 ;; *************** function _CRC_8BitDataWrite *****************
 16024 ;; Defined at:
 16025 ;;		line 125 in file "mcc_generated_files/crc.c"
 16026 ;; Parameters:    Size  Location     Type
 16027 ;;  data            1    wreg     unsigned char 
 16028 ;; Auto vars:     Size  Location     Type
 16029 ;;  data            1    1[COMRAM] unsigned char 
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  1    wreg      _Bool 
 16032 ;; Registers used:
 16033 ;;		wreg
 16034 ;; Tracked objects:
 16035 ;;		On entry : 3F/39
 16036 ;;		On exit  : 3F/39
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;Total ram usage:        1 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; Hardware stack levels required when called:    7
 16046 ;; This function calls:
 16047 ;;		Nothing
 16048 ;; This function is called by:
 16049 ;;		_crc16_app
 16050 ;; This function uses a non-reentrant model
 16051 ;;
 16052                           
 16053                           	psect	text90
 16054  008CE2                     __ptext90:
 16055                           	opt callstack 0
 16056  008CE2                     _CRC_8BitDataWrite:
 16057                           	opt callstack 21
 16058                           
 16059                           ;incstack = 0
 16060                           ;CRC_8BitDataWrite@data stored from wreg
 16061  008CE2  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 16062                           
 16063                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 16064  008CE4  0139               	movlb	57	; () banked
 16065  008CE6  B168               	btfsc	104,0,b	;volatile
 16066  008CE8  0012               	return	
 16067                           
 16068                           ; BSR set to: 57
 16069                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 16070  008CEA  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 16071                           
 16072                           ; BSR set to: 57
 16073  008CF0  0012               	return		;funcret
 16074  008CF2                     __end_of_CRC_8BitDataWrite:
 16075                           	opt callstack 0
 16076                           
 16077 ;; *************** function _PHY_SetRxState *****************
 16078 ;; Defined at:
 16079 ;;		line 814 in file "../phy/sx1216/phy_src/phy.c"
 16080 ;; Parameters:    Size  Location     Type
 16081 ;;  rx              1    wreg     _Bool 
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  rx              1    0[COMRAM] _Bool 
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  1    wreg      void 
 16086 ;; Registers used:
 16087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16088 ;; Tracked objects:
 16089 ;;		On entry : 3F/3D
 16090 ;;		On exit  : 3F/3D
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16097 ;;Total ram usage:        0 bytes
 16098 ;; Hardware stack levels used:    1
 16099 ;; Hardware stack levels required when called:   13
 16100 ;; This function calls:
 16101 ;;		_receive
 16102 ;; This function is called by:
 16103 ;;		_bootLoadApplication
 16104 ;; This function uses a non-reentrant model
 16105 ;;
 16106                           
 16107                           	psect	text91
 16108  008DD0                     __ptext91:
 16109                           	opt callstack 0
 16110  008DD0                     _PHY_SetRxState:
 16111                           	opt callstack 16
 16112                           
 16113                           ; BSR set to: 61
 16114                           ;../phy/sx1216/phy_src/phy.c: 815:     receive(0);
 16115                           
 16116                           ; BSR set to: 57
 16117                           ;incstack = 0
 16118  008DD0  0E00               	movlw	0
 16119  008DD2  EC3E  F041         	call	_receive
 16120                           
 16121                           ; BSR set to: 61
 16122  008DD6  0012               	return		;funcret
 16123  008DD8                     __end_of_PHY_SetRxState:
 16124                           	opt callstack 0
 16125                           
 16126 ;; *************** function _PHY_SetChannel *****************
 16127 ;; Defined at:
 16128 ;;		line 818 in file "../phy/sx1216/phy_src/phy.c"
 16129 ;; Parameters:    Size  Location     Type
 16130 ;;  channel         1    wreg     unsigned char 
 16131 ;; Auto vars:     Size  Location     Type
 16132 ;;  channel         1   46[COMRAM] unsigned char 
 16133 ;; Return value:  Size  Location     Type
 16134 ;;                  1    wreg      void 
 16135 ;; Registers used:
 16136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16137 ;; Tracked objects:
 16138 ;;		On entry : 3F/0
 16139 ;;		On exit  : 3F/3D
 16140 ;;		Unchanged: 0/0
 16141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16146 ;;Total ram usage:        1 bytes
 16147 ;; Hardware stack levels used:    1
 16148 ;; Hardware stack levels required when called:   12
 16149 ;; This function calls:
 16150 ;;		_setFrequency
 16151 ;; This function is called by:
 16152 ;;		_bootLoadApplication
 16153 ;; This function uses a non-reentrant model
 16154 ;;
 16155                           
 16156                           	psect	text92
 16157  00823E                     __ptext92:
 16158                           	opt callstack 0
 16159  00823E                     _PHY_SetChannel:
 16160                           	opt callstack 17
 16161                           
 16162                           ; BSR set to: 61
 16163                           ;incstack = 0
 16164                           ;PHY_SetChannel@channel stored from wreg
 16165  00823E  6E2F               	movwf	PHY_SetChannel@channel^0,c
 16166                           
 16167                           ;../phy/sx1216/phy_src/phy.c: 819:     setFrequency(fhssList[channel]);
 16168  008240  502F               	movf	PHY_SetChannel@channel^0,w,c
 16169  008242  0D04               	mullw	4
 16170  008244  0EAB               	movlw	low _fhssList
 16171  008246  24F3               	addwf	243,w,c
 16172  008248  6EF6               	movwf	tblptrl,c
 16173  00824A  0EFC               	movlw	high _fhssList
 16174  00824C  20F4               	addwfc	244,w,c
 16175  00824E  6EF7               	movwf	tblptrh,c
 16176  008250                     	if	1	;There are 3 active tblptr bytes
 16177  008250  6AF8               	clrf	tblptru,c
 16178  008252  0E00               	movlw	low (__mediumconst shr (0+16))
 16179  008254  22F8               	addwfc	tblptru,f,c
 16180  008256                     	endif
 16181  008256  0009               	tblrd		*+
 16182  008258  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 16183  00825E  0009               	tblrd		*+
 16184  008260  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 16185  008266  0009               	tblrd		*+
 16186  008268  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 16187  00826E  000A               	tblrd		*-
 16188  008270  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 16189  008276  EC77  F024         	call	_setFrequency	;wreg free
 16190                           
 16191                           ; BSR set to: 61
 16192  00827A  0012               	return		;funcret
 16193  00827C                     __end_of_PHY_SetChannel:
 16194                           	opt callstack 0
 16195                           
 16196 ;; *************** function _NWK_SetPanId *****************
 16197 ;; Defined at:
 16198 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;  panId           2    3[COMRAM] unsigned short 
 16201 ;; Auto vars:     Size  Location     Type
 16202 ;;		None
 16203 ;; Return value:  Size  Location     Type
 16204 ;;                  1    wreg      void 
 16205 ;; Registers used:
 16206 ;;		cstack
 16207 ;; Tracked objects:
 16208 ;;		On entry : 3F/0
 16209 ;;		On exit  : 3F/0
 16210 ;;		Unchanged: 3F/0
 16211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16216 ;;Total ram usage:        2 bytes
 16217 ;; Hardware stack levels used:    1
 16218 ;; Hardware stack levels required when called:    8
 16219 ;; This function calls:
 16220 ;;		_PHY_SetPanId
 16221 ;; This function is called by:
 16222 ;;		_bootLoadApplication
 16223 ;; This function uses a non-reentrant model
 16224 ;;
 16225                           
 16226                           	psect	text93
 16227  008A80                     __ptext93:
 16228                           	opt callstack 0
 16229  008A80                     _NWK_SetPanId:
 16230                           	opt callstack 21
 16231                           
 16232                           ; BSR set to: 0
 16233                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 16234                           
 16235                           ; BSR set to: 61
 16236                           ;incstack = 0
 16237  008A80  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 16238  008A86  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 16239                           
 16240                           ; BSR set to: 0
 16241                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 16242  008A8C  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 16243  008A92  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 16244  008A98  EC04  F047         	call	_PHY_SetPanId	;wreg free
 16245                           
 16246                           ; BSR set to: 0
 16247  008A9C  0012               	return		;funcret
 16248  008A9E                     __end_of_NWK_SetPanId:
 16249                           	opt callstack 0
 16250                           
 16251 ;; *************** function _PHY_SetPanId *****************
 16252 ;; Defined at:
 16253 ;;		line 822 in file "../phy/sx1216/phy_src/phy.c"
 16254 ;; Parameters:    Size  Location     Type
 16255 ;;  panId           2    1[COMRAM] unsigned short 
 16256 ;; Auto vars:     Size  Location     Type
 16257 ;;		None
 16258 ;; Return value:  Size  Location     Type
 16259 ;;                  1    wreg      void 
 16260 ;; Registers used:
 16261 ;;		None
 16262 ;; Tracked objects:
 16263 ;;		On entry : 3F/0
 16264 ;;		On exit  : 3F/0
 16265 ;;		Unchanged: 3F/0
 16266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16271 ;;Total ram usage:        2 bytes
 16272 ;; Hardware stack levels used:    1
 16273 ;; Hardware stack levels required when called:    7
 16274 ;; This function calls:
 16275 ;;		Nothing
 16276 ;; This function is called by:
 16277 ;;		_NWK_SetPanId
 16278 ;; This function uses a non-reentrant model
 16279 ;;
 16280                           
 16281                           	psect	text94
 16282  008E08                     __ptext94:
 16283                           	opt callstack 0
 16284  008E08                     _PHY_SetPanId:
 16285                           	opt callstack 21
 16286                           
 16287                           ; BSR set to: 0
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;incstack = 0
 16291  008E08  0012               	return		;funcret
 16292  008E0A                     __end_of_PHY_SetPanId:
 16293                           	opt callstack 0
 16294                           
 16295 ;; *************** function _NWK_SetAddr *****************
 16296 ;; Defined at:
 16297 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 16298 ;; Parameters:    Size  Location     Type
 16299 ;;  addr            2    3[COMRAM] unsigned short 
 16300 ;; Auto vars:     Size  Location     Type
 16301 ;;		None
 16302 ;; Return value:  Size  Location     Type
 16303 ;;                  1    wreg      void 
 16304 ;; Registers used:
 16305 ;;		cstack
 16306 ;; Tracked objects:
 16307 ;;		On entry : 3F/0
 16308 ;;		On exit  : 3F/0
 16309 ;;		Unchanged: 3F/0
 16310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;Total ram usage:        2 bytes
 16316 ;; Hardware stack levels used:    1
 16317 ;; Hardware stack levels required when called:    8
 16318 ;; This function calls:
 16319 ;;		_PHY_SetShortAddr
 16320 ;; This function is called by:
 16321 ;;		_bootLoadApplication
 16322 ;; This function uses a non-reentrant model
 16323 ;;
 16324                           
 16325                           	psect	text95
 16326  008A9E                     __ptext95:
 16327                           	opt callstack 0
 16328  008A9E                     _NWK_SetAddr:
 16329                           	opt callstack 21
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 16333                           
 16334                           ; BSR set to: 0
 16335                           ;incstack = 0
 16336  008A9E  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 16337  008AA4  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 16341  008AAA  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 16342  008AB0  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 16343  008AB6  EC05  F047         	call	_PHY_SetShortAddr	;wreg free
 16344                           
 16345                           ; BSR set to: 0
 16346  008ABA  0012               	return		;funcret
 16347  008ABC                     __end_of_NWK_SetAddr:
 16348                           	opt callstack 0
 16349                           
 16350 ;; *************** function _PHY_SetShortAddr *****************
 16351 ;; Defined at:
 16352 ;;		line 826 in file "../phy/sx1216/phy_src/phy.c"
 16353 ;; Parameters:    Size  Location     Type
 16354 ;;  addr            2    1[COMRAM] unsigned short 
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;                  1    wreg      void 
 16359 ;; Registers used:
 16360 ;;		None
 16361 ;; Tracked objects:
 16362 ;;		On entry : 3F/0
 16363 ;;		On exit  : 3F/0
 16364 ;;		Unchanged: 3F/0
 16365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16370 ;;Total ram usage:        2 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; Hardware stack levels required when called:    7
 16373 ;; This function calls:
 16374 ;;		Nothing
 16375 ;; This function is called by:
 16376 ;;		_NWK_SetAddr
 16377 ;; This function uses a non-reentrant model
 16378 ;;
 16379                           
 16380                           	psect	text96
 16381  008E0A                     __ptext96:
 16382                           	opt callstack 0
 16383  008E0A                     _PHY_SetShortAddr:
 16384                           	opt callstack 21
 16385                           
 16386                           ; BSR set to: 0
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;incstack = 0
 16390  008E0A  0012               	return		;funcret
 16391  008E0C                     __end_of_PHY_SetShortAddr:
 16392                           	opt callstack 0
 16393                           
 16394 ;; *************** function _DATAEE_WriteByte_Platform *****************
 16395 ;; Defined at:
 16396 ;;		line 40 in file "../app/app_src/EEPROM.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;  addr            2    5[COMRAM] unsigned short 
 16399 ;;  data            1    7[COMRAM] unsigned char 
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;		None
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1    wreg      void 
 16404 ;; Registers used:
 16405 ;;		wreg, status,2, status,0, cstack
 16406 ;; Tracked objects:
 16407 ;;		On entry : 0/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16415 ;;Total ram usage:        3 bytes
 16416 ;; Hardware stack levels used:    1
 16417 ;; Hardware stack levels required when called:    8
 16418 ;; This function calls:
 16419 ;;		_DATAEE_WriteByte
 16420 ;; This function is called by:
 16421 ;;		_cmdSetNaddr
 16422 ;;		_cmdSetAES
 16423 ;;		_cmdSetRFCH
 16424 ;;		_cmdSetTX
 16425 ;;		_cmdSetCADRSSI
 16426 ;;		_cmdBootLoad
 16427 ;;		_cmdSetSF
 16428 ;;		_bootLoadApplication
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           	psect	text97
 16433  007FB8                     __ptext97:
 16434                           	opt callstack 0
 16435  007FB8                     _DATAEE_WriteByte_Platform:
 16436                           	opt callstack 19
 16437                           
 16438                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 16439                           
 16440                           ; BSR set to: 0
 16441                           ;incstack = 0
 16442  007FB8  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 16443  007FBE  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 16444  007FC4  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16445  007FCA  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16446                           
 16447                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 16448  007FCE  0E00               	movlw	0
 16449  007FD0  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 16450  007FD2  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16451  007FD4  0E01               	movlw	1
 16452  007FD6  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 16453  007FD8  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16454  007FDA  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16455  007FE0  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16456                           
 16457                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 16458  007FE4  0E00               	movlw	0
 16459  007FE6  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 16460  007FE8  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16461  007FEA  0E02               	movlw	2
 16462  007FEC  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 16463  007FEE  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16464  007FF0  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16465  007FF6  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16466  007FFA  0012               	return		;funcret
 16467  007FFC                     __end_of_DATAEE_WriteByte_Platform:
 16468                           	opt callstack 0
 16469                           
 16470 ;; *************** function _DATAEE_ReadByte_Platform *****************
 16471 ;; Defined at:
 16472 ;;		line 6 in file "../app/app_src/EEPROM.c"
 16473 ;; Parameters:    Size  Location     Type
 16474 ;;  addr            2    5[COMRAM] unsigned short 
 16475 ;; Auto vars:     Size  Location     Type
 16476 ;;  copy1           1    9[COMRAM] unsigned char 
 16477 ;;  copy2           1    8[COMRAM] unsigned char 
 16478 ;;  copy3           1    7[COMRAM] unsigned char 
 16479 ;; Return value:  Size  Location     Type
 16480 ;;                  1    wreg      unsigned char 
 16481 ;; Registers used:
 16482 ;;		wreg, status,2, status,0, cstack
 16483 ;; Tracked objects:
 16484 ;;		On entry : 0/39
 16485 ;;		On exit  : 0/0
 16486 ;;		Unchanged: 0/0
 16487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16489 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16491 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;Total ram usage:        5 bytes
 16493 ;; Hardware stack levels used:    1
 16494 ;; Hardware stack levels required when called:    8
 16495 ;; This function calls:
 16496 ;;		_DATAEE_ReadByte
 16497 ;;		_DATAEE_WriteByte
 16498 ;; This function is called by:
 16499 ;;		_bootLoadApplication
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text98
 16504  00539C                     __ptext98:
 16505                           	opt callstack 0
 16506  00539C                     _DATAEE_ReadByte_Platform:
 16507                           	opt callstack 21
 16508                           
 16509                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 16510                           
 16511                           ;incstack = 0
 16512  00539C  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 16513  0053A2  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 16514  0053A8  EC5E  F045         	call	_DATAEE_ReadByte	;wreg free
 16515  0053AC  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 16516                           
 16517                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 16518  0053AE  0E00               	movlw	0
 16519  0053B0  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16520  0053B2  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 16521  0053B4  0E01               	movlw	1
 16522  0053B6  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16523  0053B8  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 16524  0053BA  EC5E  F045         	call	_DATAEE_ReadByte	;wreg free
 16525  0053BE  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 16526                           
 16527                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 16528  0053C0  0E00               	movlw	0
 16529  0053C2  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16530  0053C4  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 16531  0053C6  0E02               	movlw	2
 16532  0053C8  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16533  0053CA  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 16534  0053CC  EC5E  F045         	call	_DATAEE_ReadByte	;wreg free
 16535  0053D0  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 16536                           
 16537                           ; BSR set to: 57
 16538                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 16539  0053D2  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16540  0053D4  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16541  0053D6  A4D8               	btfss	status,2,c
 16542  0053D8  D006               	goto	l16382
 16543                           
 16544                           ; BSR set to: 57
 16545  0053DA  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16546  0053DC  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16547  0053DE  A4D8               	btfss	status,2,c
 16548  0053E0  D002               	goto	l16382
 16549  0053E2                     u16680:
 16550                           
 16551                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 16552  0053E2  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16553  0053E4  0012               	return	
 16554  0053E6                     l16382:
 16555                           
 16556                           ; BSR set to: 57
 16557  0053E6  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16558  0053E8  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16559  0053EA  A4D8               	btfss	status,2,c
 16560  0053EC  D010               	goto	l16394
 16561                           
 16562                           ; BSR set to: 57
 16563  0053EE  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16564  0053F0  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16565  0053F2  B4D8               	btfsc	status,2,c
 16566  0053F4  D00C               	goto	l16394
 16567                           
 16568                           ; BSR set to: 57
 16569                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 16570  0053F6  0E00               	movlw	0
 16571  0053F8  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16572  0053FA  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16573  0053FC  0E02               	movlw	2
 16574  0053FE  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16575  005400  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16576  005402  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16577  005408  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16578  00540C  D7EA               	goto	u16680
 16579  00540E                     l16394:
 16580                           
 16581                           ; BSR set to: 57
 16582  00540E  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16583  005410  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16584  005412  B4D8               	btfsc	status,2,c
 16585  005414  D011               	goto	l16406
 16586                           
 16587                           ; BSR set to: 57
 16588  005416  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16589  005418  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16590  00541A  A4D8               	btfss	status,2,c
 16591  00541C  D00D               	goto	l16406
 16592                           
 16593                           ; BSR set to: 57
 16594                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 16595  00541E  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 16596  005424  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 16597  00542A  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 16598  005430  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16599                           
 16600                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 16601  005434  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16602  005436  0012               	return	
 16603  005438                     l16406:
 16604                           
 16605                           ; BSR set to: 57
 16606  005438  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16607  00543A  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16608  00543C  A4D8               	btfss	status,2,c
 16609  00543E  D010               	goto	l16418
 16610                           
 16611                           ; BSR set to: 57
 16612  005440  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16613  005442  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16614  005444  B4D8               	btfsc	status,2,c
 16615  005446  D00C               	goto	l16418
 16616                           
 16617                           ; BSR set to: 57
 16618                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 16619  005448  0E00               	movlw	0
 16620  00544A  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16621  00544C  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16622  00544E  0E01               	movlw	1
 16623  005450  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16624  005452  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16625  005454  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16626  00545A  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16627  00545E  D7C1               	goto	u16680
 16628  005460                     l16418:
 16629                           
 16630                           ; BSR set to: 57
 16631                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 16632  005460  0E00               	movlw	0
 16633  005462  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16634  005464  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16635  005466  0E01               	movlw	1
 16636  005468  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16637  00546A  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16638  00546C  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16639  005472  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16640                           
 16641                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 16642  005476  0E00               	movlw	0
 16643  005478  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16644  00547A  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16645  00547C  0E02               	movlw	2
 16646  00547E  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16647  005480  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16648  005482  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16649  005488  EC62  F040         	call	_DATAEE_WriteByte	;wreg free
 16650  00548C  D7AA               	goto	u16680
 16651  00548E                     __end_of_DATAEE_ReadByte_Platform:
 16652                           	opt callstack 0
 16653                           
 16654 ;; *************** function _DATAEE_WriteByte *****************
 16655 ;; Defined at:
 16656 ;;		line 172 in file "mcc_generated_files/memory.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;  bAdd            2    1[COMRAM] unsigned short 
 16659 ;;  bData           1    3[COMRAM] unsigned char 
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 16662 ;; Return value:  Size  Location     Type
 16663 ;;                  1    wreg      void 
 16664 ;; Registers used:
 16665 ;;		wreg, status,2, status,0
 16666 ;; Tracked objects:
 16667 ;;		On entry : 0/0
 16668 ;;		On exit  : 0/0
 16669 ;;		Unchanged: 0/0
 16670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;Total ram usage:        4 bytes
 16676 ;; Hardware stack levels used:    1
 16677 ;; Hardware stack levels required when called:    7
 16678 ;; This function calls:
 16679 ;;		Nothing
 16680 ;; This function is called by:
 16681 ;;		_DATAEE_ReadByte_Platform
 16682 ;;		_DATAEE_WriteByte_Platform
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text99
 16687  0080C4                     __ptext99:
 16688                           	opt callstack 0
 16689  0080C4                     _DATAEE_WriteByte:
 16690                           	opt callstack 19
 16691                           
 16692                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 16693                           
 16694                           ;incstack = 0
 16695  0080C4  0E00               	movlw	0
 16696  0080C6  BED2               	btfsc	210,7,c	;volatile
 16697  0080C8  0E01               	movlw	1
 16698  0080CA  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 16699                           
 16700                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 16701  0080CC  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 16702  0080CE  0B03               	andlw	3
 16703  0080D0  0139               	movlb	57	; () banked
 16704  0080D2  6FE1               	movwf	225,b	;volatile
 16705                           
 16706                           ; BSR set to: 57
 16707                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16708  0080D4  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 16709                           
 16710                           ; BSR set to: 57
 16711                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 16712  0080DA  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 16713                           
 16714                           ; BSR set to: 57
 16715                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 16716  0080E0  0E3F               	movlw	-193
 16717  0080E2  17E5               	andwf	229,f,b	;volsfr
 16718                           
 16719                           ; BSR set to: 57
 16720                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 16721  0080E4  85E5               	bsf	229,2,b	;volsfr
 16722                           
 16723                           ; BSR set to: 57
 16724                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 16725  0080E6  9ED2               	bcf	210,7,c	;volatile
 16726                           
 16727                           ; BSR set to: 57
 16728                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 16729  0080E8  0E55               	movlw	85
 16730  0080EA  6FE6               	movwf	230,b	;volsfr
 16731                           
 16732                           ; BSR set to: 57
 16733                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 16734  0080EC  0EAA               	movlw	170
 16735  0080EE  6FE6               	movwf	230,b	;volsfr
 16736                           
 16737                           ; BSR set to: 57
 16738                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 16739  0080F0  83E5               	bsf	229,1,b	;volsfr
 16740  0080F2                     l1211:
 16741                           
 16742                           ; BSR set to: 57
 16743                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 16744  0080F2  B3E5               	btfsc	229,1,b	;volsfr
 16745  0080F4  D7FE               	goto	l1211
 16746                           
 16747                           ; BSR set to: 57
 16748                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 16749  0080F6  95E5               	bcf	229,2,b	;volsfr
 16750                           
 16751                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 16752  0080F8  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 16753  0080FA  D002               	bra	u14265
 16754  0080FC  9ED2               	bcf	210,7,c	;volatile
 16755  0080FE  D001               	bra	u14266
 16756  008100                     u14265:
 16757  008100  8ED2               	bsf	210,7,c	;volatile
 16758  008102                     u14266:
 16759  008102  0012               	return		;funcret
 16760  008104                     __end_of_DATAEE_WriteByte:
 16761                           	opt callstack 0
 16762                           
 16763 ;; *************** function _DATAEE_ReadByte *****************
 16764 ;; Defined at:
 16765 ;;		line 194 in file "mcc_generated_files/memory.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  bAdd            2    1[COMRAM] unsigned short 
 16768 ;; Auto vars:     Size  Location     Type
 16769 ;;		None
 16770 ;; Return value:  Size  Location     Type
 16771 ;;                  1    wreg      unsigned char 
 16772 ;; Registers used:
 16773 ;;		wreg, status,2, status,0
 16774 ;; Tracked objects:
 16775 ;;		On entry : 0/39
 16776 ;;		On exit  : 3F/39
 16777 ;;		Unchanged: 0/0
 16778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16783 ;;Total ram usage:        2 bytes
 16784 ;; Hardware stack levels used:    1
 16785 ;; Hardware stack levels required when called:    7
 16786 ;; This function calls:
 16787 ;;		Nothing
 16788 ;; This function is called by:
 16789 ;;		_DATAEE_ReadByte_Platform
 16790 ;; This function uses a non-reentrant model
 16791 ;;
 16792                           
 16793                           	psect	text100
 16794  008ABC                     __ptext100:
 16795                           	opt callstack 0
 16796  008ABC                     _DATAEE_ReadByte:
 16797                           	opt callstack 21
 16798                           
 16799                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 16800                           
 16801                           ;incstack = 0
 16802  008ABC  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 16803  008ABE  0B03               	andlw	3
 16804  008AC0  0139               	movlb	57	; () banked
 16805  008AC2  6FE1               	movwf	225,b	;volatile
 16806                           
 16807                           ; BSR set to: 57
 16808                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16809  008AC4  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 16810                           
 16811                           ; BSR set to: 57
 16812                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 16813  008ACA  0E3F               	movlw	-193
 16814  008ACC  17E5               	andwf	229,f,b	;volsfr
 16815                           
 16816                           ; BSR set to: 57
 16817                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 16818  008ACE  81E5               	bsf	229,0,b	;volsfr
 16819                           
 16820                           ; BSR set to: 57
 16821                           ;mcc_generated_files/memory.c: 200:     __nop();
 16822  008AD0  F000               	nop	
 16823                           
 16824                           ;mcc_generated_files/memory.c: 201:     __nop();
 16825  008AD2  F000               	nop	
 16826                           
 16827                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 16828  008AD4  0139               	movlb	57	; () banked
 16829  008AD6  51E3               	movf	227,w,b	;volatile
 16830                           
 16831                           ; BSR set to: 57
 16832  008AD8  0012               	return		;funcret
 16833  008ADA                     __end_of_DATAEE_ReadByte:
 16834                           	opt callstack 0
 16835                           
 16836 ;; *************** function _SYS_TaskHandler *****************
 16837 ;; Defined at:
 16838 ;;		line 67 in file "../sys/sys_src/sys.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;		None
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;		None
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      void 
 16845 ;; Registers used:
 16846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/2
 16849 ;;		On exit  : 3F/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16856 ;;Total ram usage:        0 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:   16
 16859 ;; This function calls:
 16860 ;;		_NWK_TaskHandler
 16861 ;;		_PHY_TaskHandler
 16862 ;;		_SYS_TimerTaskHandler
 16863 ;; This function is called by:
 16864 ;;		_main
 16865 ;; This function uses a non-reentrant model
 16866 ;;
 16867                           
 16868                           	psect	text101
 16869  008D10                     __ptext101:
 16870                           	opt callstack 0
 16871  008D10                     _SYS_TaskHandler:
 16872                           	opt callstack 14
 16873                           
 16874                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 16875                           
 16876                           ; BSR set to: 57
 16877                           ;incstack = 0
 16878  008D10  ECF6  F046         	call	_PHY_TaskHandler	;wreg free
 16879                           
 16880                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 16881  008D14  EC8F  F046         	call	_NWK_TaskHandler	;wreg free
 16882                           
 16883                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 16884  008D18  EC2D  F026         	call	_SYS_TimerTaskHandler	;wreg free
 16885                           
 16886                           ; BSR set to: 0
 16887  008D1C  0012               	return		;funcret
 16888  008D1E                     __end_of_SYS_TaskHandler:
 16889                           	opt callstack 0
 16890                           
 16891 ;; *************** function _SYS_TimerTaskHandler *****************
 16892 ;; Defined at:
 16893 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 16894 ;; Parameters:    Size  Location     Type
 16895 ;;		None
 16896 ;; Auto vars:     Size  Location     Type
 16897 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 16898 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16899 ;;  elapsed         4   29[COMRAM] unsigned long 
 16900 ;;  cnt             1   28[COMRAM] unsigned char 
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  1    wreg      void 
 16903 ;; Registers used:
 16904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16905 ;; Tracked objects:
 16906 ;;		On entry : 0/0
 16907 ;;		On exit  : 3F/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16913 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16914 ;;Total ram usage:       11 bytes
 16915 ;; Hardware stack levels used:    1
 16916 ;; Hardware stack levels required when called:   10
 16917 ;; This function calls:
 16918 ;;		_nwkRxDuplicateRejectionTimerHandler
 16919 ;;		_nwkTxAckWaitTimerHandler
 16920 ;;		_nwkTxDelayTimerHandler
 16921 ;;		_placeTimer
 16922 ;; This function is called by:
 16923 ;;		_SYS_TaskHandler
 16924 ;; This function uses a non-reentrant model
 16925 ;;
 16926                           
 16927                           	psect	text102
 16928  004C5A                     __ptext102:
 16929                           	opt callstack 0
 16930  004C5A                     _SYS_TimerTaskHandler:
 16931                           	opt callstack 19
 16932                           
 16933                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;incstack = 0
 16937  004C5A  0100               	movlb	0	; () banked
 16938  004C5C  51C1               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 16939  004C5E  11C2               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 16940  004C60  B4D8               	btfsc	status,2,c
 16941  004C62  0012               	return	
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 16945                           
 16946                           ;../sys/sys_src/sysTimer.c: 119:     }
 16947  004C64  0139               	movlb	57	; () banked
 16948  004C66  9F93               	bcf	147,7,b	;volatile
 16949                           
 16950                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 16951  004C68  0060  F304  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 16952                           
 16953                           ; BSR set to: 57
 16954                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 16955  004C6E  0E00               	movlw	0
 16956  004C70  0100               	movlb	0	; () banked
 16957  004C72  6FC2               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 16958  004C74  0E00               	movlw	0
 16959  004C76  6FC1               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 16963  004C78  0139               	movlb	57	; () banked
 16964  004C7A  8F93               	bsf	147,7,b	;volatile
 16965                           
 16966                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 16967  004C7C  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 16968  004C7E  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 16969  004C80  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 16970  004C82  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 16971  004C84  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 16972                           
 16973                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 16974  004C86  D04E               	goto	u12269
 16975  004C88                     l13088:
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 16979  004C88  0060  F2EC  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 16980  004C8E  0060  F2F0  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 16984  004C94  EE20 F002          	lfsr	2,2
 16985  004C98  51BB               	movf	_timers& (0+255),w,b
 16986  004C9A  26D9               	addwf	fsr2l,f,c
 16987  004C9C  51BC               	movf	(_timers+1)& (0+255),w,b
 16988  004C9E  22DA               	addwfc	fsr2h,f,c
 16989  004CA0  50DE               	movf	postinc2,w,c
 16990  004CA2  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 16991  004CA4  50DE               	movf	postinc2,w,c
 16992  004CA6  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 16993  004CA8  50DE               	movf	postinc2,w,c
 16994  004CAA  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 16995  004CAC  50DD               	movf	postdec2,w,c
 16996  004CAE  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 16997                           
 16998                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 16999  004CB0  0060  F2EF  FFD9   	movff	_timers,fsr2l
 17000  004CB6  0060  F2F3  FFDA   	movff	_timers+1,fsr2h
 17001  004CBC  006F FF78  F0BB    	movff	postinc2,_timers
 17002  004CC2  006F FF74  F0BC    	movff	postdec2,_timers+1
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 17006  004CC8  EE20 F00A          	lfsr	2,10
 17007  004CCC  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 17008  004CCE  26D9               	addwf	fsr2l,f,c
 17009  004CD0  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 17010  004CD2  22DA               	addwfc	fsr2h,f,c
 17011  004CD4  04DE               	decf	postinc2,w,c
 17012  004CD6  A4D8               	btfss	status,2,c
 17013  004CD8  D008               	goto	l13096
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 17017  004CDA  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 17018  004CE0  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 17019  004CE6  EC26  F01C         	call	_placeTimer	;wreg free
 17020  004CEA                     l13096:
 17021                           
 17022                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 17023  004CEA  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 17024  004CF0  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 17025  004CF6  EE20 F00B          	lfsr	2,11
 17026  004CFA  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 17027  004CFC  26D9               	addwf	fsr2l,f,c
 17028  004CFE  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 17029  004D00  22DA               	addwfc	fsr2h,f,c
 17030  004D02  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 17031  004D08  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 17032  004D0E  D801               	call	u12268
 17033  004D10  D009               	goto	u12269
 17034  004D12                     u12268:
 17035  004D12  0005               	push	
 17036  004D14  6EFA               	movwf	pclath,c
 17037  004D16  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 17038  004D18  6EFD               	movwf	tosl,c
 17039  004D1A  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 17040  004D1C  6EFE               	movwf	tosh,c
 17041  004D1E  6AFF               	clrf	tosu,c
 17042  004D20  50FA               	movf	pclath,w,c
 17043  004D22  0012               	return		;indir
 17044  004D24                     u12269:
 17045                           
 17046                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 17047  004D24  0100               	movlb	0	; () banked
 17048  004D26  51BB               	movf	_timers& (0+255),w,b
 17049  004D28  11BC               	iorwf	(_timers+1)& (0+255),w,b
 17050  004D2A  B4D8               	btfsc	status,2,c
 17051  004D2C  D010               	goto	u12280
 17052                           
 17053                           ; BSR set to: 0
 17054  004D2E  EE20 F002          	lfsr	2,2
 17055  004D32  51BB               	movf	_timers& (0+255),w,b
 17056  004D34  26D9               	addwf	fsr2l,f,c
 17057  004D36  51BC               	movf	(_timers+1)& (0+255),w,b
 17058  004D38  22DA               	addwfc	fsr2h,f,c
 17059  004D3A  50DE               	movf	postinc2,w,c
 17060  004D3C  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 17061  004D3E  50DE               	movf	postinc2,w,c
 17062  004D40  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 17063  004D42  50DE               	movf	postinc2,w,c
 17064  004D44  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 17065  004D46  50DE               	movf	postinc2,w,c
 17066  004D48  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 17067  004D4A  B0D8               	btfsc	status,0,c
 17068  004D4C  D79D               	goto	l13088
 17069  004D4E                     u12280:
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 17073  004D4E  51BB               	movf	_timers& (0+255),w,b
 17074  004D50  11BC               	iorwf	(_timers+1)& (0+255),w,b
 17075  004D52  B4D8               	btfsc	status,2,c
 17076  004D54  0012               	return	
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 17080  004D56  EE20 F002          	lfsr	2,2
 17081  004D5A  51BB               	movf	_timers& (0+255),w,b
 17082  004D5C  26D9               	addwf	fsr2l,f,c
 17083  004D5E  51BC               	movf	(_timers+1)& (0+255),w,b
 17084  004D60  22DA               	addwfc	fsr2h,f,c
 17085  004D62  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 17086  004D64  5EDE               	subwf	postinc2,f,c
 17087  004D66  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 17088  004D68  5ADE               	subwfb	postinc2,f,c
 17089  004D6A  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 17090  004D6C  5ADE               	subwfb	postinc2,f,c
 17091  004D6E  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 17092  004D70  5ADE               	subwfb	postinc2,f,c
 17093                           
 17094                           ; BSR set to: 0
 17095  004D72  0012               	return		;funcret
 17096  004D74                     __end_of_SYS_TimerTaskHandler:
 17097                           	opt callstack 0
 17098                           
 17099 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 17100 ;; Defined at:
 17101 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 17102 ;; Parameters:    Size  Location     Type
 17103 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17104 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 17107 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17108 ;;  restart         1   21[COMRAM] _Bool 
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  1    wreg      void 
 17111 ;; Registers used:
 17112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17113 ;; Tracked objects:
 17114 ;;		On entry : 0/0
 17115 ;;		On exit  : 0/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17119 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17122 ;;Total ram usage:        7 bytes
 17123 ;; Hardware stack levels used:    1
 17124 ;; Hardware stack levels required when called:    9
 17125 ;; This function calls:
 17126 ;;		_SYS_TimerStart
 17127 ;;		_nwkFrameNext
 17128 ;;		_nwkTxConfirm
 17129 ;; This function is called by:
 17130 ;;		_nwkTxInit
 17131 ;;		_SYS_TimerTaskHandler
 17132 ;; This function uses a non-reentrant model
 17133 ;;
 17134                           
 17135                           	psect	text103
 17136  006E00                     __ptext103:
 17137                           	opt callstack 0
 17138  006E00                     _nwkTxAckWaitTimerHandler:
 17139                           	opt callstack 19
 17140                           
 17141                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;incstack = 0
 17145  006E00  0E00               	movlw	0
 17146  006E02  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 17147  006E04  0E00               	movlw	0
 17148  006E06  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 17149                           
 17150                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 17151  006E08  0E00               	movlw	0
 17152  006E0A  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 17153                           
 17154                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17155  006E0C  D023               	goto	l2344
 17156  006E0E                     l12494:
 17157                           
 17158                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 17159  006E0E  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 17160  006E14  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 17161  006E1A  0E16               	movlw	22
 17162  006E1C  18DE               	xorwf	postinc2,w,c
 17163  006E1E  A4D8               	btfss	status,2,c
 17164  006E20  D019               	goto	l2344
 17165                           
 17166                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 17167  006E22  0E01               	movlw	1
 17168  006E24  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 17169                           
 17170                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 17171  006E26  EE20 F084          	lfsr	2,132
 17172  006E2A  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 17173  006E2C  26D9               	addwf	fsr2l,f,c
 17174  006E2E  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 17175  006E30  22DA               	addwfc	fsr2h,f,c
 17176  006E32  06DE               	decf	postinc2,f,c
 17177  006E34  0E00               	movlw	0
 17178  006E36  5ADD               	subwfb	postdec2,f,c
 17179  006E38  50DE               	movf	postinc2,w,c
 17180  006E3A  10DE               	iorwf	postinc2,w,c
 17181  006E3C  A4D8               	btfss	status,2,c
 17182  006E3E  D00A               	goto	l2344
 17183                           
 17184                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 17185  006E40  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 17186  006E46  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 17187  006E4C  0E10               	movlw	16
 17188  006E4E  6E04               	movwf	nwkTxConfirm@status^0,c
 17189  006E50  EC41  F044         	call	_nwkTxConfirm	;wreg free
 17190  006E54                     l2344:
 17191                           
 17192                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17193  006E54  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 17194  006E5A  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 17195  006E60  ECD4  F037         	call	_nwkFrameNext	;wreg free
 17196  006E64  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 17197  006E6A  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 17198  006E70  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 17199  006E72  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 17200  006E74  A4D8               	btfss	status,2,c
 17201  006E76  D7CB               	goto	l12494
 17202                           
 17203                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 17204  006E78  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 17205  006E7A  B4D8               	btfsc	status,2,c
 17206  006E7C  0012               	return	
 17207                           
 17208                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 17209  006E7E  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 17210  006E84  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 17211  006E8A  ECF3  F043         	call	_SYS_TimerStart	;wreg free
 17212  006E8E  0012               	return		;funcret
 17213  006E90                     __end_of_nwkTxAckWaitTimerHandler:
 17214                           	opt callstack 0
 17215                           
 17216 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 17217 ;; Defined at:
 17218 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 17219 ;; Parameters:    Size  Location     Type
 17220 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17221 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;  i               1   20[COMRAM] unsigned char 
 17224 ;;  restart         1   19[COMRAM] _Bool 
 17225 ;; Return value:  Size  Location     Type
 17226 ;;                  1    wreg      void 
 17227 ;; Registers used:
 17228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17229 ;; Tracked objects:
 17230 ;;		On entry : 0/0
 17231 ;;		On exit  : 0/0
 17232 ;;		Unchanged: 0/0
 17233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17238 ;;Total ram usage:        4 bytes
 17239 ;; Hardware stack levels used:    1
 17240 ;; Hardware stack levels required when called:    9
 17241 ;; This function calls:
 17242 ;;		_SYS_TimerStart
 17243 ;; This function is called by:
 17244 ;;		_nwkRxInit
 17245 ;;		_SYS_TimerTaskHandler
 17246 ;; This function uses a non-reentrant model
 17247 ;;
 17248                           
 17249                           	psect	text104
 17250  007BDE                     __ptext104:
 17251                           	opt callstack 0
 17252  007BDE                     _nwkRxDuplicateRejectionTimerHandler:
 17253                           	opt callstack 19
 17254                           
 17255                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 17256                           
 17257                           ;incstack = 0
 17258  007BDE  0E00               	movlw	0
 17259  007BE0  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 17260                           
 17261                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 17262  007BE2  0E00               	movlw	0
 17263  007BE4  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 17264  007BE6                     l12476:
 17265                           
 17266                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 17267  007BE6  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 17268  007BE8  0D05               	mullw	5
 17269  007BEA  0E7E               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 17270  007BEC  24F3               	addwf	243,w,c
 17271  007BEE  6ED9               	movwf	fsr2l,c
 17272  007BF0  0E02               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 17273  007BF2  20F4               	addwfc	prodh,w,c
 17274  007BF4  6EDA               	movwf	fsr2h,c
 17275  007BF6  50DF               	movf	indf2,w,c
 17276  007BF8  B4D8               	btfsc	status,2,c
 17277  007BFA  D00B               	goto	l12482
 17278                           
 17279                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 17280  007BFC  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 17281  007BFE  0D05               	mullw	5
 17282  007C00  0E7E               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 17283  007C02  24F3               	addwf	243,w,c
 17284  007C04  6ED9               	movwf	fsr2l,c
 17285  007C06  0E02               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 17286  007C08  20F4               	addwfc	prodh,w,c
 17287  007C0A  6EDA               	movwf	fsr2h,c
 17288  007C0C  06DF               	decf	indf2,f,c
 17289                           
 17290                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 17291  007C0E  0E01               	movlw	1
 17292  007C10  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 17293  007C12                     l12482:
 17294                           
 17295                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 17296  007C12  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 17297  007C14  0E09               	movlw	9
 17298  007C16  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 17299  007C18  D7E6               	goto	l12476
 17300                           
 17301                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 17302  007C1A  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 17303  007C1C  B4D8               	btfsc	status,2,c
 17304  007C1E  0012               	return	
 17305                           
 17306                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 17307  007C20  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 17308  007C26  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 17309  007C2C  ECF3  F043         	call	_SYS_TimerStart	;wreg free
 17310  007C30  0012               	return		;funcret
 17311  007C32                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 17312                           	opt callstack 0
 17313                           
 17314 ;; *************** function _nwkTxDelayTimerHandler *****************
 17315 ;; Defined at:
 17316 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 17317 ;; Parameters:    Size  Location     Type
 17318 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17319 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17320 ;; Auto vars:     Size  Location     Type
 17321 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 17322 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17323 ;;  restart         1   21[COMRAM] _Bool 
 17324 ;; Return value:  Size  Location     Type
 17325 ;;                  1    wreg      void 
 17326 ;; Registers used:
 17327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17328 ;; Tracked objects:
 17329 ;;		On entry : 0/0
 17330 ;;		On exit  : 0/0
 17331 ;;		Unchanged: 0/0
 17332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17334 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17336 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17337 ;;Total ram usage:        7 bytes
 17338 ;; Hardware stack levels used:    1
 17339 ;; Hardware stack levels required when called:    9
 17340 ;; This function calls:
 17341 ;;		_SYS_TimerStart
 17342 ;;		_nwkFrameNext
 17343 ;; This function is called by:
 17344 ;;		_nwkTxInit
 17345 ;;		_SYS_TimerTaskHandler
 17346 ;; This function uses a non-reentrant model
 17347 ;;
 17348                           
 17349                           	psect	text105
 17350  006F1C                     __ptext105:
 17351                           	opt callstack 0
 17352  006F1C                     _nwkTxDelayTimerHandler:
 17353                           	opt callstack 19
 17354                           
 17355                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 17356                           
 17357                           ;incstack = 0
 17358  006F1C  0E00               	movlw	0
 17359  006F1E  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 17360  006F20  0E00               	movlw	0
 17361  006F22  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 17362                           
 17363                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 17364  006F24  0E00               	movlw	0
 17365  006F26  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 17366                           
 17367                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17368  006F28  D021               	goto	l12518
 17369  006F2A                     l12510:
 17370                           
 17371                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 17372  006F2A  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 17373  006F30  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 17374  006F36  0E11               	movlw	17
 17375  006F38  18DE               	xorwf	postinc2,w,c
 17376  006F3A  A4D8               	btfss	status,2,c
 17377  006F3C  D017               	goto	l12518
 17378                           
 17379                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 17380  006F3E  0E01               	movlw	1
 17381  006F40  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 17382                           
 17383                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 17384  006F42  EE20 F084          	lfsr	2,132
 17385  006F46  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 17386  006F48  26D9               	addwf	fsr2l,f,c
 17387  006F4A  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 17388  006F4C  22DA               	addwfc	fsr2h,f,c
 17389  006F4E  06DE               	decf	postinc2,f,c
 17390  006F50  0E00               	movlw	0
 17391  006F52  5ADD               	subwfb	postdec2,f,c
 17392  006F54  50DE               	movf	postinc2,w,c
 17393  006F56  10DE               	iorwf	postinc2,w,c
 17394  006F58  A4D8               	btfss	status,2,c
 17395  006F5A  D008               	goto	l12518
 17396                           
 17397                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 17398  006F5C  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 17399  006F62  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 17400  006F68  0E13               	movlw	19
 17401  006F6A  6EDF               	movwf	indf2,c
 17402  006F6C                     l12518:
 17403                           
 17404                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17405  006F6C  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 17406  006F72  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 17407  006F78  ECD4  F037         	call	_nwkFrameNext	;wreg free
 17408  006F7C  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 17409  006F82  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 17410  006F88  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 17411  006F8A  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 17412  006F8C  A4D8               	btfss	status,2,c
 17413  006F8E  D7CD               	goto	l12510
 17414                           
 17415                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 17416  006F90  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 17417  006F92  B4D8               	btfsc	status,2,c
 17418  006F94  0012               	return	
 17419                           
 17420                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 17421  006F96  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 17422  006F9C  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 17423  006FA2  ECF3  F043         	call	_SYS_TimerStart	;wreg free
 17424  006FA6  0012               	return		;funcret
 17425  006FA8                     __end_of_nwkTxDelayTimerHandler:
 17426                           	opt callstack 0
 17427                           
 17428 ;; *************** function _nwkTxConfirm *****************
 17429 ;; Defined at:
 17430 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 17433 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17434 ;;  status          1    3[COMRAM] unsigned char 
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;		None
 17437 ;; Return value:  Size  Location     Type
 17438 ;;                  1    wreg      void 
 17439 ;; Registers used:
 17440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17441 ;; Tracked objects:
 17442 ;;		On entry : 0/0
 17443 ;;		On exit  : 0/0
 17444 ;;		Unchanged: 0/0
 17445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17450 ;;Total ram usage:        3 bytes
 17451 ;; Hardware stack levels used:    1
 17452 ;; Hardware stack levels required when called:    7
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_nwkTxAckWaitTimerHandler
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           	psect	text106
 17461  008882                     __ptext106:
 17462                           	opt callstack 0
 17463  008882                     _nwkTxConfirm:
 17464                           	opt callstack 20
 17465                           
 17466                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 17467                           
 17468                           ;incstack = 0
 17469  008882  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 17470  008888  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 17471  00888E  0E17               	movlw	23
 17472  008890  6EDF               	movwf	indf2,c
 17473                           
 17474                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 17475  008892  EE20 F083          	lfsr	2,131
 17476  008896  5002               	movf	nwkTxConfirm@frame^0,w,c
 17477  008898  26D9               	addwf	fsr2l,f,c
 17478  00889A  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 17479  00889C  22DA               	addwfc	fsr2h,f,c
 17480  00889E  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 17481  0088A4  0012               	return		;funcret
 17482  0088A6                     __end_of_nwkTxConfirm:
 17483                           	opt callstack 0
 17484                           
 17485 ;; *************** function _PHY_TaskHandler *****************
 17486 ;; Defined at:
 17487 ;;		line 859 in file "../phy/sx1216/phy_src/phy.c"
 17488 ;; Parameters:    Size  Location     Type
 17489 ;;		None
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;		None
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  1    wreg      void 
 17494 ;; Registers used:
 17495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/2
 17498 ;;		On exit  : 2/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17505 ;;Total ram usage:        0 bytes
 17506 ;; Hardware stack levels used:    1
 17507 ;; Hardware stack levels required when called:   15
 17508 ;; This function calls:
 17509 ;;		_radio_engine
 17510 ;; This function is called by:
 17511 ;;		_SYS_TaskHandler
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           	psect	text107
 17516  008DEC                     __ptext107:
 17517                           	opt callstack 0
 17518  008DEC                     _PHY_TaskHandler:
 17519                           	opt callstack 14
 17520                           
 17521                           ;../phy/sx1216/phy_src/phy.c: 860:     radio_engine();
 17522                           
 17523                           ;incstack = 0
 17524  008DEC  ECBA  F026         	call	_radio_engine	;wreg free
 17525  008DF0  0012               	return		;funcret
 17526  008DF2                     __end_of_PHY_TaskHandler:
 17527                           	opt callstack 0
 17528                           
 17529 ;; *************** function _radio_engine *****************
 17530 ;; Defined at:
 17531 ;;		line 742 in file "../phy/sx1216/phy_src/phy.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  1    wreg      void 
 17538 ;; Registers used:
 17539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/2
 17542 ;;		On exit  : 2/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17549 ;;Total ram usage:        2 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; Hardware stack levels required when called:   14
 17552 ;; This function calls:
 17553 ;;		_DIO0_Receive_ISR
 17554 ;;		_PHY_DataConf
 17555 ;;		_SX1276Read
 17556 ;;		_cad
 17557 ;;		_get_timer0base
 17558 ;;		_initRadio
 17559 ;;		_receive
 17560 ;;		_set_timer0base
 17561 ;; This function is called by:
 17562 ;;		_PHY_TaskHandler
 17563 ;; This function uses a non-reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text108
 17567  004D74                     __ptext108:
 17568                           	opt callstack 0
 17569  004D74                     _radio_engine:
 17570                           	opt callstack 14
 17571                           
 17572                           ;../phy/sx1216/phy_src/phy.c: 743:     switch(radio_state_var){
 17573                           
 17574                           ;incstack = 0
 17575  004D74  D06D               	goto	l16198
 17576  004D76                     l16144:
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;../phy/sx1216/phy_src/phy.c: 745:             initRadio();
 17580  004D76  ECA0  F020         	call	_initRadio	;wreg free
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;../phy/sx1216/phy_src/phy.c: 746:             radio_state_var = START_RX;
 17584  004D7A  0E01               	movlw	1
 17585  004D7C  6FCA               	movwf	_radio_state_var& (0+255),b
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;../phy/sx1216/phy_src/phy.c: 747:             need_radio_reset = 0;
 17589  004D7E  0E00               	movlw	0
 17590  004D80  6FD3               	movwf	_need_radio_reset& (0+255),b
 17591                           
 17592                           ;../phy/sx1216/phy_src/phy.c: 748:             break;
 17593  004D82  0012               	return	
 17594  004D84                     l16150:
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;../phy/sx1216/phy_src/phy.c: 750:             if(need_radio_reset){
 17598  004D84  51D3               	movf	_need_radio_reset& (0+255),w,b
 17599  004D86  B4D8               	btfsc	status,2,c
 17600  004D88  D003               	goto	l16154
 17601  004D8A                     u16240:
 17602                           
 17603                           ; BSR set to: 0
 17604                           ;../phy/sx1216/phy_src/phy.c: 751:                 radio_state_var = INIT_RADIO;
 17605  004D8A  0E00               	movlw	0
 17606  004D8C  6FCA               	movwf	_radio_state_var& (0+255),b
 17607                           
 17608                           ;../phy/sx1216/phy_src/phy.c: 752:                 break;
 17609  004D8E  0012               	return	
 17610  004D90                     l16154:
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;../phy/sx1216/phy_src/phy.c: 754:             receive(0);
 17614  004D90  0E00               	movlw	0
 17615  004D92  EC3E  F041         	call	_receive
 17616                           
 17617                           ; BSR set to: 61
 17618                           ;../phy/sx1216/phy_src/phy.c: 755:             radio_state_var = WAIT_FOR_RX;
 17619  004D96  0E02               	movlw	2
 17620  004D98  0100               	movlb	0	; () banked
 17621  004D9A  6FCA               	movwf	_radio_state_var& (0+255),b
 17622                           
 17623                           ;../phy/sx1216/phy_src/phy.c: 756:             break;
 17624  004D9C  0012               	return	
 17625  004D9E                     l2672:
 17626                           
 17627                           ; BSR set to: 0
 17628                           ;../phy/sx1216/phy_src/phy.c: 758:             if(PORTBbits.RB4){
 17629  004D9E  A8CB               	btfss	203,4,c	;volatile
 17630  004DA0  0012               	return	
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;../phy/sx1216/phy_src/phy.c: 759:                 radio_state_var = RX_MESSAGE;
 17634  004DA2  0E03               	movlw	3
 17635  004DA4  6FCA               	movwf	_radio_state_var& (0+255),b
 17636  004DA6  0012               	return	
 17637  004DA8                     l16160:
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;../phy/sx1216/phy_src/phy.c: 763:             DIO0_Receive_ISR();
 17641  004DA8  EC6C  F036         	call	_DIO0_Receive_ISR	;wreg free
 17642  004DAC                     l16162:
 17643                           
 17644                           ;../phy/sx1216/phy_src/phy.c: 764:             radio_state_var = START_RX;
 17645  004DAC  0E01               	movlw	1
 17646  004DAE  0100               	movlb	0	; () banked
 17647  004DB0  6FCA               	movwf	_radio_state_var& (0+255),b
 17648                           
 17649                           ;../phy/sx1216/phy_src/phy.c: 765:             break;
 17650  004DB2  0012               	return	
 17651  004DB4                     l16164:
 17652                           
 17653                           ; BSR set to: 0
 17654                           ;../phy/sx1216/phy_src/phy.c: 767:             if(!get_timer0base(&_cadBackoffTimer)){
 17655  004DB4  0EF5               	movlw	low __cadBackoffTimer
 17656  004DB6  6E02               	movwf	get_timer0base@timer^0,c
 17657  004DB8  EC1B  F044         	call	_get_timer0base	;wreg free
 17658  004DBC  5002               	movf	?_get_timer0base^0,w,c
 17659  004DBE  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 17660  004DC0  A4D8               	btfss	status,2,c
 17661  004DC2  D7F4               	goto	l16162
 17662                           
 17663                           ; BSR set to: 57
 17664                           ;../phy/sx1216/phy_src/phy.c: 768:                 if(cad()){
 17665  004DC4  EC27  F032         	call	_cad	;wreg free
 17666  004DC8  0900               	iorlw	0
 17667  004DCA  B4D8               	btfsc	status,2,c
 17668  004DCC  D010               	goto	l16176
 17669                           
 17670                           ;../phy/sx1216/phy_src/phy.c: 770:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 17671  004DCE  0EF5               	movlw	low __cadBackoffTimer
 17672  004DD0  6E02               	movwf	set_timer0base@timer^0,c
 17673  004DD2  0E07               	movlw	7
 17674  004DD4  6E04               	movwf	(set_timer0base@tval+1)^0,c
 17675  004DD6  0ED0               	movlw	208
 17676  004DD8  6E03               	movwf	set_timer0base@tval^0,c
 17677  004DDA  EC88  F045         	call	_set_timer0base	;wreg free
 17678                           
 17679                           ; BSR set to: 57
 17680                           ;../phy/sx1216/phy_src/phy.c: 772:                     radio_state_var = START_RX;
 17681  004DDE  0E01               	movlw	1
 17682  004DE0  0100               	movlb	0	; () banked
 17683  004DE2  6FCA               	movwf	_radio_state_var& (0+255),b
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;../phy/sx1216/phy_src/phy.c: 773:                     if(cadCounter < 10)
 17687  004DE4  0E0A               	movlw	10
 17688  004DE6  61D4               	cpfslt	_cadCounter& (0+255),b
 17689  004DE8  0012               	return	
 17690                           
 17691                           ; BSR set to: 0
 17692                           ;../phy/sx1216/phy_src/phy.c: 774:                     {;../phy/sx1216/phy_src/phy.c: 77
      +                          5:                         cadCounter++;
 17693  004DEA  2BD4               	incf	_cadCounter& (0+255),f,b
 17694  004DEC  0012               	return	
 17695  004DEE                     l16176:
 17696                           
 17697                           ;../phy/sx1216/phy_src/phy.c: 780:                 radio_state_var = START_TX;
 17698  004DEE  0E06               	movlw	6
 17699  004DF0  0100               	movlb	0	; () banked
 17700  004DF2  6FCA               	movwf	_radio_state_var& (0+255),b
 17701  004DF4  0012               	return	
 17702  004DF6                     l16180:
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;../phy/sx1216/phy_src/phy.c: 789:             set_timer0base(&txTimeOut, 1000);
 17706  004DF6  0EF1               	movlw	low _txTimeOut
 17707  004DF8  6E02               	movwf	set_timer0base@timer^0,c
 17708  004DFA  0E03               	movlw	3
 17709  004DFC  6E04               	movwf	(set_timer0base@tval+1)^0,c
 17710  004DFE  0EE8               	movlw	232
 17711  004E00  6E03               	movwf	set_timer0base@tval^0,c
 17712  004E02  EC88  F045         	call	_set_timer0base	;wreg free
 17713                           
 17714                           ; BSR set to: 57
 17715                           ;../phy/sx1216/phy_src/phy.c: 790:             radio_state_var = WAIT_FOR_TX;
 17716  004E06  0E07               	movlw	7
 17717  004E08  0100               	movlb	0	; () banked
 17718  004E0A  6FCA               	movwf	_radio_state_var& (0+255),b
 17719                           
 17720                           ;../phy/sx1216/phy_src/phy.c: 791:             break;
 17721  004E0C  0012               	return	
 17722  004E0E                     l16184:
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;../phy/sx1216/phy_src/phy.c: 793:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 17726  004E0E  0EF1               	movlw	low _txTimeOut
 17727  004E10  6E02               	movwf	get_timer0base@timer^0,c
 17728  004E12  EC1B  F044         	call	_get_timer0base	;wreg free
 17729  004E16  5002               	movf	?_get_timer0base^0,w,c
 17730  004E18  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 17731  004E1A  B4D8               	btfsc	status,2,c
 17732  004E1C  D006               	goto	u16300
 17733                           
 17734                           ; BSR set to: 57
 17735  004E1E  0E12               	movlw	18
 17736  004E20  EC2A  F046         	call	_SX1276Read
 17737  004E24  6E4B               	movwf	??_radio_engine^0,c
 17738  004E26  A64B               	btfss	??_radio_engine^0,3,c
 17739  004E28  0012               	return	
 17740  004E2A                     u16300:
 17741                           
 17742                           ;../phy/sx1216/phy_src/phy.c: 794:                 radio_state_var = START_RX;
 17743  004E2A  0E01               	movlw	1
 17744  004E2C  0100               	movlb	0	; () banked
 17745  004E2E  6FCA               	movwf	_radio_state_var& (0+255),b
 17746                           
 17747                           ; BSR set to: 0
 17748                           ;../phy/sx1216/phy_src/phy.c: 795:                 if(get_timer0base(&txTimeOut)){
 17749  004E30  0EF1               	movlw	low _txTimeOut
 17750  004E32  6E02               	movwf	get_timer0base@timer^0,c
 17751  004E34  EC1B  F044         	call	_get_timer0base	;wreg free
 17752  004E38  5002               	movf	?_get_timer0base^0,w,c
 17753  004E3A  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 17754  004E3C  B4D8               	btfsc	status,2,c
 17755  004E3E  D004               	goto	l16194
 17756                           
 17757                           ; BSR set to: 57
 17758                           ;../phy/sx1216/phy_src/phy.c: 796:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 17759  004E40  0E00               	movlw	0
 17760  004E42  EC9A  F041         	call	_PHY_DataConf
 17761                           
 17762                           ;../phy/sx1216/phy_src/phy.c: 797:                 }
 17763  004E46  0012               	return	
 17764  004E48                     l16194:
 17765                           
 17766                           ; BSR set to: 57
 17767                           ;../phy/sx1216/phy_src/phy.c: 799:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 17768  004E48  0E02               	movlw	2
 17769  004E4A  EC9A  F041         	call	_PHY_DataConf
 17770  004E4E  0012               	return	
 17771  004E50                     l16198:
 17772  004E50  0100               	movlb	0	; () banked
 17773  004E52  51CA               	movf	_radio_state_var& (0+255),w,b
 17774  004E54  6E4B               	movwf	??_radio_engine^0,c
 17775  004E56  6A4C               	clrf	(??_radio_engine+1)^0,c
 17776                           
 17777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17778                           ; Switch size 1, requested type "simple"
 17779                           ; Number of cases is 1, Range of values is 0 to 0
 17780                           ; switch strategies available:
 17781                           ; Name         Instructions Cycles
 17782                           ; simple_byte            4     3 (average)
 17783                           ;	Chosen strategy is simple_byte
 17784  004E58  504C               	movf	(??_radio_engine+1)^0,w,c
 17785  004E5A  0A00               	xorlw	0	; case 0
 17786  004E5C  A4D8               	btfss	status,2,c
 17787  004E5E  D795               	goto	u16240
 17788                           
 17789                           ; BSR set to: 0
 17790                           ; Switch size 1, requested type "simple"
 17791                           ; Number of cases is 7, Range of values is 0 to 7
 17792                           ; switch strategies available:
 17793                           ; Name         Instructions Cycles
 17794                           ; simple_byte           22    12 (average)
 17795                           ;	Chosen strategy is simple_byte
 17796  004E60  504B               	movf	??_radio_engine^0,w,c
 17797  004E62  0A00               	xorlw	0	; case 0
 17798  004E64  B4D8               	btfsc	status,2,c
 17799  004E66  D787               	goto	l16144
 17800  004E68  0A01               	xorlw	1	; case 1
 17801  004E6A  B4D8               	btfsc	status,2,c
 17802  004E6C  D78B               	goto	l16150
 17803  004E6E  0A03               	xorlw	3	; case 2
 17804  004E70  B4D8               	btfsc	status,2,c
 17805  004E72  D795               	goto	l2672
 17806  004E74  0A01               	xorlw	1	; case 3
 17807  004E76  B4D8               	btfsc	status,2,c
 17808  004E78  D797               	goto	l16160
 17809  004E7A  0A07               	xorlw	7	; case 4
 17810  004E7C  B4D8               	btfsc	status,2,c
 17811  004E7E  D79A               	goto	l16164
 17812  004E80  0A02               	xorlw	2	; case 6
 17813  004E82  B4D8               	btfsc	status,2,c
 17814  004E84  D7B8               	goto	l16180
 17815  004E86  0A01               	xorlw	1	; case 7
 17816  004E88  B4D8               	btfsc	status,2,c
 17817  004E8A  D7C1               	goto	l16184
 17818  004E8C  D77E               	goto	u16240
 17819  004E8E                     __end_of_radio_engine:
 17820                           	opt callstack 0
 17821                           
 17822 ;; *************** function _cad *****************
 17823 ;; Defined at:
 17824 ;;		line 509 in file "../phy/sx1216/phy_src/phy.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;		None
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;  RSSI            2   17[COMRAM] short 
 17829 ;;  temp            1   19[COMRAM] unsigned char 
 17830 ;; Return value:  Size  Location     Type
 17831 ;;                  1    wreg      unsigned char 
 17832 ;; Registers used:
 17833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17834 ;; Tracked objects:
 17835 ;;		On entry : 3F/39
 17836 ;;		On exit  : 2/0
 17837 ;;		Unchanged: 0/0
 17838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17840 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17843 ;;Total ram usage:        4 bytes
 17844 ;; Hardware stack levels used:    1
 17845 ;; Hardware stack levels required when called:   13
 17846 ;; This function calls:
 17847 ;;		_SX1276Read
 17848 ;;		_SX1276Write
 17849 ;;		_get_timer0base
 17850 ;;		_set_timer0base
 17851 ;;		_start_radio_cad
 17852 ;; This function is called by:
 17853 ;;		_radio_engine
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text109
 17858  00644E                     __ptext109:
 17859                           	opt callstack 0
 17860  00644E                     _cad:
 17861                           	opt callstack 14
 17862                           
 17863                           ; BSR set to: 57
 17864                           ;../phy/sx1216/phy_src/phy.c: 511:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 513:  
      +                             temp = SX1276Read(0x18);
 17865                           
 17866                           ;incstack = 0
 17867  00644E  0E18               	movlw	24
 17868  006450  EC2A  F046         	call	_SX1276Read
 17869  006454  6E14               	movwf	cad@temp^0,c
 17870                           
 17871                           ; BSR set to: 61
 17872                           ;../phy/sx1216/phy_src/phy.c: 514:     if((temp & 0x01) | (temp & 0x02))
 17873  006456  0060  F050  F011   	movff	cad@temp,??_cad
 17874  00645C  0E02               	movlw	2
 17875  00645E  1611               	andwf	??_cad^0,f,c
 17876  006460  5014               	movf	cad@temp^0,w,c
 17877  006462  0B01               	andlw	1
 17878  006464  1011               	iorwf	??_cad^0,w,c
 17879  006466  0900               	iorlw	0
 17880  006468  B4D8               	btfsc	status,2,c
 17881  00646A  D002               	goto	l15546
 17882  00646C                     u15720:
 17883                           
 17884                           ;../phy/sx1216/phy_src/phy.c: 515:     {;../phy/sx1216/phy_src/phy.c: 516:         retur
      +                          n 1;
 17885  00646C  0E01               	movlw	1
 17886  00646E  0012               	return	
 17887  006470                     l15546:
 17888                           
 17889                           ; BSR set to: 61
 17890                           ;../phy/sx1216/phy_src/phy.c: 518:     start_radio_cad();
 17891  006470  EC79  F046         	call	_start_radio_cad	;wreg free
 17892                           
 17893                           ; BSR set to: 61
 17894                           ;../phy/sx1216/phy_src/phy.c: 519:     cadDone = 0;
 17895  006474  0E00               	movlw	0
 17896  006476  0100               	movlb	0	; () banked
 17897  006478  6FD5               	movwf	_cadDone& (0+255),b
 17898                           
 17899                           ; BSR set to: 0
 17900                           ;../phy/sx1216/phy_src/phy.c: 520:     set_timer0base(&cadTimeOut, 2000);
 17901  00647A  0EF3               	movlw	low _cadTimeOut
 17902  00647C  6E02               	movwf	set_timer0base@timer^0,c
 17903  00647E  0E07               	movlw	7
 17904  006480  6E04               	movwf	(set_timer0base@tval+1)^0,c
 17905  006482  0ED0               	movlw	208
 17906  006484  6E03               	movwf	set_timer0base@tval^0,c
 17907  006486  EC88  F045         	call	_set_timer0base	;wreg free
 17908                           
 17909                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 17910  00648A  D029               	goto	l15580
 17911  00648C                     l15552:
 17912                           
 17913                           ; BSR set to: 57
 17914                           ;../phy/sx1216/phy_src/phy.c: 523:     {;../phy/sx1216/phy_src/phy.c: 524:         temp 
      +                          = SX1276Read(0x12);
 17915  00648C  0E12               	movlw	18
 17916  00648E  EC2A  F046         	call	_SX1276Read
 17917  006492  6E14               	movwf	cad@temp^0,c
 17918                           
 17919                           ;../phy/sx1216/phy_src/phy.c: 525:         SX1276Write(0x12,temp);
 17920  006494  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 17921  00649A  0E12               	movlw	18
 17922  00649C  EC48  F046         	call	_SX1276Write
 17923                           
 17924                           ; BSR set to: 61
 17925                           ;../phy/sx1216/phy_src/phy.c: 526:         if(temp & 0x04)
 17926  0064A0  A414               	btfss	cad@temp^0,2,c
 17927  0064A2  D01D               	goto	l15580
 17928                           
 17929                           ; BSR set to: 61
 17930                           ;../phy/sx1216/phy_src/phy.c: 527:         {;../phy/sx1216/phy_src/phy.c: 528:          
      +                             cadDone = 1;
 17931  0064A4  0E01               	movlw	1
 17932  0064A6  0100               	movlb	0	; () banked
 17933  0064A8  6FD5               	movwf	_cadDone& (0+255),b
 17934                           
 17935                           ; BSR set to: 0
 17936                           ;../phy/sx1216/phy_src/phy.c: 529:             if(temp & 0x01)
 17937  0064AA  B014               	btfsc	cad@temp^0,0,c
 17938  0064AC  D7DF               	goto	u15720
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;../phy/sx1216/phy_src/phy.c: 534:             {;../phy/sx1216/phy_src/phy.c: 535:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 536:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 17942  0064AE  0E1B               	movlw	27
 17943  0064B0  EC2A  F046         	call	_SX1276Read
 17944  0064B4  6E11               	movwf	??_cad^0,c
 17945  0064B6  0E63               	movlw	99
 17946  0064B8  2411               	addwf	??_cad^0,w,c
 17947  0064BA  6E12               	movwf	cad@RSSI^0,c
 17948  0064BC  6A13               	clrf	(cad@RSSI+1)^0,c
 17949  0064BE  0EFF               	movlw	255
 17950  0064C0  2213               	addwfc	(cad@RSSI+1)^0,f,c
 17951                           
 17952                           ; BSR set to: 61
 17953                           ;../phy/sx1216/phy_src/phy.c: 538:                 if(RSSI < RSSITarget)
 17954  0064C2  5013               	movf	(cad@RSSI+1)^0,w,c
 17955  0064C4  0A80               	xorlw	128
 17956  0064C6  6E11               	movwf	??_cad^0,c
 17957  0064C8  0100               	movlb	0	; () banked
 17958  0064CA  51F7               	movf	_RSSITarget& (0+255),w,b
 17959  0064CC  5C12               	subwf	cad@RSSI^0,w,c
 17960  0064CE  0E80               	movlw	128
 17961  0064D0  BFF7               	btfsc	_RSSITarget& (0+255),7,b
 17962  0064D2  0E7F               	movlw	127
 17963  0064D4  5811               	subwfb	??_cad^0,w,c
 17964  0064D6  B0D8               	btfsc	status,0,c
 17965  0064D8  D7C9               	goto	u15720
 17966                           
 17967                           ; BSR set to: 0
 17968                           ;../phy/sx1216/phy_src/phy.c: 539:                 {;../phy/sx1216/phy_src/phy.c: 540:  
      +                                             return 0;
 17969  0064DA  0E00               	movlw	0
 17970  0064DC  0012               	return	
 17971  0064DE                     l15580:
 17972                           
 17973                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 17974  0064DE  0100               	movlb	0	; () banked
 17975  0064E0  51D5               	movf	_cadDone& (0+255),w,b
 17976  0064E2  A4D8               	btfss	status,2,c
 17977  0064E4  D008               	goto	u15770
 17978                           
 17979                           ; BSR set to: 0
 17980  0064E6  0EF3               	movlw	low _cadTimeOut
 17981  0064E8  6E02               	movwf	get_timer0base@timer^0,c
 17982  0064EA  EC1B  F044         	call	_get_timer0base	;wreg free
 17983  0064EE  5002               	movf	?_get_timer0base^0,w,c
 17984  0064F0  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 17985  0064F2  A4D8               	btfss	status,2,c
 17986  0064F4  D7CB               	goto	l15552
 17987  0064F6                     u15770:
 17988                           
 17989                           ;../phy/sx1216/phy_src/phy.c: 549:     if(!get_timer0base(&cadTimeOut))
 17990  0064F6  0EF3               	movlw	low _cadTimeOut
 17991  0064F8  6E02               	movwf	get_timer0base@timer^0,c
 17992  0064FA  EC1B  F044         	call	_get_timer0base	;wreg free
 17993  0064FE  5002               	movf	?_get_timer0base^0,w,c
 17994  006500  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 17995  006502  A4D8               	btfss	status,2,c
 17996  006504  0012               	return	
 17997  006506  D7B2               	goto	u15720
 17998  006508                     __end_of_cad:
 17999                           	opt callstack 0
 18000                           
 18001 ;; *************** function _start_radio_cad *****************
 18002 ;; Defined at:
 18003 ;;		line 562 in file "../phy/sx1216/phy_src/phy.c"
 18004 ;; Parameters:    Size  Location     Type
 18005 ;;		None
 18006 ;; Auto vars:     Size  Location     Type
 18007 ;;		None
 18008 ;; Return value:  Size  Location     Type
 18009 ;;                  1    wreg      void 
 18010 ;; Registers used:
 18011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18012 ;; Tracked objects:
 18013 ;;		On entry : 3F/3D
 18014 ;;		On exit  : 3F/3D
 18015 ;;		Unchanged: 0/0
 18016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18021 ;;Total ram usage:        0 bytes
 18022 ;; Hardware stack levels used:    1
 18023 ;; Hardware stack levels required when called:   12
 18024 ;; This function calls:
 18025 ;;		_SX1276Write
 18026 ;;		_idle
 18027 ;; This function is called by:
 18028 ;;		_cad
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032                           	psect	text110
 18033  008CF2                     __ptext110:
 18034                           	opt callstack 0
 18035  008CF2                     _start_radio_cad:
 18036                           	opt callstack 14
 18037                           
 18038                           ; BSR set to: 61
 18039                           ;../phy/sx1216/phy_src/phy.c: 564:     idle();
 18040                           
 18041                           ;incstack = 0
 18042  008CF2  ECC7  F046         	call	_idle	;wreg free
 18043                           
 18044                           ;../phy/sx1216/phy_src/phy.c: 565:     SX1276Write(0x01,0x80 | 0x07);
 18045  008CF6  0E87               	movlw	135
 18046  008CF8  6E0F               	movwf	SX1276Write@data^0,c
 18047  008CFA  0E01               	movlw	1
 18048  008CFC  EC48  F046         	call	_SX1276Write
 18049                           
 18050                           ; BSR set to: 61
 18051  008D00  0012               	return		;funcret
 18052  008D02                     __end_of_start_radio_cad:
 18053                           	opt callstack 0
 18054                           
 18055 ;; *************** function _set_timer0base *****************
 18056 ;; Defined at:
 18057 ;;		line 35 in file "../hal/hal_src/Timers.c"
 18058 ;; Parameters:    Size  Location     Type
 18059 ;;  timer           1    1[COMRAM] PTR unsigned short 
 18060 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 18061 ;;		 -> ATTimeoutTimer(2), 
 18062 ;;  tval            2    2[COMRAM] unsigned short 
 18063 ;; Auto vars:     Size  Location     Type
 18064 ;;		None
 18065 ;; Return value:  Size  Location     Type
 18066 ;;                  1    wreg      void 
 18067 ;; Registers used:
 18068 ;;		wreg, fsr2l, fsr2h, status,2
 18069 ;; Tracked objects:
 18070 ;;		On entry : 0/0
 18071 ;;		On exit  : 3F/39
 18072 ;;		Unchanged: 0/0
 18073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18074 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18078 ;;Total ram usage:        3 bytes
 18079 ;; Hardware stack levels used:    1
 18080 ;; Hardware stack levels required when called:    7
 18081 ;; This function calls:
 18082 ;;		Nothing
 18083 ;; This function is called by:
 18084 ;;		_processATCommand
 18085 ;;		_cad
 18086 ;;		_radio_engine
 18087 ;; This function uses a non-reentrant model
 18088 ;;
 18089                           
 18090                           	psect	text111
 18091  008B10                     __ptext111:
 18092                           	opt callstack 0
 18093  008B10                     _set_timer0base:
 18094                           	opt callstack 22
 18095                           
 18096                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 18097                           
 18098                           ; BSR set to: 61
 18099                           ;incstack = 0
 18100  008B10  0139               	movlb	57	; () banked
 18101  008B12  9F93               	bcf	147,7,b	;volatile
 18102                           
 18103                           ; BSR set to: 57
 18104                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 18105  008B14  5002               	movf	set_timer0base@timer^0,w,c
 18106  008B16  6ED9               	movwf	fsr2l,c
 18107  008B18  6ADA               	clrf	fsr2h,c
 18108  008B1A  0060  F00F  FFDE   	movff	set_timer0base@tval,postinc2
 18109  008B20  0060  F013  FFDD   	movff	set_timer0base@tval+1,postdec2
 18110                           
 18111                           ; BSR set to: 57
 18112                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 18113  008B26  8F93               	bsf	147,7,b	;volatile
 18114                           
 18115                           ; BSR set to: 57
 18116  008B28  0012               	return		;funcret
 18117  008B2A                     __end_of_set_timer0base:
 18118                           	opt callstack 0
 18119                           
 18120 ;; *************** function _get_timer0base *****************
 18121 ;; Defined at:
 18122 ;;		line 27 in file "../hal/hal_src/Timers.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;  timer           1    1[COMRAM] PTR unsigned short 
 18125 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 18126 ;;		 -> ATTimeoutTimer(2), 
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;  tval            2    3[COMRAM] unsigned short 
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  2    1[COMRAM] unsigned short 
 18131 ;; Registers used:
 18132 ;;		wreg, fsr2l, fsr2h, status,2
 18133 ;; Tracked objects:
 18134 ;;		On entry : 0/0
 18135 ;;		On exit  : 3F/39
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;Total ram usage:        4 bytes
 18143 ;; Hardware stack levels used:    1
 18144 ;; Hardware stack levels required when called:    7
 18145 ;; This function calls:
 18146 ;;		Nothing
 18147 ;; This function is called by:
 18148 ;;		_processATCommand
 18149 ;;		_cad
 18150 ;;		_radio_engine
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154                           	psect	text112
 18155  008836                     __ptext112:
 18156                           	opt callstack 0
 18157  008836                     _get_timer0base:
 18158                           	opt callstack 22
 18159                           
 18160                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 18161                           
 18162                           ; BSR set to: 57
 18163                           ;incstack = 0
 18164  008836  0139               	movlb	57	; () banked
 18165  008838  9F93               	bcf	147,7,b	;volatile
 18166                           
 18167                           ; BSR set to: 57
 18168                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 18169  00883A  5002               	movf	get_timer0base@timer^0,w,c
 18170  00883C  6ED9               	movwf	fsr2l,c
 18171  00883E  6ADA               	clrf	fsr2h,c
 18172  008840  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 18173  008846  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 18174                           
 18175                           ; BSR set to: 57
 18176                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 18177  00884C  8F93               	bsf	147,7,b	;volatile
 18178                           
 18179                           ; BSR set to: 57
 18180                           ;../hal/hal_src/Timers.c: 32:     return tval;
 18181  00884E  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 18182  008854  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 18183                           
 18184                           ; BSR set to: 57
 18185  00885A  0012               	return		;funcret
 18186  00885C                     __end_of_get_timer0base:
 18187                           	opt callstack 0
 18188                           
 18189 ;; *************** function _PHY_DataConf *****************
 18190 ;; Defined at:
 18191 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;  status          1    wreg     unsigned char 
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;  status          1    4[COMRAM] unsigned char 
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  1    wreg      void 
 18198 ;; Registers used:
 18199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18200 ;; Tracked objects:
 18201 ;;		On entry : 3F/39
 18202 ;;		On exit  : 3F/1
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18209 ;;Total ram usage:        1 bytes
 18210 ;; Hardware stack levels used:    1
 18211 ;; Hardware stack levels required when called:    8
 18212 ;; This function calls:
 18213 ;;		_nwkTxConvertPhyStatus
 18214 ;; This function is called by:
 18215 ;;		_radio_engine
 18216 ;; This function uses a non-reentrant model
 18217 ;;
 18218                           
 18219                           	psect	text113
 18220  008334                     __ptext113:
 18221                           	opt callstack 0
 18222  008334                     _PHY_DataConf:
 18223                           	opt callstack 19
 18224                           
 18225                           ; BSR set to: 57
 18226                           ;incstack = 0
 18227                           ;PHY_DataConf@status stored from wreg
 18228  008334  6E05               	movwf	PHY_DataConf@status^0,c
 18229                           
 18230                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 18231  008336  0100               	movlb	0	; () banked
 18232  008338  EE20 F083          	lfsr	2,131
 18233  00833C  51BD               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 18234  00833E  26D9               	addwf	fsr2l,f,c
 18235  008340  51BE               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 18236  008342  22DA               	addwfc	fsr2h,f,c
 18237  008344  5005               	movf	PHY_DataConf@status^0,w,c
 18238  008346  EC2D  F042         	call	_nwkTxConvertPhyStatus
 18239  00834A  6EDF               	movwf	indf2,c
 18240                           
 18241                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 18242  00834C  0060  F2F7  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 18243  008352  0060  F2FB  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 18244  008358  0E15               	movlw	21
 18245  00835A  6EDF               	movwf	indf2,c
 18246                           
 18247                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 18248  00835C  0E00               	movlw	0
 18249  00835E  0100               	movlb	0	; () banked
 18250  008360  6FBD               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 18251  008362  0E00               	movlw	0
 18252  008364  6FBE               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 18256  008366  0101               	movlb	1	; () banked
 18257  008368  0726               	decf	(_nwkIb+38)& (0+255),f,b
 18258  00836A  A0D8               	btfss	status,0,c
 18259  00836C  0727               	decf	(_nwkIb+39)& (0+255),f,b
 18260                           
 18261                           ; BSR set to: 1
 18262  00836E  0012               	return		;funcret
 18263  008370                     __end_of_PHY_DataConf:
 18264                           	opt callstack 0
 18265                           
 18266 ;; *************** function _nwkTxConvertPhyStatus *****************
 18267 ;; Defined at:
 18268 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 18269 ;; Parameters:    Size  Location     Type
 18270 ;;  status          1    wreg     unsigned char 
 18271 ;; Auto vars:     Size  Location     Type
 18272 ;;  status          1    3[COMRAM] unsigned char 
 18273 ;; Return value:  Size  Location     Type
 18274 ;;                  1    wreg      unsigned char 
 18275 ;; Registers used:
 18276 ;;		wreg, status,2, status,0
 18277 ;; Tracked objects:
 18278 ;;		On entry : 3F/0
 18279 ;;		On exit  : 0/0
 18280 ;;		Unchanged: 0/0
 18281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18285 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18286 ;;Total ram usage:        3 bytes
 18287 ;; Hardware stack levels used:    1
 18288 ;; Hardware stack levels required when called:    7
 18289 ;; This function calls:
 18290 ;;		Nothing
 18291 ;; This function is called by:
 18292 ;;		_PHY_DataConf
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           	psect	text114
 18297  00845A                     __ptext114:
 18298                           	opt callstack 0
 18299  00845A                     _nwkTxConvertPhyStatus:
 18300                           	opt callstack 19
 18301                           
 18302                           ; BSR set to: 1
 18303                           ;incstack = 0
 18304                           ;nwkTxConvertPhyStatus@status stored from wreg
 18305  00845A  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 18306                           
 18307                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 18308  00845C  D008               	goto	l10944
 18309  00845E                     l10926:
 18310                           
 18311                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 18312  00845E  0E00               	movlw	0
 18313  008460  0012               	return	
 18314  008462                     l10930:
 18315                           
 18316                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 18317  008462  0E20               	movlw	32
 18318  008464  0012               	return	
 18319  008466                     l10934:
 18320                           
 18321                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 18322  008466  0E21               	movlw	33
 18323  008468  0012               	return	
 18324  00846A                     l10938:
 18325                           
 18326                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 18327  00846A  0E01               	movlw	1
 18328  00846C  0012               	return	
 18329  00846E                     l10944:
 18330  00846E  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 18331  008470  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 18332  008472  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 18333                           
 18334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18335                           ; Switch size 1, requested type "simple"
 18336                           ; Number of cases is 1, Range of values is 0 to 0
 18337                           ; switch strategies available:
 18338                           ; Name         Instructions Cycles
 18339                           ; simple_byte            4     3 (average)
 18340                           ;	Chosen strategy is simple_byte
 18341  008474  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 18342  008476  0A00               	xorlw	0	; case 0
 18343  008478  A4D8               	btfss	status,2,c
 18344  00847A  D7F7               	goto	l10938
 18345                           
 18346                           ; Switch size 1, requested type "simple"
 18347                           ; Number of cases is 3, Range of values is 0 to 2
 18348                           ; switch strategies available:
 18349                           ; Name         Instructions Cycles
 18350                           ; simple_byte           10     6 (average)
 18351                           ;	Chosen strategy is simple_byte
 18352  00847C  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 18353  00847E  0A00               	xorlw	0	; case 0
 18354  008480  B4D8               	btfsc	status,2,c
 18355  008482  D7ED               	goto	l10926
 18356  008484  0A01               	xorlw	1	; case 1
 18357  008486  B4D8               	btfsc	status,2,c
 18358  008488  D7EC               	goto	l10930
 18359  00848A  0A03               	xorlw	3	; case 2
 18360  00848C  B4D8               	btfsc	status,2,c
 18361  00848E  D7EB               	goto	l10934
 18362  008490  D7EC               	goto	l10938
 18363  008492                     __end_of_nwkTxConvertPhyStatus:
 18364                           	opt callstack 0
 18365                           
 18366 ;; *************** function _DIO0_Receive_ISR *****************
 18367 ;; Defined at:
 18368 ;;		line 642 in file "../phy/sx1216/phy_src/phy.c"
 18369 ;; Parameters:    Size  Location     Type
 18370 ;;		None
 18371 ;; Auto vars:     Size  Location     Type
 18372 ;;  ind             5   69[COMRAM] struct PHY_DataInd_t
 18373 ;;  packetLength    1   67[COMRAM] unsigned char 
 18374 ;;  irqFlags        1   68[COMRAM] unsigned char 
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  1    wreg      void 
 18377 ;; Registers used:
 18378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18379 ;; Tracked objects:
 18380 ;;		On entry : 0/0
 18381 ;;		On exit  : 3F/3D
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18385 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18387 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18388 ;;Total ram usage:        7 bytes
 18389 ;; Hardware stack levels used:    1
 18390 ;; Hardware stack levels required when called:   13
 18391 ;; This function calls:
 18392 ;;		_PHY_DataInd
 18393 ;;		_SX1276Read
 18394 ;;		_SX1276ReadBuffer
 18395 ;;		_SX1276Write
 18396 ;;		_get_lqi
 18397 ;;		_get_rssi
 18398 ;;		_receive
 18399 ;; This function is called by:
 18400 ;;		_radio_engine
 18401 ;; This function uses a non-reentrant model
 18402 ;;
 18403                           
 18404                           	psect	text115
 18405  006CD8                     __ptext115:
 18406                           	opt callstack 0
 18407  006CD8                     _DIO0_Receive_ISR:
 18408                           	opt callstack 14
 18409                           
 18410                           ;../phy/sx1216/phy_src/phy.c: 644:     uint8_t irqFlags = SX1276Read(0x12);
 18411                           
 18412                           ;incstack = 0
 18413  006CD8  0E12               	movlw	18
 18414  006CDA  EC2A  F046         	call	_SX1276Read
 18415  006CDE  6E45               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 18416                           
 18417                           ;../phy/sx1216/phy_src/phy.c: 647:     SX1276Write(0x12, irqFlags);
 18418  006CE0  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 18419  006CE6  0E12               	movlw	18
 18420  006CE8  EC48  F046         	call	_SX1276Write
 18421                           
 18422                           ;../phy/sx1216/phy_src/phy.c: 648:     SX1276Write(0x12, irqFlags);
 18423  006CEC  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 18424  006CF2  0E12               	movlw	18
 18425  006CF4  EC48  F046         	call	_SX1276Write
 18426                           
 18427                           ; BSR set to: 61
 18428                           ;../phy/sx1216/phy_src/phy.c: 650:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 18429  006CF8  AA45               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 18430                           
 18431                           ; BSR set to: 61
 18432  006CFA  AC45               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 18433  006CFC  D034               	goto	l15610
 18434                           
 18435                           ; BSR set to: 61
 18436  006CFE  BE45               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 18437  006D00  D032               	goto	l15610
 18438                           
 18439                           ; BSR set to: 61
 18440                           ;../phy/sx1216/phy_src/phy.c: 651:     {;../phy/sx1216/phy_src/phy.c: 652:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 653:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 656:         packetLength = SX1276Read(0x13);
 18441  006D02  0E13               	movlw	19
 18442  006D04  EC2A  F046         	call	_SX1276Read
 18443  006D08  6E44               	movwf	DIO0_Receive_ISR@packetLength^0,c
 18444                           
 18445                           ;../phy/sx1216/phy_src/phy.c: 659:         SX1276Write(0x0D, SX1276Read(0x10));
 18446  006D0A  0E10               	movlw	16
 18447  006D0C  EC2A  F046         	call	_SX1276Read
 18448  006D10  6E0F               	movwf	SX1276Write@data^0,c
 18449  006D12  0E0D               	movlw	13
 18450  006D14  EC48  F046         	call	_SX1276Write
 18451                           
 18452                           ;../phy/sx1216/phy_src/phy.c: 660:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 18453  006D18  0E40               	movlw	low _phyRxBuffer
 18454  006D1A  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 18455  006D1C  0E03               	movlw	high _phyRxBuffer
 18456  006D1E  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 18457  006D20  0060  F110  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 18458  006D26  0E00               	movlw	0
 18459  006D28  EC07  F044         	call	_SX1276ReadBuffer
 18460                           
 18461                           ;../phy/sx1216/phy_src/phy.c: 662:         SNR = SX1276Read(0x19);
 18462  006D2C  0E19               	movlw	25
 18463  006D2E  EC2A  F046         	call	_SX1276Read
 18464  006D32  0100               	movlb	0	; () banked
 18465  006D34  6FD0               	movwf	_SNR& (0+255),b
 18466                           
 18467                           ;../phy/sx1216/phy_src/phy.c: 663:         packetRSSI = SX1276Read(0x1A);
 18468  006D36  0E1A               	movlw	26
 18469  006D38  EC2A  F046         	call	_SX1276Read
 18470  006D3C  0100               	movlb	0	; () banked
 18471  006D3E  6FD1               	movwf	_packetRSSI& (0+255),b
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;../phy/sx1216/phy_src/phy.c: 664:         ind.data = phyRxBuffer;
 18475  006D40  0E40               	movlw	low _phyRxBuffer
 18476  006D42  6E46               	movwf	DIO0_Receive_ISR@ind^0,c
 18477  006D44  0E03               	movlw	high _phyRxBuffer
 18478  006D46  6E47               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;../phy/sx1216/phy_src/phy.c: 665:         ind.size = packetLength;
 18482  006D48  0060  F110  F048   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 18483                           
 18484                           ; BSR set to: 0
 18485                           ;../phy/sx1216/phy_src/phy.c: 666:         ind.rssi = get_rssi(packetRSSI);
 18486  006D4E  51D1               	movf	_packetRSSI& (0+255),w,b
 18487  006D50  ECA0  F043         	call	_get_rssi
 18488  006D54  6E4A               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 18489                           
 18490                           ;../phy/sx1216/phy_src/phy.c: 667:         ind.lqi = get_lqi(ind.rssi);
 18491  006D56  504A               	movf	(DIO0_Receive_ISR@ind+4)^0,w,c
 18492  006D58  EC84  F035         	call	_get_lqi
 18493  006D5C  6E49               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 18494                           
 18495                           ;../phy/sx1216/phy_src/phy.c: 668:         PHY_DataInd(&ind);
 18496  006D5E  0E46               	movlw	low DIO0_Receive_ISR@ind
 18497  006D60  6E13               	movwf	PHY_DataInd@ind^0,c
 18498  006D62  ECE1  F023         	call	_PHY_DataInd	;wreg free
 18499  006D66                     l15610:
 18500                           
 18501                           ;../phy/sx1216/phy_src/phy.c: 671:     receive(0);
 18502  006D66  0E00               	movlw	0
 18503  006D68  EC3E  F041         	call	_receive
 18504                           
 18505                           ; BSR set to: 61
 18506  006D6C  0012               	return		;funcret
 18507  006D6E                     __end_of_DIO0_Receive_ISR:
 18508                           	opt callstack 0
 18509                           
 18510 ;; *************** function _get_rssi *****************
 18511 ;; Defined at:
 18512 ;;		line 615 in file "../phy/sx1216/phy_src/phy.c"
 18513 ;; Parameters:    Size  Location     Type
 18514 ;;  rssi_reg        1    wreg     unsigned char 
 18515 ;; Auto vars:     Size  Location     Type
 18516 ;;  rssi_reg        1    1[COMRAM] unsigned char 
 18517 ;;  temp_rssi       2    2[COMRAM] short 
 18518 ;; Return value:  Size  Location     Type
 18519 ;;                  1    wreg      char 
 18520 ;; Registers used:
 18521 ;;		wreg, status,2, status,0
 18522 ;; Tracked objects:
 18523 ;;		On entry : 3F/0
 18524 ;;		On exit  : 0/0
 18525 ;;		Unchanged: 0/0
 18526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18528 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18531 ;;Total ram usage:        3 bytes
 18532 ;; Hardware stack levels used:    1
 18533 ;; Hardware stack levels required when called:    7
 18534 ;; This function calls:
 18535 ;;		Nothing
 18536 ;; This function is called by:
 18537 ;;		_DIO0_Receive_ISR
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text116
 18542  008740                     __ptext116:
 18543                           	opt callstack 0
 18544  008740                     _get_rssi:
 18545                           	opt callstack 19
 18546                           
 18547                           ; BSR set to: 61
 18548                           ;incstack = 0
 18549                           ;get_rssi@rssi_reg stored from wreg
 18550  008740  6E02               	movwf	get_rssi@rssi_reg^0,c
 18551                           
 18552                           ;../phy/sx1216/phy_src/phy.c: 616:     int16_t temp_rssi = -157 + rssi_reg;
 18553  008742  0E63               	movlw	99
 18554  008744  2402               	addwf	get_rssi@rssi_reg^0,w,c
 18555  008746  6E03               	movwf	get_rssi@temp_rssi^0,c
 18556  008748  6A04               	clrf	(get_rssi@temp_rssi+1)^0,c
 18557  00874A  0EFF               	movlw	255
 18558  00874C  2204               	addwfc	(get_rssi@temp_rssi+1)^0,f,c
 18559                           
 18560                           ;../phy/sx1216/phy_src/phy.c: 617:     if(temp_rssi < -127){
 18561  00874E  AE04               	btfss	(get_rssi@temp_rssi+1)^0,7,c
 18562  008750  D00A               	goto	l2646
 18563  008752  0E81               	movlw	129
 18564  008754  5C03               	subwf	get_rssi@temp_rssi^0,w,c
 18565  008756  0EFF               	movlw	255
 18566  008758  5804               	subwfb	(get_rssi@temp_rssi+1)^0,w,c
 18567  00875A  B0D8               	btfsc	status,0,c
 18568  00875C  D004               	goto	l2646
 18569                           
 18570                           ;../phy/sx1216/phy_src/phy.c: 618:         temp_rssi = -127;
 18571  00875E  0EFF               	movlw	255
 18572  008760  6E04               	movwf	(get_rssi@temp_rssi+1)^0,c
 18573  008762  0E81               	movlw	129
 18574  008764  6E03               	movwf	get_rssi@temp_rssi^0,c
 18575  008766                     l2646:
 18576                           
 18577                           ;../phy/sx1216/phy_src/phy.c: 620:     return (temp_rssi);
 18578  008766  5003               	movf	get_rssi@temp_rssi^0,w,c
 18579  008768  0012               	return		;funcret
 18580  00876A                     __end_of_get_rssi:
 18581                           	opt callstack 0
 18582                           
 18583 ;; *************** function _get_lqi *****************
 18584 ;; Defined at:
 18585 ;;		line 629 in file "../phy/sx1216/phy_src/phy.c"
 18586 ;; Parameters:    Size  Location     Type
 18587 ;;  rssi            1    wreg     char 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;  rssi            1   66[COMRAM] char 
 18590 ;; Return value:  Size  Location     Type
 18591 ;;                  1    wreg      unsigned char 
 18592 ;; Registers used:
 18593 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18594 ;; Tracked objects:
 18595 ;;		On entry : 0/0
 18596 ;;		On exit  : 0/0
 18597 ;;		Unchanged: 0/0
 18598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18603 ;;Total ram usage:        1 bytes
 18604 ;; Hardware stack levels used:    1
 18605 ;; Hardware stack levels required when called:    8
 18606 ;; This function calls:
 18607 ;;		___fladd
 18608 ;;		___flmul
 18609 ;;		___fltol
 18610 ;;		___xxtofl
 18611 ;; This function is called by:
 18612 ;;		_DIO0_Receive_ISR
 18613 ;; This function uses a non-reentrant model
 18614 ;;
 18615                           
 18616                           	psect	text117
 18617  006B08                     __ptext117:
 18618                           	opt callstack 0
 18619  006B08                     _get_lqi:
 18620                           	opt callstack 18
 18621                           
 18622                           ;incstack = 0
 18623                           ;get_lqi@rssi stored from wreg
 18624  006B08  6E43               	movwf	get_lqi@rssi^0,c
 18625                           
 18626                           ;../phy/sx1216/phy_src/phy.c: 630:     if(rssi > -10){
 18627  006B0A  5043               	movf	get_lqi@rssi^0,w,c
 18628  006B0C  0A80               	xorlw	128
 18629  006B0E  0F89               	addlw	137
 18630  006B10  A0D8               	btfss	status,0,c
 18631  006B12  D002               	goto	l15006
 18632                           
 18633                           ;../phy/sx1216/phy_src/phy.c: 631:         return 255;
 18634  006B14  0EFF               	movlw	255
 18635  006B16  0012               	return	
 18636  006B18                     l15006:
 18637                           
 18638                           ;../phy/sx1216/phy_src/phy.c: 633:     return ((2.18*(int16_t)rssi) + 10795);
 18639  006B18  0E00               	movlw	0
 18640  006B1A  6E2D               	movwf	___fladd@a^0,c
 18641  006B1C  0EAC               	movlw	172
 18642  006B1E  6E2E               	movwf	(___fladd@a+1)^0,c
 18643  006B20  0E28               	movlw	40
 18644  006B22  6E2F               	movwf	(___fladd@a+2)^0,c
 18645  006B24  0E46               	movlw	70
 18646  006B26  6E30               	movwf	(___fladd@a+3)^0,c
 18647  006B28  0E1F               	movlw	31
 18648  006B2A  6E14               	movwf	___flmul@a^0,c
 18649  006B2C  0E85               	movlw	133
 18650  006B2E  6E15               	movwf	(___flmul@a+1)^0,c
 18651  006B30  0E0B               	movlw	11
 18652  006B32  6E16               	movwf	(___flmul@a+2)^0,c
 18653  006B34  0E40               	movlw	64
 18654  006B36  6E17               	movwf	(___flmul@a+3)^0,c
 18655  006B38  5043               	movf	get_lqi@rssi^0,w,c
 18656  006B3A  6E02               	movwf	___xxtofl@val^0,c
 18657  006B3C  0E00               	movlw	0
 18658  006B3E  BE02               	btfsc	___xxtofl@val^0,7,c
 18659  006B40  0EFF               	movlw	-1
 18660  006B42  6E03               	movwf	(___xxtofl@val+1)^0,c
 18661  006B44  6E04               	movwf	(___xxtofl@val+2)^0,c
 18662  006B46  6E05               	movwf	(___xxtofl@val+3)^0,c
 18663  006B48  0E01               	movlw	1
 18664  006B4A  ECEE  F01F         	call	___xxtofl
 18665  006B4E  0060  F008  F010   	movff	?___xxtofl,___flmul@b
 18666  006B54  0060  F00C  F011   	movff	?___xxtofl+1,___flmul@b+1
 18667  006B5A  0060  F010  F012   	movff	?___xxtofl+2,___flmul@b+2
 18668  006B60  0060  F014  F013   	movff	?___xxtofl+3,___flmul@b+3
 18669  006B66  EC57  F009         	call	___flmul	;wreg free
 18670  006B6A  0060  F040  F029   	movff	?___flmul,___fladd@b
 18671  006B70  0060  F044  F02A   	movff	?___flmul+1,___fladd@b+1
 18672  006B76  0060  F048  F02B   	movff	?___flmul+2,___fladd@b+2
 18673  006B7C  0060  F04C  F02C   	movff	?___flmul+3,___fladd@b+3
 18674  006B82  ECD0  F00C         	call	___fladd	;wreg free
 18675  006B86  0060  F0A4  F039   	movff	?___fladd,___fltol@f1
 18676  006B8C  0060  F0A8  F03A   	movff	?___fladd+1,___fltol@f1+1
 18677  006B92  0060  F0AC  F03B   	movff	?___fladd+2,___fltol@f1+2
 18678  006B98  0060  F0B0  F03C   	movff	?___fladd+3,___fltol@f1+3
 18679  006B9E  EC3D  F030         	call	___fltol	;wreg free
 18680  006BA2  5039               	movf	?___fltol^0,w,c
 18681  006BA4  0012               	return		;funcret
 18682  006BA6                     __end_of_get_lqi:
 18683                           	opt callstack 0
 18684                           
 18685 ;; *************** function ___fltol *****************
 18686 ;; Defined at:
 18687 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  f1              4   56[COMRAM] unsigned char 
 18690 ;; Auto vars:     Size  Location     Type
 18691 ;;  exp1            1   65[COMRAM] unsigned char 
 18692 ;;  sign1           1   64[COMRAM] unsigned char 
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  4   56[COMRAM] long 
 18695 ;; Registers used:
 18696 ;;		wreg, status,2, status,0
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18705 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18706 ;;Total ram usage:       10 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; Hardware stack levels required when called:    7
 18709 ;; This function calls:
 18710 ;;		Nothing
 18711 ;; This function is called by:
 18712 ;;		_get_lqi
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           	psect	text118
 18717  00607A                     __ptext118:
 18718                           	opt callstack 0
 18719  00607A                     ___fltol:
 18720                           	opt callstack 18
 18721                           
 18722                           ;incstack = 0
 18723  00607A  343B               	rlcf	(___fltol@f1+2)^0,w,c
 18724  00607C  343C               	rlcf	(___fltol@f1+3)^0,w,c
 18725  00607E  6E42               	movwf	___fltol@exp1^0,c
 18726  006080  5042               	movf	___fltol@exp1^0,w,c
 18727  006082  A4D8               	btfss	status,2,c
 18728  006084  D009               	goto	l10462
 18729  006086                     u8750:
 18730  006086  0E00               	movlw	0
 18731  006088  6E39               	movwf	?___fltol^0,c
 18732  00608A  0E00               	movlw	0
 18733  00608C  6E3A               	movwf	(?___fltol+1)^0,c
 18734  00608E  0E00               	movlw	0
 18735  006090  6E3B               	movwf	(?___fltol+2)^0,c
 18736  006092  0E00               	movlw	0
 18737  006094  6E3C               	movwf	(?___fltol+3)^0,c
 18738  006096  0012               	return	
 18739  006098                     l10462:
 18740  006098  0060  F0E4  F03D   	movff	___fltol@f1,??___fltol
 18741  00609E  0060  F0E8  F03E   	movff	___fltol@f1+1,??___fltol+1
 18742  0060A4  0060  F0EC  F03F   	movff	___fltol@f1+2,??___fltol+2
 18743  0060AA  0060  F0F0  F040   	movff	___fltol@f1+3,??___fltol+3
 18744  0060B0  0E20               	movlw	32
 18745  0060B2  D005               	goto	u8760
 18746  0060B4                     u8765:
 18747  0060B4  90D8               	bcf	status,0,c
 18748  0060B6  3240               	rrcf	(??___fltol+3)^0,f,c
 18749  0060B8  323F               	rrcf	(??___fltol+2)^0,f,c
 18750  0060BA  323E               	rrcf	(??___fltol+1)^0,f,c
 18751  0060BC  323D               	rrcf	??___fltol^0,f,c
 18752  0060BE                     u8760:
 18753  0060BE  2EE8               	decfsz	wreg,f,c
 18754  0060C0  D7F9               	goto	u8765
 18755  0060C2  503D               	movf	??___fltol^0,w,c
 18756  0060C4  6E41               	movwf	___fltol@sign1^0,c
 18757  0060C6  8E3B               	bsf	(___fltol@f1+2)^0,7,c
 18758  0060C8  0EFF               	movlw	255
 18759  0060CA  1639               	andwf	___fltol@f1^0,f,c
 18760  0060CC  0EFF               	movlw	255
 18761  0060CE  163A               	andwf	(___fltol@f1+1)^0,f,c
 18762  0060D0  0EFF               	movlw	255
 18763  0060D2  163B               	andwf	(___fltol@f1+2)^0,f,c
 18764  0060D4  0E00               	movlw	0
 18765  0060D6  163C               	andwf	(___fltol@f1+3)^0,f,c
 18766  0060D8  0E96               	movlw	150
 18767  0060DA  5E42               	subwf	___fltol@exp1^0,f,c
 18768  0060DC  AE42               	btfss	___fltol@exp1^0,7,c
 18769  0060DE  D00D               	goto	l10482
 18770  0060E0  5042               	movf	___fltol@exp1^0,w,c
 18771  0060E2  0A80               	xorlw	128
 18772  0060E4  0F97               	addlw	151
 18773  0060E6  A0D8               	btfss	status,0,c
 18774  0060E8  D7CE               	goto	u8750
 18775  0060EA                     l10478:
 18776  0060EA  90D8               	bcf	status,0,c
 18777  0060EC  323C               	rrcf	(___fltol@f1+3)^0,f,c
 18778  0060EE  323B               	rrcf	(___fltol@f1+2)^0,f,c
 18779  0060F0  323A               	rrcf	(___fltol@f1+1)^0,f,c
 18780  0060F2  3239               	rrcf	___fltol@f1^0,f,c
 18781  0060F4  3E42               	incfsz	___fltol@exp1^0,f,c
 18782  0060F6  D7F9               	goto	l10478
 18783  0060F8  D00D               	goto	u8800
 18784  0060FA                     l10482:
 18785  0060FA  0E1F               	movlw	31
 18786  0060FC  6442               	cpfsgt	___fltol@exp1^0,c
 18787  0060FE  D007               	goto	l10490
 18788  006100  D7C2               	goto	u8750
 18789  006102                     l10488:
 18790  006102  90D8               	bcf	status,0,c
 18791  006104  3639               	rlcf	___fltol@f1^0,f,c
 18792  006106  363A               	rlcf	(___fltol@f1+1)^0,f,c
 18793  006108  363B               	rlcf	(___fltol@f1+2)^0,f,c
 18794  00610A  363C               	rlcf	(___fltol@f1+3)^0,f,c
 18795  00610C  0642               	decf	___fltol@exp1^0,f,c
 18796  00610E                     l10490:
 18797  00610E  5042               	movf	___fltol@exp1^0,w,c
 18798  006110  A4D8               	btfss	status,2,c
 18799  006112  D7F7               	goto	l10488
 18800  006114                     u8800:
 18801  006114  5041               	movf	___fltol@sign1^0,w,c
 18802  006116  B4D8               	btfsc	status,2,c
 18803  006118  D008               	goto	l10496
 18804  00611A  1E3C               	comf	(___fltol@f1+3)^0,f,c
 18805  00611C  1E3B               	comf	(___fltol@f1+2)^0,f,c
 18806  00611E  1E3A               	comf	(___fltol@f1+1)^0,f,c
 18807  006120  6C39               	negf	___fltol@f1^0,c
 18808  006122  0E00               	movlw	0
 18809  006124  223A               	addwfc	(___fltol@f1+1)^0,f,c
 18810  006126  223B               	addwfc	(___fltol@f1+2)^0,f,c
 18811  006128  223C               	addwfc	(___fltol@f1+3)^0,f,c
 18812  00612A                     l10496:
 18813  00612A  0060  F0E4  F039   	movff	___fltol@f1,?___fltol
 18814  006130  0060  F0E8  F03A   	movff	___fltol@f1+1,?___fltol+1
 18815  006136  0060  F0EC  F03B   	movff	___fltol@f1+2,?___fltol+2
 18816  00613C  0060  F0F0  F03C   	movff	___fltol@f1+3,?___fltol+3
 18817  006142  0012               	return		;funcret
 18818  006144                     __end_of___fltol:
 18819                           	opt callstack 0
 18820                           
 18821 ;; *************** function ___flmul *****************
 18822 ;; Defined at:
 18823 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  b               4   15[COMRAM] long 
 18826 ;;  a               4   19[COMRAM] long 
 18827 ;; Auto vars:     Size  Location     Type
 18828 ;;  prod            4   34[COMRAM] struct .
 18829 ;;  grs             4   29[COMRAM] unsigned long 
 18830 ;;  temp            2   38[COMRAM] struct .
 18831 ;;  bexp            1   33[COMRAM] unsigned char 
 18832 ;;  aexp            1   28[COMRAM] unsigned char 
 18833 ;;  sign            1   27[COMRAM] unsigned char 
 18834 ;; Return value:  Size  Location     Type
 18835 ;;                  4   15[COMRAM] unsigned char 
 18836 ;; Registers used:
 18837 ;;		wreg, status,2, status,0, prodl, prodh
 18838 ;; Tracked objects:
 18839 ;;		On entry : 0/0
 18840 ;;		On exit  : 0/0
 18841 ;;		Unchanged: 0/0
 18842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18843 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18844 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18846 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18847 ;;Total ram usage:       25 bytes
 18848 ;; Hardware stack levels used:    1
 18849 ;; Hardware stack levels required when called:    7
 18850 ;; This function calls:
 18851 ;;		Nothing
 18852 ;; This function is called by:
 18853 ;;		_get_lqi
 18854 ;; This function uses a non-reentrant model
 18855 ;;
 18856                           
 18857                           	psect	text119
 18858  0012AE                     __ptext119:
 18859                           	opt callstack 0
 18860  0012AE                     ___flmul:
 18861                           	opt callstack 18
 18862                           
 18863                           ;incstack = 0
 18864  0012AE  5013               	movf	(___flmul@b+3)^0,w,c
 18865  0012B0  0B80               	andlw	128
 18866  0012B2  6E1C               	movwf	___flmul@sign^0,c
 18867  0012B4  5013               	movf	(___flmul@b+3)^0,w,c
 18868  0012B6  2413               	addwf	(___flmul@b+3)^0,w,c
 18869  0012B8  6E22               	movwf	___flmul@bexp^0,c
 18870  0012BA  BE12               	btfsc	(___flmul@b+2)^0,7,c
 18871  0012BC  8022               	bsf	___flmul@bexp^0,0,c
 18872  0012BE  5022               	movf	___flmul@bexp^0,w,c
 18873  0012C0  B4D8               	btfsc	status,2,c
 18874  0012C2  D00D               	goto	l10318
 18875  0012C4  2822               	incf	___flmul@bexp^0,w,c
 18876  0012C6  A4D8               	btfss	status,2,c
 18877  0012C8  D008               	goto	l10316
 18878  0012CA  0E00               	movlw	0
 18879  0012CC  6E10               	movwf	___flmul@b^0,c
 18880  0012CE  0E00               	movlw	0
 18881  0012D0  6E11               	movwf	(___flmul@b+1)^0,c
 18882  0012D2  0E00               	movlw	0
 18883  0012D4  6E12               	movwf	(___flmul@b+2)^0,c
 18884  0012D6  0E00               	movlw	0
 18885  0012D8  6E13               	movwf	(___flmul@b+3)^0,c
 18886  0012DA                     l10316:
 18887  0012DA  8E12               	bsf	(___flmul@b+2)^0,7,c
 18888  0012DC  D008               	goto	l10320
 18889  0012DE                     l10318:
 18890  0012DE  0E00               	movlw	0
 18891  0012E0  6E10               	movwf	___flmul@b^0,c
 18892  0012E2  0E00               	movlw	0
 18893  0012E4  6E11               	movwf	(___flmul@b+1)^0,c
 18894  0012E6  0E00               	movlw	0
 18895  0012E8  6E12               	movwf	(___flmul@b+2)^0,c
 18896  0012EA  0E00               	movlw	0
 18897  0012EC  6E13               	movwf	(___flmul@b+3)^0,c
 18898  0012EE                     l10320:
 18899  0012EE  5017               	movf	(___flmul@a+3)^0,w,c
 18900  0012F0  0B80               	andlw	128
 18901  0012F2  1A1C               	xorwf	___flmul@sign^0,f,c
 18902  0012F4  5017               	movf	(___flmul@a+3)^0,w,c
 18903  0012F6  2417               	addwf	(___flmul@a+3)^0,w,c
 18904  0012F8  6E1D               	movwf	___flmul@aexp^0,c
 18905  0012FA  BE16               	btfsc	(___flmul@a+2)^0,7,c
 18906  0012FC  801D               	bsf	___flmul@aexp^0,0,c
 18907  0012FE  501D               	movf	___flmul@aexp^0,w,c
 18908  001300  B4D8               	btfsc	status,2,c
 18909  001302  D00D               	goto	l10336
 18910  001304  281D               	incf	___flmul@aexp^0,w,c
 18911  001306  A4D8               	btfss	status,2,c
 18912  001308  D008               	goto	l10334
 18913  00130A  0E00               	movlw	0
 18914  00130C  6E14               	movwf	___flmul@a^0,c
 18915  00130E  0E00               	movlw	0
 18916  001310  6E15               	movwf	(___flmul@a+1)^0,c
 18917  001312  0E00               	movlw	0
 18918  001314  6E16               	movwf	(___flmul@a+2)^0,c
 18919  001316  0E00               	movlw	0
 18920  001318  6E17               	movwf	(___flmul@a+3)^0,c
 18921  00131A                     l10334:
 18922  00131A  8E16               	bsf	(___flmul@a+2)^0,7,c
 18923  00131C  D008               	goto	l3819
 18924  00131E                     l10336:
 18925  00131E  0E00               	movlw	0
 18926  001320  6E14               	movwf	___flmul@a^0,c
 18927  001322  0E00               	movlw	0
 18928  001324  6E15               	movwf	(___flmul@a+1)^0,c
 18929  001326  0E00               	movlw	0
 18930  001328  6E16               	movwf	(___flmul@a+2)^0,c
 18931  00132A  0E00               	movlw	0
 18932  00132C  6E17               	movwf	(___flmul@a+3)^0,c
 18933  00132E                     l3819:
 18934  00132E  501D               	movf	___flmul@aexp^0,w,c
 18935  001330  B4D8               	btfsc	status,2,c
 18936  001332  D003               	goto	u8590
 18937  001334  5022               	movf	___flmul@bexp^0,w,c
 18938  001336  A4D8               	btfss	status,2,c
 18939  001338  D009               	goto	l10344
 18940  00133A                     u8590:
 18941  00133A  0E00               	movlw	0
 18942  00133C  6E10               	movwf	?___flmul^0,c
 18943  00133E  0E00               	movlw	0
 18944  001340  6E11               	movwf	(?___flmul+1)^0,c
 18945  001342  0E00               	movlw	0
 18946  001344  6E12               	movwf	(?___flmul+2)^0,c
 18947  001346  0E00               	movlw	0
 18948  001348  6E13               	movwf	(?___flmul+3)^0,c
 18949  00134A  0012               	return	
 18950  00134C                     l10344:
 18951  00134C  5016               	movf	(___flmul@a+2)^0,w,c
 18952  00134E  0210               	mulwf	___flmul@b^0,c
 18953  001350  006F FFCC  F027    	movff	prodl,___flmul@temp
 18954  001356  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 18955  00135C  5027               	movf	___flmul@temp^0,w,c
 18956  00135E  6E1E               	movwf	___flmul@grs^0,c
 18957  001360  6A1F               	clrf	(___flmul@grs+1)^0,c
 18958  001362  6A20               	clrf	(___flmul@grs+2)^0,c
 18959  001364  6A21               	clrf	(___flmul@grs+3)^0,c
 18960  001366  5028               	movf	(___flmul@temp+1)^0,w,c
 18961  001368  6E23               	movwf	___flmul@prod^0,c
 18962  00136A  6A24               	clrf	(___flmul@prod+1)^0,c
 18963  00136C  6A25               	clrf	(___flmul@prod+2)^0,c
 18964  00136E  6A26               	clrf	(___flmul@prod+3)^0,c
 18965  001370  5015               	movf	(___flmul@a+1)^0,w,c
 18966  001372  0211               	mulwf	(___flmul@b+1)^0,c
 18967  001374  006F FFCC  F027    	movff	prodl,___flmul@temp
 18968  00137A  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 18969  001380  5027               	movf	___flmul@temp^0,w,c
 18970  001382  261E               	addwf	___flmul@grs^0,f,c
 18971  001384  0E00               	movlw	0
 18972  001386  221F               	addwfc	(___flmul@grs+1)^0,f,c
 18973  001388  2220               	addwfc	(___flmul@grs+2)^0,f,c
 18974  00138A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 18975  00138C  5028               	movf	(___flmul@temp+1)^0,w,c
 18976  00138E  2623               	addwf	___flmul@prod^0,f,c
 18977  001390  0E00               	movlw	0
 18978  001392  2224               	addwfc	(___flmul@prod+1)^0,f,c
 18979  001394  2225               	addwfc	(___flmul@prod+2)^0,f,c
 18980  001396  2226               	addwfc	(___flmul@prod+3)^0,f,c
 18981  001398  5014               	movf	___flmul@a^0,w,c
 18982  00139A  0212               	mulwf	(___flmul@b+2)^0,c
 18983  00139C  006F FFCC  F027    	movff	prodl,___flmul@temp
 18984  0013A2  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 18985  0013A8  5027               	movf	___flmul@temp^0,w,c
 18986  0013AA  261E               	addwf	___flmul@grs^0,f,c
 18987  0013AC  0E00               	movlw	0
 18988  0013AE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 18989  0013B0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 18990  0013B2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 18991  0013B4  5028               	movf	(___flmul@temp+1)^0,w,c
 18992  0013B6  2623               	addwf	___flmul@prod^0,f,c
 18993  0013B8  0E00               	movlw	0
 18994  0013BA  2224               	addwfc	(___flmul@prod+1)^0,f,c
 18995  0013BC  2225               	addwfc	(___flmul@prod+2)^0,f,c
 18996  0013BE  2226               	addwfc	(___flmul@prod+3)^0,f,c
 18997  0013C0  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 18998  0013C6  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 18999  0013CC  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19000  0013D2  6A1E               	clrf	___flmul@grs^0,c
 19001  0013D4  5014               	movf	___flmul@a^0,w,c
 19002  0013D6  0211               	mulwf	(___flmul@b+1)^0,c
 19003  0013D8  006F FFCC  F027    	movff	prodl,___flmul@temp
 19004  0013DE  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19005  0013E4  5027               	movf	___flmul@temp^0,w,c
 19006  0013E6  261E               	addwf	___flmul@grs^0,f,c
 19007  0013E8  5028               	movf	(___flmul@temp+1)^0,w,c
 19008  0013EA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19009  0013EC  0E00               	movlw	0
 19010  0013EE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19011  0013F0  0E00               	movlw	0
 19012  0013F2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19013  0013F4  5015               	movf	(___flmul@a+1)^0,w,c
 19014  0013F6  0210               	mulwf	___flmul@b^0,c
 19015  0013F8  006F FFCC  F027    	movff	prodl,___flmul@temp
 19016  0013FE  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19017  001404  5027               	movf	___flmul@temp^0,w,c
 19018  001406  261E               	addwf	___flmul@grs^0,f,c
 19019  001408  5028               	movf	(___flmul@temp+1)^0,w,c
 19020  00140A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19021  00140C  0E00               	movlw	0
 19022  00140E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19023  001410  0E00               	movlw	0
 19024  001412  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19025  001414  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19026  00141A  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19027  001420  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19028  001426  6A1E               	clrf	___flmul@grs^0,c
 19029  001428  5014               	movf	___flmul@a^0,w,c
 19030  00142A  0210               	mulwf	___flmul@b^0,c
 19031  00142C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19032  001432  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19033  001438  5027               	movf	___flmul@temp^0,w,c
 19034  00143A  261E               	addwf	___flmul@grs^0,f,c
 19035  00143C  5028               	movf	(___flmul@temp+1)^0,w,c
 19036  00143E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19037  001440  0E00               	movlw	0
 19038  001442  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19039  001444  0E00               	movlw	0
 19040  001446  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19041  001448  5016               	movf	(___flmul@a+2)^0,w,c
 19042  00144A  0211               	mulwf	(___flmul@b+1)^0,c
 19043  00144C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19044  001452  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19045  001458  5027               	movf	___flmul@temp^0,w,c
 19046  00145A  2623               	addwf	___flmul@prod^0,f,c
 19047  00145C  5028               	movf	(___flmul@temp+1)^0,w,c
 19048  00145E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19049  001460  0E00               	movlw	0
 19050  001462  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19051  001464  0E00               	movlw	0
 19052  001466  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19053  001468  5015               	movf	(___flmul@a+1)^0,w,c
 19054  00146A  0212               	mulwf	(___flmul@b+2)^0,c
 19055  00146C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19056  001472  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19057  001478  5027               	movf	___flmul@temp^0,w,c
 19058  00147A  2623               	addwf	___flmul@prod^0,f,c
 19059  00147C  5028               	movf	(___flmul@temp+1)^0,w,c
 19060  00147E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19061  001480  0E00               	movlw	0
 19062  001482  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19063  001484  0E00               	movlw	0
 19064  001486  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19065  001488  5016               	movf	(___flmul@a+2)^0,w,c
 19066  00148A  0212               	mulwf	(___flmul@b+2)^0,c
 19067  00148C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19068  001492  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19069  001498  5027               	movf	___flmul@temp^0,w,c
 19070  00149A  6E18               	movwf	??___flmul^0,c
 19071  00149C  5028               	movf	(___flmul@temp+1)^0,w,c
 19072  00149E  6E19               	movwf	(??___flmul+1)^0,c
 19073  0014A0  6A1A               	clrf	(??___flmul+2)^0,c
 19074  0014A2  6A1B               	clrf	(??___flmul+3)^0,c
 19075  0014A4  0060  F068  F01B   	movff	??___flmul+2,??___flmul+3
 19076  0014AA  0060  F064  F01A   	movff	??___flmul+1,??___flmul+2
 19077  0014B0  0060  F060  F019   	movff	??___flmul,??___flmul+1
 19078  0014B6  6A18               	clrf	??___flmul^0,c
 19079  0014B8  5018               	movf	??___flmul^0,w,c
 19080  0014BA  2623               	addwf	___flmul@prod^0,f,c
 19081  0014BC  5019               	movf	(??___flmul+1)^0,w,c
 19082  0014BE  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19083  0014C0  501A               	movf	(??___flmul+2)^0,w,c
 19084  0014C2  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19085  0014C4  501B               	movf	(??___flmul+3)^0,w,c
 19086  0014C6  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19087  0014C8  5021               	movf	(___flmul@grs+3)^0,w,c
 19088  0014CA  2623               	addwf	___flmul@prod^0,f,c
 19089  0014CC  0E00               	movlw	0
 19090  0014CE  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19091  0014D0  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19092  0014D2  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19093  0014D4  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19094  0014DA  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19095  0014E0  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19096  0014E6  6A1E               	clrf	___flmul@grs^0,c
 19097  0014E8  501D               	movf	___flmul@aexp^0,w,c
 19098  0014EA  0060  F088  F018   	movff	___flmul@bexp,??___flmul
 19099  0014F0  6A19               	clrf	(??___flmul+1)^0,c
 19100  0014F2  2618               	addwf	??___flmul^0,f,c
 19101  0014F4  0E00               	movlw	0
 19102  0014F6  2219               	addwfc	(??___flmul+1)^0,f,c
 19103  0014F8  0E82               	movlw	130
 19104  0014FA  2418               	addwf	??___flmul^0,w,c
 19105  0014FC  6E27               	movwf	___flmul@temp^0,c
 19106  0014FE  0EFF               	movlw	255
 19107  001500  2019               	addwfc	(??___flmul+1)^0,w,c
 19108  001502  6E28               	movwf	(___flmul@temp+1)^0,c
 19109  001504  D00F               	goto	l10392
 19110  001506                     l10386:
 19111  001506  90D8               	bcf	status,0,c
 19112  001508  3623               	rlcf	___flmul@prod^0,f,c
 19113  00150A  3624               	rlcf	(___flmul@prod+1)^0,f,c
 19114  00150C  3625               	rlcf	(___flmul@prod+2)^0,f,c
 19115  00150E  3626               	rlcf	(___flmul@prod+3)^0,f,c
 19116  001510  BE21               	btfsc	(___flmul@grs+3)^0,7,c
 19117  001512  8023               	bsf	___flmul@prod^0,0,c
 19118  001514  90D8               	bcf	status,0,c
 19119  001516  361E               	rlcf	___flmul@grs^0,f,c
 19120  001518  361F               	rlcf	(___flmul@grs+1)^0,f,c
 19121  00151A  3620               	rlcf	(___flmul@grs+2)^0,f,c
 19122  00151C  3621               	rlcf	(___flmul@grs+3)^0,f,c
 19123  00151E  0627               	decf	___flmul@temp^0,f,c
 19124  001520  A0D8               	btfss	status,0,c
 19125  001522  0628               	decf	(___flmul@temp+1)^0,f,c
 19126  001524                     l10392:
 19127  001524  AE25               	btfss	(___flmul@prod+2)^0,7,c
 19128  001526  D7EF               	goto	l10386
 19129  001528  0E00               	movlw	0
 19130  00152A  6E1D               	movwf	___flmul@aexp^0,c
 19131  00152C  AE21               	btfss	(___flmul@grs+3)^0,7,c
 19132  00152E  D017               	goto	l3828
 19133  001530  0EFF               	movlw	255
 19134  001532  141E               	andwf	___flmul@grs^0,w,c
 19135  001534  6E18               	movwf	??___flmul^0,c
 19136  001536  0EFF               	movlw	255
 19137  001538  141F               	andwf	(___flmul@grs+1)^0,w,c
 19138  00153A  6E19               	movwf	(??___flmul+1)^0,c
 19139  00153C  0EFF               	movlw	255
 19140  00153E  1420               	andwf	(___flmul@grs+2)^0,w,c
 19141  001540  6E1A               	movwf	(??___flmul+2)^0,c
 19142  001542  0E7F               	movlw	127
 19143  001544  1421               	andwf	(___flmul@grs+3)^0,w,c
 19144  001546  6E1B               	movwf	(??___flmul+3)^0,c
 19145  001548  5018               	movf	??___flmul^0,w,c
 19146  00154A  1019               	iorwf	(??___flmul+1)^0,w,c
 19147  00154C  101A               	iorwf	(??___flmul+2)^0,w,c
 19148  00154E  101B               	iorwf	(??___flmul+3)^0,w,c
 19149  001550  B4D8               	btfsc	status,2,c
 19150  001552  D003               	goto	l3829
 19151  001554                     u8630:
 19152  001554  0E01               	movlw	1
 19153  001556  6E1D               	movwf	___flmul@aexp^0,c
 19154  001558  D002               	goto	l3828
 19155  00155A                     l3829:
 19156  00155A  B023               	btfsc	___flmul@prod^0,0,c
 19157  00155C  D7FB               	goto	u8630
 19158  00155E                     l3828:
 19159  00155E  501D               	movf	___flmul@aexp^0,w,c
 19160  001560  B4D8               	btfsc	status,2,c
 19161  001562  D027               	goto	l10412
 19162  001564  0E01               	movlw	1
 19163  001566  2623               	addwf	___flmul@prod^0,f,c
 19164  001568  0E00               	movlw	0
 19165  00156A  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19166  00156C  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19167  00156E  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19168  001570  A026               	btfss	(___flmul@prod+3)^0,0,c
 19169  001572  D01F               	goto	l10412
 19170  001574  0060  F08C  F018   	movff	___flmul@prod,??___flmul
 19171  00157A  0060  F090  F019   	movff	___flmul@prod+1,??___flmul+1
 19172  001580  0060  F094  F01A   	movff	___flmul@prod+2,??___flmul+2
 19173  001586  0060  F098  F01B   	movff	___flmul@prod+3,??___flmul+3
 19174  00158C  341B               	rlcf	(??___flmul+3)^0,w,c
 19175  00158E  321B               	rrcf	(??___flmul+3)^0,f,c
 19176  001590  321A               	rrcf	(??___flmul+2)^0,f,c
 19177  001592  3219               	rrcf	(??___flmul+1)^0,f,c
 19178  001594  3218               	rrcf	??___flmul^0,f,c
 19179  001596  0060  F060  F023   	movff	??___flmul,___flmul@prod
 19180  00159C  0060  F064  F024   	movff	??___flmul+1,___flmul@prod+1
 19181  0015A2  0060  F068  F025   	movff	??___flmul+2,___flmul@prod+2
 19182  0015A8  0060  F06C  F026   	movff	??___flmul+3,___flmul@prod+3
 19183  0015AE  4A27               	infsnz	___flmul@temp^0,f,c
 19184  0015B0  2A28               	incf	(___flmul@temp+1)^0,f,c
 19185  0015B2                     l10412:
 19186  0015B2  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 19187  0015B4  D00D               	goto	l10416
 19188  0015B6  5028               	movf	(___flmul@temp+1)^0,w,c
 19189  0015B8  E103               	bnz	u8670
 19190  0015BA  2827               	incf	___flmul@temp^0,w,c
 19191  0015BC  A0D8               	btfss	status,0,c
 19192  0015BE  D008               	goto	l10416
 19193  0015C0                     u8670:
 19194  0015C0  0E00               	movlw	0
 19195  0015C2  6E23               	movwf	___flmul@prod^0,c
 19196  0015C4  0E00               	movlw	0
 19197  0015C6  6E24               	movwf	(___flmul@prod+1)^0,c
 19198  0015C8  0E80               	movlw	128
 19199  0015CA  6E25               	movwf	(___flmul@prod+2)^0,c
 19200  0015CC  0E7F               	movlw	127
 19201  0015CE  D021               	goto	L11
 19202  0015D0                     l10416:
 19203  0015D0  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 19204  0015D2  D005               	goto	u8680
 19205  0015D4  5028               	movf	(___flmul@temp+1)^0,w,c
 19206  0015D6  E10E               	bnz	l3836
 19207  0015D8  0427               	decf	___flmul@temp^0,w,c
 19208  0015DA  B0D8               	btfsc	status,0,c
 19209  0015DC  D00B               	goto	l3836
 19210  0015DE                     u8680:
 19211  0015DE  0E00               	movlw	0
 19212  0015E0  6E23               	movwf	___flmul@prod^0,c
 19213  0015E2  0E00               	movlw	0
 19214  0015E4  6E24               	movwf	(___flmul@prod+1)^0,c
 19215  0015E6  0E00               	movlw	0
 19216  0015E8  6E25               	movwf	(___flmul@prod+2)^0,c
 19217  0015EA  0E00               	movlw	0
 19218  0015EC  6E26               	movwf	(___flmul@prod+3)^0,c
 19219  0015EE  0E00               	movlw	0
 19220  0015F0  6E1C               	movwf	___flmul@sign^0,c
 19221  0015F2  D010               	goto	l10428
 19222  0015F4                     l3836:
 19223  0015F4  0060  F09C  F022   	movff	___flmul@temp,___flmul@bexp
 19224  0015FA  0EFF               	movlw	255
 19225  0015FC  1623               	andwf	___flmul@prod^0,f,c
 19226  0015FE  0EFF               	movlw	255
 19227  001600  1624               	andwf	(___flmul@prod+1)^0,f,c
 19228  001602  0E7F               	movlw	127
 19229  001604  1625               	andwf	(___flmul@prod+2)^0,f,c
 19230  001606  0E00               	movlw	0
 19231  001608  1626               	andwf	(___flmul@prod+3)^0,f,c
 19232  00160A  B022               	btfsc	___flmul@bexp^0,0,c
 19233  00160C  8E25               	bsf	(___flmul@prod+2)^0,7,c
 19234  00160E  90D8               	bcf	status,0,c
 19235  001610  3022               	rrcf	___flmul@bexp^0,w,c
 19236  001612                     L11:
 19237  001612  6E26               	movwf	(___flmul@prod+3)^0,c
 19238  001614                     l10428:
 19239  001614  501C               	movf	___flmul@sign^0,w,c
 19240  001616  1226               	iorwf	(___flmul@prod+3)^0,f,c
 19241  001618  0060  F08C  F010   	movff	___flmul@prod,?___flmul
 19242  00161E  0060  F090  F011   	movff	___flmul@prod+1,?___flmul+1
 19243  001624  0060  F094  F012   	movff	___flmul@prod+2,?___flmul+2
 19244  00162A  0060  F098  F013   	movff	___flmul@prod+3,?___flmul+3
 19245  001630  0012               	return		;funcret
 19246  001632                     __end_of___flmul:
 19247                           	opt callstack 0
 19248                           
 19249 ;; *************** function ___fladd *****************
 19250 ;; Defined at:
 19251 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 19252 ;; Parameters:    Size  Location     Type
 19253 ;;  b               4   40[COMRAM] unsigned char 
 19254 ;;  a               4   44[COMRAM] unsigned char 
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;  grs             1   55[COMRAM] unsigned char 
 19257 ;;  bexp            1   54[COMRAM] unsigned char 
 19258 ;;  aexp            1   53[COMRAM] unsigned char 
 19259 ;;  signs           1   52[COMRAM] unsigned char 
 19260 ;; Return value:  Size  Location     Type
 19261 ;;                  4   40[COMRAM] unsigned char 
 19262 ;; Registers used:
 19263 ;;		wreg, status,2, status,0
 19264 ;; Tracked objects:
 19265 ;;		On entry : 0/0
 19266 ;;		On exit  : 0/0
 19267 ;;		Unchanged: 0/0
 19268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19269 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19270 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19272 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19273 ;;Total ram usage:       16 bytes
 19274 ;; Hardware stack levels used:    1
 19275 ;; Hardware stack levels required when called:    7
 19276 ;; This function calls:
 19277 ;;		Nothing
 19278 ;; This function is called by:
 19279 ;;		_get_lqi
 19280 ;; This function uses a non-reentrant model
 19281 ;;
 19282                           
 19283                           	psect	text120
 19284  0019A0                     __ptext120:
 19285                           	opt callstack 0
 19286  0019A0                     ___fladd:
 19287                           	opt callstack 18
 19288                           
 19289                           ;incstack = 0
 19290  0019A0  502C               	movf	(___fladd@b+3)^0,w,c
 19291  0019A2  0B80               	andlw	128
 19292  0019A4  6E35               	movwf	___fladd@signs^0,c
 19293  0019A6  502C               	movf	(___fladd@b+3)^0,w,c
 19294  0019A8  242C               	addwf	(___fladd@b+3)^0,w,c
 19295  0019AA  6E37               	movwf	___fladd@bexp^0,c
 19296  0019AC  BE2B               	btfsc	(___fladd@b+2)^0,7,c
 19297  0019AE  8037               	bsf	___fladd@bexp^0,0,c
 19298  0019B0  5037               	movf	___fladd@bexp^0,w,c
 19299  0019B2  B4D8               	btfsc	status,2,c
 19300  0019B4  D00D               	goto	l10118
 19301  0019B6  2837               	incf	___fladd@bexp^0,w,c
 19302  0019B8  A4D8               	btfss	status,2,c
 19303  0019BA  D008               	goto	l10114
 19304  0019BC  0E00               	movlw	0
 19305  0019BE  6E29               	movwf	___fladd@b^0,c
 19306  0019C0  0E00               	movlw	0
 19307  0019C2  6E2A               	movwf	(___fladd@b+1)^0,c
 19308  0019C4  0E00               	movlw	0
 19309  0019C6  6E2B               	movwf	(___fladd@b+2)^0,c
 19310  0019C8  0E00               	movlw	0
 19311  0019CA  6E2C               	movwf	(___fladd@b+3)^0,c
 19312  0019CC                     l10114:
 19313  0019CC  8E2B               	bsf	(___fladd@b+2)^0,7,c
 19314  0019CE  D006               	goto	L12
 19315  0019D0                     l10118:
 19316  0019D0  0E00               	movlw	0
 19317  0019D2  6E29               	movwf	___fladd@b^0,c
 19318  0019D4  0E00               	movlw	0
 19319  0019D6  6E2A               	movwf	(___fladd@b+1)^0,c
 19320  0019D8  0E00               	movlw	0
 19321  0019DA  6E2B               	movwf	(___fladd@b+2)^0,c
 19322  0019DC                     L12:
 19323  0019DC  0E00               	movlw	0
 19324  0019DE  6E2C               	movwf	(___fladd@b+3)^0,c
 19325  0019E0  5030               	movf	(___fladd@a+3)^0,w,c
 19326  0019E2  0B80               	andlw	128
 19327  0019E4  6E36               	movwf	___fladd@aexp^0,c
 19328  0019E6  5035               	movf	___fladd@signs^0,w,c
 19329  0019E8  1836               	xorwf	___fladd@aexp^0,w,c
 19330  0019EA  A4D8               	btfss	status,2,c
 19331  0019EC  8C35               	bsf	___fladd@signs^0,6,c
 19332  0019EE  5030               	movf	(___fladd@a+3)^0,w,c
 19333  0019F0  2430               	addwf	(___fladd@a+3)^0,w,c
 19334  0019F2  6E36               	movwf	___fladd@aexp^0,c
 19335  0019F4  BE2F               	btfsc	(___fladd@a+2)^0,7,c
 19336  0019F6  8036               	bsf	___fladd@aexp^0,0,c
 19337  0019F8  5036               	movf	___fladd@aexp^0,w,c
 19338  0019FA  B4D8               	btfsc	status,2,c
 19339  0019FC  D00D               	goto	l10142
 19340  0019FE  2836               	incf	___fladd@aexp^0,w,c
 19341  001A00  A4D8               	btfss	status,2,c
 19342  001A02  D008               	goto	l10138
 19343  001A04  0E00               	movlw	0
 19344  001A06  6E2D               	movwf	___fladd@a^0,c
 19345  001A08  0E00               	movlw	0
 19346  001A0A  6E2E               	movwf	(___fladd@a+1)^0,c
 19347  001A0C  0E00               	movlw	0
 19348  001A0E  6E2F               	movwf	(___fladd@a+2)^0,c
 19349  001A10  0E00               	movlw	0
 19350  001A12  6E30               	movwf	(___fladd@a+3)^0,c
 19351  001A14                     l10138:
 19352  001A14  8E2F               	bsf	(___fladd@a+2)^0,7,c
 19353  001A16  D006               	goto	L13
 19354  001A18                     l10142:
 19355  001A18  0E00               	movlw	0
 19356  001A1A  6E2D               	movwf	___fladd@a^0,c
 19357  001A1C  0E00               	movlw	0
 19358  001A1E  6E2E               	movwf	(___fladd@a+1)^0,c
 19359  001A20  0E00               	movlw	0
 19360  001A22  6E2F               	movwf	(___fladd@a+2)^0,c
 19361  001A24                     L13:
 19362  001A24  0E00               	movlw	0
 19363  001A26  6E30               	movwf	(___fladd@a+3)^0,c
 19364  001A28  5037               	movf	___fladd@bexp^0,w,c
 19365  001A2A  5C36               	subwf	___fladd@aexp^0,w,c
 19366  001A2C  B0D8               	btfsc	status,0,c
 19367  001A2E  D031               	goto	l10180
 19368  001A30  AC35               	btfss	___fladd@signs^0,6,c
 19369  001A32  D002               	goto	l10150
 19370  001A34  0E80               	movlw	128
 19371  001A36  1A35               	xorwf	___fladd@signs^0,f,c
 19372  001A38                     l10150:
 19373  001A38  0060  F0DC  F038   	movff	___fladd@bexp,___fladd@grs
 19374  001A3E  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 19375  001A44  0060  F0E0  F036   	movff	___fladd@grs,___fladd@aexp
 19376  001A4A  0060  F0A4  F038   	movff	___fladd@b,___fladd@grs
 19377  001A50  0060  F0B4  F029   	movff	___fladd@a,___fladd@b
 19378  001A56  0060  F0E0  F02D   	movff	___fladd@grs,___fladd@a
 19379  001A5C  0060  F0A8  F038   	movff	___fladd@b+1,___fladd@grs
 19380  001A62  0060  F0B8  F02A   	movff	___fladd@a+1,___fladd@b+1
 19381  001A68  0060  F0E0  F02E   	movff	___fladd@grs,___fladd@a+1
 19382  001A6E  0060  F0AC  F038   	movff	___fladd@b+2,___fladd@grs
 19383  001A74  0060  F0BC  F02B   	movff	___fladd@a+2,___fladd@b+2
 19384  001A7A  0060  F0E0  F02F   	movff	___fladd@grs,___fladd@a+2
 19385  001A80  0060  F0B0  F038   	movff	___fladd@b+3,___fladd@grs
 19386  001A86  0060  F0C0  F02C   	movff	___fladd@a+3,___fladd@b+3
 19387  001A8C  0060  F0E0  F030   	movff	___fladd@grs,___fladd@a+3
 19388  001A92                     l10180:
 19389  001A92  0E00               	movlw	0
 19390  001A94  6E38               	movwf	___fladd@grs^0,c
 19391  001A96  5037               	movf	___fladd@bexp^0,w,c
 19392  001A98  0060  F0D8  F031   	movff	___fladd@aexp,??___fladd
 19393  001A9E  6A32               	clrf	(??___fladd+1)^0,c
 19394  001AA0  5E31               	subwf	??___fladd^0,f,c
 19395  001AA2  0E00               	movlw	0
 19396  001AA4  5A32               	subwfb	(??___fladd+1)^0,f,c
 19397  001AA6  BE32               	btfsc	(??___fladd+1)^0,7,c
 19398  001AA8  D02D               	goto	l3734
 19399  001AAA  5032               	movf	(??___fladd+1)^0,w,c
 19400  001AAC  E104               	bnz	u8220
 19401  001AAE  0E1A               	movlw	26
 19402  001AB0  5C31               	subwf	??___fladd^0,w,c
 19403  001AB2  A0D8               	btfss	status,0,c
 19404  001AB4  D027               	goto	l3734
 19405  001AB6                     u8220:
 19406  001AB6  5029               	movf	___fladd@b^0,w,c
 19407  001AB8  102A               	iorwf	(___fladd@b+1)^0,w,c
 19408  001ABA  102B               	iorwf	(___fladd@b+2)^0,w,c
 19409  001ABC  102C               	iorwf	(___fladd@b+3)^0,w,c
 19410  001ABE  B4D8               	btfsc	status,2,c
 19411  001AC0  D002               	goto	u8230
 19412  001AC2  0E01               	movlw	1
 19413  001AC4  D001               	goto	u8240
 19414  001AC6                     u8230:
 19415  001AC6  0E00               	movlw	0
 19416  001AC8                     u8240:
 19417  001AC8  6E38               	movwf	___fladd@grs^0,c
 19418  001ACA  0E00               	movlw	0
 19419  001ACC  6E29               	movwf	___fladd@b^0,c
 19420  001ACE  0E00               	movlw	0
 19421  001AD0  6E2A               	movwf	(___fladd@b+1)^0,c
 19422  001AD2  0E00               	movlw	0
 19423  001AD4  6E2B               	movwf	(___fladd@b+2)^0,c
 19424  001AD6  0E00               	movlw	0
 19425  001AD8  6E2C               	movwf	(___fladd@b+3)^0,c
 19426  001ADA  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 19427  001AE0  D015               	goto	u8270
 19428  001AE2                     l3735:
 19429  001AE2  A038               	btfss	___fladd@grs^0,0,c
 19430  001AE4  D005               	goto	l10192
 19431  001AE6  90D8               	bcf	status,0,c
 19432  001AE8  3038               	rrcf	___fladd@grs^0,w,c
 19433  001AEA  0901               	iorlw	1
 19434  001AEC  6E38               	movwf	___fladd@grs^0,c
 19435  001AEE  D002               	goto	l10194
 19436  001AF0                     l10192:
 19437  001AF0  90D8               	bcf	status,0,c
 19438  001AF2  3238               	rrcf	___fladd@grs^0,f,c
 19439  001AF4                     l10194:
 19440  001AF4  B029               	btfsc	___fladd@b^0,0,c
 19441  001AF6  8E38               	bsf	___fladd@grs^0,7,c
 19442  001AF8  342C               	rlcf	(___fladd@b+3)^0,w,c
 19443  001AFA  322C               	rrcf	(___fladd@b+3)^0,f,c
 19444  001AFC  322B               	rrcf	(___fladd@b+2)^0,f,c
 19445  001AFE  322A               	rrcf	(___fladd@b+1)^0,f,c
 19446  001B00  3229               	rrcf	___fladd@b^0,f,c
 19447  001B02  2A37               	incf	___fladd@bexp^0,f,c
 19448  001B04                     l3734:
 19449  001B04  5036               	movf	___fladd@aexp^0,w,c
 19450  001B06  5C37               	subwf	___fladd@bexp^0,w,c
 19451  001B08  A0D8               	btfss	status,0,c
 19452  001B0A  D7EB               	goto	l3735
 19453  001B0C                     u8270:
 19454  001B0C  BC35               	btfsc	___fladd@signs^0,6,c
 19455  001B0E  D028               	goto	l10226
 19456  001B10  5037               	movf	___fladd@bexp^0,w,c
 19457  001B12  A4D8               	btfss	status,2,c
 19458  001B14  D009               	goto	l10208
 19459  001B16  0E00               	movlw	0
 19460  001B18  6E29               	movwf	?___fladd^0,c
 19461  001B1A  0E00               	movlw	0
 19462  001B1C  6E2A               	movwf	(?___fladd+1)^0,c
 19463  001B1E  0E00               	movlw	0
 19464  001B20  6E2B               	movwf	(?___fladd+2)^0,c
 19465  001B22  0E00               	movlw	0
 19466  001B24  6E2C               	movwf	(?___fladd+3)^0,c
 19467  001B26  0012               	return	
 19468  001B28                     l10208:
 19469  001B28  502D               	movf	___fladd@a^0,w,c
 19470  001B2A  2629               	addwf	___fladd@b^0,f,c
 19471  001B2C  502E               	movf	(___fladd@a+1)^0,w,c
 19472  001B2E  222A               	addwfc	(___fladd@b+1)^0,f,c
 19473  001B30  502F               	movf	(___fladd@a+2)^0,w,c
 19474  001B32  222B               	addwfc	(___fladd@b+2)^0,f,c
 19475  001B34  5030               	movf	(___fladd@a+3)^0,w,c
 19476  001B36  222C               	addwfc	(___fladd@b+3)^0,f,c
 19477  001B38  A02C               	btfss	(___fladd@b+3)^0,0,c
 19478  001B3A  D071               	goto	u8400
 19479  001B3C  A038               	btfss	___fladd@grs^0,0,c
 19480  001B3E  D005               	goto	l10216
 19481  001B40  90D8               	bcf	status,0,c
 19482  001B42  3038               	rrcf	___fladd@grs^0,w,c
 19483  001B44  0901               	iorlw	1
 19484  001B46  6E38               	movwf	___fladd@grs^0,c
 19485  001B48  D002               	goto	l10218
 19486  001B4A                     l10216:
 19487  001B4A  90D8               	bcf	status,0,c
 19488  001B4C  3238               	rrcf	___fladd@grs^0,f,c
 19489  001B4E                     l10218:
 19490  001B4E  B029               	btfsc	___fladd@b^0,0,c
 19491  001B50  8E38               	bsf	___fladd@grs^0,7,c
 19492  001B52  342C               	rlcf	(___fladd@b+3)^0,w,c
 19493  001B54  322C               	rrcf	(___fladd@b+3)^0,f,c
 19494  001B56  322B               	rrcf	(___fladd@b+2)^0,f,c
 19495  001B58  322A               	rrcf	(___fladd@b+1)^0,f,c
 19496  001B5A  3229               	rrcf	___fladd@b^0,f,c
 19497  001B5C  2A37               	incf	___fladd@bexp^0,f,c
 19498  001B5E  D05F               	goto	u8400
 19499  001B60                     l10226:
 19500  001B60  502D               	movf	___fladd@a^0,w,c
 19501  001B62  5C29               	subwf	___fladd@b^0,w,c
 19502  001B64  502E               	movf	(___fladd@a+1)^0,w,c
 19503  001B66  582A               	subwfb	(___fladd@b+1)^0,w,c
 19504  001B68  502F               	movf	(___fladd@a+2)^0,w,c
 19505  001B6A  582B               	subwfb	(___fladd@b+2)^0,w,c
 19506  001B6C  502C               	movf	(___fladd@b+3)^0,w,c
 19507  001B6E  0A80               	xorlw	128
 19508  001B70  6E31               	movwf	??___fladd^0,c
 19509  001B72  5030               	movf	(___fladd@a+3)^0,w,c
 19510  001B74  0A80               	xorlw	128
 19511  001B76  5831               	subwfb	??___fladd^0,w,c
 19512  001B78  B0D8               	btfsc	status,0,c
 19513  001B7A  D025               	goto	l10236
 19514  001B7C  5029               	movf	___fladd@b^0,w,c
 19515  001B7E  5C2D               	subwf	___fladd@a^0,w,c
 19516  001B80  6E31               	movwf	??___fladd^0,c
 19517  001B82  502A               	movf	(___fladd@b+1)^0,w,c
 19518  001B84  582E               	subwfb	(___fladd@a+1)^0,w,c
 19519  001B86  6E32               	movwf	(??___fladd+1)^0,c
 19520  001B88  502B               	movf	(___fladd@b+2)^0,w,c
 19521  001B8A  582F               	subwfb	(___fladd@a+2)^0,w,c
 19522  001B8C  6E33               	movwf	(??___fladd+2)^0,c
 19523  001B8E  502C               	movf	(___fladd@b+3)^0,w,c
 19524  001B90  5830               	subwfb	(___fladd@a+3)^0,w,c
 19525  001B92  6E34               	movwf	(??___fladd+3)^0,c
 19526  001B94  0EFF               	movlw	255
 19527  001B96  2431               	addwf	??___fladd^0,w,c
 19528  001B98  6E29               	movwf	___fladd@b^0,c
 19529  001B9A  0EFF               	movlw	255
 19530  001B9C  2032               	addwfc	(??___fladd+1)^0,w,c
 19531  001B9E  6E2A               	movwf	(___fladd@b+1)^0,c
 19532  001BA0  0EFF               	movlw	255
 19533  001BA2  2033               	addwfc	(??___fladd+2)^0,w,c
 19534  001BA4  6E2B               	movwf	(___fladd@b+2)^0,c
 19535  001BA6  0EFF               	movlw	255
 19536  001BA8  2034               	addwfc	(??___fladd+3)^0,w,c
 19537  001BAA  6E2C               	movwf	(___fladd@b+3)^0,c
 19538  001BAC  0E80               	movlw	128
 19539  001BAE  1A35               	xorwf	___fladd@signs^0,f,c
 19540  001BB0  6C38               	negf	___fladd@grs^0,c
 19541  001BB2  5038               	movf	___fladd@grs^0,w,c
 19542  001BB4  A4D8               	btfss	status,2,c
 19543  001BB6  D00F               	goto	l3750
 19544  001BB8  0E01               	movlw	1
 19545  001BBA  2629               	addwf	___fladd@b^0,f,c
 19546  001BBC  0E00               	movlw	0
 19547  001BBE  222A               	addwfc	(___fladd@b+1)^0,f,c
 19548  001BC0  222B               	addwfc	(___fladd@b+2)^0,f,c
 19549  001BC2  222C               	addwfc	(___fladd@b+3)^0,f,c
 19550  001BC4  D008               	goto	l3750
 19551  001BC6                     l10236:
 19552  001BC6  502D               	movf	___fladd@a^0,w,c
 19553  001BC8  5E29               	subwf	___fladd@b^0,f,c
 19554  001BCA  502E               	movf	(___fladd@a+1)^0,w,c
 19555  001BCC  5A2A               	subwfb	(___fladd@b+1)^0,f,c
 19556  001BCE  502F               	movf	(___fladd@a+2)^0,w,c
 19557  001BD0  5A2B               	subwfb	(___fladd@b+2)^0,f,c
 19558  001BD2  5030               	movf	(___fladd@a+3)^0,w,c
 19559  001BD4  5A2C               	subwfb	(___fladd@b+3)^0,f,c
 19560  001BD6                     l3750:
 19561  001BD6  5029               	movf	___fladd@b^0,w,c
 19562  001BD8  102A               	iorwf	(___fladd@b+1)^0,w,c
 19563  001BDA  102B               	iorwf	(___fladd@b+2)^0,w,c
 19564  001BDC  102C               	iorwf	(___fladd@b+3)^0,w,c
 19565  001BDE  A4D8               	btfss	status,2,c
 19566  001BE0  D01C               	goto	l10260
 19567  001BE2  5038               	movf	___fladd@grs^0,w,c
 19568  001BE4  A4D8               	btfss	status,2,c
 19569  001BE6  D019               	goto	l10260
 19570  001BE8  0E00               	movlw	0
 19571  001BEA  6E29               	movwf	?___fladd^0,c
 19572  001BEC  0E00               	movlw	0
 19573  001BEE  6E2A               	movwf	(?___fladd+1)^0,c
 19574  001BF0  0E00               	movlw	0
 19575  001BF2  6E2B               	movwf	(?___fladd+2)^0,c
 19576  001BF4  0E00               	movlw	0
 19577  001BF6  6E2C               	movwf	(?___fladd+3)^0,c
 19578  001BF8  0012               	return	
 19579  001BFA                     l10244:
 19580  001BFA  90D8               	bcf	status,0,c
 19581  001BFC  3629               	rlcf	___fladd@b^0,f,c
 19582  001BFE  362A               	rlcf	(___fladd@b+1)^0,f,c
 19583  001C00  362B               	rlcf	(___fladd@b+2)^0,f,c
 19584  001C02  362C               	rlcf	(___fladd@b+3)^0,f,c
 19585  001C04  BE38               	btfsc	___fladd@grs^0,7,c
 19586  001C06  8029               	bsf	___fladd@b^0,0,c
 19587  001C08  A038               	btfss	___fladd@grs^0,0,c
 19588  001C0A  D002               	goto	l10254
 19589  001C0C  80D8               	bsf	status,0,c
 19590  001C0E  D001               	goto	L14
 19591  001C10                     l10254:
 19592  001C10  90D8               	bcf	status,0,c
 19593  001C12                     L14:
 19594  001C12  3638               	rlcf	___fladd@grs^0,f,c
 19595  001C14  5037               	movf	___fladd@bexp^0,w,c
 19596  001C16  A4D8               	btfss	status,2,c
 19597  001C18  0637               	decf	___fladd@bexp^0,f,c
 19598  001C1A                     l10260:
 19599  001C1A  AE2B               	btfss	(___fladd@b+2)^0,7,c
 19600  001C1C  D7EE               	goto	l10244
 19601  001C1E                     u8400:
 19602  001C1E  0E00               	movlw	0
 19603  001C20  6E36               	movwf	___fladd@aexp^0,c
 19604  001C22  AE38               	btfss	___fladd@grs^0,7,c
 19605  001C24  D00C               	goto	l3759
 19606  001C26  0060  F0E0  F031   	movff	___fladd@grs,??___fladd
 19607  001C2C  0E7F               	movlw	127
 19608  001C2E  1631               	andwf	??___fladd^0,f,c
 19609  001C30  B4D8               	btfsc	status,2,c
 19610  001C32  D003               	goto	l3760
 19611  001C34                     u8420:
 19612  001C34  0E01               	movlw	1
 19613  001C36  6E36               	movwf	___fladd@aexp^0,c
 19614  001C38  D002               	goto	l3759
 19615  001C3A                     l3760:
 19616  001C3A  B029               	btfsc	___fladd@b^0,0,c
 19617  001C3C  D7FB               	goto	u8420
 19618  001C3E                     l3759:
 19619  001C3E  5036               	movf	___fladd@aexp^0,w,c
 19620  001C40  B4D8               	btfsc	status,2,c
 19621  001C42  D028               	goto	l10280
 19622  001C44  0E01               	movlw	1
 19623  001C46  2629               	addwf	___fladd@b^0,f,c
 19624  001C48  0E00               	movlw	0
 19625  001C4A  222A               	addwfc	(___fladd@b+1)^0,f,c
 19626  001C4C  222B               	addwfc	(___fladd@b+2)^0,f,c
 19627  001C4E  222C               	addwfc	(___fladd@b+3)^0,f,c
 19628  001C50  A02C               	btfss	(___fladd@b+3)^0,0,c
 19629  001C52  D020               	goto	l10280
 19630  001C54  0060  F0A4  F031   	movff	___fladd@b,??___fladd
 19631  001C5A  0060  F0A8  F032   	movff	___fladd@b+1,??___fladd+1
 19632  001C60  0060  F0AC  F033   	movff	___fladd@b+2,??___fladd+2
 19633  001C66  0060  F0B0  F034   	movff	___fladd@b+3,??___fladd+3
 19634  001C6C  3434               	rlcf	(??___fladd+3)^0,w,c
 19635  001C6E  3234               	rrcf	(??___fladd+3)^0,f,c
 19636  001C70  3233               	rrcf	(??___fladd+2)^0,f,c
 19637  001C72  3232               	rrcf	(??___fladd+1)^0,f,c
 19638  001C74  3231               	rrcf	??___fladd^0,f,c
 19639  001C76  0060  F0C4  F029   	movff	??___fladd,___fladd@b
 19640  001C7C  0060  F0C8  F02A   	movff	??___fladd+1,___fladd@b+1
 19641  001C82  0060  F0CC  F02B   	movff	??___fladd+2,___fladd@b+2
 19642  001C88  0060  F0D0  F02C   	movff	??___fladd+3,___fladd@b+3
 19643  001C8E  2837               	incf	___fladd@bexp^0,w,c
 19644  001C90  A4D8               	btfss	status,2,c
 19645  001C92  2A37               	incf	___fladd@bexp^0,f,c
 19646  001C94                     l10280:
 19647  001C94  2837               	incf	___fladd@bexp^0,w,c
 19648  001C96  B4D8               	btfsc	status,2,c
 19649  001C98  D003               	goto	u8480
 19650  001C9A  5037               	movf	___fladd@bexp^0,w,c
 19651  001C9C  A4D8               	btfss	status,2,c
 19652  001C9E  D00D               	goto	l10288
 19653  001CA0                     u8480:
 19654  001CA0  0E00               	movlw	0
 19655  001CA2  6E29               	movwf	___fladd@b^0,c
 19656  001CA4  0E00               	movlw	0
 19657  001CA6  6E2A               	movwf	(___fladd@b+1)^0,c
 19658  001CA8  0E00               	movlw	0
 19659  001CAA  6E2B               	movwf	(___fladd@b+2)^0,c
 19660  001CAC  0E00               	movlw	0
 19661  001CAE  6E2C               	movwf	(___fladd@b+3)^0,c
 19662  001CB0  5037               	movf	___fladd@bexp^0,w,c
 19663  001CB2  A4D8               	btfss	status,2,c
 19664  001CB4  D002               	goto	l10288
 19665  001CB6  0E00               	movlw	0
 19666  001CB8  6E35               	movwf	___fladd@signs^0,c
 19667  001CBA                     l10288:
 19668  001CBA  A037               	btfss	___fladd@bexp^0,0,c
 19669  001CBC  D002               	goto	l10292
 19670  001CBE  8E2B               	bsf	(___fladd@b+2)^0,7,c
 19671  001CC0  D001               	goto	l10294
 19672  001CC2                     l10292:
 19673  001CC2  9E2B               	bcf	(___fladd@b+2)^0,7,c
 19674  001CC4                     l10294:
 19675  001CC4  90D8               	bcf	status,0,c
 19676  001CC6  3037               	rrcf	___fladd@bexp^0,w,c
 19677  001CC8  6E2C               	movwf	(___fladd@b+3)^0,c
 19678  001CCA  BE35               	btfsc	___fladd@signs^0,7,c
 19679  001CCC  8E2C               	bsf	(___fladd@b+3)^0,7,c
 19680  001CCE  0060  F0A4  F029   	movff	___fladd@b,?___fladd
 19681  001CD4  0060  F0A8  F02A   	movff	___fladd@b+1,?___fladd+1
 19682  001CDA  0060  F0AC  F02B   	movff	___fladd@b+2,?___fladd+2
 19683  001CE0  0060  F0B0  F02C   	movff	___fladd@b+3,?___fladd+3
 19684  001CE6  0012               	return		;funcret
 19685  001CE8                     __end_of___fladd:
 19686                           	opt callstack 0
 19687                           
 19688 ;; *************** function _PHY_DataInd *****************
 19689 ;; Defined at:
 19690 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 19691 ;; Parameters:    Size  Location     Type
 19692 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 19693 ;;		 -> DIO0_Receive_ISR@ind(5), 
 19694 ;; Auto vars:     Size  Location     Type
 19695 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 19696 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19697 ;; Return value:  Size  Location     Type
 19698 ;;                  1    wreg      void 
 19699 ;; Registers used:
 19700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19701 ;; Tracked objects:
 19702 ;;		On entry : 0/0
 19703 ;;		On exit  : 0/0
 19704 ;;		Unchanged: 0/0
 19705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19706 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19708 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19710 ;;Total ram usage:        6 bytes
 19711 ;; Hardware stack levels used:    1
 19712 ;; Hardware stack levels required when called:    9
 19713 ;; This function calls:
 19714 ;;		_memcpy
 19715 ;;		_nwkFrameAlloc
 19716 ;; This function is called by:
 19717 ;;		_DIO0_Receive_ISR
 19718 ;; This function uses a non-reentrant model
 19719 ;;
 19720                           
 19721                           	psect	text121
 19722  0047C2                     __ptext121:
 19723                           	opt callstack 0
 19724  0047C2                     _PHY_DataInd:
 19725                           	opt callstack 17
 19726                           
 19727                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 19728                           
 19729                           ;incstack = 0
 19730  0047C2  5013               	movf	PHY_DataInd@ind^0,w,c
 19731  0047C4  6ED9               	movwf	fsr2l,c
 19732  0047C6  6ADA               	clrf	fsr2h,c
 19733  0047C8  EE10 F001          	lfsr	1,1
 19734  0047CC  50DE               	movf	postinc2,w,c
 19735  0047CE  26E1               	addwf	fsr1l,f,c
 19736  0047D0  50DD               	movf	postdec2,w,c
 19737  0047D2  22E2               	addwfc	fsr1h,f,c
 19738  0047D4  0E88               	movlw	136
 19739  0047D6  18E6               	xorwf	postinc1,w,c
 19740  0047D8  A4D8               	btfss	status,2,c
 19741  0047DA  0012               	return	
 19742  0047DC  5013               	movf	PHY_DataInd@ind^0,w,c
 19743  0047DE  6ED9               	movwf	fsr2l,c
 19744  0047E0  6ADA               	clrf	fsr2h,c
 19745  0047E2  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 19746  0047E8  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 19747  0047EE  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 19748  0047F4  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 19749  0047FA  0E61               	movlw	97
 19750  0047FC  18DE               	xorwf	postinc2,w,c
 19751  0047FE  B4D8               	btfsc	status,2,c
 19752  004800  D013               	goto	u14300
 19753  004802  5013               	movf	PHY_DataInd@ind^0,w,c
 19754  004804  6ED9               	movwf	fsr2l,c
 19755  004806  6ADA               	clrf	fsr2h,c
 19756  004808  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 19757  00480E  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 19758  004814  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 19759  00481A  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 19760  004820  0E41               	movlw	65
 19761  004822  18DE               	xorwf	postinc2,w,c
 19762  004824  A4D8               	btfss	status,2,c
 19763  004826  0012               	return	
 19764  004828                     u14300:
 19765  004828  5013               	movf	PHY_DataInd@ind^0,w,c
 19766  00482A  6ED9               	movwf	fsr2l,c
 19767  00482C  6ADA               	clrf	fsr2h,c
 19768  00482E  0E02               	movlw	2
 19769  004830  26D9               	addwf	fsr2l,f,c
 19770  004832  0E10               	movlw	16
 19771  004834  60DF               	cpfslt	indf2,c
 19772  004836  D001               	goto	l14720
 19773  004838  0012               	return	
 19774  00483A                     l14720:
 19775                           
 19776                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 19777  00483A  ECDF  F032         	call	_nwkFrameAlloc	;wreg free
 19778  00483E  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 19779  004844  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 19780  00484A  5017               	movf	PHY_DataInd@frame^0,w,c
 19781  00484C  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 19782  00484E  B4D8               	btfsc	status,2,c
 19783  004850  0012               	return	
 19784                           
 19785                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 19786  004852  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 19787  004858  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 19788  00485E  0E20               	movlw	32
 19789  004860  6EDF               	movwf	indf2,c
 19790                           
 19791                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 19792  004862  5013               	movf	PHY_DataInd@ind^0,w,c
 19793  004864  6ED9               	movwf	fsr2l,c
 19794  004866  6ADA               	clrf	fsr2h,c
 19795  004868  0E02               	movlw	2
 19796  00486A  26D9               	addwf	fsr2l,f,c
 19797  00486C  EE10 F001          	lfsr	1,1
 19798  004870  5017               	movf	PHY_DataInd@frame^0,w,c
 19799  004872  26E1               	addwf	fsr1l,f,c
 19800  004874  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 19801  004876  22E2               	addwfc	fsr1h,f,c
 19802  004878  006F FF7F FFE7     	movff	indf2,indf1
 19803                           
 19804                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 19805  00487E  5013               	movf	PHY_DataInd@ind^0,w,c
 19806  004880  6ED9               	movwf	fsr2l,c
 19807  004882  6ADA               	clrf	fsr2h,c
 19808  004884  0E03               	movlw	3
 19809  004886  26D9               	addwf	fsr2l,f,c
 19810  004888  EE10 F083          	lfsr	1,131
 19811  00488C  5017               	movf	PHY_DataInd@frame^0,w,c
 19812  00488E  26E1               	addwf	fsr1l,f,c
 19813  004890  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 19814  004892  22E2               	addwfc	fsr1h,f,c
 19815  004894  006F FF7F FFE7     	movff	indf2,indf1
 19816                           
 19817                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 19818  00489A  5013               	movf	PHY_DataInd@ind^0,w,c
 19819  00489C  6ED9               	movwf	fsr2l,c
 19820  00489E  6ADA               	clrf	fsr2h,c
 19821  0048A0  0E04               	movlw	4
 19822  0048A2  26D9               	addwf	fsr2l,f,c
 19823  0048A4  EE10 F084          	lfsr	1,132
 19824  0048A8  5017               	movf	PHY_DataInd@frame^0,w,c
 19825  0048AA  26E1               	addwf	fsr1l,f,c
 19826  0048AC  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 19827  0048AE  22E2               	addwfc	fsr1h,f,c
 19828  0048B0  006F FF7F FFE7     	movff	indf2,indf1
 19829                           
 19830                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 19831  0048B6  0E02               	movlw	2
 19832  0048B8  2417               	addwf	PHY_DataInd@frame^0,w,c
 19833  0048BA  6E08               	movwf	memcpy@d1^0,c
 19834  0048BC  0E00               	movlw	0
 19835  0048BE  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 19836  0048C0  6E09               	movwf	(memcpy@d1+1)^0,c
 19837  0048C2  5013               	movf	PHY_DataInd@ind^0,w,c
 19838  0048C4  6ED9               	movwf	fsr2l,c
 19839  0048C6  6ADA               	clrf	fsr2h,c
 19840  0048C8  006F FF78  F00A    	movff	postinc2,memcpy@s1
 19841  0048CE  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 19842  0048D4  5013               	movf	PHY_DataInd@ind^0,w,c
 19843  0048D6  6ED9               	movwf	fsr2l,c
 19844  0048D8  6ADA               	clrf	fsr2h,c
 19845  0048DA  0E02               	movlw	2
 19846  0048DC  26D9               	addwf	fsr2l,f,c
 19847  0048DE  50DF               	movf	indf2,w,c
 19848  0048E0  6E14               	movwf	??_PHY_DataInd^0,c
 19849  0048E2  5014               	movf	??_PHY_DataInd^0,w,c
 19850  0048E4  6E0C               	movwf	memcpy@n^0,c
 19851  0048E6  6A0D               	clrf	(memcpy@n+1)^0,c
 19852  0048E8  ECE5  F039         	call	_memcpy	;wreg free
 19853  0048EC  0012               	return		;funcret
 19854  0048EE                     __end_of_PHY_DataInd:
 19855                           	opt callstack 0
 19856                           
 19857 ;; *************** function _NWK_TaskHandler *****************
 19858 ;; Defined at:
 19859 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;		None
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;		None
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  1    wreg      void 
 19866 ;; Registers used:
 19867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 19868 ;; Tracked objects:
 19869 ;;		On entry : 2/0
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19877 ;;Total ram usage:        0 bytes
 19878 ;; Hardware stack levels used:    1
 19879 ;; Hardware stack levels required when called:   14
 19880 ;; This function calls:
 19881 ;;		_nwkDataReqTaskHandler
 19882 ;;		_nwkRxTaskHandler
 19883 ;;		_nwkTxTaskHandler
 19884 ;; This function is called by:
 19885 ;;		_SYS_TaskHandler
 19886 ;; This function uses a non-reentrant model
 19887 ;;
 19888                           
 19889                           	psect	text122
 19890  008D1E                     __ptext122:
 19891                           	opt callstack 0
 19892  008D1E                     _NWK_TaskHandler:
 19893                           	opt callstack 15
 19894                           
 19895                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 19896                           
 19897                           ;incstack = 0
 19898  008D1E  ECE7  F033         	call	_nwkRxTaskHandler	;wreg free
 19899                           
 19900                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 19901  008D22  EC3C  F01A         	call	_nwkTxTaskHandler	;wreg free
 19902                           
 19903                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 19904  008D26  EC26  F039         	call	_nwkDataReqTaskHandler	;wreg free
 19905  008D2A  0012               	return		;funcret
 19906  008D2C                     __end_of_NWK_TaskHandler:
 19907                           	opt callstack 0
 19908                           
 19909 ;; *************** function _nwkTxTaskHandler *****************
 19910 ;; Defined at:
 19911 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 19912 ;; Parameters:    Size  Location     Type
 19913 ;;		None
 19914 ;; Auto vars:     Size  Location     Type
 19915 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 19916 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19917 ;; Return value:  Size  Location     Type
 19918 ;;                  1    wreg      void 
 19919 ;; Registers used:
 19920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 19921 ;; Tracked objects:
 19922 ;;		On entry : 0/0
 19923 ;;		On exit  : 0/0
 19924 ;;		Unchanged: 0/0
 19925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19929 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19930 ;;Total ram usage:        4 bytes
 19931 ;; Hardware stack levels used:    1
 19932 ;; Hardware stack levels required when called:   13
 19933 ;; This function calls:
 19934 ;;		_PHY_DataReq
 19935 ;;		_SYS_TimerStart
 19936 ;;		_nwkDataReqTxConf
 19937 ;;		_nwkFrameFree
 19938 ;;		_nwkFrameNext
 19939 ;;		_nwkRouteFrameSent
 19940 ;; This function is called by:
 19941 ;;		_NWK_TaskHandler
 19942 ;; This function uses a non-reentrant model
 19943 ;;
 19944                           
 19945                           	psect	text123
 19946  003478                     __ptext123:
 19947                           	opt callstack 0
 19948  003478                     _nwkTxTaskHandler:
 19949                           	opt callstack 15
 19950                           
 19951                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 19952                           
 19953                           ;incstack = 0
 19954  003478  0E00               	movlw	0
 19955  00347A  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 19956  00347C  0E00               	movlw	0
 19957  00347E  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 19958                           
 19959                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 19960  003480  D0E1               	goto	l16110
 19961  003482                     l16064:
 19962                           
 19963                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 19964  003482  EE20 F084          	lfsr	2,132
 19965  003486  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 19966  003488  26D9               	addwf	fsr2l,f,c
 19967  00348A  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 19968  00348C  22DA               	addwfc	fsr2h,f,c
 19969  00348E  50DE               	movf	postinc2,w,c
 19970  003490  10DE               	iorwf	postinc2,w,c
 19971  003492  B4D8               	btfsc	status,2,c
 19972  003494  D00F               	goto	l16070
 19973                           
 19974                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 19975  003496  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 19976  00349C  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 19977  0034A2  0E11               	movlw	17
 19978  0034A4  6EDF               	movwf	indf2,c
 19979                           
 19980                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 19981  0034A6  0EAB               	movlw	low _nwkTxDelayTimer
 19982  0034A8  6E10               	movwf	SYS_TimerStart@timer^0,c
 19983  0034AA  0E01               	movlw	high _nwkTxDelayTimer
 19984  0034AC  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 19985  0034AE  ECF3  F043         	call	_SYS_TimerStart	;wreg free
 19986                           
 19987                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 19988  0034B2  D0C8               	goto	l16110
 19989  0034B4                     l16070:
 19990                           
 19991                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 19992  0034B4  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 19993  0034BA  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 19994  0034C0  0E13               	movlw	19
 19995  0034C2  D066               	goto	L16
 19996  0034C4                     l16072:
 19997                           
 19998                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 19999  0034C4  0100               	movlb	0	; () banked
 20000  0034C6  51BD               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 20001  0034C8  11BE               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 20002  0034CA  A4D8               	btfss	status,2,c
 20003  0034CC  D0BB               	goto	l16110
 20004                           
 20005                           ; BSR set to: 0
 20006                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 20007  0034CE  0060  F058  F0BD   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 20008  0034D4  0060  F05C  F0BE   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 20012  0034DA  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20013  0034E0  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20014  0034E6  0E14               	movlw	20
 20015  0034E8  6EDF               	movwf	indf2,c
 20016                           
 20017                           ; BSR set to: 0
 20018                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 20019  0034EA  0E02               	movlw	2
 20020  0034EC  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 20021  0034EE  6E11               	movwf	PHY_DataReq@data^0,c
 20022  0034F0  0E00               	movlw	0
 20023  0034F2  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 20024  0034F4  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 20025  0034F6  EE20 F001          	lfsr	2,1
 20026  0034FA  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20027  0034FC  26D9               	addwf	fsr2l,f,c
 20028  0034FE  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20029  003500  22DA               	addwfc	fsr2h,f,c
 20030  003502  50DF               	movf	indf2,w,c
 20031  003504  6E13               	movwf	PHY_DataReq@size^0,c
 20032  003506  EC11  F03D         	call	_PHY_DataReq	;wreg free
 20033                           
 20034                           ; BSR set to: 0
 20035                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 20036  00350A  0101               	movlb	1	; () banked
 20037  00350C  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 20038  00350E  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 20039  003510  D099               	goto	l16110
 20040  003512                     l16082:
 20041                           
 20042                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 20043  003512  EE20 F083          	lfsr	2,131
 20044  003516  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20045  003518  26D9               	addwf	fsr2l,f,c
 20046  00351A  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20047  00351C  22DA               	addwfc	fsr2h,f,c
 20048  00351E  50DF               	movf	indf2,w,c
 20049  003520  A4D8               	btfss	status,2,c
 20050  003522  D02F               	goto	l16094
 20051                           
 20052                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 20053  003524  EE20 F00D          	lfsr	2,13
 20054  003528  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20055  00352A  26D9               	addwf	fsr2l,f,c
 20056  00352C  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20057  00352E  22DA               	addwfc	fsr2h,f,c
 20058  003530  0101               	movlb	1	; () banked
 20059  003532  5100               	movf	_nwkIb& (0+255),w,b
 20060  003534  18DE               	xorwf	postinc2,w,c
 20061  003536  E125               	bnz	l16096
 20062  003538  5101               	movf	(_nwkIb+1)& (0+255),w,b
 20063  00353A  18DE               	xorwf	postinc2,w,c
 20064  00353C  A4D8               	btfss	status,2,c
 20065  00353E  D021               	goto	l16094
 20066                           
 20067                           ; BSR set to: 1
 20068  003540  EE20 F00B          	lfsr	2,11
 20069  003544  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20070  003546  26D9               	addwf	fsr2l,f,c
 20071  003548  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20072  00354A  22DA               	addwfc	fsr2h,f,c
 20073  00354C  A0DF               	btfss	indf2,0,c
 20074  00354E  D019               	goto	l16094
 20075                           
 20076                           ; BSR set to: 1
 20077                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 20078  003550  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20079  003556  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20080  00355C  0E16               	movlw	22
 20081  00355E  6EDF               	movwf	indf2,c
 20082                           
 20083                           ; BSR set to: 1
 20084                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 20085  003560  EE20 F084          	lfsr	2,132
 20086  003564  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20087  003566  26D9               	addwf	fsr2l,f,c
 20088  003568  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20089  00356A  22DA               	addwfc	fsr2h,f,c
 20090  00356C  0E06               	movlw	6
 20091  00356E  6EDE               	movwf	postinc2,c
 20092  003570  0E00               	movlw	0
 20093  003572  6EDD               	movwf	postdec2,c
 20094                           
 20095                           ; BSR set to: 1
 20096                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 20097  003574  0EB8               	movlw	low _nwkTxAckWaitTimer
 20098  003576  6E10               	movwf	SYS_TimerStart@timer^0,c
 20099  003578  0E01               	movlw	high _nwkTxAckWaitTimer
 20100  00357A  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 20101  00357C  ECF3  F043         	call	_SYS_TimerStart	;wreg free
 20102                           
 20103                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 20104  003580  D061               	goto	l16110
 20105  003582                     l16094:
 20106  003582                     l16096:
 20107                           
 20108                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 20109  003582  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20110  003588  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20111  00358E  0E17               	movlw	23
 20112  003590                     L16:
 20113  003590  6EDF               	movwf	indf2,c
 20114  003592  D058               	goto	l16110
 20115  003594                     l16098:
 20116                           
 20117                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 20118  003594  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 20119  00359A  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 20120  0035A0  EC47  F02A         	call	_nwkRouteFrameSent	;wreg free
 20121                           
 20122                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 20123  0035A4  EE20 F087          	lfsr	2,135
 20124  0035A8  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20125  0035AA  26D9               	addwf	fsr2l,f,c
 20126  0035AC  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20127  0035AE  22DA               	addwfc	fsr2h,f,c
 20128  0035B0  50DE               	movf	postinc2,w,c
 20129  0035B2  10DE               	iorwf	postinc2,w,c
 20130  0035B4  A4D8               	btfss	status,2,c
 20131  0035B6  D009               	goto	l16104
 20132                           
 20133                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 20134  0035B8  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 20135  0035BE  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 20136  0035C4  EC95  F045         	call	_nwkFrameFree	;wreg free
 20137  0035C8  D03D               	goto	l16110
 20138  0035CA                     l16104:
 20139                           
 20140                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 20141  0035CA  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 20142  0035D0  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 20143  0035D6  EE20 F087          	lfsr	2,135
 20144  0035DA  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20145  0035DC  26D9               	addwf	fsr2l,f,c
 20146  0035DE  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20147  0035E0  22DA               	addwfc	fsr2h,f,c
 20148  0035E2  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 20149  0035E8  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 20150  0035EE  D801               	call	u16218
 20151  0035F0  D029               	goto	l16110
 20152  0035F2                     u16218:
 20153  0035F2  0005               	push	
 20154  0035F4  6EFA               	movwf	pclath,c
 20155  0035F6  5014               	movf	??_nwkTxTaskHandler^0,w,c
 20156  0035F8  6EFD               	movwf	tosl,c
 20157  0035FA  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 20158  0035FC  6EFE               	movwf	tosh,c
 20159  0035FE  6AFF               	clrf	tosu,c
 20160  003600  50FA               	movf	pclath,w,c
 20161  003602  0012               	return		;indir
 20162  003604                     l16108:
 20163  003604  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20164  00360A  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20165  003610  50DF               	movf	indf2,w,c
 20166  003612  6E14               	movwf	??_nwkTxTaskHandler^0,c
 20167  003614  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 20168                           
 20169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20170                           ; Switch size 1, requested type "simple"
 20171                           ; Number of cases is 1, Range of values is 0 to 0
 20172                           ; switch strategies available:
 20173                           ; Name         Instructions Cycles
 20174                           ; simple_byte            4     3 (average)
 20175                           ;	Chosen strategy is simple_byte
 20176  003616  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 20177  003618  0A00               	xorlw	0	; case 0
 20178  00361A  A4D8               	btfss	status,2,c
 20179  00361C  D013               	goto	l16110
 20180                           
 20181                           ; Switch size 1, requested type "simple"
 20182                           ; Number of cases is 6, Range of values is 18 to 23
 20183                           ; switch strategies available:
 20184                           ; Name         Instructions Cycles
 20185                           ; simple_byte           19    10 (average)
 20186                           ;	Chosen strategy is simple_byte
 20187  00361E  5014               	movf	??_nwkTxTaskHandler^0,w,c
 20188  003620  0A12               	xorlw	18	; case 18
 20189  003622  B4D8               	btfsc	status,2,c
 20190  003624  D72E               	goto	l16064
 20191  003626  0A01               	xorlw	1	; case 19
 20192  003628  B4D8               	btfsc	status,2,c
 20193  00362A  D74C               	goto	l16072
 20194  00362C  0A07               	xorlw	7	; case 20
 20195  00362E  B4D8               	btfsc	status,2,c
 20196  003630  D009               	goto	l16110
 20197  003632  0A01               	xorlw	1	; case 21
 20198  003634  B4D8               	btfsc	status,2,c
 20199  003636  D76D               	goto	l16082
 20200  003638  0A03               	xorlw	3	; case 22
 20201  00363A  B4D8               	btfsc	status,2,c
 20202  00363C  D003               	goto	l16110
 20203  00363E  0A01               	xorlw	1	; case 23
 20204  003640  B4D8               	btfsc	status,2,c
 20205  003642  D7A8               	goto	l16098
 20206  003644                     l16110:
 20207                           
 20208                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20209  003644  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 20210  00364A  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 20211  003650  ECD4  F037         	call	_nwkFrameNext	;wreg free
 20212  003654  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 20213  00365A  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 20214  003660  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20215  003662  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 20216  003664  B4D8               	btfsc	status,2,c
 20217  003666  0012               	return	
 20218  003668  D7CD               	goto	l16108
 20219  00366A                     __end_of_nwkTxTaskHandler:
 20220                           	opt callstack 0
 20221                           
 20222 ;; *************** function _nwkRouteFrameSent *****************
 20223 ;; Defined at:
 20224 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 20225 ;; Parameters:    Size  Location     Type
 20226 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 20227 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20228 ;; Auto vars:     Size  Location     Type
 20229 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 20230 ;;		 -> nwkRouteTable(70), NULL(0), 
 20231 ;; Return value:  Size  Location     Type
 20232 ;;                  1    wreg      void 
 20233 ;; Registers used:
 20234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20235 ;; Tracked objects:
 20236 ;;		On entry : 0/0
 20237 ;;		On exit  : 0/0
 20238 ;;		Unchanged: 0/0
 20239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20244 ;;Total ram usage:        6 bytes
 20245 ;; Hardware stack levels used:    1
 20246 ;; Hardware stack levels required when called:    8
 20247 ;; This function calls:
 20248 ;;		_NWK_RouteFindEntry
 20249 ;;		_NWK_RouteFreeEntry
 20250 ;;		_nwkRouteNormalizeRanks
 20251 ;; This function is called by:
 20252 ;;		_nwkTxTaskHandler
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256                           	psect	text124
 20257  00548E                     __ptext124:
 20258                           	opt callstack 0
 20259  00548E                     _nwkRouteFrameSent:
 20260                           	opt callstack 19
 20261                           
 20262                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 20263                           
 20264                           ;incstack = 0
 20265  00548E  EE20 F00F          	lfsr	2,15
 20266  005492  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20267  005494  26D9               	addwf	fsr2l,f,c
 20268  005496  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20269  005498  22DA               	addwfc	fsr2h,f,c
 20270  00549A  28DE               	incf	postinc2,w,c
 20271  00549C  E103               	bnz	l11544
 20272  00549E  28DE               	incf	postinc2,w,c
 20273  0054A0  B4D8               	btfsc	status,2,c
 20274  0054A2  0012               	return	
 20275  0054A4                     l11544:
 20276                           
 20277                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 20278  0054A4  EE20 F00F          	lfsr	2,15
 20279  0054A8  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20280  0054AA  26D9               	addwf	fsr2l,f,c
 20281  0054AC  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20282  0054AE  22DA               	addwfc	fsr2h,f,c
 20283  0054B0  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 20284  0054B6  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 20285  0054BC  EE20 F00B          	lfsr	2,11
 20286  0054C0  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20287  0054C2  26D9               	addwf	fsr2l,f,c
 20288  0054C4  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20289  0054C6  22DA               	addwfc	fsr2h,f,c
 20290  0054C8  0E00               	movlw	0
 20291  0054CA  B6DF               	btfsc	indf2,3,c
 20292  0054CC  0E01               	movlw	1
 20293  0054CE  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 20294  0054D0  EC2D  F03B         	call	_NWK_RouteFindEntry	;wreg free
 20295  0054D4  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 20296  0054DA  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 20297                           
 20298                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 20299  0054E0  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 20300  0054E2  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 20301  0054E4  B4D8               	btfsc	status,2,c
 20302  0054E6  0012               	return	
 20303  0054E8  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20304  0054EE  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20305  0054F4  B0DF               	btfsc	indf2,0,c
 20306  0054F6  0012               	return	
 20307                           
 20308                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 20309  0054F8  EE20 F083          	lfsr	2,131
 20310  0054FC  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20311  0054FE  26D9               	addwf	fsr2l,f,c
 20312  005500  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20313  005502  22DA               	addwfc	fsr2h,f,c
 20314  005504  50DF               	movf	indf2,w,c
 20315  005506  A4D8               	btfss	status,2,c
 20316  005508  D017               	goto	l11558
 20317                           
 20318                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 20319  00550A  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20320  005510  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20321  005516  50DF               	movf	indf2,w,c
 20322  005518  0B0F               	andlw	-241
 20323  00551A  0930               	iorlw	48
 20324  00551C  6EDF               	movwf	indf2,c
 20325                           
 20326                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 20327  00551E  EE20 F005          	lfsr	2,5
 20328  005522  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 20329  005524  26D9               	addwf	fsr2l,f,c
 20330  005526  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 20331  005528  22DA               	addwfc	fsr2h,f,c
 20332  00552A  2ADF               	incf	indf2,f,c
 20333  00552C  28DE               	incf	postinc2,w,c
 20334  00552E  A4D8               	btfss	status,2,c
 20335  005530  0012               	return	
 20336                           
 20337                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 20338  005532  EC10  F042         	call	_nwkRouteNormalizeRanks	;wreg free
 20339  005536  0012               	return	
 20340  005538                     l11558:
 20341                           
 20342                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 20343  005538  0E01               	movlw	1
 20344  00553A  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 20345  00553C  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20346  005542  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20347  005548  38DF               	swapf	indf2,w,c
 20348  00554A  0B0F               	andlw	15
 20349  00554C  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 20350  00554E  500A               	movf	??_nwkRouteFrameSent^0,w,c
 20351  005550  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 20352  005552  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 20353  005554  50DF               	movf	indf2,w,c
 20354  005556  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 20355  005558  0B0F               	andlw	-241
 20356  00555A  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 20357  00555C  6EDF               	movwf	indf2,c
 20358  00555E  38DF               	swapf	indf2,w,c
 20359  005560  0B0F               	andlw	15
 20360  005562  0900               	iorlw	0
 20361  005564  A4D8               	btfss	status,2,c
 20362  005566  0012               	return	
 20363                           
 20364                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 20365  005568  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 20366  00556E  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 20367  005574  EC9C  F042         	call	_NWK_RouteFreeEntry	;wreg free
 20368  005578  0012               	return		;funcret
 20369  00557A                     __end_of_nwkRouteFrameSent:
 20370                           	opt callstack 0
 20371                           
 20372 ;; *************** function _nwkRouteNormalizeRanks *****************
 20373 ;; Defined at:
 20374 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 20375 ;; Parameters:    Size  Location     Type
 20376 ;;		None
 20377 ;; Auto vars:     Size  Location     Type
 20378 ;;  i               1    2[COMRAM] unsigned char 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      void 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/0
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20392 ;;Total ram usage:        2 bytes
 20393 ;; Hardware stack levels used:    1
 20394 ;; Hardware stack levels required when called:    7
 20395 ;; This function calls:
 20396 ;;		Nothing
 20397 ;; This function is called by:
 20398 ;;		_nwkRouteFrameSent
 20399 ;; This function uses a non-reentrant model
 20400 ;;
 20401                           
 20402                           	psect	text125
 20403  008420                     __ptext125:
 20404                           	opt callstack 0
 20405  008420                     _nwkRouteNormalizeRanks:
 20406                           	opt callstack 19
 20407                           
 20408                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 20409                           
 20410                           ;incstack = 0
 20411  008420  0E00               	movlw	0
 20412  008422  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 20413  008424                     l10678:
 20414                           
 20415                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 20416  008424  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 20417  008426  0D07               	mullw	7
 20418  008428  0E39               	movlw	low (_nwkRouteTable+5)
 20419  00842A  24F3               	addwf	243,w,c
 20420  00842C  6ED9               	movwf	fsr2l,c
 20421  00842E  0E02               	movlw	high (_nwkRouteTable+5)
 20422  008430  20F4               	addwfc	prodh,w,c
 20423  008432  6EDA               	movwf	fsr2h,c
 20424  008434  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 20425  008436  0D07               	mullw	7
 20426  008438  0E39               	movlw	low (_nwkRouteTable+5)
 20427  00843A  24F3               	addwf	243,w,c
 20428  00843C  6EE1               	movwf	fsr1l,c
 20429  00843E  0E02               	movlw	high (_nwkRouteTable+5)
 20430  008440  20F4               	addwfc	prodh,w,c
 20431  008442  6EE2               	movwf	fsr1h,c
 20432  008444  50E7               	movf	indf1,w,c
 20433  008446  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 20434  008448  90D8               	bcf	status,0,c
 20435  00844A  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 20436  00844C  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 20437  00844E  6EDF               	movwf	indf2,c
 20438  008450  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 20439  008452  0E09               	movlw	9
 20440  008454  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 20441  008456  D7E6               	goto	l10678
 20442  008458  0012               	return	
 20443  00845A                     __end_of_nwkRouteNormalizeRanks:
 20444                           	opt callstack 0
 20445                           
 20446 ;; *************** function _nwkDataReqTxConf *****************
 20447 ;; Defined at:
 20448 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 20451 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20452 ;; Auto vars:     Size  Location     Type
 20453 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 20454 ;;		 -> NULL(0), tx_buffer(524), 
 20455 ;; Return value:  Size  Location     Type
 20456 ;;                  1    wreg      void 
 20457 ;; Registers used:
 20458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20459 ;; Tracked objects:
 20460 ;;		On entry : 0/0
 20461 ;;		On exit  : 3F/1
 20462 ;;		Unchanged: 0/0
 20463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20467 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20468 ;;Total ram usage:        6 bytes
 20469 ;; Hardware stack levels used:    1
 20470 ;; Hardware stack levels required when called:    8
 20471 ;; This function calls:
 20472 ;;		_nwkFrameFree
 20473 ;; This function is called by:
 20474 ;;		_nwkDataReqSendFrame
 20475 ;;		_nwkTxTaskHandler
 20476 ;; This function uses a non-reentrant model
 20477 ;;
 20478                           
 20479                           	psect	text126
 20480  00687A                     __ptext126:
 20481                           	opt callstack 0
 20482  00687A                     _nwkDataReqTxConf:
 20483                           	opt callstack 19
 20484                           
 20485                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 20486                           
 20487                           ;incstack = 0
 20488  00687A  0060  F2FC  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 20489  006880  0060  F300  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 20490  006886  D040               	goto	l11520
 20491  006888                     l11512:
 20492                           
 20493                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 20494  006888  EE20 F002          	lfsr	2,2
 20495  00688C  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20496  00688E  26D9               	addwf	fsr2l,f,c
 20497  006890  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20498  006892  22DA               	addwfc	fsr2h,f,c
 20499  006894  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20500  006896  18DE               	xorwf	postinc2,w,c
 20501  006898  E12B               	bnz	l11518
 20502  00689A  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20503  00689C  18DE               	xorwf	postinc2,w,c
 20504  00689E  A4D8               	btfss	status,2,c
 20505  0068A0  D027               	goto	l11518
 20506                           
 20507                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 20508  0068A2  EE20 F083          	lfsr	2,131
 20509  0068A6  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20510  0068A8  26D9               	addwf	fsr2l,f,c
 20511  0068AA  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20512  0068AC  22DA               	addwfc	fsr2h,f,c
 20513  0068AE  EE10 F011          	lfsr	1,17
 20514  0068B2  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20515  0068B4  26E1               	addwf	fsr1l,f,c
 20516  0068B6  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20517  0068B8  22E2               	addwfc	fsr1h,f,c
 20518  0068BA  006F FF7F FFE7     	movff	indf2,indf1
 20519                           
 20520                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 20521  0068C0  EE20 F086          	lfsr	2,134
 20522  0068C4  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20523  0068C6  26D9               	addwf	fsr2l,f,c
 20524  0068C8  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20525  0068CA  22DA               	addwfc	fsr2h,f,c
 20526  0068CC  EE10 F012          	lfsr	1,18
 20527  0068D0  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20528  0068D2  26E1               	addwf	fsr1l,f,c
 20529  0068D4  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20530  0068D6  22E2               	addwfc	fsr1h,f,c
 20531  0068D8  006F FF7F FFE7     	movff	indf2,indf1
 20532                           
 20533                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 20534  0068DE  EE20 F004          	lfsr	2,4
 20535  0068E2  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20536  0068E4  26D9               	addwf	fsr2l,f,c
 20537  0068E6  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20538  0068E8  22DA               	addwfc	fsr2h,f,c
 20539  0068EA  0E02               	movlw	2
 20540  0068EC  6EDF               	movwf	indf2,c
 20541                           
 20542                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 20543  0068EE  D010               	goto	u10410
 20544  0068F0                     l11518:
 20545                           
 20546                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 20547  0068F0  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 20548  0068F6  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 20549  0068FC  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 20550  006902  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 20551  006908                     l11520:
 20552  006908  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20553  00690A  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 20554  00690C  A4D8               	btfss	status,2,c
 20555  00690E  D7BC               	goto	l11512
 20556  006910                     u10410:
 20557                           
 20558                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 20559  006910  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 20560  006916  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 20561  00691C  EC95  F045         	call	_nwkFrameFree	;wreg free
 20562                           
 20563                           ; BSR set to: 1
 20564  006920  0012               	return		;funcret
 20565  006922                     __end_of_nwkDataReqTxConf:
 20566                           	opt callstack 0
 20567                           
 20568 ;; *************** function _PHY_DataReq *****************
 20569 ;; Defined at:
 20570 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 20571 ;; Parameters:    Size  Location     Type
 20572 ;;  data            2   16[COMRAM] PTR unsigned char 
 20573 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 20574 ;;  size            1   18[COMRAM] unsigned char 
 20575 ;; Auto vars:     Size  Location     Type
 20576 ;;		None
 20577 ;; Return value:  Size  Location     Type
 20578 ;;                  1    wreg      void 
 20579 ;; Registers used:
 20580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20581 ;; Tracked objects:
 20582 ;;		On entry : 3F/0
 20583 ;;		On exit  : 3F/0
 20584 ;;		Unchanged: 0/0
 20585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20586 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20590 ;;Total ram usage:        3 bytes
 20591 ;; Hardware stack levels used:    1
 20592 ;; Hardware stack levels required when called:   12
 20593 ;; This function calls:
 20594 ;;		_SPI1_ExchangeByte
 20595 ;;		_SPI1_WriteBlock
 20596 ;;		_SX1276Write
 20597 ;;		_explicitHeaderMode
 20598 ;;		_idle
 20599 ;; This function is called by:
 20600 ;;		_nwkTxTaskHandler
 20601 ;; This function uses a non-reentrant model
 20602 ;;
 20603                           
 20604                           	psect	text127
 20605  007A22                     __ptext127:
 20606                           	opt callstack 0
 20607  007A22                     _PHY_DataReq:
 20608                           	opt callstack 15
 20609                           
 20610                           ; BSR set to: 0
 20611                           ;../phy/sx1216/phy_src/phy.c: 843:     idle();
 20612                           
 20613                           ; BSR set to: 1
 20614                           ;incstack = 0
 20615  007A22  ECC7  F046         	call	_idle	;wreg free
 20616                           
 20617                           ;../phy/sx1216/phy_src/phy.c: 844:     explicitHeaderMode();
 20618  007A26  EC12  F046         	call	_explicitHeaderMode	;wreg free
 20619                           
 20620                           ;../phy/sx1216/phy_src/phy.c: 846:     SX1276Write(0x0E, 0x0);
 20621  007A2A  0E00               	movlw	0
 20622  007A2C  6E0F               	movwf	SX1276Write@data^0,c
 20623  007A2E  0E0E               	movlw	14
 20624  007A30  EC48  F046         	call	_SX1276Write
 20625                           
 20626                           ;../phy/sx1216/phy_src/phy.c: 847:     SX1276Write(0x0D, 0x00);
 20627  007A34  0E00               	movlw	0
 20628  007A36  6E0F               	movwf	SX1276Write@data^0,c
 20629  007A38  0E0D               	movlw	13
 20630  007A3A  EC48  F046         	call	_SX1276Write
 20631                           
 20632                           ;../phy/sx1216/phy_src/phy.c: 848:     SX1276Write(0x22, size);
 20633  007A3E  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 20634  007A44  0E22               	movlw	34
 20635  007A46  EC48  F046         	call	_SX1276Write
 20636                           
 20637                           ; BSR set to: 61
 20638  007A4A  9CBC               	bcf	188,6,c	;volatile
 20639                           
 20640                           ; BSR set to: 61
 20641                           ;../phy/sx1216/phy_src/phy.c: 851:     SPI1_ExchangeByte(0x00 | 0x80);
 20642  007A4C  0E80               	movlw	128
 20643  007A4E  ECBC  F045         	call	_SPI1_ExchangeByte
 20644                           
 20645                           ; BSR set to: 61
 20646                           ;../phy/sx1216/phy_src/phy.c: 852:     SPI1_WriteBlock(data,size);
 20647  007A52  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 20648  007A58  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 20649  007A5E  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 20650  007A64  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 20651  007A66  ECD2  F042         	call	_SPI1_WriteBlock	;wreg free
 20652                           
 20653                           ; BSR set to: 61
 20654  007A6A  8CBC               	bsf	188,6,c	;volatile
 20655                           
 20656                           ; BSR set to: 61
 20657                           ;../phy/sx1216/phy_src/phy.c: 854:     SX1276Write(0x01,
 20658  007A6C  0E83               	movlw	131
 20659  007A6E  6E0F               	movwf	SX1276Write@data^0,c
 20660  007A70  0E01               	movlw	1
 20661  007A72  EC48  F046         	call	_SX1276Write
 20662                           
 20663                           ; BSR set to: 61
 20664                           ;../phy/sx1216/phy_src/phy.c: 856:     radio_state_var = START_TX;
 20665  007A76  0E06               	movlw	6
 20666  007A78  0100               	movlb	0	; () banked
 20667  007A7A  6FCA               	movwf	_radio_state_var& (0+255),b
 20668                           
 20669                           ; BSR set to: 0
 20670  007A7C  0012               	return		;funcret
 20671  007A7E                     __end_of_PHY_DataReq:
 20672                           	opt callstack 0
 20673                           
 20674 ;; *************** function _idle *****************
 20675 ;; Defined at:
 20676 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 20677 ;; Parameters:    Size  Location     Type
 20678 ;;		None
 20679 ;; Auto vars:     Size  Location     Type
 20680 ;;		None
 20681 ;; Return value:  Size  Location     Type
 20682 ;;                  1    wreg      void 
 20683 ;; Registers used:
 20684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20685 ;; Tracked objects:
 20686 ;;		On entry : 2/3D
 20687 ;;		On exit  : 3F/3D
 20688 ;;		Unchanged: 0/0
 20689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20694 ;;Total ram usage:        0 bytes
 20695 ;; Hardware stack levels used:    1
 20696 ;; Hardware stack levels required when called:   11
 20697 ;; This function calls:
 20698 ;;		_SX1276Write
 20699 ;; This function is called by:
 20700 ;;		_start_radio_cad
 20701 ;;		_PHY_DataReq
 20702 ;; This function uses a non-reentrant model
 20703 ;;
 20704                           
 20705                           	psect	text128
 20706  008D8E                     __ptext128:
 20707                           	opt callstack 0
 20708  008D8E                     _idle:
 20709                           	opt callstack 14
 20710                           
 20711                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 20712                           
 20713                           ; BSR set to: 0
 20714                           ;incstack = 0
 20715  008D8E  0E81               	movlw	129
 20716  008D90  6E0F               	movwf	SX1276Write@data^0,c
 20717  008D92  0E01               	movlw	1
 20718  008D94  EC48  F046         	call	_SX1276Write
 20719                           
 20720                           ; BSR set to: 61
 20721  008D98  0012               	return		;funcret
 20722  008D9A                     __end_of_idle:
 20723                           	opt callstack 0
 20724                           
 20725 ;; *************** function _nwkRxTaskHandler *****************
 20726 ;; Defined at:
 20727 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 20728 ;; Parameters:    Size  Location     Type
 20729 ;;		None
 20730 ;; Auto vars:     Size  Location     Type
 20731 ;;  frame           2   56[COMRAM] PTR struct NwkFrame_t
 20732 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20733 ;; Return value:  Size  Location     Type
 20734 ;;                  1    wreg      void 
 20735 ;; Registers used:
 20736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20737 ;; Tracked objects:
 20738 ;;		On entry : 2/0
 20739 ;;		On exit  : 0/0
 20740 ;;		Unchanged: 0/0
 20741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20746 ;;Total ram usage:        4 bytes
 20747 ;; Hardware stack levels used:    1
 20748 ;; Hardware stack levels required when called:   13
 20749 ;; This function calls:
 20750 ;;		_nwkFrameFree
 20751 ;;		_nwkFrameNext
 20752 ;;		_nwkRouteFrame
 20753 ;;		_nwkRxHandleIndication
 20754 ;;		_nwkRxHandleReceivedFrame
 20755 ;; This function is called by:
 20756 ;;		_NWK_TaskHandler
 20757 ;; This function uses a non-reentrant model
 20758 ;;
 20759                           
 20760                           	psect	text129
 20761  0067CE                     __ptext129:
 20762                           	opt callstack 0
 20763  0067CE                     _nwkRxTaskHandler:
 20764                           	opt callstack 15
 20765                           
 20766                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 20767                           
 20768                           ; BSR set to: 61
 20769                           ;incstack = 0
 20770  0067CE  0E00               	movlw	0
 20771  0067D0  6E39               	movwf	nwkRxTaskHandler@frame^0,c
 20772  0067D2  0E00               	movlw	0
 20773  0067D4  6E3A               	movwf	(nwkRxTaskHandler@frame+1)^0,c
 20774                           
 20775                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20776  0067D6  D03E               	goto	l16054
 20777  0067D8                     l16042:
 20778                           
 20779                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 20780  0067D8  0060  F0E4  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 20781  0067DE  0060  F0E8  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 20782  0067E4  EC19  F00B         	call	_nwkRxHandleReceivedFrame	;wreg free
 20783                           
 20784                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 20785  0067E8  D035               	goto	l16054
 20786  0067EA                     l16044:
 20787                           
 20788                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 20789  0067EA  0060  F0E4  F032   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 20790  0067F0  0060  F0E8  F033   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 20791  0067F6  EC06  F031         	call	_nwkRxHandleIndication	;wreg free
 20792                           
 20793                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 20794  0067FA  D02C               	goto	l16054
 20795  0067FC                     l16046:
 20796                           
 20797                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 20798  0067FC  0060  F0E4  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 20799  006802  0060  F0E8  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 20800  006808  EC36  F02E         	call	_nwkRouteFrame	;wreg free
 20801                           
 20802                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 20803  00680C  D023               	goto	l16054
 20804  00680E                     l16048:
 20805                           
 20806                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 20807  00680E  0060  F0E4  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 20808  006814  0060  F0E8  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 20809  00681A  EC95  F045         	call	_nwkFrameFree	;wreg free
 20810                           
 20811                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 20812  00681E  D01A               	goto	l16054
 20813  006820                     l16052:
 20814  006820  0060  F0E7  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 20815  006826  0060  F0EB  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 20816  00682C  50DF               	movf	indf2,w,c
 20817  00682E  6E37               	movwf	??_nwkRxTaskHandler^0,c
 20818  006830  6A38               	clrf	(??_nwkRxTaskHandler+1)^0,c
 20819                           
 20820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20821                           ; Switch size 1, requested type "simple"
 20822                           ; Number of cases is 1, Range of values is 0 to 0
 20823                           ; switch strategies available:
 20824                           ; Name         Instructions Cycles
 20825                           ; simple_byte            4     3 (average)
 20826                           ;	Chosen strategy is simple_byte
 20827  006832  5038               	movf	(??_nwkRxTaskHandler+1)^0,w,c
 20828  006834  0A00               	xorlw	0	; case 0
 20829  006836  A4D8               	btfss	status,2,c
 20830  006838  D00D               	goto	l16054
 20831                           
 20832                           ; Switch size 1, requested type "simple"
 20833                           ; Number of cases is 4, Range of values is 32 to 36
 20834                           ; switch strategies available:
 20835                           ; Name         Instructions Cycles
 20836                           ; simple_byte           13     7 (average)
 20837                           ;	Chosen strategy is simple_byte
 20838  00683A  5037               	movf	??_nwkRxTaskHandler^0,w,c
 20839  00683C  0A20               	xorlw	32	; case 32
 20840  00683E  B4D8               	btfsc	status,2,c
 20841  006840  D7CB               	goto	l16042
 20842  006842  0A02               	xorlw	2	; case 34
 20843  006844  B4D8               	btfsc	status,2,c
 20844  006846  D7D1               	goto	l16044
 20845  006848  0A01               	xorlw	1	; case 35
 20846  00684A  B4D8               	btfsc	status,2,c
 20847  00684C  D7D7               	goto	l16046
 20848  00684E  0A07               	xorlw	7	; case 36
 20849  006850  B4D8               	btfsc	status,2,c
 20850  006852  D7DD               	goto	l16048
 20851  006854                     l16054:
 20852                           
 20853                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20854  006854  0060  F0E4  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 20855  00685A  0060  F0E8  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 20856  006860  ECD4  F037         	call	_nwkFrameNext	;wreg free
 20857  006864  0060  F008  F039   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 20858  00686A  0060  F00C  F03A   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 20859  006870  5039               	movf	nwkRxTaskHandler@frame^0,w,c
 20860  006872  103A               	iorwf	(nwkRxTaskHandler@frame+1)^0,w,c
 20861  006874  B4D8               	btfsc	status,2,c
 20862  006876  0012               	return	
 20863  006878  D7D3               	goto	l16052
 20864  00687A                     __end_of_nwkRxTaskHandler:
 20865                           	opt callstack 0
 20866                           
 20867 ;; *************** function _nwkRxHandleReceivedFrame *****************
 20868 ;; Defined at:
 20869 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 20872 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20873 ;; Auto vars:     Size  Location     Type
 20874 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 20875 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 20876 ;;  member          1   45[COMRAM] _Bool 
 20877 ;;  broadcast       1   44[COMRAM] _Bool 
 20878 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 20879 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 20880 ;; Return value:  Size  Location     Type
 20881 ;;                  1    wreg      void 
 20882 ;; Registers used:
 20883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20884 ;; Tracked objects:
 20885 ;;		On entry : 0/0
 20886 ;;		On exit  : 0/0
 20887 ;;		Unchanged: 0/0
 20888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20890 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20892 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20893 ;;Total ram usage:       10 bytes
 20894 ;; Hardware stack levels used:    1
 20895 ;; Hardware stack levels required when called:   10
 20896 ;; This function calls:
 20897 ;;		_NWK_GroupIsMember
 20898 ;;		_nwkRouteFrameReceived
 20899 ;;		_nwkRxRejectDuplicate
 20900 ;;		_nwkTxBroadcastFrame
 20901 ;; This function is called by:
 20902 ;;		_nwkRxTaskHandler
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text130
 20907  001632                     __ptext130:
 20908                           	opt callstack 0
 20909  001632                     _nwkRxHandleReceivedFrame:
 20910                           	opt callstack 17
 20911                           
 20912                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 20913                           
 20914                           ;incstack = 0
 20915  001632  0E02               	movlw	2
 20916  001634  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 20917  001636  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 20918  001638  0E00               	movlw	0
 20919  00163A  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 20920  00163C  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 20921                           
 20922                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 20923  00163E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 20924  001644  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 20925  00164A  0E24               	movlw	36
 20926  00164C  6EDF               	movwf	indf2,c
 20927                           
 20928                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 20929  00164E  EE20 F009          	lfsr	2,9
 20930  001652  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 20931  001654  26D9               	addwf	fsr2l,f,c
 20932  001656  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 20933  001658  22DA               	addwfc	fsr2h,f,c
 20934  00165A  B2DF               	btfsc	indf2,1,c
 20935  00165C  0012               	return	
 20936                           
 20937                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 20938  00165E  EE20 F009          	lfsr	2,9
 20939  001662  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 20940  001664  26D9               	addwf	fsr2l,f,c
 20941  001666  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 20942  001668  22DA               	addwfc	fsr2h,f,c
 20943  00166A  A6DF               	btfss	indf2,3,c
 20944  00166C  D008               	goto	l15420
 20945  00166E  EE20 F009          	lfsr	2,9
 20946  001672  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 20947  001674  26D9               	addwf	fsr2l,f,c
 20948  001676  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 20949  001678  22DA               	addwfc	fsr2h,f,c
 20950  00167A  B0DF               	btfsc	indf2,0,c
 20951  00167C  0012               	return	
 20952  00167E                     l15420:
 20953                           
 20954                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 20955  00167E  EE20 F003          	lfsr	2,3
 20956  001682  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 20957  001684  26D9               	addwf	fsr2l,f,c
 20958  001686  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 20959  001688  22DA               	addwfc	fsr2h,f,c
 20960  00168A  28DE               	incf	postinc2,w,c
 20961  00168C  E125               	bnz	l15430
 20962  00168E  28DE               	incf	postinc2,w,c
 20963  001690  A4D8               	btfss	status,2,c
 20964  001692  D022               	goto	l15430
 20965                           
 20966                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 20967  001694  EE20 F00D          	lfsr	2,13
 20968  001698  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 20969  00169A  26D9               	addwf	fsr2l,f,c
 20970  00169C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 20971  00169E  22DA               	addwfc	fsr2h,f,c
 20972  0016A0  0101               	movlb	1	; () banked
 20973  0016A2  5100               	movf	_nwkIb& (0+255),w,b
 20974  0016A4  18DE               	xorwf	postinc2,w,c
 20975  0016A6  E104               	bnz	u15430
 20976  0016A8  5101               	movf	(_nwkIb+1)& (0+255),w,b
 20977  0016AA  18DE               	xorwf	postinc2,w,c
 20978  0016AC  B4D8               	btfsc	status,2,c
 20979  0016AE  D00B               	goto	u15440
 20980  0016B0                     u15430:
 20981                           
 20982                           ; BSR set to: 1
 20983  0016B0  EE20 F00D          	lfsr	2,13
 20984  0016B4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 20985  0016B6  26D9               	addwf	fsr2l,f,c
 20986  0016B8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 20987  0016BA  22DA               	addwfc	fsr2h,f,c
 20988  0016BC  28DE               	incf	postinc2,w,c
 20989  0016BE  E102               	bnz	u15441
 20990  0016C0  28DE               	incf	postinc2,w,c
 20991  0016C2  A4D8               	btfss	status,2,c
 20992  0016C4                     u15441:
 20993  0016C4  0012               	return	
 20994  0016C6                     u15440:
 20995                           
 20996                           ; BSR set to: 1
 20997                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 20998  0016C6  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 20999  0016CC  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21000  0016D2  0E22               	movlw	34
 21001  0016D4  6EDF               	movwf	indf2,c
 21002  0016D6  0012               	return	
 21003  0016D8                     l15430:
 21004                           
 21005                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 21006  0016D8  EE20 F00D          	lfsr	2,13
 21007  0016DC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21008  0016DE  26D9               	addwf	fsr2l,f,c
 21009  0016E0  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21010  0016E2  22DA               	addwfc	fsr2h,f,c
 21011  0016E4  28DE               	incf	postinc2,w,c
 21012  0016E6  E10B               	bnz	l15436
 21013  0016E8  28DE               	incf	postinc2,w,c
 21014  0016EA  A4D8               	btfss	status,2,c
 21015  0016EC  D008               	goto	l15436
 21016  0016EE  EE20 F009          	lfsr	2,9
 21017  0016F2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21018  0016F4  26D9               	addwf	fsr2l,f,c
 21019  0016F6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21020  0016F8  22DA               	addwfc	fsr2h,f,c
 21021  0016FA  B0DF               	btfsc	indf2,0,c
 21022  0016FC  0012               	return	
 21023  0016FE                     l15436:
 21024                           
 21025                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 21026  0016FE  EE20 F00B          	lfsr	2,11
 21027  001702  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21028  001704  26D9               	addwf	fsr2l,f,c
 21029  001706  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21030  001708  22DA               	addwfc	fsr2h,f,c
 21031  00170A  0101               	movlb	1	; () banked
 21032  00170C  5100               	movf	_nwkIb& (0+255),w,b
 21033  00170E  18DE               	xorwf	postinc2,w,c
 21034  001710  E104               	bnz	l15440
 21035  001712  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21036  001714  18DE               	xorwf	postinc2,w,c
 21037  001716  B4D8               	btfsc	status,2,c
 21038  001718  0012               	return	
 21039  00171A                     l15440:
 21040                           
 21041                           ; BSR set to: 1
 21042                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 21043  00171A  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 21044  001720  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 21045  001726  EC35  F01B         	call	_nwkRouteFrameReceived	;wreg free
 21046                           
 21047                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 21048  00172A  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 21049  001730  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 21050  001736  EC18  F015         	call	_nwkRxRejectDuplicate	;wreg free
 21051  00173A  0900               	iorlw	0
 21052  00173C  A4D8               	btfss	status,2,c
 21053  00173E  0012               	return	
 21054                           
 21055                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 21056  001740  EE20 F009          	lfsr	2,9
 21057  001744  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21058  001746  26D9               	addwf	fsr2l,f,c
 21059  001748  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21060  00174A  22DA               	addwfc	fsr2h,f,c
 21061  00174C  A6DF               	btfss	indf2,3,c
 21062  00174E  D0C7               	goto	l15478
 21063                           
 21064                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 21065  001750  EE20 F081          	lfsr	2,129
 21066  001754  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 21067  001756  26D9               	addwf	fsr2l,f,c
 21068  001758  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 21069  00175A  22DA               	addwfc	fsr2h,f,c
 21070  00175C  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 21071  001762  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 21072                           
 21073                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 21074  001768  EE20 F00D          	lfsr	2,13
 21075  00176C  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21076  00176E  26D9               	addwf	fsr2l,f,c
 21077  001770  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21078  001772  22DA               	addwfc	fsr2h,f,c
 21079  001774  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 21080  00177A  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 21081  001780  EC70  F043         	call	_NWK_GroupIsMember	;wreg free
 21082  001784  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 21083                           
 21084                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 21085  001786  0E00               	movlw	0
 21086  001788  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21087                           
 21088                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 21089  00178A  EE20 F005          	lfsr	2,5
 21090  00178E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21091  001790  26D9               	addwf	fsr2l,f,c
 21092  001792  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21093  001794  22DA               	addwfc	fsr2h,f,c
 21094  001796  28DE               	incf	postinc2,w,c
 21095  001798  E16C               	bnz	l15460
 21096  00179A  28DE               	incf	postinc2,w,c
 21097  00179C  A4D8               	btfss	status,2,c
 21098  00179E  D069               	goto	l15460
 21099                           
 21100                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 21101  0017A0  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 21102  0017A2  B4D8               	btfsc	status,2,c
 21103  0017A4  D031               	goto	l15458
 21104                           
 21105                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 21106  0017A6  EE20 F001          	lfsr	2,1
 21107  0017AA  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21108  0017AC  26D9               	addwf	fsr2l,f,c
 21109  0017AE  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21110  0017B0  22DA               	addwfc	fsr2h,f,c
 21111  0017B2  50DF               	movf	indf2,w,c
 21112  0017B4  0B0F               	andlw	15
 21113  0017B6  0900               	iorlw	0
 21114  0017B8  B4D8               	btfsc	status,2,c
 21115  0017BA  D002               	goto	u15520
 21116  0017BC  0E01               	movlw	1
 21117  0017BE  D001               	goto	u15530
 21118  0017C0                     u15520:
 21119  0017C0  0E00               	movlw	0
 21120  0017C2                     u15530:
 21121  0017C2  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21122                           
 21123                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 21124  0017C4  0E01               	movlw	1
 21125  0017C6  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21126  0017C8  EE20 F001          	lfsr	2,1
 21127  0017CC  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21128  0017CE  26D9               	addwf	fsr2l,f,c
 21129  0017D0  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21130  0017D2  22DA               	addwfc	fsr2h,f,c
 21131  0017D4  50DF               	movf	indf2,w,c
 21132  0017D6  0B0F               	andlw	15
 21133  0017D8  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 21134  0017DA  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 21135  0017DC  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 21136  0017DE  50DF               	movf	indf2,w,c
 21137  0017E0  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21138  0017E2  0BF0               	andlw	-16
 21139  0017E4  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21140  0017E6  6EDF               	movwf	indf2,c
 21141                           
 21142                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 21143  0017E8  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21144  0017EE  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21145  0017F4  38DF               	swapf	indf2,w,c
 21146  0017F6  0B0F               	andlw	15
 21147  0017F8  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21148  0017FA  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21149  001800  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21150  001806  D030               	goto	L18
 21151  001808                     l15458:
 21152                           
 21153                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 21154  001808  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21155  00180E  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21156  001814  50DF               	movf	indf2,w,c
 21157  001816  0B0F               	andlw	15
 21158  001818  0900               	iorlw	0
 21159  00181A  B4D8               	btfsc	status,2,c
 21160  00181C  D002               	goto	u15540
 21161  00181E  0E01               	movlw	1
 21162  001820  D001               	goto	u15550
 21163  001822                     u15540:
 21164  001822  0E00               	movlw	0
 21165  001824                     u15550:
 21166  001824  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21167                           
 21168                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 21169  001826  0E01               	movlw	1
 21170  001828  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21171  00182A  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21172  001830  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21173  001836  50DF               	movf	indf2,w,c
 21174  001838  0B0F               	andlw	15
 21175  00183A  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 21176  00183C  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 21177  00183E  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 21178  001840  50DF               	movf	indf2,w,c
 21179  001842  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21180  001844  0BF0               	andlw	-16
 21181  001846  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21182  001848  6EDF               	movwf	indf2,c
 21183                           
 21184                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 21185  00184A  EE20 F001          	lfsr	2,1
 21186  00184E  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21187  001850  26D9               	addwf	fsr2l,f,c
 21188  001852  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21189  001854  22DA               	addwfc	fsr2h,f,c
 21190  001856  38DF               	swapf	indf2,w,c
 21191  001858  0B0F               	andlw	15
 21192  00185A  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21193  00185C  EE20 F001          	lfsr	2,1
 21194  001860  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21195  001862  26D9               	addwf	fsr2l,f,c
 21196  001864  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21197  001866  22DA               	addwfc	fsr2h,f,c
 21198  001868                     L18:
 21199  001868  50DF               	movf	indf2,w,c
 21200  00186A  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 21201  00186C  0BF0               	andlw	-16
 21202  00186E  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 21203  001870  D014               	goto	L17
 21204  001872                     l15460:
 21205                           
 21206                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 21207  001872  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 21208  001874  B4D8               	btfsc	status,2,c
 21209  001876  D00A               	goto	l15466
 21210                           
 21211                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 21212  001878  0E01               	movlw	1
 21213  00187A  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21214                           
 21215                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 21216  00187C  EE20 F009          	lfsr	2,9
 21217  001880  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21218  001882  26D9               	addwf	fsr2l,f,c
 21219  001884  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21220  001886  22DA               	addwfc	fsr2h,f,c
 21221  001888  84DF               	bsf	indf2,2,c
 21222                           
 21223                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 21224  00188A  D008               	goto	l15468
 21225  00188C                     l15466:
 21226                           
 21227                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 21228  00188C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21229  001892  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21230  001898  0E23               	movlw	35
 21231  00189A                     L17:
 21232  00189A  6EDF               	movwf	indf2,c
 21233  00189C                     l15468:
 21234                           
 21235                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 21236  00189C  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 21237  00189E  B4D8               	btfsc	status,2,c
 21238  0018A0  D008               	goto	l15472
 21239                           
 21240                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 21241  0018A2  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 21242  0018A8  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 21243  0018AE  ECA5  F022         	call	_nwkTxBroadcastFrame	;wreg free
 21244  0018B2                     l15472:
 21245                           
 21246                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 21247  0018B2  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 21248  0018B4  B4D8               	btfsc	status,2,c
 21249  0018B6  0012               	return	
 21250                           
 21251                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 21252  0018B8  EE20 F081          	lfsr	2,129
 21253  0018BC  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 21254  0018BE  26D9               	addwf	fsr2l,f,c
 21255  0018C0  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 21256  0018C2  22DA               	addwfc	fsr2h,f,c
 21257  0018C4  0E02               	movlw	2
 21258  0018C6  26DE               	addwf	postinc2,f,c
 21259  0018C8  0E00               	movlw	0
 21260  0018CA  22DD               	addwfc	postdec2,f,c
 21261                           
 21262                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 21263  0018CC  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21264  0018D2  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21265  0018D8  0E22               	movlw	34
 21266  0018DA  6EDF               	movwf	indf2,c
 21267  0018DC  0012               	return	
 21268  0018DE                     l15478:
 21269                           
 21270                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 21271  0018DE  EE20 F005          	lfsr	2,5
 21272  0018E2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21273  0018E4  26D9               	addwf	fsr2l,f,c
 21274  0018E6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21275  0018E8  22DA               	addwfc	fsr2h,f,c
 21276  0018EA  28DE               	incf	postinc2,w,c
 21277  0018EC  E121               	bnz	l15486
 21278  0018EE  28DE               	incf	postinc2,w,c
 21279  0018F0  A4D8               	btfss	status,2,c
 21280  0018F2  D01E               	goto	l15486
 21281  0018F4  EE20 F00D          	lfsr	2,13
 21282  0018F8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21283  0018FA  26D9               	addwf	fsr2l,f,c
 21284  0018FC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21285  0018FE  22DA               	addwfc	fsr2h,f,c
 21286  001900  0101               	movlb	1	; () banked
 21287  001902  5100               	movf	_nwkIb& (0+255),w,b
 21288  001904  18DE               	xorwf	postinc2,w,c
 21289  001906  E104               	bnz	u15600
 21290  001908  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21291  00190A  18DE               	xorwf	postinc2,w,c
 21292  00190C  B4D8               	btfsc	status,2,c
 21293  00190E  D010               	goto	l15486
 21294  001910                     u15600:
 21295                           
 21296                           ; BSR set to: 1
 21297  001910  EE20 F009          	lfsr	2,9
 21298  001914  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21299  001916  26D9               	addwf	fsr2l,f,c
 21300  001918  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21301  00191A  22DA               	addwfc	fsr2h,f,c
 21302  00191C  B4DF               	btfsc	indf2,2,c
 21303  00191E  D008               	goto	l15486
 21304                           
 21305                           ; BSR set to: 1
 21306                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 21307  001920  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 21308  001926  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 21309  00192C  ECA5  F022         	call	_nwkTxBroadcastFrame	;wreg free
 21310  001930                     l15486:
 21311                           
 21312                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 21313  001930  EE20 F00D          	lfsr	2,13
 21314  001934  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21315  001936  26D9               	addwf	fsr2l,f,c
 21316  001938  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21317  00193A  22DA               	addwfc	fsr2h,f,c
 21318  00193C  0101               	movlb	1	; () banked
 21319  00193E  5100               	movf	_nwkIb& (0+255),w,b
 21320  001940  18DE               	xorwf	postinc2,w,c
 21321  001942  E104               	bnz	u15620
 21322  001944  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21323  001946  18DE               	xorwf	postinc2,w,c
 21324  001948  B4D8               	btfsc	status,2,c
 21325  00194A  D00B               	goto	u15630
 21326  00194C                     u15620:
 21327                           
 21328                           ; BSR set to: 1
 21329  00194C  EE20 F00D          	lfsr	2,13
 21330  001950  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21331  001952  26D9               	addwf	fsr2l,f,c
 21332  001954  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21333  001956  22DA               	addwfc	fsr2h,f,c
 21334  001958  28DE               	incf	postinc2,w,c
 21335  00195A  E10C               	bnz	l15492
 21336  00195C  28DE               	incf	postinc2,w,c
 21337  00195E  A4D8               	btfss	status,2,c
 21338  001960  D009               	goto	l15492
 21339  001962                     u15630:
 21340                           
 21341                           ; BSR set to: 1
 21342                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 21343  001962  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21344  001968  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21345  00196E  0E22               	movlw	34
 21346  001970  6EDF               	movwf	indf2,c
 21347                           
 21348                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 21349  001972  0012               	return	
 21350  001974                     l15492:
 21351                           
 21352                           ; BSR set to: 1
 21353  001974  EE20 F005          	lfsr	2,5
 21354  001978  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21355  00197A  26D9               	addwf	fsr2l,f,c
 21356  00197C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21357  00197E  22DA               	addwfc	fsr2h,f,c
 21358  001980  5100               	movf	_nwkIb& (0+255),w,b
 21359  001982  18DE               	xorwf	postinc2,w,c
 21360  001984  E10C               	bnz	l2157
 21361  001986  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21362  001988  18DE               	xorwf	postinc2,w,c
 21363  00198A  A4D8               	btfss	status,2,c
 21364  00198C  0012               	return	
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 21368  00198E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21369  001994  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21370  00199A  0E23               	movlw	35
 21371  00199C  6EDF               	movwf	indf2,c
 21372  00199E                     l2157:
 21373  00199E  0012               	return		;funcret
 21374  0019A0                     __end_of_nwkRxHandleReceivedFrame:
 21375                           	opt callstack 0
 21376                           
 21377 ;; *************** function _nwkTxBroadcastFrame *****************
 21378 ;; Defined at:
 21379 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 21380 ;; Parameters:    Size  Location     Type
 21381 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 21382 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21383 ;; Auto vars:     Size  Location     Type
 21384 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 21385 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  1    wreg      void 
 21388 ;; Registers used:
 21389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/1
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21398 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21399 ;;Total ram usage:        5 bytes
 21400 ;; Hardware stack levels used:    1
 21401 ;; Hardware stack levels required when called:    9
 21402 ;; This function calls:
 21403 ;;		_memcpy
 21404 ;;		_nwkFrameAlloc
 21405 ;;		_rand
 21406 ;; This function is called by:
 21407 ;;		_nwkRxHandleReceivedFrame
 21408 ;; This function uses a non-reentrant model
 21409 ;;
 21410                           
 21411                           	psect	text131
 21412  00454A                     __ptext131:
 21413                           	opt callstack 0
 21414  00454A                     _nwkTxBroadcastFrame:
 21415                           	opt callstack 17
 21416                           
 21417                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 21418                           
 21419                           ;incstack = 0
 21420  00454A  ECDF  F032         	call	_nwkFrameAlloc	;wreg free
 21421  00454E  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 21422  004554  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 21423  00455A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21424  00455C  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21425  00455E  B4D8               	btfsc	status,2,c
 21426  004560  0012               	return	
 21427                           
 21428                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 21429  004562  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 21430  004568  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 21431  00456E  0E12               	movlw	18
 21432  004570  6EDF               	movwf	indf2,c
 21433                           
 21434                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 21435  004572  EE20 F001          	lfsr	2,1
 21436  004576  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 21437  004578  26D9               	addwf	fsr2l,f,c
 21438  00457A  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21439  00457C  22DA               	addwfc	fsr2h,f,c
 21440  00457E  EE10 F001          	lfsr	1,1
 21441  004582  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21442  004584  26E1               	addwf	fsr1l,f,c
 21443  004586  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21444  004588  22E2               	addwfc	fsr1h,f,c
 21445  00458A  006F FF7F FFE7     	movff	indf2,indf1
 21446                           
 21447                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 21448  004590  EE20 F083          	lfsr	2,131
 21449  004594  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21450  004596  26D9               	addwf	fsr2l,f,c
 21451  004598  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21452  00459A  22DA               	addwfc	fsr2h,f,c
 21453  00459C  0E00               	movlw	0
 21454  00459E  6EDF               	movwf	indf2,c
 21455                           
 21456                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 21457  0045A0  EC47  F027         	call	_rand	;wreg free
 21458  0045A4  0E07               	movlw	7
 21459  0045A6  161A               	andwf	?_rand^0,f,c
 21460  0045A8  0E00               	movlw	0
 21461  0045AA  161B               	andwf	(?_rand+1)^0,f,c
 21462  0045AC  0E01               	movlw	1
 21463  0045AE  261A               	addwf	?_rand^0,f,c
 21464  0045B0  0E00               	movlw	0
 21465  0045B2  221B               	addwfc	(?_rand+1)^0,f,c
 21466  0045B4  EE20 F084          	lfsr	2,132
 21467  0045B8  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21468  0045BA  26D9               	addwf	fsr2l,f,c
 21469  0045BC  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21470  0045BE  22DA               	addwfc	fsr2h,f,c
 21471  0045C0  0060  F06B  FFDE   	movff	?_rand,postinc2
 21472  0045C6  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 21476  0045CC  EE20 F087          	lfsr	2,135
 21477  0045D0  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21478  0045D2  26D9               	addwf	fsr2l,f,c
 21479  0045D4  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21480  0045D6  22DA               	addwfc	fsr2h,f,c
 21481  0045D8  0E00               	movlw	0
 21482  0045DA  6EDE               	movwf	postinc2,c
 21483  0045DC  0E00               	movlw	0
 21484  0045DE  6EDD               	movwf	postdec2,c
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 21488  0045E0  0E02               	movlw	2
 21489  0045E2  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 21490  0045E4  6E08               	movwf	memcpy@d1^0,c
 21491  0045E6  0E00               	movlw	0
 21492  0045E8  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21493  0045EA  6E09               	movwf	(memcpy@d1+1)^0,c
 21494  0045EC  0E02               	movlw	2
 21495  0045EE  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 21496  0045F0  6E0A               	movwf	memcpy@s1^0,c
 21497  0045F2  0E00               	movlw	0
 21498  0045F4  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21499  0045F6  6E0B               	movwf	(memcpy@s1+1)^0,c
 21500  0045F8  EE20 F001          	lfsr	2,1
 21501  0045FC  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 21502  0045FE  26D9               	addwf	fsr2l,f,c
 21503  004600  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21504  004602  22DA               	addwfc	fsr2h,f,c
 21505  004604  50DF               	movf	indf2,w,c
 21506  004606  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 21507  004608  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 21508  00460A  6E0C               	movwf	memcpy@n^0,c
 21509  00460C  6A0D               	clrf	(memcpy@n+1)^0,c
 21510  00460E  ECE5  F039         	call	_memcpy	;wreg free
 21511                           
 21512                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 21513  004612  EE20 F002          	lfsr	2,2
 21514  004616  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21515  004618  26D9               	addwf	fsr2l,f,c
 21516  00461A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21517  00461C  22DA               	addwfc	fsr2h,f,c
 21518  00461E  0E41               	movlw	65
 21519  004620  6EDE               	movwf	postinc2,c
 21520  004622  0E88               	movlw	136
 21521  004624  6EDD               	movwf	postdec2,c
 21522                           
 21523                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 21524  004626  EE20 F007          	lfsr	2,7
 21525  00462A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21526  00462C  26D9               	addwf	fsr2l,f,c
 21527  00462E  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21528  004630  22DA               	addwfc	fsr2h,f,c
 21529  004632  0EFF               	movlw	255
 21530  004634  6EDE               	movwf	postinc2,c
 21531  004636  0EFF               	movlw	255
 21532  004638  6EDD               	movwf	postdec2,c
 21533                           
 21534                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 21535  00463A  EE20 F005          	lfsr	2,5
 21536  00463E  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 21537  004640  26D9               	addwf	fsr2l,f,c
 21538  004642  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21539  004644  22DA               	addwfc	fsr2h,f,c
 21540  004646  EE10 F005          	lfsr	1,5
 21541  00464A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21542  00464C  26E1               	addwf	fsr1l,f,c
 21543  00464E  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21544  004650  22E2               	addwfc	fsr1h,f,c
 21545  004652  006F FF7B FFE6     	movff	postinc2,postinc1
 21546  004658  006F FF77 FFE5     	movff	postdec2,postdec1
 21547                           
 21548                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 21549  00465E  EE20 F009          	lfsr	2,9
 21550  004662  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21551  004664  26D9               	addwf	fsr2l,f,c
 21552  004666  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21553  004668  22DA               	addwfc	fsr2h,f,c
 21554  00466A  0060  F403  FFDE   	movff	_nwkIb,postinc2
 21555  004670  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 21556                           
 21557                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 21558  004676  0101               	movlb	1	; () banked
 21559  004678  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 21560  00467A  EE20 F004          	lfsr	2,4
 21561  00467E  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21562  004680  26D9               	addwf	fsr2l,f,c
 21563  004682  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21564  004684  22DA               	addwfc	fsr2h,f,c
 21565  004686  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 21566  00468C  0012               	return		;funcret
 21567  00468E                     __end_of_nwkTxBroadcastFrame:
 21568                           	opt callstack 0
 21569                           
 21570 ;; *************** function _nwkRxRejectDuplicate *****************
 21571 ;; Defined at:
 21572 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 21573 ;; Parameters:    Size  Location     Type
 21574 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 21575 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21576 ;; Auto vars:     Size  Location     Type
 21577 ;;  shift           1   23[COMRAM] unsigned char 
 21578 ;;  diff            1   25[COMRAM] unsigned char 
 21579 ;;  i               1   24[COMRAM] unsigned char 
 21580 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 21581 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 21582 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 21583 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 21584 ;; Return value:  Size  Location     Type
 21585 ;;                  1    wreg      _Bool 
 21586 ;; Registers used:
 21587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21588 ;; Tracked objects:
 21589 ;;		On entry : 0/1
 21590 ;;		On exit  : 0/0
 21591 ;;		Unchanged: 0/0
 21592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21594 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21596 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21597 ;;Total ram usage:       13 bytes
 21598 ;; Hardware stack levels used:    1
 21599 ;; Hardware stack levels required when called:    9
 21600 ;; This function calls:
 21601 ;;		_SYS_TimerStart
 21602 ;;		_nwkRouteRemove
 21603 ;; This function is called by:
 21604 ;;		_nwkRxHandleReceivedFrame
 21605 ;; This function uses a non-reentrant model
 21606 ;;
 21607                           
 21608                           	psect	text132
 21609  002A30                     __ptext132:
 21610                           	opt callstack 0
 21611  002A30                     _nwkRxRejectDuplicate:
 21612                           	opt callstack 17
 21613                           
 21614                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 21615                           
 21616                           ;incstack = 0
 21617  002A30  0E00               	movlw	0
 21618  002A32  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 21619  002A34  0E00               	movlw	0
 21620  002A36  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 21621                           
 21622                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 21623  002A38  0E00               	movlw	0
 21624  002A3A  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 21625  002A3C                     l10762:
 21626                           
 21627                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 21628  002A3C  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 21629  002A3E  0D05               	mullw	5
 21630  002A40  0E7A               	movlw	low _nwkRxDuplicateRejectionTable
 21631  002A42  24F3               	addwf	243,w,c
 21632  002A44  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 21633  002A46  0E02               	movlw	high _nwkRxDuplicateRejectionTable
 21634  002A48  20F4               	addwfc	prodh,w,c
 21635  002A4A  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 21636                           
 21637                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 21638  002A4C  EE20 F004          	lfsr	2,4
 21639  002A50  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21640  002A52  26D9               	addwf	fsr2l,f,c
 21641  002A54  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21642  002A56  22DA               	addwfc	fsr2h,f,c
 21643  002A58  50DF               	movf	indf2,w,c
 21644  002A5A  B4D8               	btfsc	status,2,c
 21645  002A5C  D0B3               	goto	l10802
 21646  002A5E  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 21647  002A64  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 21648  002A6A  EE10 F00B          	lfsr	1,11
 21649  002A6E  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21650  002A70  26E1               	addwf	fsr1l,f,c
 21651  002A72  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21652  002A74  22E2               	addwfc	fsr1h,f,c
 21653  002A76  50DE               	movf	postinc2,w,c
 21654  002A78  18E6               	xorwf	postinc1,w,c
 21655  002A7A  E103               	bnz	u9231
 21656  002A7C  50DE               	movf	postinc2,w,c
 21657  002A7E  18E6               	xorwf	postinc1,w,c
 21658  002A80  A4D8               	btfss	status,2,c
 21659  002A82                     u9231:
 21660  002A82  D0A0               	goto	l10802
 21661                           
 21662                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 21663  002A84  EE20 F00A          	lfsr	2,10
 21664  002A88  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21665  002A8A  26D9               	addwf	fsr2l,f,c
 21666  002A8C  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21667  002A8E  22DA               	addwfc	fsr2h,f,c
 21668  002A90  50DF               	movf	indf2,w,c
 21669  002A92  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 21670  002A94  EE20 F002          	lfsr	2,2
 21671  002A98  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21672  002A9A  26D9               	addwf	fsr2l,f,c
 21673  002A9C  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21674  002A9E  22DA               	addwfc	fsr2h,f,c
 21675  002AA0  50DF               	movf	indf2,w,c
 21676  002AA2  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 21677  002AA4  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 21678  002AA6  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 21679  002AA8  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 21680                           
 21681                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 21682  002AAA  0E08               	movlw	8
 21683  002AAC  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 21684  002AAE  D055               	goto	l10790
 21685                           
 21686                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 21687  002AB0  EE20 F003          	lfsr	2,3
 21688  002AB4  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21689  002AB6  26D9               	addwf	fsr2l,f,c
 21690  002AB8  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21691  002ABA  22DA               	addwfc	fsr2h,f,c
 21692  002ABC  50DF               	movf	indf2,w,c
 21693  002ABE  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 21694  002AC0  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 21695  002AC6  0E01               	movlw	1
 21696  002AC8  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 21697  002ACA  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 21698  002ACC  D002               	goto	u9254
 21699  002ACE                     u9255:
 21700  002ACE  90D8               	bcf	status,0,c
 21701  002AD0  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 21702  002AD2                     u9254:
 21703  002AD2  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 21704  002AD4  D7FC               	goto	u9255
 21705  002AD6  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 21706  002AD8  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 21707  002ADA  0900               	iorlw	0
 21708  002ADC  B4D8               	btfsc	status,2,c
 21709  002ADE  D028               	goto	l10782
 21710                           
 21711                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 21712  002AE0  EE20 F005          	lfsr	2,5
 21713  002AE4  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21714  002AE6  26D9               	addwf	fsr2l,f,c
 21715  002AE8  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21716  002AEA  22DA               	addwfc	fsr2h,f,c
 21717  002AEC  0101               	movlb	1	; () banked
 21718  002AEE  5100               	movf	_nwkIb& (0+255),w,b
 21719  002AF0  18DE               	xorwf	postinc2,w,c
 21720  002AF2  E11C               	bnz	l10778
 21721  002AF4  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21722  002AF6  18DE               	xorwf	postinc2,w,c
 21723  002AF8  A4D8               	btfss	status,2,c
 21724  002AFA  D018               	goto	l10778
 21725                           
 21726                           ; BSR set to: 1
 21727                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 21728  002AFC  EE20 F00D          	lfsr	2,13
 21729  002B00  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21730  002B02  26D9               	addwf	fsr2l,f,c
 21731  002B04  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21732  002B06  22DA               	addwfc	fsr2h,f,c
 21733  002B08  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 21734  002B0E  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 21735  002B14  EE20 F009          	lfsr	2,9
 21736  002B18  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21737  002B1A  26D9               	addwf	fsr2l,f,c
 21738  002B1C  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21739  002B1E  22DA               	addwfc	fsr2h,f,c
 21740  002B20  0E00               	movlw	0
 21741  002B22  B6DF               	btfsc	indf2,3,c
 21742  002B24  0E01               	movlw	1
 21743  002B26  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 21744  002B28  ECB8  F041         	call	_nwkRouteRemove	;wreg free
 21745  002B2C                     l10778:
 21746                           
 21747                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 21748  002B2C  0E01               	movlw	1
 21749  002B2E  0012               	return	
 21750  002B30                     l10782:
 21751                           
 21752                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 21753  002B30  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 21754  002B36  0E01               	movlw	1
 21755  002B38  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 21756  002B3A  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 21757  002B3C  D002               	goto	u9284
 21758  002B3E                     u9285:
 21759  002B3E  90D8               	bcf	status,0,c
 21760  002B40  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 21761  002B42                     u9284:
 21762  002B42  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 21763  002B44  D7FC               	goto	u9285
 21764  002B46  EE20 F003          	lfsr	2,3
 21765  002B4A  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21766  002B4C  26D9               	addwf	fsr2l,f,c
 21767  002B4E  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21768  002B50  22DA               	addwfc	fsr2h,f,c
 21769  002B52  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 21770  002B54  12DF               	iorwf	indf2,f,c
 21771  002B56                     l10784:
 21772                           
 21773                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 21774  002B56  0E00               	movlw	0
 21775  002B58  0012               	return	
 21776  002B5A                     l10790:
 21777                           
 21778                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 21779  002B5A  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 21780  002B5C  0800               	sublw	0
 21781  002B5E  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 21782                           
 21783                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 21784  002B60  EE20 F00A          	lfsr	2,10
 21785  002B64  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21786  002B66  26D9               	addwf	fsr2l,f,c
 21787  002B68  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21788  002B6A  22DA               	addwfc	fsr2h,f,c
 21789  002B6C  EE10 F002          	lfsr	1,2
 21790  002B70  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21791  002B72  26E1               	addwf	fsr1l,f,c
 21792  002B74  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21793  002B76  22E2               	addwfc	fsr1h,f,c
 21794  002B78  006F FF7F FFE7     	movff	indf2,indf1
 21795                           
 21796                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 21797  002B7E  EE20 F003          	lfsr	2,3
 21798  002B82  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21799  002B84  26D9               	addwf	fsr2l,f,c
 21800  002B86  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21801  002B88  22DA               	addwfc	fsr2h,f,c
 21802  002B8A  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 21803  002B90  EE10 F003          	lfsr	1,3
 21804  002B94  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21805  002B96  26E1               	addwf	fsr1l,f,c
 21806  002B98  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21807  002B9A  22E2               	addwfc	fsr1h,f,c
 21808  002B9C  50E7               	movf	indf1,w,c
 21809  002B9E  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 21810  002BA0  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 21811  002BA2  D002               	goto	u9294
 21812  002BA4                     u9295:
 21813  002BA4  90D8               	bcf	status,0,c
 21814  002BA6  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 21815  002BA8                     u9294:
 21816  002BA8  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 21817  002BAA  D7FC               	goto	u9295
 21818  002BAC  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 21819  002BAE  0901               	iorlw	1
 21820  002BB0  6EDF               	movwf	indf2,c
 21821                           
 21822                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 21823  002BB2  EE20 F004          	lfsr	2,4
 21824  002BB6  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21825  002BB8  26D9               	addwf	fsr2l,f,c
 21826  002BBA  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21827  002BBC  22DA               	addwfc	fsr2h,f,c
 21828  002BBE  0E01               	movlw	1
 21829  002BC0  6EDF               	movwf	indf2,c
 21830  002BC2  D7C9               	goto	l10784
 21831  002BC4                     l10802:
 21832                           
 21833                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 21834  002BC4  EE20 F004          	lfsr	2,4
 21835  002BC8  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21836  002BCA  26D9               	addwf	fsr2l,f,c
 21837  002BCC  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21838  002BCE  22DA               	addwfc	fsr2h,f,c
 21839  002BD0  50DF               	movf	indf2,w,c
 21840  002BD2  A4D8               	btfss	status,2,c
 21841  002BD4  D006               	goto	l10806
 21842                           
 21843                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 21844  002BD6  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 21845  002BDC  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 21846  002BE2                     l10806:
 21847                           
 21848                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 21849  002BE2  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 21850  002BE4  0E09               	movlw	9
 21851  002BE6  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 21852  002BE8  D729               	goto	l10762
 21853                           
 21854                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 21855  002BEA  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 21856  002BEC  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 21857  002BEE  B4D8               	btfsc	status,2,c
 21858  002BF0  D79D               	goto	l10778
 21859                           
 21860                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 21861  002BF2  EE20 F00B          	lfsr	2,11
 21862  002BF6  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21863  002BF8  26D9               	addwf	fsr2l,f,c
 21864  002BFA  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21865  002BFC  22DA               	addwfc	fsr2h,f,c
 21866  002BFE  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 21867  002C04  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 21868  002C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 21869  002C10  006F FF77 FFE5     	movff	postdec2,postdec1
 21870                           
 21871                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 21872  002C16  EE20 F00A          	lfsr	2,10
 21873  002C1A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21874  002C1C  26D9               	addwf	fsr2l,f,c
 21875  002C1E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21876  002C20  22DA               	addwfc	fsr2h,f,c
 21877  002C22  EE10 F002          	lfsr	1,2
 21878  002C26  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 21879  002C28  26E1               	addwf	fsr1l,f,c
 21880  002C2A  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 21881  002C2C  22E2               	addwfc	fsr1h,f,c
 21882  002C2E  006F FF7F FFE7     	movff	indf2,indf1
 21883                           
 21884                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 21885  002C34  EE20 F003          	lfsr	2,3
 21886  002C38  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 21887  002C3A  26D9               	addwf	fsr2l,f,c
 21888  002C3C  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 21889  002C3E  22DA               	addwfc	fsr2h,f,c
 21890  002C40  0E01               	movlw	1
 21891  002C42  6EDF               	movwf	indf2,c
 21892                           
 21893                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 21894  002C44  EE20 F004          	lfsr	2,4
 21895  002C48  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 21896  002C4A  26D9               	addwf	fsr2l,f,c
 21897  002C4C  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 21898  002C4E  22DA               	addwfc	fsr2h,f,c
 21899  002C50  0E01               	movlw	1
 21900  002C52  6EDF               	movwf	indf2,c
 21901                           
 21902                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 21903  002C54  0EC5               	movlw	low _nwkRxDuplicateRejectionTimer
 21904  002C56  6E10               	movwf	SYS_TimerStart@timer^0,c
 21905  002C58  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 21906  002C5A  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 21907  002C5C  ECF3  F043         	call	_SYS_TimerStart	;wreg free
 21908  002C60  D77A               	goto	l10784
 21909  002C62                     __end_of_nwkRxRejectDuplicate:
 21910                           	opt callstack 0
 21911                           
 21912 ;; *************** function _SYS_TimerStart *****************
 21913 ;; Defined at:
 21914 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 21915 ;; Parameters:    Size  Location     Type
 21916 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 21917 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;		None
 21920 ;; Return value:  Size  Location     Type
 21921 ;;                  1    wreg      void 
 21922 ;; Registers used:
 21923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21924 ;; Tracked objects:
 21925 ;;		On entry : 0/0
 21926 ;;		On exit  : 0/0
 21927 ;;		Unchanged: 0/0
 21928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21933 ;;Total ram usage:        2 bytes
 21934 ;; Hardware stack levels used:    1
 21935 ;; Hardware stack levels required when called:    8
 21936 ;; This function calls:
 21937 ;;		_SYS_TimerStarted
 21938 ;;		_placeTimer
 21939 ;; This function is called by:
 21940 ;;		_nwkRxDuplicateRejectionTimerHandler
 21941 ;;		_nwkRxRejectDuplicate
 21942 ;;		_nwkTxAckWaitTimerHandler
 21943 ;;		_nwkTxDelayTimerHandler
 21944 ;;		_nwkTxTaskHandler
 21945 ;; This function uses a non-reentrant model
 21946 ;;
 21947                           
 21948                           	psect	text133
 21949  0087E6                     __ptext133:
 21950                           	opt callstack 0
 21951  0087E6                     _SYS_TimerStart:
 21952                           	opt callstack 19
 21953                           
 21954                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 21955                           
 21956                           ;incstack = 0
 21957  0087E6  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 21958  0087EC  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 21959  0087F2  ECFE  F03F         	call	_SYS_TimerStarted	;wreg free
 21960  0087F6  0900               	iorlw	0
 21961  0087F8  A4D8               	btfss	status,2,c
 21962  0087FA  0012               	return	
 21963                           
 21964                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 21965  0087FC  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 21966  008802  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 21967  008808  EC26  F01C         	call	_placeTimer	;wreg free
 21968  00880C  0012               	return		;funcret
 21969  00880E                     __end_of_SYS_TimerStart:
 21970                           	opt callstack 0
 21971                           
 21972 ;; *************** function _placeTimer *****************
 21973 ;; Defined at:
 21974 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 21975 ;; Parameters:    Size  Location     Type
 21976 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 21977 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21978 ;; Auto vars:     Size  Location     Type
 21979 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 21980 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21981 ;;  timeout         4    7[COMRAM] unsigned long 
 21982 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 21983 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21984 ;; Return value:  Size  Location     Type
 21985 ;;                  1    wreg      void 
 21986 ;; Registers used:
 21987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21988 ;; Tracked objects:
 21989 ;;		On entry : 0/0
 21990 ;;		On exit  : 0/0
 21991 ;;		Unchanged: 0/0
 21992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21994 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21996 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21997 ;;Total ram usage:       14 bytes
 21998 ;; Hardware stack levels used:    1
 21999 ;; Hardware stack levels required when called:    7
 22000 ;; This function calls:
 22001 ;;		Nothing
 22002 ;; This function is called by:
 22003 ;;		_SYS_TimerStart
 22004 ;;		_SYS_TimerTaskHandler
 22005 ;; This function uses a non-reentrant model
 22006 ;;
 22007                           
 22008                           	psect	text134
 22009  00384C                     __ptext134:
 22010                           	opt callstack 0
 22011  00384C                     _placeTimer:
 22012                           	opt callstack 21
 22013                           
 22014                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 22015                           
 22016                           ;incstack = 0
 22017  00384C  0100               	movlb	0	; () banked
 22018  00384E  51BB               	movf	_timers& (0+255),w,b
 22019  003850  11BC               	iorwf	(_timers+1)& (0+255),w,b
 22020  003852  B4D8               	btfsc	status,2,c
 22021  003854  D0A8               	goto	l9698
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 22025  003856  0E00               	movlw	0
 22026  003858  6E0C               	movwf	placeTimer@prev^0,c
 22027  00385A  0E00               	movlw	0
 22028  00385C  6E0D               	movwf	(placeTimer@prev+1)^0,c
 22029                           
 22030                           ; BSR set to: 0
 22031                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 22032  00385E  EE20 F006          	lfsr	2,6
 22033  003862  5002               	movf	placeTimer@timer^0,w,c
 22034  003864  26D9               	addwf	fsr2l,f,c
 22035  003866  5003               	movf	(placeTimer@timer+1)^0,w,c
 22036  003868  22DA               	addwfc	fsr2h,f,c
 22037  00386A  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 22038  003870  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 22039  003876  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 22040  00387C  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 22044  003882  0060  F2EC  F00E   	movff	_timers,placeTimer@t
 22045  003888  0060  F2F0  F00F   	movff	_timers+1,placeTimer@t+1
 22046  00388E  D03F               	goto	l9684
 22047  003890                     l9674:
 22048                           
 22049                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 22050  003890  EE20 F002          	lfsr	2,2
 22051  003894  500E               	movf	placeTimer@t^0,w,c
 22052  003896  26D9               	addwf	fsr2l,f,c
 22053  003898  500F               	movf	(placeTimer@t+1)^0,w,c
 22054  00389A  22DA               	addwfc	fsr2h,f,c
 22055  00389C  50DE               	movf	postinc2,w,c
 22056  00389E  5C08               	subwf	placeTimer@timeout^0,w,c
 22057  0038A0  50DE               	movf	postinc2,w,c
 22058  0038A2  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 22059  0038A4  50DE               	movf	postinc2,w,c
 22060  0038A6  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 22061  0038A8  50DE               	movf	postinc2,w,c
 22062  0038AA  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 22063  0038AC  B0D8               	btfsc	status,0,c
 22064  0038AE  D00F               	goto	l9680
 22065                           
 22066                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 22067  0038B0  EE20 F002          	lfsr	2,2
 22068  0038B4  500E               	movf	placeTimer@t^0,w,c
 22069  0038B6  26D9               	addwf	fsr2l,f,c
 22070  0038B8  500F               	movf	(placeTimer@t+1)^0,w,c
 22071  0038BA  22DA               	addwfc	fsr2h,f,c
 22072  0038BC  5008               	movf	placeTimer@timeout^0,w,c
 22073  0038BE  5EDE               	subwf	postinc2,f,c
 22074  0038C0  5009               	movf	(placeTimer@timeout+1)^0,w,c
 22075  0038C2  5ADE               	subwfb	postinc2,f,c
 22076  0038C4  500A               	movf	(placeTimer@timeout+2)^0,w,c
 22077  0038C6  5ADE               	subwfb	postinc2,f,c
 22078  0038C8  500B               	movf	(placeTimer@timeout+3)^0,w,c
 22079  0038CA  5ADE               	subwfb	postinc2,f,c
 22080                           
 22081                           ;../sys/sys_src/sysTimer.c: 158:          break;
 22082  0038CC  D024               	goto	u7730
 22083  0038CE                     l9680:
 22084                           
 22085                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 22086  0038CE  EE20 F002          	lfsr	2,2
 22087  0038D2  500E               	movf	placeTimer@t^0,w,c
 22088  0038D4  26D9               	addwf	fsr2l,f,c
 22089  0038D6  500F               	movf	(placeTimer@t+1)^0,w,c
 22090  0038D8  22DA               	addwfc	fsr2h,f,c
 22091  0038DA  50DE               	movf	postinc2,w,c
 22092  0038DC  5E08               	subwf	placeTimer@timeout^0,f,c
 22093  0038DE  50DE               	movf	postinc2,w,c
 22094  0038E0  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 22095  0038E2  50DE               	movf	postinc2,w,c
 22096  0038E4  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 22097  0038E6  50DD               	movf	postdec2,w,c
 22098  0038E8  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 22099                           
 22100                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 22101  0038EA  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 22102  0038F0  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 22103                           
 22104                           ;../sys/sys_src/sysTimer.c: 164:     }
 22105  0038F6  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 22106  0038FC  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 22107  003902  006F FF78  F00E    	movff	postinc2,placeTimer@t
 22108  003908  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 22109  00390E                     l9684:
 22110  00390E  500E               	movf	placeTimer@t^0,w,c
 22111  003910  100F               	iorwf	(placeTimer@t+1)^0,w,c
 22112  003912  A4D8               	btfss	status,2,c
 22113  003914  D7BD               	goto	l9674
 22114  003916                     u7730:
 22115                           
 22116                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 22117  003916  EE20 F002          	lfsr	2,2
 22118  00391A  5002               	movf	placeTimer@timer^0,w,c
 22119  00391C  26D9               	addwf	fsr2l,f,c
 22120  00391E  5003               	movf	(placeTimer@timer+1)^0,w,c
 22121  003920  22DA               	addwfc	fsr2h,f,c
 22122  003922  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 22123  003928  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 22124  00392E  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 22125  003934  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 22126                           
 22127                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 22128  00393A  500C               	movf	placeTimer@prev^0,w,c
 22129  00393C  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 22130  00393E  B4D8               	btfsc	status,2,c
 22131  003940  D01F               	goto	l9694
 22132                           
 22133                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 22134  003942  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 22135  003948  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 22136  00394E  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 22137  003954  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 22138  00395A  006F FF7B FFE6     	movff	postinc2,postinc1
 22139  003960  006F FF77 FFE5     	movff	postdec2,postdec1
 22140                           
 22141                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 22142  003966  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 22143  00396C  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 22144  003972  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 22145  003978  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 22146                           
 22147                           ;../sys/sys_src/sysTimer.c: 172:     }
 22148  00397E  0012               	return	
 22149  003980                     l9694:
 22150                           
 22151                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 22152  003980  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 22153  003986  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 22154  00398C  0060  F2EF  FFDE   	movff	_timers,postinc2
 22155  003992  0060  F2F3  FFDD   	movff	_timers+1,postdec2
 22156  003998                     l9696:
 22157                           
 22158                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 22159  003998  0060  F008  F0BB   	movff	placeTimer@timer,_timers
 22160  00399E  0060  F00C  F0BC   	movff	placeTimer@timer+1,_timers+1
 22161  0039A4  0012               	return	
 22162  0039A6                     l9698:
 22163                           
 22164                           ; BSR set to: 0
 22165                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 22166  0039A6  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 22167  0039AC  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 22168  0039B2  0E00               	movlw	0
 22169  0039B4  6EDE               	movwf	postinc2,c
 22170  0039B6  0E00               	movlw	0
 22171  0039B8  6EDD               	movwf	postdec2,c
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 22175  0039BA  EE20 F006          	lfsr	2,6
 22176  0039BE  5002               	movf	placeTimer@timer^0,w,c
 22177  0039C0  26D9               	addwf	fsr2l,f,c
 22178  0039C2  5003               	movf	(placeTimer@timer+1)^0,w,c
 22179  0039C4  22DA               	addwfc	fsr2h,f,c
 22180  0039C6  EE10 F002          	lfsr	1,2
 22181  0039CA  5002               	movf	placeTimer@timer^0,w,c
 22182  0039CC  26E1               	addwf	fsr1l,f,c
 22183  0039CE  5003               	movf	(placeTimer@timer+1)^0,w,c
 22184  0039D0  22E2               	addwfc	fsr1h,f,c
 22185  0039D2  006F FF7B FFE6     	movff	postinc2,postinc1
 22186  0039D8  006F FF7B FFE6     	movff	postinc2,postinc1
 22187  0039DE  006F FF7B FFE6     	movff	postinc2,postinc1
 22188  0039E4  006F FF7B FFE6     	movff	postinc2,postinc1
 22189  0039EA  D7D6               	goto	l9696
 22190  0039EC                     __end_of_placeTimer:
 22191                           	opt callstack 0
 22192                           
 22193 ;; *************** function _SYS_TimerStarted *****************
 22194 ;; Defined at:
 22195 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 22196 ;; Parameters:    Size  Location     Type
 22197 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 22198 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22199 ;; Auto vars:     Size  Location     Type
 22200 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 22201 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22202 ;; Return value:  Size  Location     Type
 22203 ;;                  1    wreg      _Bool 
 22204 ;; Registers used:
 22205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22206 ;; Tracked objects:
 22207 ;;		On entry : 0/0
 22208 ;;		On exit  : 0/0
 22209 ;;		Unchanged: 0/0
 22210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22215 ;;Total ram usage:        4 bytes
 22216 ;; Hardware stack levels used:    1
 22217 ;; Hardware stack levels required when called:    7
 22218 ;; This function calls:
 22219 ;;		Nothing
 22220 ;; This function is called by:
 22221 ;;		_SYS_TimerStart
 22222 ;; This function uses a non-reentrant model
 22223 ;;
 22224                           
 22225                           	psect	text135
 22226  007FFC                     __ptext135:
 22227                           	opt callstack 0
 22228  007FFC                     _SYS_TimerStarted:
 22229                           	opt callstack 19
 22230                           
 22231                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 22232                           
 22233                           ;incstack = 0
 22234  007FFC  0060  F2EC  F004   	movff	_timers,SYS_TimerStarted@t
 22235  008002  0060  F2F0  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 22236  008008  D015               	goto	l9660
 22237  00800A                     l9652:
 22238                           
 22239                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 22240  00800A  5002               	movf	SYS_TimerStarted@timer^0,w,c
 22241  00800C  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 22242  00800E  E106               	bnz	l9658
 22243  008010  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 22244  008012  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 22245  008014  A4D8               	btfss	status,2,c
 22246  008016  D002               	goto	l9658
 22247                           
 22248                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 22249  008018  0E01               	movlw	1
 22250  00801A  0012               	return	
 22251  00801C                     l9658:
 22252  00801C  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 22253  008022  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 22254  008028  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 22255  00802E  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 22256  008034                     l9660:
 22257  008034  5004               	movf	SYS_TimerStarted@t^0,w,c
 22258  008036  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 22259  008038  A4D8               	btfss	status,2,c
 22260  00803A  D7E7               	goto	l9652
 22261                           
 22262                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 22263  00803C  0E00               	movlw	0
 22264  00803E  0012               	return		;funcret
 22265  008040                     __end_of_SYS_TimerStarted:
 22266                           	opt callstack 0
 22267                           
 22268 ;; *************** function _nwkRouteFrameReceived *****************
 22269 ;; Defined at:
 22270 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 22271 ;; Parameters:    Size  Location     Type
 22272 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 22273 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22274 ;; Auto vars:     Size  Location     Type
 22275 ;;  discovery       1   16[COMRAM] _Bool 
 22276 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 22277 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22278 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 22279 ;;		 -> nwkRouteTable(70), NULL(0), 
 22280 ;; Return value:  Size  Location     Type
 22281 ;;                  1    wreg      void 
 22282 ;; Registers used:
 22283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22284 ;; Tracked objects:
 22285 ;;		On entry : 3F/1
 22286 ;;		On exit  : 0/0
 22287 ;;		Unchanged: 0/0
 22288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22290 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22292 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22293 ;;Total ram usage:       12 bytes
 22294 ;; Hardware stack levels used:    1
 22295 ;; Hardware stack levels required when called:    8
 22296 ;; This function calls:
 22297 ;;		_NWK_RouteFindEntry
 22298 ;;		_NWK_RouteNewEntry
 22299 ;; This function is called by:
 22300 ;;		_nwkRxHandleReceivedFrame
 22301 ;; This function uses a non-reentrant model
 22302 ;;
 22303                           
 22304                           	psect	text136
 22305  00366A                     __ptext136:
 22306                           	opt callstack 0
 22307  00366A                     _nwkRouteFrameReceived:
 22308                           	opt callstack 18
 22309                           
 22310                           ; BSR set to: 1
 22311                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 22312                           
 22313                           ;incstack = 0
 22314  00366A  0E02               	movlw	2
 22315  00366C  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 22316  00366E  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 22317  003670  0E00               	movlw	0
 22318  003672  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 22319  003674  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 22320                           
 22321                           ; BSR set to: 1
 22322                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 22323  003676  EE20 F007          	lfsr	2,7
 22324  00367A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22325  00367C  26D9               	addwf	fsr2l,f,c
 22326  00367E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22327  003680  22DA               	addwfc	fsr2h,f,c
 22328  003682  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 22329  003688  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 22330  00368E  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 22331  003690  D015               	goto	l10638
 22332                           
 22333                           ; BSR set to: 1
 22334  003692  EE20 F00B          	lfsr	2,11
 22335  003696  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22336  003698  26D9               	addwf	fsr2l,f,c
 22337  00369A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22338  00369C  22DA               	addwfc	fsr2h,f,c
 22339  00369E  EE10 F007          	lfsr	1,7
 22340  0036A2  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22341  0036A4  26E1               	addwf	fsr1l,f,c
 22342  0036A6  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22343  0036A8  22E2               	addwfc	fsr1h,f,c
 22344  0036AA  50DE               	movf	postinc2,w,c
 22345  0036AC  18E6               	xorwf	postinc1,w,c
 22346  0036AE  E105               	bnz	u9030
 22347  0036B0  50DE               	movf	postinc2,w,c
 22348  0036B2  18E6               	xorwf	postinc1,w,c
 22349  0036B4  A4D8               	btfss	status,2,c
 22350  0036B6  0012               	return	
 22351  0036B8  D001               	goto	l10638
 22352  0036BA                     u9030:
 22353  0036BA  0012               	return	
 22354  0036BC                     l10638:
 22355                           
 22356                           ; BSR set to: 1
 22357                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 22358  0036BC  EE20 F003          	lfsr	2,3
 22359  0036C0  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22360  0036C2  26D9               	addwf	fsr2l,f,c
 22361  0036C4  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22362  0036C6  22DA               	addwfc	fsr2h,f,c
 22363  0036C8  28DE               	incf	postinc2,w,c
 22364  0036CA  E103               	bnz	l10642
 22365  0036CC  28DE               	incf	postinc2,w,c
 22366  0036CE  B4D8               	btfsc	status,2,c
 22367  0036D0  0012               	return	
 22368  0036D2                     l10642:
 22369                           
 22370                           ; BSR set to: 1
 22371                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 22372  0036D2  EE20 F00B          	lfsr	2,11
 22373  0036D6  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22374  0036D8  26D9               	addwf	fsr2l,f,c
 22375  0036DA  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22376  0036DC  22DA               	addwfc	fsr2h,f,c
 22377  0036DE  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 22378  0036E4  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 22379  0036EA  0E00               	movlw	0
 22380  0036EC  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 22381  0036EE  EC2D  F03B         	call	_NWK_RouteFindEntry	;wreg free
 22382  0036F2  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 22383  0036F8  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 22384                           
 22385                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 22386  0036FE  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22387  003700  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22388  003702  B4D8               	btfsc	status,2,c
 22389  003704  D067               	goto	l10664
 22390                           
 22391                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 22392  003706  0E00               	movlw	0
 22393  003708  6E12               	movwf	_nwkRouteFrameReceived$4211^0,c
 22394  00370A  EE20 F005          	lfsr	2,5
 22395  00370E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22396  003710  26D9               	addwf	fsr2l,f,c
 22397  003712  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22398  003714  22DA               	addwfc	fsr2h,f,c
 22399  003716  28DE               	incf	postinc2,w,c
 22400  003718  E113               	bnz	l1964
 22401  00371A  28DE               	incf	postinc2,w,c
 22402  00371C  A4D8               	btfss	status,2,c
 22403  00371E  D010               	goto	l1964
 22404  003720  EE20 F00D          	lfsr	2,13
 22405  003724  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22406  003726  26D9               	addwf	fsr2l,f,c
 22407  003728  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22408  00372A  22DA               	addwfc	fsr2h,f,c
 22409  00372C  0101               	movlb	1	; () banked
 22410  00372E  5100               	movf	_nwkIb& (0+255),w,b
 22411  003730  18DE               	xorwf	postinc2,w,c
 22412  003732  E106               	bnz	l1964
 22413  003734  5101               	movf	(_nwkIb+1)& (0+255),w,b
 22414  003736  18DE               	xorwf	postinc2,w,c
 22415  003738  A4D8               	btfss	status,2,c
 22416  00373A  D002               	goto	l1964
 22417                           
 22418                           ; BSR set to: 1
 22419  00373C  0E01               	movlw	1
 22420  00373E  6E12               	movwf	_nwkRouteFrameReceived$4211^0,c
 22421  003740                     l1964:
 22422  003740  5012               	movf	_nwkRouteFrameReceived$4211^0,w,c
 22423  003742  B4D8               	btfsc	status,2,c
 22424  003744  D002               	goto	u9080
 22425  003746  0E01               	movlw	1
 22426  003748  D001               	goto	u9090
 22427  00374A                     u9080:
 22428  00374A  0E00               	movlw	0
 22429  00374C                     u9090:
 22430  00374C  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 22431                           
 22432                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 22433  00374E  EE20 F007          	lfsr	2,7
 22434  003752  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22435  003754  26D9               	addwf	fsr2l,f,c
 22436  003756  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22437  003758  22DA               	addwfc	fsr2h,f,c
 22438  00375A  EE10 F003          	lfsr	1,3
 22439  00375E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22440  003760  26E1               	addwf	fsr1l,f,c
 22441  003762  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22442  003764  22E2               	addwfc	fsr1h,f,c
 22443  003766  50DE               	movf	postinc2,w,c
 22444  003768  18E6               	xorwf	postinc1,w,c
 22445  00376A  E104               	bnz	u9100
 22446  00376C  50DE               	movf	postinc2,w,c
 22447  00376E  18E6               	xorwf	postinc1,w,c
 22448  003770  B4D8               	btfsc	status,2,c
 22449  003772  D010               	goto	u9110
 22450  003774                     u9100:
 22451  003774  EE20 F083          	lfsr	2,131
 22452  003778  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 22453  00377A  26D9               	addwf	fsr2l,f,c
 22454  00377C  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 22455  00377E  22DA               	addwfc	fsr2h,f,c
 22456  003780  EE10 F006          	lfsr	1,6
 22457  003784  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22458  003786  26E1               	addwf	fsr1l,f,c
 22459  003788  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22460  00378A  22E2               	addwfc	fsr1h,f,c
 22461  00378C  50DE               	movf	postinc2,w,c
 22462  00378E  5CE6               	subwf	postinc1,w,c
 22463  003790  A0D8               	btfss	status,0,c
 22464  003792  D003               	goto	u9120
 22465  003794                     u9110:
 22466  003794  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 22467  003796  B4D8               	btfsc	status,2,c
 22468  003798  D049               	goto	l10670
 22469  00379A                     u9120:
 22470                           
 22471                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 22472  00379A  EE20 F007          	lfsr	2,7
 22473  00379E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22474  0037A0  26D9               	addwf	fsr2l,f,c
 22475  0037A2  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22476  0037A4  22DA               	addwfc	fsr2h,f,c
 22477  0037A6  EE10 F003          	lfsr	1,3
 22478  0037AA  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22479  0037AC  26E1               	addwf	fsr1l,f,c
 22480  0037AE  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22481  0037B0  22E2               	addwfc	fsr1h,f,c
 22482  0037B2  006F FF7B FFE6     	movff	postinc2,postinc1
 22483  0037B8  006F FF77 FFE5     	movff	postdec2,postdec1
 22484                           
 22485                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 22486  0037BE  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 22487  0037C4  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 22488  0037CA  50DF               	movf	indf2,w,c
 22489  0037CC  0B0F               	andlw	-241
 22490  0037CE  0930               	iorlw	48
 22491  0037D0  6EDF               	movwf	indf2,c
 22492  0037D2  D02C               	goto	l10670
 22493  0037D4                     l10664:
 22494                           
 22495                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 22496  0037D4  ECA2  F030         	call	_NWK_RouteNewEntry	;wreg free
 22497  0037D8  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 22498  0037DE  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 22499                           
 22500                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 22501  0037E4  EE20 F00B          	lfsr	2,11
 22502  0037E8  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22503  0037EA  26D9               	addwf	fsr2l,f,c
 22504  0037EC  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22505  0037EE  22DA               	addwfc	fsr2h,f,c
 22506  0037F0  EE10 F001          	lfsr	1,1
 22507  0037F4  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22508  0037F6  26E1               	addwf	fsr1l,f,c
 22509  0037F8  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22510  0037FA  22E2               	addwfc	fsr1h,f,c
 22511  0037FC  006F FF7B FFE6     	movff	postinc2,postinc1
 22512  003802  006F FF77 FFE5     	movff	postdec2,postdec1
 22513                           
 22514                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 22515  003808  EE20 F007          	lfsr	2,7
 22516  00380C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22517  00380E  26D9               	addwf	fsr2l,f,c
 22518  003810  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22519  003812  22DA               	addwfc	fsr2h,f,c
 22520  003814  EE10 F003          	lfsr	1,3
 22521  003818  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22522  00381A  26E1               	addwf	fsr1l,f,c
 22523  00381C  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22524  00381E  22E2               	addwfc	fsr1h,f,c
 22525  003820  006F FF7B FFE6     	movff	postinc2,postinc1
 22526  003826  006F FF77 FFE5     	movff	postdec2,postdec1
 22527  00382C                     l10670:
 22528                           
 22529                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 22530  00382C  EE20 F083          	lfsr	2,131
 22531  003830  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 22532  003832  26D9               	addwf	fsr2l,f,c
 22533  003834  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 22534  003836  22DA               	addwfc	fsr2h,f,c
 22535  003838  EE10 F006          	lfsr	1,6
 22536  00383C  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22537  00383E  26E1               	addwf	fsr1l,f,c
 22538  003840  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22539  003842  22E2               	addwfc	fsr1h,f,c
 22540  003844  006F FF7F FFE7     	movff	indf2,indf1
 22541  00384A  0012               	return		;funcret
 22542  00384C                     __end_of_nwkRouteFrameReceived:
 22543                           	opt callstack 0
 22544                           
 22545 ;; *************** function _NWK_RouteNewEntry *****************
 22546 ;; Defined at:
 22547 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;		None
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;  i               1    5[COMRAM] unsigned char 
 22552 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 22553 ;;		 -> nwkRouteTable(70), NULL(0), 
 22554 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 22555 ;;		 -> nwkRouteTable(70), 
 22556 ;; Return value:  Size  Location     Type
 22557 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 22558 ;; Registers used:
 22559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22560 ;; Tracked objects:
 22561 ;;		On entry : 0/1
 22562 ;;		On exit  : 0/0
 22563 ;;		Unchanged: 0/0
 22564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22566 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22568 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22569 ;;Total ram usage:        9 bytes
 22570 ;; Hardware stack levels used:    1
 22571 ;; Hardware stack levels required when called:    7
 22572 ;; This function calls:
 22573 ;;		Nothing
 22574 ;; This function is called by:
 22575 ;;		_nwkRouteFrameReceived
 22576 ;; This function uses a non-reentrant model
 22577 ;;
 22578                           
 22579                           	psect	text137
 22580  006144                     __ptext137:
 22581                           	opt callstack 0
 22582  006144                     _NWK_RouteNewEntry:
 22583                           	opt callstack 18
 22584                           
 22585                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 22586                           
 22587                           ;incstack = 0
 22588  006144  0E34               	movlw	low _nwkRouteTable
 22589  006146  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 22590  006148  0E02               	movlw	high _nwkRouteTable
 22591  00614A  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 22592                           
 22593                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 22594  00614C  0E00               	movlw	0
 22595  00614E  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 22596  006150  0E00               	movlw	0
 22597  006152  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 22598                           
 22599                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 22600  006154  0E00               	movlw	0
 22601  006156  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 22602  006158                     l9930:
 22603                           
 22604                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 22605  006158  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 22606  00615E  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 22607  006164  B0DF               	btfsc	indf2,0,c
 22608  006166  D02A               	goto	l9944
 22609                           
 22610                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 22611  006168  EE20 F005          	lfsr	2,5
 22612  00616C  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 22613  00616E  26D9               	addwf	fsr2l,f,c
 22614  006170  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 22615  006172  22DA               	addwfc	fsr2h,f,c
 22616  006174  50DF               	movf	indf2,w,c
 22617  006176  A4D8               	btfss	status,2,c
 22618  006178  D007               	goto	l9938
 22619                           
 22620                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 22621  00617A  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 22622  006180  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 22623                           
 22624                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 22625  006186  D022               	goto	u8040
 22626  006188                     l9938:
 22627                           
 22628                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 22629  006188  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 22630  00618A  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 22631  00618C  B4D8               	btfsc	status,2,c
 22632  00618E  D010               	goto	u8030
 22633  006190  EE20 F005          	lfsr	2,5
 22634  006194  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 22635  006196  26D9               	addwf	fsr2l,f,c
 22636  006198  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 22637  00619A  22DA               	addwfc	fsr2h,f,c
 22638  00619C  EE10 F005          	lfsr	1,5
 22639  0061A0  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 22640  0061A2  26E1               	addwf	fsr1l,f,c
 22641  0061A4  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 22642  0061A6  22E2               	addwfc	fsr1h,f,c
 22643  0061A8  50DE               	movf	postinc2,w,c
 22644  0061AA  5CE6               	subwf	postinc1,w,c
 22645  0061AC  B0D8               	btfsc	status,0,c
 22646  0061AE  D006               	goto	l9944
 22647  0061B0                     u8030:
 22648                           
 22649                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 22650  0061B0  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 22651  0061B6  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 22652  0061BC                     l9944:
 22653  0061BC  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 22654  0061BE  0E07               	movlw	7
 22655  0061C0  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 22656  0061C2  0E00               	movlw	0
 22657  0061C4  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 22658  0061C6  0E09               	movlw	9
 22659  0061C8  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 22660  0061CA  D7C6               	goto	l9930
 22661  0061CC                     u8040:
 22662                           
 22663                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 22664  0061CC  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 22665  0061D2  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 22666  0061D8  92DF               	bcf	indf2,1,c
 22667                           
 22668                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 22669  0061DA  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 22670  0061E0  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 22671  0061E6  50DF               	movf	indf2,w,c
 22672  0061E8  0B0F               	andlw	-241
 22673  0061EA  0930               	iorlw	48
 22674  0061EC  6EDF               	movwf	indf2,c
 22675                           
 22676                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 22677  0061EE  EE20 F005          	lfsr	2,5
 22678  0061F2  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 22679  0061F4  26D9               	addwf	fsr2l,f,c
 22680  0061F6  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 22681  0061F8  22DA               	addwfc	fsr2h,f,c
 22682  0061FA  0E80               	movlw	128
 22683  0061FC  6EDF               	movwf	indf2,c
 22684                           
 22685                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 22686  0061FE  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 22687  006204  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 22688  00620A  0012               	return		;funcret
 22689  00620C                     __end_of_NWK_RouteNewEntry:
 22690                           	opt callstack 0
 22691                           
 22692 ;; *************** function _nwkRxHandleIndication *****************
 22693 ;; Defined at:
 22694 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 22695 ;; Parameters:    Size  Location     Type
 22696 ;;  frame           2   49[COMRAM] PTR struct NwkFrame_t
 22697 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22698 ;; Auto vars:     Size  Location     Type
 22699 ;;  ack             1   53[COMRAM] _Bool 
 22700 ;; Return value:  Size  Location     Type
 22701 ;;                  1    wreg      void 
 22702 ;; Registers used:
 22703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22704 ;; Tracked objects:
 22705 ;;		On entry : 0/0
 22706 ;;		On exit  : 0/0
 22707 ;;		Unchanged: 0/0
 22708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22712 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22713 ;;Total ram usage:        5 bytes
 22714 ;; Hardware stack levels used:    1
 22715 ;; Hardware stack levels required when called:   12
 22716 ;; This function calls:
 22717 ;;		_nwkRxIndicateFrame
 22718 ;;		_nwkRxSendAck
 22719 ;; This function is called by:
 22720 ;;		_nwkRxTaskHandler
 22721 ;; This function uses a non-reentrant model
 22722 ;;
 22723                           
 22724                           	psect	text138
 22725  00620C                     __ptext138:
 22726                           	opt callstack 0
 22727  00620C                     _nwkRxHandleIndication:
 22728                           	opt callstack 15
 22729                           
 22730                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 22731                           
 22732                           ;incstack = 0
 22733  00620C  0E00               	movlw	0
 22734  00620E  0100               	movlb	0	; () banked
 22735  006210  6FC3               	movwf	_nwkRxAckControl& (0+255),b
 22736                           
 22737                           ; BSR set to: 0
 22738                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 22739  006212  0060  F0C8  F018   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 22740  006218  0060  F0CC  F019   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 22741  00621E  EC3D  F019         	call	_nwkRxIndicateFrame	;wreg free
 22742  006222  6E36               	movwf	nwkRxHandleIndication@ack^0,c
 22743                           
 22744                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 22745  006224  EE20 F00B          	lfsr	2,11
 22746  006228  5032               	movf	nwkRxHandleIndication@frame^0,w,c
 22747  00622A  26D9               	addwf	fsr2l,f,c
 22748  00622C  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 22749  00622E  22DA               	addwfc	fsr2h,f,c
 22750  006230  B0DF               	btfsc	indf2,0,c
 22751  006232  D002               	goto	l15504
 22752                           
 22753                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 22754  006234  0E00               	movlw	0
 22755  006236  6E36               	movwf	nwkRxHandleIndication@ack^0,c
 22756  006238                     l15504:
 22757                           
 22758                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 22759  006238  EE20 F007          	lfsr	2,7
 22760  00623C  5032               	movf	nwkRxHandleIndication@frame^0,w,c
 22761  00623E  26D9               	addwf	fsr2l,f,c
 22762  006240  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 22763  006242  22DA               	addwfc	fsr2h,f,c
 22764  006244  28DE               	incf	postinc2,w,c
 22765  006246  E11B               	bnz	l15512
 22766  006248  28DE               	incf	postinc2,w,c
 22767  00624A  A4D8               	btfss	status,2,c
 22768  00624C  D018               	goto	l15512
 22769  00624E  EE20 F00F          	lfsr	2,15
 22770  006252  5032               	movf	nwkRxHandleIndication@frame^0,w,c
 22771  006254  26D9               	addwf	fsr2l,f,c
 22772  006256  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 22773  006258  22DA               	addwfc	fsr2h,f,c
 22774  00625A  0101               	movlb	1	; () banked
 22775  00625C  5100               	movf	_nwkIb& (0+255),w,b
 22776  00625E  18DE               	xorwf	postinc2,w,c
 22777  006260  E10E               	bnz	l15512
 22778  006262  5101               	movf	(_nwkIb+1)& (0+255),w,b
 22779  006264  18DE               	xorwf	postinc2,w,c
 22780  006266  A4D8               	btfss	status,2,c
 22781  006268  D00A               	goto	l15512
 22782                           
 22783                           ; BSR set to: 1
 22784  00626A  EE20 F00B          	lfsr	2,11
 22785  00626E  5032               	movf	nwkRxHandleIndication@frame^0,w,c
 22786  006270  26D9               	addwf	fsr2l,f,c
 22787  006272  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 22788  006274  22DA               	addwfc	fsr2h,f,c
 22789  006276  B6DF               	btfsc	indf2,3,c
 22790  006278  D002               	goto	l15512
 22791                           
 22792                           ; BSR set to: 1
 22793                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 22794  00627A  0E01               	movlw	1
 22795  00627C  6E36               	movwf	nwkRxHandleIndication@ack^0,c
 22796  00627E                     l15512:
 22797                           
 22798                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 22799  00627E  EE20 F005          	lfsr	2,5
 22800  006282  5032               	movf	nwkRxHandleIndication@frame^0,w,c
 22801  006284  26D9               	addwf	fsr2l,f,c
 22802  006286  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 22803  006288  22DA               	addwfc	fsr2h,f,c
 22804  00628A  28DE               	incf	postinc2,w,c
 22805  00628C  E105               	bnz	l15516
 22806  00628E  28DE               	incf	postinc2,w,c
 22807  006290  A4D8               	btfss	status,2,c
 22808  006292  D002               	goto	l15516
 22809                           
 22810                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 22811  006294  0E00               	movlw	0
 22812  006296  6E36               	movwf	nwkRxHandleIndication@ack^0,c
 22813  006298                     l15516:
 22814                           
 22815                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 22816  006298  0101               	movlb	1	; () banked
 22817  00629A  2900               	incf	_nwkIb& (0+255),w,b
 22818  00629C  E105               	bnz	l2215
 22819  00629E  2901               	incf	(_nwkIb+1)& (0+255),w,b
 22820  0062A0  A4D8               	btfss	status,2,c
 22821  0062A2  D002               	goto	l2215
 22822                           
 22823                           ; BSR set to: 1
 22824                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 22825  0062A4  0E00               	movlw	0
 22826  0062A6  6E36               	movwf	nwkRxHandleIndication@ack^0,c
 22827  0062A8                     l2215:
 22828                           
 22829                           ; BSR set to: 1
 22830                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 22831  0062A8  5036               	movf	nwkRxHandleIndication@ack^0,w,c
 22832  0062AA  B4D8               	btfsc	status,2,c
 22833  0062AC  D008               	goto	l15522
 22834                           
 22835                           ; BSR set to: 1
 22836                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 22837  0062AE  0060  F0C8  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 22838  0062B4  0060  F0CC  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 22839  0062BA  ECD6  F028         	call	_nwkRxSendAck	;wreg free
 22840  0062BE                     l15522:
 22841                           
 22842                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 22843  0062BE  0060  F0CB  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 22844  0062C4  0060  F0CF  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 22845  0062CA  0E24               	movlw	36
 22846  0062CC  6EDF               	movwf	indf2,c
 22847  0062CE  0012               	return		;funcret
 22848  0062D0                     __end_of_nwkRxHandleIndication:
 22849                           	opt callstack 0
 22850                           
 22851 ;; *************** function _nwkRxSendAck *****************
 22852 ;; Defined at:
 22853 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 22856 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22857 ;; Auto vars:     Size  Location     Type
 22858 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 22859 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22860 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 22861 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22862 ;; Return value:  Size  Location     Type
 22863 ;;                  1    wreg      void 
 22864 ;; Registers used:
 22865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22866 ;; Tracked objects:
 22867 ;;		On entry : 3F/1
 22868 ;;		On exit  : 0/0
 22869 ;;		Unchanged: 0/0
 22870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22874 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22875 ;;Total ram usage:        6 bytes
 22876 ;; Hardware stack levels used:    1
 22877 ;; Hardware stack levels required when called:   11
 22878 ;; This function calls:
 22879 ;;		_nwkFrameAlloc
 22880 ;;		_nwkFrameCommandInit
 22881 ;;		_nwkTxFrame
 22882 ;; This function is called by:
 22883 ;;		_nwkRxHandleIndication
 22884 ;; This function uses a non-reentrant model
 22885 ;;
 22886                           
 22887                           	psect	text139
 22888  0051AC                     __ptext139:
 22889                           	opt callstack 0
 22890  0051AC                     _nwkRxSendAck:
 22891                           	opt callstack 15
 22892                           
 22893                           ; BSR set to: 1
 22894                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 22895                           
 22896                           ;incstack = 0
 22897  0051AC  ECDF  F032         	call	_nwkFrameAlloc	;wreg free
 22898  0051B0  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 22899  0051B6  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 22900  0051BC  502E               	movf	nwkRxSendAck@ack^0,w,c
 22901  0051BE  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 22902  0051C0  B4D8               	btfsc	status,2,c
 22903  0051C2  0012               	return	
 22904                           
 22905                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 22906  0051C4  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 22907  0051CA  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 22908  0051D0  EC82  F040         	call	_nwkFrameCommandInit	;wreg free
 22909                           
 22910                           ; BSR set to: 1
 22911                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 22912  0051D4  EE20 F001          	lfsr	2,1
 22913  0051D8  502E               	movf	nwkRxSendAck@ack^0,w,c
 22914  0051DA  26D9               	addwf	fsr2l,f,c
 22915  0051DC  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 22916  0051DE  22DA               	addwfc	fsr2h,f,c
 22917  0051E0  0E03               	movlw	3
 22918  0051E2  26DF               	addwf	indf2,f,c
 22919                           
 22920                           ; BSR set to: 1
 22921                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 22922  0051E4  EE20 F087          	lfsr	2,135
 22923  0051E8  502E               	movf	nwkRxSendAck@ack^0,w,c
 22924  0051EA  26D9               	addwf	fsr2l,f,c
 22925  0051EC  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 22926  0051EE  22DA               	addwfc	fsr2h,f,c
 22927  0051F0  0E00               	movlw	0
 22928  0051F2  6EDE               	movwf	postinc2,c
 22929  0051F4  0E00               	movlw	0
 22930  0051F6  6EDD               	movwf	postdec2,c
 22931                           
 22932                           ; BSR set to: 1
 22933                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 22934  0051F8  EE20 F00B          	lfsr	2,11
 22935  0051FC  502A               	movf	nwkRxSendAck@frame^0,w,c
 22936  0051FE  26D9               	addwf	fsr2l,f,c
 22937  005200  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 22938  005202  22DA               	addwfc	fsr2h,f,c
 22939  005204  EE10 F00B          	lfsr	1,11
 22940  005208  502E               	movf	nwkRxSendAck@ack^0,w,c
 22941  00520A  26E1               	addwf	fsr1l,f,c
 22942  00520C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 22943  00520E  22E2               	addwfc	fsr1h,f,c
 22944  005210  B2DF               	btfsc	indf2,1,c
 22945  005212  D002               	bra	u14345
 22946  005214  92E7               	bcf	indf1,1,c
 22947  005216  D001               	bra	u14346
 22948  005218                     u14345:
 22949  005218  82E7               	bsf	indf1,1,c
 22950  00521A                     u14346:
 22951                           
 22952                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 22953  00521A  EE20 F00D          	lfsr	2,13
 22954  00521E  502A               	movf	nwkRxSendAck@frame^0,w,c
 22955  005220  26D9               	addwf	fsr2l,f,c
 22956  005222  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 22957  005224  22DA               	addwfc	fsr2h,f,c
 22958  005226  EE10 F00F          	lfsr	1,15
 22959  00522A  502E               	movf	nwkRxSendAck@ack^0,w,c
 22960  00522C  26E1               	addwf	fsr1l,f,c
 22961  00522E  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 22962  005230  22E2               	addwfc	fsr1h,f,c
 22963  005232  006F FF7B FFE6     	movff	postinc2,postinc1
 22964  005238  006F FF77 FFE5     	movff	postdec2,postdec1
 22965                           
 22966                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 22967  00523E  EE20 F081          	lfsr	2,129
 22968  005242  502E               	movf	nwkRxSendAck@ack^0,w,c
 22969  005244  26D9               	addwf	fsr2l,f,c
 22970  005246  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 22971  005248  22DA               	addwfc	fsr2h,f,c
 22972  00524A  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 22973  005250  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 22974                           
 22975                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 22976  005256  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 22977  00525C  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 22978  005262  0E00               	movlw	0
 22979  005264  6EDF               	movwf	indf2,c
 22980                           
 22981                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 22982  005266  EE20 F002          	lfsr	2,2
 22983  00526A  502C               	movf	nwkRxSendAck@command^0,w,c
 22984  00526C  26D9               	addwf	fsr2l,f,c
 22985  00526E  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 22986  005270  22DA               	addwfc	fsr2h,f,c
 22987  005272  0060  F30F  FFDF   	movff	_nwkRxAckControl,indf2
 22988                           
 22989                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 22990  005278  EE20 F00C          	lfsr	2,12
 22991  00527C  502A               	movf	nwkRxSendAck@frame^0,w,c
 22992  00527E  26D9               	addwf	fsr2l,f,c
 22993  005280  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 22994  005282  22DA               	addwfc	fsr2h,f,c
 22995  005284  EE10 F001          	lfsr	1,1
 22996  005288  502C               	movf	nwkRxSendAck@command^0,w,c
 22997  00528A  26E1               	addwf	fsr1l,f,c
 22998  00528C  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 22999  00528E  22E2               	addwfc	fsr1h,f,c
 23000  005290  006F FF7F FFE7     	movff	indf2,indf1
 23001                           
 23002                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 23003  005296  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 23004  00529C  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 23005  0052A2  ECBB  F01D         	call	_nwkTxFrame	;wreg free
 23006  0052A6  0012               	return		;funcret
 23007  0052A8                     __end_of_nwkRxSendAck:
 23008                           	opt callstack 0
 23009                           
 23010 ;; *************** function _nwkRxIndicateFrame *****************
 23011 ;; Defined at:
 23012 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 23013 ;; Parameters:    Size  Location     Type
 23014 ;;  frame           2   23[COMRAM] PTR struct NwkFrame_t
 23015 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23016 ;; Auto vars:     Size  Location     Type
 23017 ;;  ind            12   37[COMRAM] struct NWK_DataInd_t
 23018 ;;  header          2   35[COMRAM] PTR __pack struct NwkFra
 23019 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23020 ;; Return value:  Size  Location     Type
 23021 ;;                  1    wreg      _Bool 
 23022 ;; Registers used:
 23023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23024 ;; Tracked objects:
 23025 ;;		On entry : 3F/0
 23026 ;;		On exit  : 0/0
 23027 ;;		Unchanged: 0/0
 23028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23030 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23032 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23033 ;;Total ram usage:       26 bytes
 23034 ;; Hardware stack levels used:    1
 23035 ;; Hardware stack levels required when called:   11
 23036 ;; This function calls:
 23037 ;;		_appDataInd
 23038 ;;		_nwkRxServiceDataInd
 23039 ;;		nwkFrame@nwkFramePayloadSize
 23040 ;; This function is called by:
 23041 ;;		_nwkRxHandleIndication
 23042 ;; This function uses a non-reentrant model
 23043 ;;
 23044                           
 23045                           	psect	text140
 23046  00327A                     __ptext140:
 23047                           	opt callstack 0
 23048  00327A                     _nwkRxIndicateFrame:
 23049                           	opt callstack 15
 23050                           
 23051                           ; BSR set to: 0
 23052                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 23053                           
 23054                           ;incstack = 0
 23055  00327A  0E02               	movlw	2
 23056  00327C  2418               	addwf	nwkRxIndicateFrame@frame^0,w,c
 23057  00327E  6E24               	movwf	nwkRxIndicateFrame@header^0,c
 23058  003280  0E00               	movlw	0
 23059  003282  2019               	addwfc	(nwkRxIndicateFrame@frame+1)^0,w,c
 23060  003284  6E25               	movwf	(nwkRxIndicateFrame@header+1)^0,c
 23061                           
 23062                           ; BSR set to: 0
 23063                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 23064  003286  EE20 F00F          	lfsr	2,15
 23065  00328A  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23066  00328C  26D9               	addwf	fsr2l,f,c
 23067  00328E  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23068  003290  22DA               	addwfc	fsr2h,f,c
 23069  003292  38DF               	swapf	indf2,w,c
 23070  003294  0B0F               	andlw	15
 23071  003296  6E1A               	movwf	??_nwkRxIndicateFrame^0,c
 23072  003298  501A               	movf	??_nwkRxIndicateFrame^0,w,c
 23073  00329A  0D02               	mullw	2
 23074  00329C  0E06               	movlw	low (_nwkIb+6)
 23075  00329E  24F3               	addwf	243,w,c
 23076  0032A0  6ED9               	movwf	fsr2l,c
 23077  0032A2  0E01               	movlw	high (_nwkIb+6)
 23078  0032A4  20F4               	addwfc	prodh,w,c
 23079  0032A6  6EDA               	movwf	fsr2h,c
 23080  0032A8  50DE               	movf	postinc2,w,c
 23081  0032AA  10DE               	iorwf	postinc2,w,c
 23082  0032AC  A4D8               	btfss	status,2,c
 23083  0032AE  D002               	goto	l14792
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 23087  0032B0  0E00               	movlw	0
 23088  0032B2  0012               	return	
 23089  0032B4                     l14792:
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 23093  0032B4  EE20 F00B          	lfsr	2,11
 23094  0032B8  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23095  0032BA  26D9               	addwf	fsr2l,f,c
 23096  0032BC  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23097  0032BE  22DA               	addwfc	fsr2h,f,c
 23098  0032C0  006F FF78  F026    	movff	postinc2,nwkRxIndicateFrame@ind
 23099  0032C6  006F FF74  F027    	movff	postdec2,nwkRxIndicateFrame@ind+1
 23100                           
 23101                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 23102  0032CC  EE20 F00D          	lfsr	2,13
 23103  0032D0  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23104  0032D2  26D9               	addwf	fsr2l,f,c
 23105  0032D4  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23106  0032D6  22DA               	addwfc	fsr2h,f,c
 23107  0032D8  006F FF78  F028    	movff	postinc2,nwkRxIndicateFrame@ind+2
 23108  0032DE  006F FF74  F029    	movff	postdec2,nwkRxIndicateFrame@ind+3
 23109                           
 23110                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 23111  0032E4  EE20 F00F          	lfsr	2,15
 23112  0032E8  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23113  0032EA  26D9               	addwf	fsr2l,f,c
 23114  0032EC  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23115  0032EE  22DA               	addwfc	fsr2h,f,c
 23116  0032F0  50DF               	movf	indf2,w,c
 23117  0032F2  0B0F               	andlw	15
 23118  0032F4  6E2A               	movwf	(nwkRxIndicateFrame@ind+4)^0,c
 23119                           
 23120                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 23121  0032F6  EE20 F00F          	lfsr	2,15
 23122  0032FA  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23123  0032FC  26D9               	addwf	fsr2l,f,c
 23124  0032FE  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23125  003300  22DA               	addwfc	fsr2h,f,c
 23126  003302  38DF               	swapf	indf2,w,c
 23127  003304  0B0F               	andlw	15
 23128  003306  6E2B               	movwf	(nwkRxIndicateFrame@ind+5)^0,c
 23129                           
 23130                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 23131  003308  EE20 F081          	lfsr	2,129
 23132  00330C  5018               	movf	nwkRxIndicateFrame@frame^0,w,c
 23133  00330E  26D9               	addwf	fsr2l,f,c
 23134  003310  5019               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 23135  003312  22DA               	addwfc	fsr2h,f,c
 23136  003314  006F FF78  F02D    	movff	postinc2,nwkRxIndicateFrame@ind+7
 23137  00331A  006F FF74  F02E    	movff	postdec2,nwkRxIndicateFrame@ind+8
 23138                           
 23139                           ; BSR set to: 0
 23140                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 23141  003320  0060  F060  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4797
 23142  003326  0060  F064  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4797+1
 23143  00332C  ECB5  F043         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 23144  003330  6E2F               	movwf	(nwkRxIndicateFrame@ind+9)^0,c
 23145                           
 23146                           ; BSR set to: 0
 23147                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 23148  003332  EE20 F083          	lfsr	2,131
 23149  003336  5018               	movf	nwkRxIndicateFrame@frame^0,w,c
 23150  003338  26D9               	addwf	fsr2l,f,c
 23151  00333A  5019               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 23152  00333C  22DA               	addwfc	fsr2h,f,c
 23153  00333E  50DF               	movf	indf2,w,c
 23154  003340  6E30               	movwf	(nwkRxIndicateFrame@ind+10)^0,c
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 23158  003342  EE20 F084          	lfsr	2,132
 23159  003346  5018               	movf	nwkRxIndicateFrame@frame^0,w,c
 23160  003348  26D9               	addwf	fsr2l,f,c
 23161  00334A  5019               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 23162  00334C  22DA               	addwfc	fsr2h,f,c
 23163  00334E  50DF               	movf	indf2,w,c
 23164  003350  6E31               	movwf	(nwkRxIndicateFrame@ind+11)^0,c
 23165                           
 23166                           ; BSR set to: 0
 23167                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 23168  003352  EE20 F009          	lfsr	2,9
 23169  003356  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23170  003358  26D9               	addwf	fsr2l,f,c
 23171  00335A  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23172  00335C  22DA               	addwfc	fsr2h,f,c
 23173  00335E  0E00               	movlw	0
 23174  003360  B0DF               	btfsc	indf2,0,c
 23175  003362  0E01               	movlw	1
 23176  003364  6E2C               	movwf	(nwkRxIndicateFrame@ind+6)^0,c
 23177                           
 23178                           ; BSR set to: 0
 23179                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 23180  003366  EE20 F009          	lfsr	2,9
 23181  00336A  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23182  00336C  26D9               	addwf	fsr2l,f,c
 23183  00336E  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23184  003370  22DA               	addwfc	fsr2h,f,c
 23185  003372  B2DF               	btfsc	indf2,1,c
 23186  003374  D002               	goto	l14806
 23187                           
 23188                           ; BSR set to: 0
 23189  003376  0E00               	movlw	0
 23190  003378  D001               	goto	L19
 23191  00337A                     l14806:
 23192                           
 23193                           ; BSR set to: 0
 23194  00337A  0E02               	movlw	2
 23195  00337C                     L19:
 23196  00337C  6E1E               	movwf	_nwkRxIndicateFrame$5244^0,c
 23197                           
 23198                           ; BSR set to: 0
 23199  00337E  501E               	movf	_nwkRxIndicateFrame$5244^0,w,c
 23200  003380  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23201                           
 23202                           ; BSR set to: 0
 23203                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 23204  003382  EE20 F009          	lfsr	2,9
 23205  003386  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23206  003388  26D9               	addwf	fsr2l,f,c
 23207  00338A  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23208  00338C  22DA               	addwfc	fsr2h,f,c
 23209  00338E  B4DF               	btfsc	indf2,2,c
 23210  003390  D002               	goto	l14814
 23211                           
 23212                           ; BSR set to: 0
 23213  003392  0E00               	movlw	0
 23214  003394  D001               	goto	L20
 23215  003396                     l14814:
 23216                           
 23217                           ; BSR set to: 0
 23218  003396  0E20               	movlw	32
 23219  003398                     L20:
 23220  003398  6E1F               	movwf	_nwkRxIndicateFrame$5245^0,c
 23221                           
 23222                           ; BSR set to: 0
 23223  00339A  501F               	movf	_nwkRxIndicateFrame$5245^0,w,c
 23224  00339C  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23225                           
 23226                           ; BSR set to: 0
 23227                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 23228  00339E  EE20 F009          	lfsr	2,9
 23229  0033A2  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23230  0033A4  26D9               	addwf	fsr2l,f,c
 23231  0033A6  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23232  0033A8  22DA               	addwfc	fsr2h,f,c
 23233  0033AA  B6DF               	btfsc	indf2,3,c
 23234  0033AC  D002               	goto	l14822
 23235                           
 23236                           ; BSR set to: 0
 23237  0033AE  0E00               	movlw	0
 23238  0033B0  D001               	goto	L21
 23239  0033B2                     l14822:
 23240                           
 23241                           ; BSR set to: 0
 23242  0033B2  0E40               	movlw	64
 23243  0033B4                     L21:
 23244  0033B4  6E20               	movwf	_nwkRxIndicateFrame$5246^0,c
 23245                           
 23246                           ; BSR set to: 0
 23247  0033B6  5020               	movf	_nwkRxIndicateFrame$5246^0,w,c
 23248  0033B8  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23249                           
 23250                           ; BSR set to: 0
 23251                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 23252  0033BA  EE20 F00D          	lfsr	2,13
 23253  0033BE  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23254  0033C0  26D9               	addwf	fsr2l,f,c
 23255  0033C2  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23256  0033C4  22DA               	addwfc	fsr2h,f,c
 23257  0033C6  28DE               	incf	postinc2,w,c
 23258  0033C8  E103               	bnz	u14400
 23259  0033CA  28DE               	incf	postinc2,w,c
 23260  0033CC  B4D8               	btfsc	status,2,c
 23261  0033CE  D002               	goto	l14830
 23262  0033D0                     u14400:
 23263                           
 23264                           ; BSR set to: 0
 23265  0033D0  0E00               	movlw	0
 23266  0033D2  D001               	goto	L22
 23267  0033D4                     l14830:
 23268                           
 23269                           ; BSR set to: 0
 23270  0033D4  0E04               	movlw	4
 23271  0033D6                     L22:
 23272  0033D6  6E21               	movwf	_nwkRxIndicateFrame$5247^0,c
 23273                           
 23274                           ; BSR set to: 0
 23275  0033D8  5021               	movf	_nwkRxIndicateFrame$5247^0,w,c
 23276  0033DA  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23277                           
 23278                           ; BSR set to: 0
 23279                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 23280  0033DC  EE20 F007          	lfsr	2,7
 23281  0033E0  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23282  0033E2  26D9               	addwf	fsr2l,f,c
 23283  0033E4  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23284  0033E6  22DA               	addwfc	fsr2h,f,c
 23285  0033E8  EE10 F00B          	lfsr	1,11
 23286  0033EC  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23287  0033EE  26E1               	addwf	fsr1l,f,c
 23288  0033F0  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23289  0033F2  22E2               	addwfc	fsr1h,f,c
 23290  0033F4  50DE               	movf	postinc2,w,c
 23291  0033F6  18E6               	xorwf	postinc1,w,c
 23292  0033F8  E104               	bnz	u14410
 23293  0033FA  50DE               	movf	postinc2,w,c
 23294  0033FC  18E6               	xorwf	postinc1,w,c
 23295  0033FE  B4D8               	btfsc	status,2,c
 23296  003400  D002               	goto	l14838
 23297  003402                     u14410:
 23298                           
 23299                           ; BSR set to: 0
 23300  003402  0E00               	movlw	0
 23301  003404  D001               	goto	L23
 23302  003406                     l14838:
 23303                           
 23304                           ; BSR set to: 0
 23305  003406  0E08               	movlw	8
 23306  003408                     L23:
 23307  003408  6E22               	movwf	_nwkRxIndicateFrame$5248^0,c
 23308                           
 23309                           ; BSR set to: 0
 23310  00340A  5022               	movf	_nwkRxIndicateFrame$5248^0,w,c
 23311  00340C  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23312                           
 23313                           ; BSR set to: 0
 23314                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 23315  00340E  EE20 F003          	lfsr	2,3
 23316  003412  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23317  003414  26D9               	addwf	fsr2l,f,c
 23318  003416  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23319  003418  22DA               	addwfc	fsr2h,f,c
 23320  00341A  28DE               	incf	postinc2,w,c
 23321  00341C  E103               	bnz	u14420
 23322  00341E  28DE               	incf	postinc2,w,c
 23323  003420  B4D8               	btfsc	status,2,c
 23324  003422  D002               	goto	l14846
 23325  003424                     u14420:
 23326                           
 23327                           ; BSR set to: 0
 23328  003424  0E00               	movlw	0
 23329  003426  D001               	goto	L24
 23330  003428                     l14846:
 23331                           
 23332                           ; BSR set to: 0
 23333  003428  0E10               	movlw	16
 23334  00342A                     L24:
 23335  00342A  6E23               	movwf	_nwkRxIndicateFrame$5249^0,c
 23336                           
 23337                           ; BSR set to: 0
 23338  00342C  5023               	movf	_nwkRxIndicateFrame$5249^0,w,c
 23339  00342E  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23340                           
 23341                           ; BSR set to: 0
 23342                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 23343  003430  0E26               	movlw	low nwkRxIndicateFrame@ind
 23344  003432  6E13               	movwf	nwkRxServiceDataInd@ind^0,c
 23345  003434  EE20 F00F          	lfsr	2,15
 23346  003438  5024               	movf	nwkRxIndicateFrame@header^0,w,c
 23347  00343A  26D9               	addwf	fsr2l,f,c
 23348  00343C  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23349  00343E  22DA               	addwfc	fsr2h,f,c
 23350  003440  38DF               	swapf	indf2,w,c
 23351  003442  0B0F               	andlw	15
 23352  003444  6E1A               	movwf	??_nwkRxIndicateFrame^0,c
 23353  003446  501A               	movf	??_nwkRxIndicateFrame^0,w,c
 23354  003448  0D02               	mullw	2
 23355  00344A  0E06               	movlw	low (_nwkIb+6)
 23356  00344C  24F3               	addwf	243,w,c
 23357  00344E  6ED9               	movwf	fsr2l,c
 23358  003450  0E01               	movlw	high (_nwkIb+6)
 23359  003452  20F4               	addwfc	prodh,w,c
 23360  003454  6EDA               	movwf	fsr2h,c
 23361  003456  006F FF78  F01B    	movff	postinc2,??_nwkRxIndicateFrame+1
 23362  00345C  006F FF74  F01C    	movff	postdec2,??_nwkRxIndicateFrame+2
 23363  003462  D801               	call	u14438
 23364  003464  0012               	return	
 23365  003466                     u14438:
 23366  003466  0005               	push	
 23367  003468  6EFA               	movwf	pclath,c
 23368  00346A  501B               	movf	(??_nwkRxIndicateFrame+1)^0,w,c
 23369  00346C  6EFD               	movwf	tosl,c
 23370  00346E  501C               	movf	(??_nwkRxIndicateFrame+2)^0,w,c
 23371  003470  6EFE               	movwf	tosh,c
 23372  003472  6AFF               	clrf	tosu,c
 23373  003474  50FA               	movf	pclath,w,c
 23374  003476  0012               	return		;indir
 23375  003478                     __end_of_nwkRxIndicateFrame:
 23376                           	opt callstack 0
 23377                           
 23378 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 23379 ;; Defined at:
 23380 ;;		line 134 in file "../nwk/nwk_inc\nwkFrame.h"
 23381 ;; Parameters:    Size  Location     Type
 23382 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 23383 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23384 ;; Auto vars:     Size  Location     Type
 23385 ;;		None
 23386 ;; Return value:  Size  Location     Type
 23387 ;;                  1    wreg      unsigned char 
 23388 ;; Registers used:
 23389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23390 ;; Tracked objects:
 23391 ;;		On entry : 3F/0
 23392 ;;		On exit  : 3F/0
 23393 ;;		Unchanged: 3F/0
 23394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23399 ;;Total ram usage:        4 bytes
 23400 ;; Hardware stack levels used:    1
 23401 ;; Hardware stack levels required when called:    7
 23402 ;; This function calls:
 23403 ;;		Nothing
 23404 ;; This function is called by:
 23405 ;;		_nwkRxIndicateFrame
 23406 ;; This function uses a non-reentrant model
 23407 ;;
 23408                           
 23409                           	psect	text141
 23410  00876A                     __ptext141:
 23411                           	opt callstack 0
 23412  00876A                     nwkFrame@nwkFramePayloadSize:
 23413                           	opt callstack 18
 23414                           
 23415                           ; BSR set to: 0
 23416                           
 23417                           ;incstack = 0
 23418  00876A  EE20 F081          	lfsr	2,129
 23419  00876E  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4797^0,w,c
 23420  008770  26D9               	addwf	fsr2l,f,c
 23421  008772  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4797+1)^0,w,c
 23422  008774  22DA               	addwfc	fsr2h,f,c
 23423  008776  50DF               	movf	indf2,w,c
 23424  008778  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 23425  00877A  EE20 F001          	lfsr	2,1
 23426  00877E  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4797^0,w,c
 23427  008780  26D9               	addwf	fsr2l,f,c
 23428  008782  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4797+1)^0,w,c
 23429  008784  22DA               	addwfc	fsr2h,f,c
 23430  008786  50DF               	movf	indf2,w,c
 23431  008788  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 23432  00878A  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 23433  00878C  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 23434  00878E  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4797^0,w,c
 23435  008790  0F02               	addlw	2
 23436                           
 23437                           ; BSR set to: 0
 23438  008792  0012               	return		;funcret
 23439  008794                     __end_ofnwkFrame@nwkFramePayloadSize:
 23440                           	opt callstack 0
 23441                           
 23442 ;; *************** function _appDataInd *****************
 23443 ;; Defined at:
 23444 ;;		line 47 in file "../app/app_src/application.c"
 23445 ;; Parameters:    Size  Location     Type
 23446 ;;  ind             1   18[COMRAM] PTR struct NWK_DataInd_t
 23447 ;;		 -> nwkRxIndicateFrame@ind(12), 
 23448 ;; Auto vars:     Size  Location     Type
 23449 ;;  dataptr         2   20[COMRAM] PTR unsigned char 
 23450 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23451 ;;  buf_id          1   22[COMRAM] unsigned char 
 23452 ;; Return value:  Size  Location     Type
 23453 ;;                  1    wreg      _Bool 
 23454 ;; Registers used:
 23455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23456 ;; Tracked objects:
 23457 ;;		On entry : 3F/0
 23458 ;;		On exit  : 0/0
 23459 ;;		Unchanged: 0/0
 23460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23464 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23465 ;;Total ram usage:        5 bytes
 23466 ;; Hardware stack levels used:    1
 23467 ;; Hardware stack levels required when called:    8
 23468 ;; This function calls:
 23469 ;;		_get_free_rx_buffer
 23470 ;;		_memcpy
 23471 ;;		_memset
 23472 ;; This function is called by:
 23473 ;;		_bootLoadApplication
 23474 ;;		_nwkRxIndicateFrame
 23475 ;; This function uses a non-reentrant model
 23476 ;;
 23477                           
 23478                           	psect	text142
 23479  0069C6                     __ptext142:
 23480                           	opt callstack 0
 23481  0069C6                     _appDataInd:
 23482                           	opt callstack 17
 23483                           
 23484                           ; BSR set to: 0
 23485                           ;../app/app_src/application.c: 47: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 48: {;../app/app_src/application.c: 50:     uint8_t buf_id;;../app/
      +                          app_src/application.c: 51:     if(get_free_rx_buffer(&buf_id)){
 23486                           
 23487                           ; BSR set to: 0
 23488                           ;incstack = 0
 23489  0069C6  0E17               	movlw	low appDataInd@buf_id
 23490  0069C8  6E02               	movwf	get_free_rx_buffer@buf_id^0,c
 23491  0069CA  EC92  F03B         	call	_get_free_rx_buffer	;wreg free
 23492  0069CE  0900               	iorlw	0
 23493  0069D0  B4D8               	btfsc	status,2,c
 23494  0069D2  D048               	goto	l14422
 23495                           
 23496                           ; BSR set to: 0
 23497                           ;../app/app_src/application.c: 52:        uint8_t* dataptr = ind->data;
 23498  0069D4  5013               	movf	appDataInd@ind^0,w,c
 23499  0069D6  6ED9               	movwf	fsr2l,c
 23500  0069D8  6ADA               	clrf	fsr2h,c
 23501  0069DA  0E07               	movlw	7
 23502  0069DC  26D9               	addwf	fsr2l,f,c
 23503  0069DE  006F FF78  F015    	movff	postinc2,appDataInd@dataptr
 23504  0069E4  006F FF74  F016    	movff	postdec2,appDataInd@dataptr+1
 23505                           
 23506                           ; BSR set to: 0
 23507                           ;../app/app_src/application.c: 53:        memset(rx_buffer[buf_id].payload, 0 , sizeof((
      +                          127 - 16 - 2 )));
 23508  0069EA  5017               	movf	appDataInd@buf_id^0,w,c
 23509  0069EC  0D7A               	mullw	122
 23510  0069EE  0E77               	movlw	low (_rx_buffer+13)
 23511  0069F0  24F3               	addwf	243,w,c
 23512  0069F2  6E02               	movwf	memset@dest^0,c
 23513  0069F4  0E08               	movlw	high (_rx_buffer+13)
 23514  0069F6  20F4               	addwfc	prodh,w,c
 23515  0069F8  6E03               	movwf	(memset@dest+1)^0,c
 23516  0069FA  0E00               	movlw	0
 23517  0069FC  6E05               	movwf	(memset@c+1)^0,c
 23518  0069FE  0E00               	movlw	0
 23519  006A00  6E04               	movwf	memset@c^0,c
 23520  006A02  0E00               	movlw	0
 23521  006A04  6E07               	movwf	(memset@n+1)^0,c
 23522  006A06  0E02               	movlw	2
 23523  006A08  6E06               	movwf	memset@n^0,c
 23524  006A0A  ECFB  F021         	call	_memset	;wreg free
 23525                           
 23526                           ;../app/app_src/application.c: 54:        rx_buffer[buf_id].rx_ind = *ind;
 23527  006A0E  5013               	movf	appDataInd@ind^0,w,c
 23528  006A10  6ED9               	movwf	fsr2l,c
 23529  006A12  6ADA               	clrf	fsr2h,c
 23530  006A14  5017               	movf	appDataInd@buf_id^0,w,c
 23531  006A16  0D7A               	mullw	122
 23532  006A18  0E6B               	movlw	low (_rx_buffer+1)
 23533  006A1A  24F3               	addwf	243,w,c
 23534  006A1C  6EE1               	movwf	fsr1l,c
 23535  006A1E  0E08               	movlw	high (_rx_buffer+1)
 23536  006A20  20F4               	addwfc	prodh,w,c
 23537  006A22  6EE2               	movwf	fsr1h,c
 23538  006A24  0E0B               	movlw	11
 23539  006A26                     u13941:
 23540  006A26  006F FF6F FFE3     	movff	plusw2,plusw1
 23541  006A2C  06E8               	decf	wreg,f,c
 23542  006A2E  E2FB               	bc	u13941
 23543                           
 23544                           ;../app/app_src/application.c: 55:        memcpy(rx_buffer[buf_id].payload,dataptr, ind-
      +                          >size);
 23545  006A30  5017               	movf	appDataInd@buf_id^0,w,c
 23546  006A32  0D7A               	mullw	122
 23547  006A34  0E77               	movlw	low (_rx_buffer+13)
 23548  006A36  24F3               	addwf	243,w,c
 23549  006A38  6E08               	movwf	memcpy@d1^0,c
 23550  006A3A  0E08               	movlw	high (_rx_buffer+13)
 23551  006A3C  20F4               	addwfc	prodh,w,c
 23552  006A3E  6E09               	movwf	(memcpy@d1+1)^0,c
 23553  006A40  0060  F054  F00A   	movff	appDataInd@dataptr,memcpy@s1
 23554  006A46  0060  F058  F00B   	movff	appDataInd@dataptr+1,memcpy@s1+1
 23555  006A4C  5013               	movf	appDataInd@ind^0,w,c
 23556  006A4E  6ED9               	movwf	fsr2l,c
 23557  006A50  6ADA               	clrf	fsr2h,c
 23558  006A52  0E09               	movlw	9
 23559  006A54  26D9               	addwf	fsr2l,f,c
 23560  006A56  50DF               	movf	indf2,w,c
 23561  006A58  6E14               	movwf	??_appDataInd^0,c
 23562  006A5A  5014               	movf	??_appDataInd^0,w,c
 23563  006A5C  6E0C               	movwf	memcpy@n^0,c
 23564  006A5E  6A0D               	clrf	(memcpy@n+1)^0,c
 23565  006A60  ECE5  F039         	call	_memcpy	;wreg free
 23566  006A64                     l14422:
 23567                           
 23568                           ;../app/app_src/application.c: 57:     return 1;
 23569  006A64  0E01               	movlw	1
 23570  006A66  0012               	return		;funcret
 23571  006A68                     __end_of_appDataInd:
 23572                           	opt callstack 0
 23573                           
 23574 ;; *************** function _nwkRxServiceDataInd *****************
 23575 ;; Defined at:
 23576 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 23577 ;; Parameters:    Size  Location     Type
 23578 ;;  ind             1   18[COMRAM] PTR struct NWK_DataInd_t
 23579 ;;		 -> nwkRxIndicateFrame@ind(12), 
 23580 ;; Auto vars:     Size  Location     Type
 23581 ;;		None
 23582 ;; Return value:  Size  Location     Type
 23583 ;;                  1    wreg      _Bool 
 23584 ;; Registers used:
 23585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23586 ;; Tracked objects:
 23587 ;;		On entry : 3F/0
 23588 ;;		On exit  : 0/0
 23589 ;;		Unchanged: 0/0
 23590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23594 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23595 ;;Total ram usage:        5 bytes
 23596 ;; Hardware stack levels used:    1
 23597 ;; Hardware stack levels required when called:   10
 23598 ;; This function calls:
 23599 ;;		_nwkRouteErrorReceived
 23600 ;;		_nwkTxAckReceived
 23601 ;; This function is called by:
 23602 ;;		_nwkRxInit
 23603 ;;		_nwkRxIndicateFrame
 23604 ;; This function uses a non-reentrant model
 23605 ;;
 23606                           
 23607                           	psect	text143
 23608  007582                     __ptext143:
 23609                           	opt callstack 0
 23610  007582                     _nwkRxServiceDataInd:
 23611                           	opt callstack 15
 23612                           
 23613                           ; BSR set to: 0
 23614                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 23615                           
 23616                           ;incstack = 0
 23617  007582  5013               	movf	nwkRxServiceDataInd@ind^0,w,c
 23618  007584  6ED9               	movwf	fsr2l,c
 23619  007586  6ADA               	clrf	fsr2h,c
 23620  007588  0E09               	movlw	9
 23621  00758A  26D9               	addwf	fsr2l,f,c
 23622  00758C  50DF               	movf	indf2,w,c
 23623  00758E  A4D8               	btfss	status,2,c
 23624  007590  D00E               	goto	l9988
 23625  007592                     u8060:
 23626                           
 23627                           ; BSR set to: 0
 23628                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 23629  007592  0E00               	movlw	0
 23630  007594  0012               	return	
 23631  007596                     l9974:
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 23635  007596  0060  F04C  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 23636  00759C  EC68  F031         	call	_nwkTxAckReceived	;wreg free
 23637  0075A0  0012               	return	
 23638  0075A2                     l9978:
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 23642  0075A2  0060  F04C  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 23643  0075A8  EC3F  F03D         	call	_nwkRouteErrorReceived	;wreg free
 23644  0075AC  0012               	return	
 23645  0075AE                     l9988:
 23646                           
 23647                           ; BSR set to: 0
 23648  0075AE  5013               	movf	nwkRxServiceDataInd@ind^0,w,c
 23649  0075B0  6ED9               	movwf	fsr2l,c
 23650  0075B2  6ADA               	clrf	fsr2h,c
 23651  0075B4  0E07               	movlw	7
 23652  0075B6  26D9               	addwf	fsr2l,f,c
 23653  0075B8  006F FF78  F014    	movff	postinc2,??_nwkRxServiceDataInd
 23654  0075BE  006F FF74  F015    	movff	postdec2,??_nwkRxServiceDataInd+1
 23655  0075C4  0060  F053  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 23656  0075CA  0060  F057  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 23657  0075D0  50DF               	movf	indf2,w,c
 23658  0075D2  6E16               	movwf	(??_nwkRxServiceDataInd+2)^0,c
 23659  0075D4  6A17               	clrf	(??_nwkRxServiceDataInd+3)^0,c
 23660                           
 23661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23662                           ; Switch size 1, requested type "simple"
 23663                           ; Number of cases is 1, Range of values is 0 to 0
 23664                           ; switch strategies available:
 23665                           ; Name         Instructions Cycles
 23666                           ; simple_byte            4     3 (average)
 23667                           ;	Chosen strategy is simple_byte
 23668  0075D6  5017               	movf	(??_nwkRxServiceDataInd+3)^0,w,c
 23669  0075D8  0A00               	xorlw	0	; case 0
 23670  0075DA  A4D8               	btfss	status,2,c
 23671  0075DC  D7DA               	goto	u8060
 23672                           
 23673                           ; BSR set to: 0
 23674                           ; Switch size 1, requested type "simple"
 23675                           ; Number of cases is 2, Range of values is 0 to 1
 23676                           ; switch strategies available:
 23677                           ; Name         Instructions Cycles
 23678                           ; simple_byte            7     4 (average)
 23679                           ;	Chosen strategy is simple_byte
 23680  0075DE  5016               	movf	(??_nwkRxServiceDataInd+2)^0,w,c
 23681  0075E0  0A00               	xorlw	0	; case 0
 23682  0075E2  B4D8               	btfsc	status,2,c
 23683  0075E4  D7D8               	goto	l9974
 23684  0075E6  0A01               	xorlw	1	; case 1
 23685  0075E8  B4D8               	btfsc	status,2,c
 23686  0075EA  D7DB               	goto	l9978
 23687  0075EC  D7D2               	goto	u8060
 23688  0075EE                     __end_of_nwkRxServiceDataInd:
 23689                           	opt callstack 0
 23690                           
 23691 ;; *************** function _nwkTxAckReceived *****************
 23692 ;; Defined at:
 23693 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 23694 ;; Parameters:    Size  Location     Type
 23695 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 23696 ;;		 -> nwkRxIndicateFrame@ind(12), 
 23697 ;; Auto vars:     Size  Location     Type
 23698 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 23699 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23700 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 23701 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23702 ;; Return value:  Size  Location     Type
 23703 ;;                  1    wreg      _Bool 
 23704 ;; Registers used:
 23705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23706 ;; Tracked objects:
 23707 ;;		On entry : 3F/0
 23708 ;;		On exit  : 0/0
 23709 ;;		Unchanged: 0/0
 23710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23711 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23714 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23715 ;;Total ram usage:        7 bytes
 23716 ;; Hardware stack levels used:    1
 23717 ;; Hardware stack levels required when called:    8
 23718 ;; This function calls:
 23719 ;;		_nwkFrameNext
 23720 ;; This function is called by:
 23721 ;;		_nwkRxServiceDataInd
 23722 ;; This function uses a non-reentrant model
 23723 ;;
 23724                           
 23725                           	psect	text144
 23726  0062D0                     __ptext144:
 23727                           	opt callstack 0
 23728  0062D0                     _nwkTxAckReceived:
 23729                           	opt callstack 16
 23730                           
 23731                           ; BSR set to: 0
 23732                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 23733                           
 23734                           ;incstack = 0
 23735  0062D0  5008               	movf	nwkTxAckReceived@ind^0,w,c
 23736  0062D2  6ED9               	movwf	fsr2l,c
 23737  0062D4  6ADA               	clrf	fsr2h,c
 23738  0062D6  0E07               	movlw	7
 23739  0062D8  26D9               	addwf	fsr2l,f,c
 23740  0062DA  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 23741  0062E0  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 23742                           
 23743                           ; BSR set to: 0
 23744                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 23745  0062E6  0E00               	movlw	0
 23746  0062E8  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 23747  0062EA  0E00               	movlw	0
 23748  0062EC  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 23749                           
 23750                           ; BSR set to: 0
 23751                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 23752  0062EE  5008               	movf	nwkTxAckReceived@ind^0,w,c
 23753  0062F0  6ED9               	movwf	fsr2l,c
 23754  0062F2  6ADA               	clrf	fsr2h,c
 23755  0062F4  0E09               	movlw	9
 23756  0062F6  26D9               	addwf	fsr2l,f,c
 23757  0062F8  0E03               	movlw	3
 23758  0062FA  18DE               	xorwf	postinc2,w,c
 23759  0062FC  B4D8               	btfsc	status,2,c
 23760  0062FE  D035               	goto	l9630
 23761  006300                     u7640:
 23762                           
 23763                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 23764  006300  0E00               	movlw	0
 23765  006302  0012               	return	
 23766  006304                     l9618:
 23767                           
 23768                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 23769  006304  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 23770  00630A  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 23771  006310  0E16               	movlw	22
 23772  006312  18DE               	xorwf	postinc2,w,c
 23773  006314  A4D8               	btfss	status,2,c
 23774  006316  D029               	goto	l9630
 23775  006318  EE20 F001          	lfsr	2,1
 23776  00631C  500B               	movf	nwkTxAckReceived@command^0,w,c
 23777  00631E  26D9               	addwf	fsr2l,f,c
 23778  006320  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 23779  006322  22DA               	addwfc	fsr2h,f,c
 23780  006324  EE10 F00C          	lfsr	1,12
 23781  006328  500D               	movf	nwkTxAckReceived@frame^0,w,c
 23782  00632A  26E1               	addwf	fsr1l,f,c
 23783  00632C  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 23784  00632E  22E2               	addwfc	fsr1h,f,c
 23785  006330  50DE               	movf	postinc2,w,c
 23786  006332  18E6               	xorwf	postinc1,w,c
 23787  006334  A4D8               	btfss	status,2,c
 23788  006336  D019               	goto	l9630
 23789                           
 23790                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 23791  006338  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 23792  00633E  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 23793  006344  0E17               	movlw	23
 23794  006346  6EDF               	movwf	indf2,c
 23795                           
 23796                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 23797  006348  EE20 F002          	lfsr	2,2
 23798  00634C  500B               	movf	nwkTxAckReceived@command^0,w,c
 23799  00634E  26D9               	addwf	fsr2l,f,c
 23800  006350  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 23801  006352  22DA               	addwfc	fsr2h,f,c
 23802  006354  EE10 F086          	lfsr	1,134
 23803  006358  500D               	movf	nwkTxAckReceived@frame^0,w,c
 23804  00635A  26E1               	addwf	fsr1l,f,c
 23805  00635C  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 23806  00635E  22E2               	addwfc	fsr1h,f,c
 23807  006360  006F FF7F FFE7     	movff	indf2,indf1
 23808                           
 23809                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 23810  006366  0E01               	movlw	1
 23811  006368  0012               	return	
 23812  00636A                     l9630:
 23813                           
 23814                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 23815  00636A  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 23816  006370  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 23817  006376  ECD4  F037         	call	_nwkFrameNext	;wreg free
 23818  00637A  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 23819  006380  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 23820  006386  500D               	movf	nwkTxAckReceived@frame^0,w,c
 23821  006388  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 23822  00638A  B4D8               	btfsc	status,2,c
 23823  00638C  D7B9               	goto	u7640
 23824  00638E  D7BA               	goto	l9618
 23825  006390                     __end_of_nwkTxAckReceived:
 23826                           	opt callstack 0
 23827                           
 23828 ;; *************** function _nwkFrameNext *****************
 23829 ;; Defined at:
 23830 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 23831 ;; Parameters:    Size  Location     Type
 23832 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 23833 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23834 ;; Auto vars:     Size  Location     Type
 23835 ;;		None
 23836 ;; Return value:  Size  Location     Type
 23837 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 23838 ;; Registers used:
 23839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23840 ;; Tracked objects:
 23841 ;;		On entry : 0/0
 23842 ;;		On exit  : 0/0
 23843 ;;		Unchanged: 0/0
 23844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23848 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23849 ;;Total ram usage:        6 bytes
 23850 ;; Hardware stack levels used:    1
 23851 ;; Hardware stack levels required when called:    7
 23852 ;; This function calls:
 23853 ;;		Nothing
 23854 ;; This function is called by:
 23855 ;;		_nwkRxTaskHandler
 23856 ;;		_nwkTxAckReceived
 23857 ;;		_nwkTxAckWaitTimerHandler
 23858 ;;		_nwkTxDelayTimerHandler
 23859 ;;		_nwkTxTaskHandler
 23860 ;; This function uses a non-reentrant model
 23861 ;;
 23862                           
 23863                           	psect	text145
 23864  006FA8                     __ptext145:
 23865                           	opt callstack 0
 23866  006FA8                     _nwkFrameNext:
 23867                           	opt callstack 20
 23868                           
 23869                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 23870                           
 23871                           ;incstack = 0
 23872  006FA8  5002               	movf	nwkFrameNext@frame^0,w,c
 23873  006FAA  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 23874  006FAC  A4D8               	btfss	status,2,c
 23875  006FAE  D026               	goto	l9250
 23876                           
 23877                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 23878  006FB0  0EBD               	movlw	low _nwkFrameFrames
 23879  006FB2  6E02               	movwf	nwkFrameNext@frame^0,c
 23880  006FB4  0E05               	movlw	high _nwkFrameFrames
 23881  006FB6  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 23882                           
 23883                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 23884                           
 23885                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 23886  006FB8  0EAD               	movlw	173
 23887  006FBA  6E04               	movwf	??_nwkFrameNext^0,c
 23888  006FBC  0E02               	movlw	2
 23889  006FBE  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 23890  006FC0  0EBD               	movlw	low _nwkFrameFrames
 23891  006FC2  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 23892  006FC4  0E05               	movlw	high _nwkFrameFrames
 23893  006FC6  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 23894  006FC8  5004               	movf	??_nwkFrameNext^0,w,c
 23895  006FCA  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 23896  006FCC  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 23897  006FCE  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 23898  006FD0  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 23899  006FD2  5C02               	subwf	nwkFrameNext@frame^0,w,c
 23900  006FD4  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 23901  006FD6  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 23902  006FD8  B0D8               	btfsc	status,0,c
 23903  006FDA  D026               	goto	u6960
 23904  006FDC                     l9244:
 23905                           
 23906                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 23907  006FDC  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 23908  006FE2  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 23909  006FE8  50DF               	movf	indf2,w,c
 23910  006FEA  B4D8               	btfsc	status,2,c
 23911  006FEC  D007               	goto	l9250
 23912                           
 23913                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 23914  006FEE  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 23915  006FF4  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 23916  006FFA  0012               	return	
 23917  006FFC                     l9250:
 23918                           
 23919                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 23920  006FFC  0E89               	movlw	137
 23921  006FFE  2602               	addwf	nwkFrameNext@frame^0,f,c
 23922  007000  0E00               	movlw	0
 23923  007002  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 23924  007004  0EAD               	movlw	173
 23925  007006  6E04               	movwf	??_nwkFrameNext^0,c
 23926  007008  0E02               	movlw	2
 23927  00700A  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 23928  00700C  0EBD               	movlw	low _nwkFrameFrames
 23929  00700E  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 23930  007010  0E05               	movlw	high _nwkFrameFrames
 23931  007012  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 23932  007014  5004               	movf	??_nwkFrameNext^0,w,c
 23933  007016  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 23934  007018  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 23935  00701A  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 23936  00701C  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 23937  00701E  5C02               	subwf	nwkFrameNext@frame^0,w,c
 23938  007020  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 23939  007022  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 23940  007024  A0D8               	btfss	status,0,c
 23941  007026  D7DA               	goto	l9244
 23942  007028                     u6960:
 23943                           
 23944                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 23945  007028  0E00               	movlw	0
 23946  00702A  6E02               	movwf	?_nwkFrameNext^0,c
 23947  00702C  0E00               	movlw	0
 23948  00702E  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 23949  007030  0012               	return		;funcret
 23950  007032                     __end_of_nwkFrameNext:
 23951                           	opt callstack 0
 23952                           
 23953 ;; *************** function _nwkRouteErrorReceived *****************
 23954 ;; Defined at:
 23955 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 23956 ;; Parameters:    Size  Location     Type
 23957 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 23958 ;;		 -> nwkRxIndicateFrame@ind(12), 
 23959 ;; Auto vars:     Size  Location     Type
 23960 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 23961 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23962 ;; Return value:  Size  Location     Type
 23963 ;;                  1    wreg      _Bool 
 23964 ;; Registers used:
 23965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23966 ;; Tracked objects:
 23967 ;;		On entry : 3F/0
 23968 ;;		On exit  : 0/0
 23969 ;;		Unchanged: 0/0
 23970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23971 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23975 ;;Total ram usage:        4 bytes
 23976 ;; Hardware stack levels used:    1
 23977 ;; Hardware stack levels required when called:    9
 23978 ;; This function calls:
 23979 ;;		_nwkRouteRemove
 23980 ;; This function is called by:
 23981 ;;		_nwkRxServiceDataInd
 23982 ;; This function uses a non-reentrant model
 23983 ;;
 23984                           
 23985                           	psect	text146
 23986  007A7E                     __ptext146:
 23987                           	opt callstack 0
 23988  007A7E                     _nwkRouteErrorReceived:
 23989                           	opt callstack 15
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 23993                           
 23994                           ;incstack = 0
 23995  007A7E  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 23996  007A80  6ED9               	movwf	fsr2l,c
 23997  007A82  6ADA               	clrf	fsr2h,c
 23998  007A84  0E07               	movlw	7
 23999  007A86  26D9               	addwf	fsr2l,f,c
 24000  007A88  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 24001  007A8E  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 24002                           
 24003                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 24004  007A94  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 24005  007A96  6ED9               	movwf	fsr2l,c
 24006  007A98  6ADA               	clrf	fsr2h,c
 24007  007A9A  0E09               	movlw	9
 24008  007A9C  26D9               	addwf	fsr2l,f,c
 24009  007A9E  0E06               	movlw	6
 24010  007AA0  18DE               	xorwf	postinc2,w,c
 24011  007AA2  B4D8               	btfsc	status,2,c
 24012  007AA4  D002               	goto	l9602
 24013                           
 24014                           ; BSR set to: 0
 24015                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 24016  007AA6  0E00               	movlw	0
 24017  007AA8  0012               	return	
 24018  007AAA                     l9602:
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 24022  007AAA  EE20 F003          	lfsr	2,3
 24023  007AAE  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 24024  007AB0  26D9               	addwf	fsr2l,f,c
 24025  007AB2  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 24026  007AB4  22DA               	addwfc	fsr2h,f,c
 24027  007AB6  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 24028  007ABC  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 24029  007AC2  EE20 F005          	lfsr	2,5
 24030  007AC6  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 24031  007AC8  26D9               	addwf	fsr2l,f,c
 24032  007ACA  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 24033  007ACC  22DA               	addwfc	fsr2h,f,c
 24034  007ACE  50DF               	movf	indf2,w,c
 24035  007AD0  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 24036  007AD2  ECB8  F041         	call	_nwkRouteRemove	;wreg free
 24037                           
 24038                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 24039  007AD6  0E01               	movlw	1
 24040  007AD8  0012               	return		;funcret
 24041  007ADA                     __end_of_nwkRouteErrorReceived:
 24042                           	opt callstack 0
 24043                           
 24044 ;; *************** function _nwkRouteRemove *****************
 24045 ;; Defined at:
 24046 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 24047 ;; Parameters:    Size  Location     Type
 24048 ;;  dst             2    7[COMRAM] unsigned short 
 24049 ;;  multicast       1    9[COMRAM] unsigned char 
 24050 ;; Auto vars:     Size  Location     Type
 24051 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 24052 ;;		 -> nwkRouteTable(70), NULL(0), 
 24053 ;; Return value:  Size  Location     Type
 24054 ;;                  1    wreg      void 
 24055 ;; Registers used:
 24056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24057 ;; Tracked objects:
 24058 ;;		On entry : 3E/1
 24059 ;;		On exit  : 0/0
 24060 ;;		Unchanged: 0/0
 24061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24062 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24065 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24066 ;;Total ram usage:        5 bytes
 24067 ;; Hardware stack levels used:    1
 24068 ;; Hardware stack levels required when called:    8
 24069 ;; This function calls:
 24070 ;;		_NWK_RouteFindEntry
 24071 ;;		_NWK_RouteFreeEntry
 24072 ;; This function is called by:
 24073 ;;		_nwkRouteErrorReceived
 24074 ;;		_nwkRxRejectDuplicate
 24075 ;; This function uses a non-reentrant model
 24076 ;;
 24077                           
 24078                           	psect	text147
 24079  008370                     __ptext147:
 24080                           	opt callstack 0
 24081  008370                     _nwkRouteRemove:
 24082                           	opt callstack 17
 24083                           
 24084                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 24085                           
 24086                           ;incstack = 0
 24087  008370  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 24088  008376  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 24089  00837C  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 24090  008382  EC2D  F03B         	call	_NWK_RouteFindEntry	;wreg free
 24091  008386  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 24092  00838C  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 24093                           
 24094                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 24095  008392  500B               	movf	nwkRouteRemove@entry^0,w,c
 24096  008394  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 24097  008396  B4D8               	btfsc	status,2,c
 24098  008398  0012               	return	
 24099                           
 24100                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 24101  00839A  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 24102  0083A0  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 24103  0083A6  EC9C  F042         	call	_NWK_RouteFreeEntry	;wreg free
 24104  0083AA  0012               	return		;funcret
 24105  0083AC                     __end_of_nwkRouteRemove:
 24106                           	opt callstack 0
 24107                           
 24108 ;; *************** function _NWK_RouteFreeEntry *****************
 24109 ;; Defined at:
 24110 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 24111 ;; Parameters:    Size  Location     Type
 24112 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 24113 ;;		 -> nwkRouteTable(70), NULL(0), 
 24114 ;; Auto vars:     Size  Location     Type
 24115 ;;		None
 24116 ;; Return value:  Size  Location     Type
 24117 ;;                  1    wreg      void 
 24118 ;; Registers used:
 24119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24120 ;; Tracked objects:
 24121 ;;		On entry : 0/0
 24122 ;;		On exit  : 0/0
 24123 ;;		Unchanged: 0/0
 24124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24129 ;;Total ram usage:        2 bytes
 24130 ;; Hardware stack levels used:    1
 24131 ;; Hardware stack levels required when called:    7
 24132 ;; This function calls:
 24133 ;;		Nothing
 24134 ;; This function is called by:
 24135 ;;		_nwkRouteRemove
 24136 ;;		_nwkRouteFrameSent
 24137 ;; This function uses a non-reentrant model
 24138 ;;
 24139                           
 24140                           	psect	text148
 24141  008538                     __ptext148:
 24142                           	opt callstack 0
 24143  008538                     _NWK_RouteFreeEntry:
 24144                           	opt callstack 19
 24145                           
 24146                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 24147                           
 24148                           ;incstack = 0
 24149  008538  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 24150  00853E  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 24151  008544  B0DF               	btfsc	indf2,0,c
 24152  008546  0012               	return	
 24153                           
 24154                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 24155  008548  EE20 F001          	lfsr	2,1
 24156  00854C  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 24157  00854E  26D9               	addwf	fsr2l,f,c
 24158  008550  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 24159  008552  22DA               	addwfc	fsr2h,f,c
 24160  008554  0EFF               	movlw	255
 24161  008556  6EDE               	movwf	postinc2,c
 24162  008558  0EFF               	movlw	255
 24163  00855A  6EDD               	movwf	postdec2,c
 24164                           
 24165                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 24166  00855C  EE20 F005          	lfsr	2,5
 24167  008560  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 24168  008562  26D9               	addwf	fsr2l,f,c
 24169  008564  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 24170  008566  22DA               	addwfc	fsr2h,f,c
 24171  008568  0E00               	movlw	0
 24172  00856A  6EDF               	movwf	indf2,c
 24173  00856C  0012               	return		;funcret
 24174  00856E                     __end_of_NWK_RouteFreeEntry:
 24175                           	opt callstack 0
 24176                           
 24177 ;; *************** function _get_free_rx_buffer *****************
 24178 ;; Defined at:
 24179 ;;		line 85 in file "../app/app_src/application.c"
 24180 ;; Parameters:    Size  Location     Type
 24181 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 24182 ;;		 -> appDataInd@buf_id(1), 
 24183 ;; Auto vars:     Size  Location     Type
 24184 ;;		None
 24185 ;; Return value:  Size  Location     Type
 24186 ;;                  1    wreg      _Bool 
 24187 ;; Registers used:
 24188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24189 ;; Tracked objects:
 24190 ;;		On entry : 3F/0
 24191 ;;		On exit  : 3F/0
 24192 ;;		Unchanged: 3F/0
 24193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24194 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24198 ;;Total ram usage:        2 bytes
 24199 ;; Hardware stack levels used:    1
 24200 ;; Hardware stack levels required when called:    7
 24201 ;; This function calls:
 24202 ;;		Nothing
 24203 ;; This function is called by:
 24204 ;;		_appDataInd
 24205 ;; This function uses a non-reentrant model
 24206 ;;
 24207                           
 24208                           	psect	text149
 24209  007724                     __ptext149:
 24210                           	opt callstack 0
 24211  007724                     _get_free_rx_buffer:
 24212                           	opt callstack 17
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;../app/app_src/application.c: 86:     *buf_id = 0;
 24216                           
 24217                           ;incstack = 0
 24218  007724  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24219  007726  6ED9               	movwf	fsr2l,c
 24220  007728  6ADA               	clrf	fsr2h,c
 24221  00772A  0E00               	movlw	0
 24222  00772C  6EDF               	movwf	indf2,c
 24223                           
 24224                           ;../app/app_src/application.c: 87:     while(*buf_id < 5){
 24225  00772E  D023               	goto	l227
 24226  007730                     l9520:
 24227                           
 24228                           ; BSR set to: 0
 24229                           ;../app/app_src/application.c: 88:         if(rx_buffer[*buf_id].free){
 24230  007730  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24231  007732  6ED9               	movwf	fsr2l,c
 24232  007734  6ADA               	clrf	fsr2h,c
 24233  007736  50DF               	movf	indf2,w,c
 24234  007738  6E03               	movwf	??_get_free_rx_buffer^0,c
 24235  00773A  5003               	movf	??_get_free_rx_buffer^0,w,c
 24236  00773C  0D7A               	mullw	122
 24237  00773E  0E6A               	movlw	low _rx_buffer
 24238  007740  24F3               	addwf	243,w,c
 24239  007742  6ED9               	movwf	fsr2l,c
 24240  007744  0E08               	movlw	high _rx_buffer
 24241  007746  20F4               	addwfc	prodh,w,c
 24242  007748  6EDA               	movwf	fsr2h,c
 24243  00774A  A0DF               	btfss	indf2,0,c
 24244  00774C  D010               	goto	l9528
 24245                           
 24246                           ; BSR set to: 0
 24247                           ;../app/app_src/application.c: 89:             rx_buffer[*buf_id].free = 0;
 24248  00774E  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24249  007750  6ED9               	movwf	fsr2l,c
 24250  007752  6ADA               	clrf	fsr2h,c
 24251  007754  50DF               	movf	indf2,w,c
 24252  007756  6E03               	movwf	??_get_free_rx_buffer^0,c
 24253  007758  5003               	movf	??_get_free_rx_buffer^0,w,c
 24254  00775A  0D7A               	mullw	122
 24255  00775C  0E6A               	movlw	low _rx_buffer
 24256  00775E  24F3               	addwf	243,w,c
 24257  007760  6ED9               	movwf	fsr2l,c
 24258  007762  0E08               	movlw	high _rx_buffer
 24259  007764  20F4               	addwfc	prodh,w,c
 24260  007766  6EDA               	movwf	fsr2h,c
 24261  007768  90DF               	bcf	indf2,0,c
 24262                           
 24263                           ; BSR set to: 0
 24264                           ;../app/app_src/application.c: 90:             return 1;
 24265  00776A  0E01               	movlw	1
 24266  00776C  0012               	return	
 24267  00776E                     l9528:
 24268                           
 24269                           ; BSR set to: 0
 24270                           ;../app/app_src/application.c: 92:         (*buf_id)++;
 24271  00776E  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24272  007770  6ED9               	movwf	fsr2l,c
 24273  007772  6ADA               	clrf	fsr2h,c
 24274  007774  2ADF               	incf	indf2,f,c
 24275  007776                     l227:
 24276                           
 24277                           ; BSR set to: 0
 24278                           ;../app/app_src/application.c: 87:     while(*buf_id < 5){
 24279  007776  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24280  007778  6ED9               	movwf	fsr2l,c
 24281  00777A  6ADA               	clrf	fsr2h,c
 24282  00777C  0E04               	movlw	4
 24283  00777E  64DF               	cpfsgt	indf2,c
 24284  007780  D7D7               	goto	l9520
 24285                           
 24286                           ; BSR set to: 0
 24287                           ;../app/app_src/application.c: 94:     return 0;
 24288  007782  0E00               	movlw	0
 24289                           
 24290                           ; BSR set to: 0
 24291  007784  0012               	return		;funcret
 24292  007786                     __end_of_get_free_rx_buffer:
 24293                           	opt callstack 0
 24294                           
 24295 ;; *************** function _nwkRouteFrame *****************
 24296 ;; Defined at:
 24297 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 24300 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24301 ;; Auto vars:     Size  Location     Type
 24302 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 24303 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24304 ;; Return value:  Size  Location     Type
 24305 ;;                  1    wreg      void 
 24306 ;; Registers used:
 24307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24308 ;; Tracked objects:
 24309 ;;		On entry : 0/0
 24310 ;;		On exit  : 3E/0
 24311 ;;		Unchanged: 0/0
 24312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24317 ;;Total ram usage:        4 bytes
 24318 ;; Hardware stack levels used:    1
 24319 ;; Hardware stack levels required when called:   12
 24320 ;; This function calls:
 24321 ;;		_NWK_RouteNextHop
 24322 ;;		_nwkFrameFree
 24323 ;;		_nwkRouteSendRouteError
 24324 ;;		_nwkTxFrame
 24325 ;; This function is called by:
 24326 ;;		_nwkRxTaskHandler
 24327 ;; This function uses a non-reentrant model
 24328 ;;
 24329                           
 24330                           	psect	text150
 24331  005C6C                     __ptext150:
 24332                           	opt callstack 0
 24333  005C6C                     _nwkRouteFrame:
 24334                           	opt callstack 15
 24335                           
 24336                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 24337                           
 24338                           ; BSR set to: 0
 24339                           ;incstack = 0
 24340  005C6C  0E02               	movlw	2
 24341  005C6E  2433               	addwf	nwkRouteFrame@frame^0,w,c
 24342  005C70  6E35               	movwf	nwkRouteFrame@header^0,c
 24343  005C72  0E00               	movlw	0
 24344  005C74  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 24345  005C76  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 24346                           
 24347                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 24348  005C78  EE20 F00D          	lfsr	2,13
 24349  005C7C  5035               	movf	nwkRouteFrame@header^0,w,c
 24350  005C7E  26D9               	addwf	fsr2l,f,c
 24351  005C80  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24352  005C82  22DA               	addwfc	fsr2h,f,c
 24353  005C84  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 24354  005C8A  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 24355  005C90  EE20 F009          	lfsr	2,9
 24356  005C94  5035               	movf	nwkRouteFrame@header^0,w,c
 24357  005C96  26D9               	addwf	fsr2l,f,c
 24358  005C98  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24359  005C9A  22DA               	addwfc	fsr2h,f,c
 24360  005C9C  0E00               	movlw	0
 24361  005C9E  B6DF               	btfsc	indf2,3,c
 24362  005CA0  0E01               	movlw	1
 24363  005CA2  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 24364  005CA4  EC4F  F03F         	call	_NWK_RouteNextHop	;wreg free
 24365  005CA8  2808               	incf	?_NWK_RouteNextHop^0,w,c
 24366  005CAA  E103               	bnz	u15380
 24367  005CAC  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 24368  005CAE  B4D8               	btfsc	status,2,c
 24369  005CB0  D01B               	goto	l15402
 24370  005CB2                     u15380:
 24371                           
 24372                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 24373  005CB2  EE20 F087          	lfsr	2,135
 24374  005CB6  5033               	movf	nwkRouteFrame@frame^0,w,c
 24375  005CB8  26D9               	addwf	fsr2l,f,c
 24376  005CBA  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24377  005CBC  22DA               	addwfc	fsr2h,f,c
 24378  005CBE  0E00               	movlw	0
 24379  005CC0  6EDE               	movwf	postinc2,c
 24380  005CC2  0E00               	movlw	0
 24381  005CC4  6EDD               	movwf	postdec2,c
 24382                           
 24383                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 24384  005CC6  EE20 F086          	lfsr	2,134
 24385  005CCA  5033               	movf	nwkRouteFrame@frame^0,w,c
 24386  005CCC  26D9               	addwf	fsr2l,f,c
 24387  005CCE  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24388  005CD0  22DA               	addwfc	fsr2h,f,c
 24389  005CD2  0E02               	movlw	2
 24390  005CD4  6EDF               	movwf	indf2,c
 24391                           
 24392                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 24393  005CD6  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 24394  005CDC  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 24395  005CE2  ECBB  F01D         	call	_nwkTxFrame	;wreg free
 24396                           
 24397                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 24398  005CE6  0012               	return	
 24399  005CE8                     l15402:
 24400                           
 24401                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 24402  005CE8  EE20 F00B          	lfsr	2,11
 24403  005CEC  5035               	movf	nwkRouteFrame@header^0,w,c
 24404  005CEE  26D9               	addwf	fsr2l,f,c
 24405  005CF0  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24406  005CF2  22DA               	addwfc	fsr2h,f,c
 24407  005CF4  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 24408  005CFA  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 24409  005D00  EE20 F00D          	lfsr	2,13
 24410  005D04  5035               	movf	nwkRouteFrame@header^0,w,c
 24411  005D06  26D9               	addwf	fsr2l,f,c
 24412  005D08  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24413  005D0A  22DA               	addwfc	fsr2h,f,c
 24414  005D0C  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 24415  005D12  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 24416  005D18  EE20 F009          	lfsr	2,9
 24417  005D1C  5035               	movf	nwkRouteFrame@header^0,w,c
 24418  005D1E  26D9               	addwf	fsr2l,f,c
 24419  005D20  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24420  005D22  22DA               	addwfc	fsr2h,f,c
 24421  005D24  0E00               	movlw	0
 24422  005D26  B6DF               	btfsc	indf2,3,c
 24423  005D28  0E01               	movlw	1
 24424  005D2A  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 24425  005D2C  EC12  F02C         	call	_nwkRouteSendRouteError	;wreg free
 24426                           
 24427                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 24428  005D30  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 24429  005D36  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 24430  005D3C  EC95  F045         	call	_nwkFrameFree	;wreg free
 24431  005D40  0012               	return		;funcret
 24432  005D42                     __end_of_nwkRouteFrame:
 24433                           	opt callstack 0
 24434                           
 24435 ;; *************** function _nwkRouteSendRouteError *****************
 24436 ;; Defined at:
 24437 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;  src             2   41[COMRAM] unsigned short 
 24440 ;;  dst             2   43[COMRAM] unsigned short 
 24441 ;;  multicast       1   45[COMRAM] unsigned char 
 24442 ;; Auto vars:     Size  Location     Type
 24443 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 24444 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24445 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 24446 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1    wreg      void 
 24449 ;; Registers used:
 24450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24451 ;; Tracked objects:
 24452 ;;		On entry : 0/0
 24453 ;;		On exit  : 0/0
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24456 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24457 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24459 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24460 ;;Total ram usage:        9 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:   11
 24463 ;; This function calls:
 24464 ;;		_nwkFrameAlloc
 24465 ;;		_nwkFrameCommandInit
 24466 ;;		_nwkTxFrame
 24467 ;; This function is called by:
 24468 ;;		_nwkRouteFrame
 24469 ;; This function uses a non-reentrant model
 24470 ;;
 24471                           
 24472                           	psect	text151
 24473  005824                     __ptext151:
 24474                           	opt callstack 0
 24475  005824                     _nwkRouteSendRouteError:
 24476                           	opt callstack 15
 24477                           
 24478                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24479                           
 24480                           ;incstack = 0
 24481  005824  ECDF  F032         	call	_nwkFrameAlloc	;wreg free
 24482  005828  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 24483  00582E  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 24484  005834  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24485  005836  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24486  005838  B4D8               	btfsc	status,2,c
 24487  00583A  0012               	return	
 24488                           
 24489                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 24490  00583C  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 24491  005842  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 24492  005848  EC82  F040         	call	_nwkFrameCommandInit	;wreg free
 24493                           
 24494                           ; BSR set to: 1
 24495                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 24496  00584C  EE20 F001          	lfsr	2,1
 24497  005850  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24498  005852  26D9               	addwf	fsr2l,f,c
 24499  005854  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24500  005856  22DA               	addwfc	fsr2h,f,c
 24501  005858  0E06               	movlw	6
 24502  00585A  26DF               	addwf	indf2,f,c
 24503                           
 24504                           ; BSR set to: 1
 24505                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 24506  00585C  EE20 F087          	lfsr	2,135
 24507  005860  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24508  005862  26D9               	addwf	fsr2l,f,c
 24509  005864  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24510  005866  22DA               	addwfc	fsr2h,f,c
 24511  005868  0E00               	movlw	0
 24512  00586A  6EDE               	movwf	postinc2,c
 24513  00586C  0E00               	movlw	0
 24514  00586E  6EDD               	movwf	postdec2,c
 24515                           
 24516                           ; BSR set to: 1
 24517                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 24518  005870  EE20 F00F          	lfsr	2,15
 24519  005874  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24520  005876  26D9               	addwf	fsr2l,f,c
 24521  005878  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24522  00587A  22DA               	addwfc	fsr2h,f,c
 24523  00587C  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24524  005882  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24525                           
 24526                           ; BSR set to: 1
 24527                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 24528  005888  EE20 F081          	lfsr	2,129
 24529  00588C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24530  00588E  26D9               	addwf	fsr2l,f,c
 24531  005890  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24532  005892  22DA               	addwfc	fsr2h,f,c
 24533  005894  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 24534  00589A  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 24535                           
 24536                           ; BSR set to: 1
 24537                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 24538  0058A0  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 24539  0058A6  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 24540  0058AC  0E01               	movlw	1
 24541  0058AE  6EDF               	movwf	indf2,c
 24542                           
 24543                           ; BSR set to: 1
 24544                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 24545  0058B0  EE20 F001          	lfsr	2,1
 24546  0058B4  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24547  0058B6  26D9               	addwf	fsr2l,f,c
 24548  0058B8  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24549  0058BA  22DA               	addwfc	fsr2h,f,c
 24550  0058BC  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24551  0058C2  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24552                           
 24553                           ; BSR set to: 1
 24554                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 24555  0058C8  EE20 F003          	lfsr	2,3
 24556  0058CC  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24557  0058CE  26D9               	addwf	fsr2l,f,c
 24558  0058D0  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24559  0058D2  22DA               	addwfc	fsr2h,f,c
 24560  0058D4  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 24561  0058DA  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 24562                           
 24563                           ; BSR set to: 1
 24564                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 24565  0058E0  EE20 F005          	lfsr	2,5
 24566  0058E4  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24567  0058E6  26D9               	addwf	fsr2l,f,c
 24568  0058E8  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24569  0058EA  22DA               	addwfc	fsr2h,f,c
 24570  0058EC  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 24571                           
 24572                           ; BSR set to: 1
 24573                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 24574  0058F2  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 24575  0058F8  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 24576  0058FE  ECBB  F01D         	call	_nwkTxFrame	;wreg free
 24577  005902  0012               	return		;funcret
 24578  005904                     __end_of_nwkRouteSendRouteError:
 24579                           	opt callstack 0
 24580                           
 24581 ;; *************** function _nwkFrameCommandInit *****************
 24582 ;; Defined at:
 24583 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 24584 ;; Parameters:    Size  Location     Type
 24585 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24586 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24587 ;; Auto vars:     Size  Location     Type
 24588 ;;		None
 24589 ;; Return value:  Size  Location     Type
 24590 ;;                  1    wreg      void 
 24591 ;; Registers used:
 24592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24593 ;; Tracked objects:
 24594 ;;		On entry : 0/1
 24595 ;;		On exit  : 3F/1
 24596 ;;		Unchanged: 0/0
 24597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24602 ;;Total ram usage:        2 bytes
 24603 ;; Hardware stack levels used:    1
 24604 ;; Hardware stack levels required when called:    7
 24605 ;; This function calls:
 24606 ;;		Nothing
 24607 ;; This function is called by:
 24608 ;;		_nwkRouteSendRouteError
 24609 ;;		_nwkRxSendAck
 24610 ;; This function uses a non-reentrant model
 24611 ;;
 24612                           
 24613                           	psect	text152
 24614  008104                     __ptext152:
 24615                           	opt callstack 0
 24616  008104                     _nwkFrameCommandInit:
 24617                           	opt callstack 18
 24618                           
 24619                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 24620                           
 24621                           ;incstack = 0
 24622  008104  EE20 F083          	lfsr	2,131
 24623  008108  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24624  00810A  26D9               	addwf	fsr2l,f,c
 24625  00810C  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24626  00810E  22DA               	addwfc	fsr2h,f,c
 24627  008110  0E00               	movlw	0
 24628  008112  6EDF               	movwf	indf2,c
 24629                           
 24630                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 24631  008114  0101               	movlb	1	; () banked
 24632  008116  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 24633  008118  EE20 F00C          	lfsr	2,12
 24634  00811C  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24635  00811E  26D9               	addwf	fsr2l,f,c
 24636  008120  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24637  008122  22DA               	addwfc	fsr2h,f,c
 24638  008124  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 24639                           
 24640                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 24641  00812A  EE20 F00D          	lfsr	2,13
 24642  00812E  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24643  008130  26D9               	addwf	fsr2l,f,c
 24644  008132  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24645  008134  22DA               	addwfc	fsr2h,f,c
 24646  008136  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24647  00813C  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24648                           
 24649                           ; BSR set to: 1
 24650  008142  0012               	return		;funcret
 24651  008144                     __end_of_nwkFrameCommandInit:
 24652                           	opt callstack 0
 24653                           
 24654 ;; *************** function _nwkFrameFree *****************
 24655 ;; Defined at:
 24656 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 24657 ;; Parameters:    Size  Location     Type
 24658 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24659 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24660 ;; Auto vars:     Size  Location     Type
 24661 ;;		None
 24662 ;; Return value:  Size  Location     Type
 24663 ;;                  1    wreg      void 
 24664 ;; Registers used:
 24665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24666 ;; Tracked objects:
 24667 ;;		On entry : 0/0
 24668 ;;		On exit  : 3F/1
 24669 ;;		Unchanged: 0/0
 24670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24675 ;;Total ram usage:        2 bytes
 24676 ;; Hardware stack levels used:    1
 24677 ;; Hardware stack levels required when called:    7
 24678 ;; This function calls:
 24679 ;;		Nothing
 24680 ;; This function is called by:
 24681 ;;		_nwkDataReqTxConf
 24682 ;;		_nwkRouteFrame
 24683 ;;		_nwkRxTaskHandler
 24684 ;;		_nwkTxTaskHandler
 24685 ;; This function uses a non-reentrant model
 24686 ;;
 24687                           
 24688                           	psect	text153
 24689  008B2A                     __ptext153:
 24690                           	opt callstack 0
 24691  008B2A                     _nwkFrameFree:
 24692                           	opt callstack 20
 24693                           
 24694                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 24695                           
 24696                           ; BSR set to: 1
 24697                           ;incstack = 0
 24698  008B2A  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 24699  008B30  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 24700  008B36  0E00               	movlw	0
 24701  008B38  6EDF               	movwf	indf2,c
 24702                           
 24703                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 24704  008B3A  0101               	movlb	1	; () banked
 24705  008B3C  0726               	decf	(_nwkIb+38)& (0+255),f,b
 24706  008B3E  A0D8               	btfss	status,0,c
 24707  008B40  0727               	decf	(_nwkIb+39)& (0+255),f,b
 24708                           
 24709                           ; BSR set to: 1
 24710  008B42  0012               	return		;funcret
 24711  008B44                     __end_of_nwkFrameFree:
 24712                           	opt callstack 0
 24713                           
 24714 ;; *************** function _nwkDataReqTaskHandler *****************
 24715 ;; Defined at:
 24716 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 24717 ;; Parameters:    Size  Location     Type
 24718 ;;		None
 24719 ;; Auto vars:     Size  Location     Type
 24720 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 24721 ;;		 -> NULL(0), tx_buffer(524), 
 24722 ;; Return value:  Size  Location     Type
 24723 ;;                  1    wreg      void 
 24724 ;; Registers used:
 24725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24726 ;; Tracked objects:
 24727 ;;		On entry : 0/0
 24728 ;;		On exit  : 0/0
 24729 ;;		Unchanged: 0/0
 24730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24734 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24735 ;;Total ram usage:        4 bytes
 24736 ;; Hardware stack levels used:    1
 24737 ;; Hardware stack levels required when called:   12
 24738 ;; This function calls:
 24739 ;;		_nwkDataReqConfirm
 24740 ;;		_nwkDataReqSendFrame
 24741 ;; This function is called by:
 24742 ;;		_NWK_TaskHandler
 24743 ;; This function uses a non-reentrant model
 24744 ;;
 24745                           
 24746                           	psect	text154
 24747  00724C                     __ptext154:
 24748                           	opt callstack 0
 24749  00724C                     _nwkDataReqTaskHandler:
 24750                           	opt callstack 16
 24751                           
 24752                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 24753                           
 24754                           ; BSR set to: 1
 24755                           ;incstack = 0
 24756  00724C  0060  F2FC  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 24757  007252  0060  F300  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 24758  007258  D035               	goto	l16136
 24759  00725A                     l16118:
 24760                           
 24761                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 24762  00725A  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 24763  007260  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 24764  007266  EC74  F00E         	call	_nwkDataReqSendFrame	;wreg free
 24765  00726A  0012               	return	
 24766  00726C                     l16124:
 24767                           
 24768                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 24769  00726C  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 24770  007272  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 24771  007278  ECBD  F02A         	call	_nwkDataReqConfirm	;wreg free
 24772  00727C  0012               	return	
 24773  00727E                     l16132:
 24774  00727E  EE20 F004          	lfsr	2,4
 24775  007282  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24776  007284  26D9               	addwf	fsr2l,f,c
 24777  007286  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24778  007288  22DA               	addwfc	fsr2h,f,c
 24779  00728A  50DF               	movf	indf2,w,c
 24780  00728C  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 24781  00728E  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 24782                           
 24783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24784                           ; Switch size 1, requested type "simple"
 24785                           ; Number of cases is 1, Range of values is 0 to 0
 24786                           ; switch strategies available:
 24787                           ; Name         Instructions Cycles
 24788                           ; simple_byte            4     3 (average)
 24789                           ;	Chosen strategy is simple_byte
 24790  007290  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 24791  007292  0A00               	xorlw	0	; case 0
 24792  007294  A4D8               	btfss	status,2,c
 24793  007296  D00A               	goto	l16134
 24794                           
 24795                           ; Switch size 1, requested type "simple"
 24796                           ; Number of cases is 3, Range of values is 0 to 2
 24797                           ; switch strategies available:
 24798                           ; Name         Instructions Cycles
 24799                           ; simple_byte           10     6 (average)
 24800                           ;	Chosen strategy is simple_byte
 24801  007298  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 24802  00729A  0A00               	xorlw	0	; case 0
 24803  00729C  B4D8               	btfsc	status,2,c
 24804  00729E  D7DD               	goto	l16118
 24805  0072A0  0A01               	xorlw	1	; case 1
 24806  0072A2  B4D8               	btfsc	status,2,c
 24807  0072A4  D003               	goto	l16134
 24808  0072A6  0A03               	xorlw	3	; case 2
 24809  0072A8  B4D8               	btfsc	status,2,c
 24810  0072AA  D7E0               	goto	l16124
 24811  0072AC                     l16134:
 24812                           
 24813                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 24814  0072AC  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 24815  0072B2  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 24816  0072B8  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 24817  0072BE  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 24818  0072C4                     l16136:
 24819  0072C4  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24820  0072C6  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24821  0072C8  B4D8               	btfsc	status,2,c
 24822  0072CA  0012               	return	
 24823  0072CC  D7D8               	goto	l16132
 24824  0072CE                     __end_of_nwkDataReqTaskHandler:
 24825                           	opt callstack 0
 24826                           
 24827 ;; *************** function _nwkDataReqSendFrame *****************
 24828 ;; Defined at:
 24829 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 24830 ;; Parameters:    Size  Location     Type
 24831 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 24832 ;;		 -> NULL(0), tx_buffer(524), 
 24833 ;; Auto vars:     Size  Location     Type
 24834 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 24835 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24836 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 24837 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24838 ;; Return value:  Size  Location     Type
 24839 ;;                  1    wreg      void 
 24840 ;; Registers used:
 24841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24842 ;; Tracked objects:
 24843 ;;		On entry : 0/0
 24844 ;;		On exit  : 0/0
 24845 ;;		Unchanged: 0/0
 24846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24848 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24850 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24851 ;;Total ram usage:        7 bytes
 24852 ;; Hardware stack levels used:    1
 24853 ;; Hardware stack levels required when called:   11
 24854 ;; This function calls:
 24855 ;;		_memcpy
 24856 ;;		_nwkFrameAlloc
 24857 ;;		_nwkTxFrame
 24858 ;; This function is called by:
 24859 ;;		_nwkDataReqTaskHandler
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text155
 24864  001CE8                     __ptext155:
 24865                           	opt callstack 0
 24866  001CE8                     _nwkDataReqSendFrame:
 24867                           	opt callstack 16
 24868                           
 24869                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24870                           
 24871                           ;incstack = 0
 24872  001CE8  ECDF  F032         	call	_nwkFrameAlloc	;wreg free
 24873  001CEC  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 24874  001CF2  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 24875  001CF8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24876  001CFA  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24877  001CFC  A4D8               	btfss	status,2,c
 24878  001CFE  D011               	goto	l15368
 24879                           
 24880                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 24881  001D00  EE20 F004          	lfsr	2,4
 24882  001D04  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24883  001D06  26D9               	addwf	fsr2l,f,c
 24884  001D08  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24885  001D0A  22DA               	addwfc	fsr2h,f,c
 24886  001D0C  0E02               	movlw	2
 24887  001D0E  6EDF               	movwf	indf2,c
 24888                           
 24889                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 24890  001D10  EE20 F011          	lfsr	2,17
 24891  001D14  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24892  001D16  26D9               	addwf	fsr2l,f,c
 24893  001D18  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24894  001D1A  22DA               	addwfc	fsr2h,f,c
 24895  001D1C  0E02               	movlw	2
 24896  001D1E  6EDF               	movwf	indf2,c
 24897  001D20  0012               	return	
 24898  001D22                     l15368:
 24899                           
 24900                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 24901  001D22  EE20 F002          	lfsr	2,2
 24902  001D26  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24903  001D28  26D9               	addwf	fsr2l,f,c
 24904  001D2A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24905  001D2C  22DA               	addwfc	fsr2h,f,c
 24906  001D2E  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 24907  001D34  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 24908                           
 24909                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 24910  001D3A  EE20 F004          	lfsr	2,4
 24911  001D3E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24912  001D40  26D9               	addwf	fsr2l,f,c
 24913  001D42  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24914  001D44  22DA               	addwfc	fsr2h,f,c
 24915  001D46  0E01               	movlw	1
 24916  001D48  6EDF               	movwf	indf2,c
 24917                           
 24918                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 24919  001D4A  EE20 F087          	lfsr	2,135
 24920  001D4E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24921  001D50  26D9               	addwf	fsr2l,f,c
 24922  001D52  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24923  001D54  22DA               	addwfc	fsr2h,f,c
 24924  001D56  0E7A               	movlw	low _nwkDataReqTxConf
 24925  001D58  6EDE               	movwf	postinc2,c
 24926  001D5A  0E68               	movlw	high _nwkDataReqTxConf
 24927  001D5C  6EDD               	movwf	postdec2,c
 24928                           
 24929                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 24930  001D5E  EE20 F086          	lfsr	2,134
 24931  001D62  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24932  001D64  26D9               	addwf	fsr2l,f,c
 24933  001D66  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24934  001D68  22DA               	addwfc	fsr2h,f,c
 24935  001D6A  EE10 F009          	lfsr	1,9
 24936  001D6E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24937  001D70  26E1               	addwf	fsr1l,f,c
 24938  001D72  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24939  001D74  22E2               	addwfc	fsr1h,f,c
 24940  001D76  A4E7               	btfss	indf1,2,c
 24941  001D78  D002               	goto	u15290
 24942  001D7A  0E01               	movlw	1
 24943  001D7C  D001               	goto	u15300
 24944  001D7E                     u15290:
 24945  001D7E  0E00               	movlw	0
 24946  001D80                     u15300:
 24947  001D80  6EDF               	movwf	indf2,c
 24948                           
 24949                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 24950  001D82  EE20 F009          	lfsr	2,9
 24951  001D86  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24952  001D88  26D9               	addwf	fsr2l,f,c
 24953  001D8A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24954  001D8C  22DA               	addwfc	fsr2h,f,c
 24955  001D8E  A0DF               	btfss	indf2,0,c
 24956  001D90  D003               	goto	u15310
 24957  001D92  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24958  001D94  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24959  001D96  D001               	goto	u15328
 24960  001D98                     u15310:
 24961  001D98  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24962  001D9A                     u15328:
 24963  001D9A  EE20 F00B          	lfsr	2,11
 24964  001D9E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24965  001DA0  26D9               	addwf	fsr2l,f,c
 24966  001DA2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24967  001DA4  22DA               	addwfc	fsr2h,f,c
 24968  001DA6  50DF               	movf	indf2,w,c
 24969  001DA8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24970  001DAA  0BFE               	andlw	-2
 24971  001DAC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24972  001DAE  6EDF               	movwf	indf2,c
 24973                           
 24974                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 24975  001DB0  EE20 F009          	lfsr	2,9
 24976  001DB4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24977  001DB6  26D9               	addwf	fsr2l,f,c
 24978  001DB8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24979  001DBA  22DA               	addwfc	fsr2h,f,c
 24980  001DBC  A6DF               	btfss	indf2,3,c
 24981  001DBE  D003               	goto	u15330
 24982  001DC0  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24983  001DC2  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24984  001DC4  D001               	goto	u15348
 24985  001DC6                     u15330:
 24986  001DC6  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24987  001DC8                     u15348:
 24988  001DC8  EE20 F00B          	lfsr	2,11
 24989  001DCC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24990  001DCE  26D9               	addwf	fsr2l,f,c
 24991  001DD0  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24992  001DD2  22DA               	addwfc	fsr2h,f,c
 24993  001DD4  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24994  001DD6  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24995  001DD8  50DF               	movf	indf2,w,c
 24996  001DDA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24997  001DDC  0BFB               	andlw	-5
 24998  001DDE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24999  001DE0  6EDF               	movwf	indf2,c
 25000                           
 25001                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 25002  001DE2  EE20 F009          	lfsr	2,9
 25003  001DE6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25004  001DE8  26D9               	addwf	fsr2l,f,c
 25005  001DEA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25006  001DEC  22DA               	addwfc	fsr2h,f,c
 25007  001DEE  A8DF               	btfss	indf2,4,c
 25008  001DF0  D003               	goto	u15350
 25009  001DF2  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25010  001DF4  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25011  001DF6  D001               	goto	u15368
 25012  001DF8                     u15350:
 25013  001DF8  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25014  001DFA                     u15368:
 25015  001DFA  EE20 F00B          	lfsr	2,11
 25016  001DFE  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25017  001E00  26D9               	addwf	fsr2l,f,c
 25018  001E02  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25019  001E04  22DA               	addwfc	fsr2h,f,c
 25020  001E06  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25021  001E08  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25022  001E0A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25023  001E0C  50DF               	movf	indf2,w,c
 25024  001E0E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25025  001E10  0BF7               	andlw	-9
 25026  001E12  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25027  001E14  6EDF               	movwf	indf2,c
 25028                           
 25029                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 25030  001E16  EE20 F00B          	lfsr	2,11
 25031  001E1A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25032  001E1C  26D9               	addwf	fsr2l,f,c
 25033  001E1E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25034  001E20  22DA               	addwfc	fsr2h,f,c
 25035  001E22  A6DF               	btfss	indf2,3,c
 25036  001E24  D06C               	goto	l1806
 25037                           
 25038                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 25039  001E26  EE20 F081          	lfsr	2,129
 25040  001E2A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25041  001E2C  26D9               	addwf	fsr2l,f,c
 25042  001E2E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25043  001E30  22DA               	addwfc	fsr2h,f,c
 25044  001E32  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 25045  001E38  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 25046                           
 25047                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 25048  001E3E  EE20 F00A          	lfsr	2,10
 25049  001E42  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25050  001E44  26D9               	addwf	fsr2l,f,c
 25051  001E46  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25052  001E48  22DA               	addwfc	fsr2h,f,c
 25053  001E4A  50DF               	movf	indf2,w,c
 25054  001E4C  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25055  001E4E  EE20 F001          	lfsr	2,1
 25056  001E52  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 25057  001E54  26D9               	addwf	fsr2l,f,c
 25058  001E56  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 25059  001E58  22DA               	addwfc	fsr2h,f,c
 25060  001E5A  50DF               	movf	indf2,w,c
 25061  001E5C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25062  001E5E  0BF0               	andlw	-16
 25063  001E60  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25064  001E62  6EDF               	movwf	indf2,c
 25065                           
 25066                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 25067  001E64  EE20 F00A          	lfsr	2,10
 25068  001E68  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25069  001E6A  26D9               	addwf	fsr2l,f,c
 25070  001E6C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25071  001E6E  22DA               	addwfc	fsr2h,f,c
 25072  001E70  50DF               	movf	indf2,w,c
 25073  001E72  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25074  001E74  EE20 F001          	lfsr	2,1
 25075  001E78  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 25076  001E7A  26D9               	addwf	fsr2l,f,c
 25077  001E7C  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 25078  001E7E  22DA               	addwfc	fsr2h,f,c
 25079  001E80  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25080  001E82  50DF               	movf	indf2,w,c
 25081  001E84  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25082  001E86  0B0F               	andlw	-241
 25083  001E88  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25084  001E8A  6EDF               	movwf	indf2,c
 25085                           
 25086                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 25087  001E8C  EE20 F00B          	lfsr	2,11
 25088  001E90  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25089  001E92  26D9               	addwf	fsr2l,f,c
 25090  001E94  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25091  001E96  22DA               	addwfc	fsr2h,f,c
 25092  001E98  50DF               	movf	indf2,w,c
 25093  001E9A  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25094  001E9C  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25095  001EA2  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25096  001EA8  50DF               	movf	indf2,w,c
 25097  001EAA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25098  001EAC  0BF0               	andlw	-16
 25099  001EAE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25100  001EB0  6EDF               	movwf	indf2,c
 25101                           
 25102                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 25103  001EB2  EE20 F00B          	lfsr	2,11
 25104  001EB6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25105  001EB8  26D9               	addwf	fsr2l,f,c
 25106  001EBA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25107  001EBC  22DA               	addwfc	fsr2h,f,c
 25108  001EBE  50DF               	movf	indf2,w,c
 25109  001EC0  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25110  001EC2  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25111  001EC8  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25112  001ECE  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25113  001ED0  50DF               	movf	indf2,w,c
 25114  001ED2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25115  001ED4  0B0F               	andlw	-241
 25116  001ED6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25117  001ED8  6EDF               	movwf	indf2,c
 25118                           
 25119                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 25120  001EDA  EE20 F081          	lfsr	2,129
 25121  001EDE  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25122  001EE0  26D9               	addwf	fsr2l,f,c
 25123  001EE2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25124  001EE4  22DA               	addwfc	fsr2h,f,c
 25125  001EE6  0E02               	movlw	2
 25126  001EE8  26DE               	addwf	postinc2,f,c
 25127  001EEA  0E00               	movlw	0
 25128  001EEC  22DD               	addwfc	postdec2,f,c
 25129                           
 25130                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 25131  001EEE  EE20 F001          	lfsr	2,1
 25132  001EF2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25133  001EF4  26D9               	addwf	fsr2l,f,c
 25134  001EF6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25135  001EF8  22DA               	addwfc	fsr2h,f,c
 25136  001EFA  0E02               	movlw	2
 25137  001EFC  26DF               	addwf	indf2,f,c
 25138  001EFE                     l1806:
 25139                           
 25140                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 25141  001EFE  0101               	movlb	1	; () banked
 25142  001F00  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 25143  001F02  EE20 F00C          	lfsr	2,12
 25144  001F06  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25145  001F08  26D9               	addwf	fsr2l,f,c
 25146  001F0A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25147  001F0C  22DA               	addwfc	fsr2h,f,c
 25148  001F0E  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 25149                           
 25150                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 25151  001F14  EE20 F00D          	lfsr	2,13
 25152  001F18  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25153  001F1A  26D9               	addwf	fsr2l,f,c
 25154  001F1C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25155  001F1E  22DA               	addwfc	fsr2h,f,c
 25156  001F20  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25157  001F26  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 25161  001F2C  EE20 F005          	lfsr	2,5
 25162  001F30  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25163  001F32  26D9               	addwf	fsr2l,f,c
 25164  001F34  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25165  001F36  22DA               	addwfc	fsr2h,f,c
 25166  001F38  EE10 F00F          	lfsr	1,15
 25167  001F3C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25168  001F3E  26E1               	addwf	fsr1l,f,c
 25169  001F40  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25170  001F42  22E2               	addwfc	fsr1h,f,c
 25171  001F44  006F FF7B FFE6     	movff	postinc2,postinc1
 25172  001F4A  006F FF77 FFE5     	movff	postdec2,postdec1
 25173                           
 25174                           ; BSR set to: 1
 25175                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 25176  001F50  EE20 F008          	lfsr	2,8
 25177  001F54  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25178  001F56  26D9               	addwf	fsr2l,f,c
 25179  001F58  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25180  001F5A  22DA               	addwfc	fsr2h,f,c
 25181  001F5C  50DF               	movf	indf2,w,c
 25182  001F5E  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25183  001F60  EE20 F011          	lfsr	2,17
 25184  001F64  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25185  001F66  26D9               	addwf	fsr2l,f,c
 25186  001F68  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25187  001F6A  22DA               	addwfc	fsr2h,f,c
 25188  001F6C  50DF               	movf	indf2,w,c
 25189  001F6E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25190  001F70  0BF0               	andlw	-16
 25191  001F72  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25192  001F74  6EDF               	movwf	indf2,c
 25193                           
 25194                           ; BSR set to: 1
 25195                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 25196  001F76  EE20 F007          	lfsr	2,7
 25197  001F7A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25198  001F7C  26D9               	addwf	fsr2l,f,c
 25199  001F7E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25200  001F80  22DA               	addwfc	fsr2h,f,c
 25201  001F82  50DF               	movf	indf2,w,c
 25202  001F84  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25203  001F86  EE20 F011          	lfsr	2,17
 25204  001F8A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25205  001F8C  26D9               	addwf	fsr2l,f,c
 25206  001F8E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25207  001F90  22DA               	addwfc	fsr2h,f,c
 25208  001F92  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25209  001F94  50DF               	movf	indf2,w,c
 25210  001F96  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25211  001F98  0B0F               	andlw	-241
 25212  001F9A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25213  001F9C  6EDF               	movwf	indf2,c
 25214                           
 25215                           ; BSR set to: 1
 25216                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 25217  001F9E  EE20 F081          	lfsr	2,129
 25218  001FA2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25219  001FA4  26D9               	addwf	fsr2l,f,c
 25220  001FA6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25221  001FA8  22DA               	addwfc	fsr2h,f,c
 25222  001FAA  006F FF78  F008    	movff	postinc2,memcpy@d1
 25223  001FB0  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 25224  001FB6  EE20 F00C          	lfsr	2,12
 25225  001FBA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25226  001FBC  26D9               	addwf	fsr2l,f,c
 25227  001FBE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25228  001FC0  22DA               	addwfc	fsr2h,f,c
 25229  001FC2  006F FF78  F00A    	movff	postinc2,memcpy@s1
 25230  001FC8  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 25231  001FCE  EE20 F00E          	lfsr	2,14
 25232  001FD2  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25233  001FD4  26D9               	addwf	fsr2l,f,c
 25234  001FD6  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25235  001FD8  22DA               	addwfc	fsr2h,f,c
 25236  001FDA  50DF               	movf	indf2,w,c
 25237  001FDC  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25238  001FDE  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25239  001FE0  6E0C               	movwf	memcpy@n^0,c
 25240  001FE2  6A0D               	clrf	(memcpy@n+1)^0,c
 25241  001FE4  ECE5  F039         	call	_memcpy	;wreg free
 25242                           
 25243                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 25244  001FE8  EE20 F00E          	lfsr	2,14
 25245  001FEC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25246  001FEE  26D9               	addwf	fsr2l,f,c
 25247  001FF0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25248  001FF2  22DA               	addwfc	fsr2h,f,c
 25249  001FF4  50DF               	movf	indf2,w,c
 25250  001FF6  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25251  001FF8  EE20 F001          	lfsr	2,1
 25252  001FFC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25253  001FFE  26D9               	addwf	fsr2l,f,c
 25254  002000  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25255  002002  22DA               	addwfc	fsr2h,f,c
 25256  002004  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25257  002006  26DF               	addwf	indf2,f,c
 25258                           
 25259                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 25260  002008  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 25261  00200E  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 25262  002014  ECBB  F01D         	call	_nwkTxFrame	;wreg free
 25263  002018  0012               	return		;funcret
 25264  00201A                     __end_of_nwkDataReqSendFrame:
 25265                           	opt callstack 0
 25266                           
 25267 ;; *************** function _nwkTxFrame *****************
 25268 ;; Defined at:
 25269 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 25272 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25273 ;; Auto vars:     Size  Location     Type
 25274 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 25275 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25276 ;; Return value:  Size  Location     Type
 25277 ;;                  1    wreg      void 
 25278 ;; Registers used:
 25279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25280 ;; Tracked objects:
 25281 ;;		On entry : 0/1
 25282 ;;		On exit  : 3E/0
 25283 ;;		Unchanged: 0/0
 25284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25289 ;;Total ram usage:        6 bytes
 25290 ;; Hardware stack levels used:    1
 25291 ;; Hardware stack levels required when called:   10
 25292 ;; This function calls:
 25293 ;;		_nwkRoutePrepareTx
 25294 ;;		_rand
 25295 ;; This function is called by:
 25296 ;;		_nwkDataReqSendFrame
 25297 ;;		_nwkRouteFrame
 25298 ;;		_nwkRouteSendRouteError
 25299 ;;		_nwkRxSendAck
 25300 ;; This function uses a non-reentrant model
 25301 ;;
 25302                           
 25303                           	psect	text156
 25304  003B76                     __ptext156:
 25305                           	opt callstack 0
 25306  003B76                     _nwkTxFrame:
 25307                           	opt callstack 15
 25308                           
 25309                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 25310                           
 25311                           ;incstack = 0
 25312  003B76  0E02               	movlw	2
 25313  003B78  2424               	addwf	nwkTxFrame@frame^0,w,c
 25314  003B7A  6E28               	movwf	nwkTxFrame@header^0,c
 25315  003B7C  0E00               	movlw	0
 25316  003B7E  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 25317  003B80  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 25318                           
 25319                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 25320  003B82  EE20 F086          	lfsr	2,134
 25321  003B86  5024               	movf	nwkTxFrame@frame^0,w,c
 25322  003B88  26D9               	addwf	fsr2l,f,c
 25323  003B8A  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25324  003B8C  22DA               	addwfc	fsr2h,f,c
 25325  003B8E  A2DF               	btfss	indf2,1,c
 25326  003B90  D000               	goto	u7950
 25327  003B92                     u7950:
 25328                           
 25329                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 25330                           
 25331                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 25332                           
 25333                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 25334  003B92  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 25335  003B98  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 25336  003B9E  0E12               	movlw	18
 25337  003BA0  6EDF               	movwf	indf2,c
 25338                           
 25339                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 25340  003BA2  EE20 F083          	lfsr	2,131
 25341  003BA6  5024               	movf	nwkTxFrame@frame^0,w,c
 25342  003BA8  26D9               	addwf	fsr2l,f,c
 25343  003BAA  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25344  003BAC  22DA               	addwfc	fsr2h,f,c
 25345  003BAE  0E00               	movlw	0
 25346  003BB0  6EDF               	movwf	indf2,c
 25347                           
 25348                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 25349  003BB2  EE20 F086          	lfsr	2,134
 25350  003BB6  5024               	movf	nwkTxFrame@frame^0,w,c
 25351  003BB8  26D9               	addwf	fsr2l,f,c
 25352  003BBA  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25353  003BBC  22DA               	addwfc	fsr2h,f,c
 25354  003BBE  A0DF               	btfss	indf2,0,c
 25355  003BC0  D00B               	goto	l9898
 25356                           
 25357                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 25358  003BC2  EE20 F003          	lfsr	2,3
 25359  003BC6  5028               	movf	nwkTxFrame@header^0,w,c
 25360  003BC8  26D9               	addwf	fsr2l,f,c
 25361  003BCA  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25362  003BCC  22DA               	addwfc	fsr2h,f,c
 25363  003BCE  0EFF               	movlw	255
 25364  003BD0  6EDE               	movwf	postinc2,c
 25365  003BD2  0EFF               	movlw	255
 25366  003BD4  6EDD               	movwf	postdec2,c
 25367  003BD6  D00C               	goto	l2324
 25368  003BD8                     l9898:
 25369                           
 25370                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 25371  003BD8  EE20 F003          	lfsr	2,3
 25372  003BDC  5028               	movf	nwkTxFrame@header^0,w,c
 25373  003BDE  26D9               	addwf	fsr2l,f,c
 25374  003BE0  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25375  003BE2  22DA               	addwfc	fsr2h,f,c
 25376  003BE4  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 25377  003BEA  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 25378  003BF0                     l2324:
 25379                           
 25380                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 25381  003BF0  EE20 F086          	lfsr	2,134
 25382  003BF4  5024               	movf	nwkTxFrame@frame^0,w,c
 25383  003BF6  26D9               	addwf	fsr2l,f,c
 25384  003BF8  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25385  003BFA  22DA               	addwfc	fsr2h,f,c
 25386  003BFC  B4DF               	btfsc	indf2,2,c
 25387  003BFE  D011               	goto	l9904
 25388  003C00  EE20 F086          	lfsr	2,134
 25389  003C04  5024               	movf	nwkTxFrame@frame^0,w,c
 25390  003C06  26D9               	addwf	fsr2l,f,c
 25391  003C08  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25392  003C0A  22DA               	addwfc	fsr2h,f,c
 25393  003C0C  B0DF               	btfsc	indf2,0,c
 25394  003C0E  D009               	goto	l9904
 25395                           
 25396                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 25397  003C10  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 25398  003C16  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 25399  003C1C  ECCE  F027         	call	_nwkRoutePrepareTx	;wreg free
 25400  003C20  D012               	goto	l9906
 25401  003C22                     l9904:
 25402                           
 25403                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 25404  003C22  EE20 F00D          	lfsr	2,13
 25405  003C26  5028               	movf	nwkTxFrame@header^0,w,c
 25406  003C28  26D9               	addwf	fsr2l,f,c
 25407  003C2A  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25408  003C2C  22DA               	addwfc	fsr2h,f,c
 25409  003C2E  EE10 F005          	lfsr	1,5
 25410  003C32  5028               	movf	nwkTxFrame@header^0,w,c
 25411  003C34  26E1               	addwf	fsr1l,f,c
 25412  003C36  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25413  003C38  22E2               	addwfc	fsr1h,f,c
 25414  003C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 25415  003C40  006F FF77 FFE5     	movff	postdec2,postdec1
 25416  003C46                     l9906:
 25417                           
 25418                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 25419  003C46  EE20 F007          	lfsr	2,7
 25420  003C4A  5028               	movf	nwkTxFrame@header^0,w,c
 25421  003C4C  26D9               	addwf	fsr2l,f,c
 25422  003C4E  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25423  003C50  22DA               	addwfc	fsr2h,f,c
 25424  003C52  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25425  003C58  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25426                           
 25427                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 25428  003C5E  0101               	movlb	1	; () banked
 25429  003C60  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 25430  003C62  EE20 F002          	lfsr	2,2
 25431  003C66  5028               	movf	nwkTxFrame@header^0,w,c
 25432  003C68  26D9               	addwf	fsr2l,f,c
 25433  003C6A  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25434  003C6C  22DA               	addwfc	fsr2h,f,c
 25435  003C6E  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 25436                           
 25437                           ; BSR set to: 1
 25438                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 25439  003C74  EE20 F005          	lfsr	2,5
 25440  003C78  5028               	movf	nwkTxFrame@header^0,w,c
 25441  003C7A  26D9               	addwf	fsr2l,f,c
 25442  003C7C  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25443  003C7E  22DA               	addwfc	fsr2h,f,c
 25444  003C80  28DE               	incf	postinc2,w,c
 25445  003C82  E124               	bnz	l9916
 25446  003C84  28DE               	incf	postinc2,w,c
 25447  003C86  A4D8               	btfss	status,2,c
 25448  003C88  D021               	goto	l9916
 25449                           
 25450                           ; BSR set to: 1
 25451                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 25452  003C8A  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25453  003C90  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25454  003C96  0E41               	movlw	65
 25455  003C98  6EDE               	movwf	postinc2,c
 25456  003C9A  0E88               	movlw	136
 25457  003C9C  6EDD               	movwf	postdec2,c
 25458                           
 25459                           ; BSR set to: 1
 25460                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 25461  003C9E  EC47  F027         	call	_rand	;wreg free
 25462  003CA2  0E07               	movlw	7
 25463  003CA4  161A               	andwf	?_rand^0,f,c
 25464  003CA6  0E00               	movlw	0
 25465  003CA8  161B               	andwf	(?_rand+1)^0,f,c
 25466  003CAA  0E01               	movlw	1
 25467  003CAC  261A               	addwf	?_rand^0,f,c
 25468  003CAE  0E00               	movlw	0
 25469  003CB0  221B               	addwfc	(?_rand+1)^0,f,c
 25470  003CB2  EE20 F084          	lfsr	2,132
 25471  003CB6  5024               	movf	nwkTxFrame@frame^0,w,c
 25472  003CB8  26D9               	addwf	fsr2l,f,c
 25473  003CBA  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25474  003CBC  22DA               	addwfc	fsr2h,f,c
 25475  003CBE  0060  F06B  FFDE   	movff	?_rand,postinc2
 25476  003CC4  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 25477                           
 25478                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 25479  003CCA  0012               	return	
 25480  003CCC                     l9916:
 25481                           
 25482                           ; BSR set to: 1
 25483                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 25484  003CCC  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25485  003CD2  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25486  003CD8  0E61               	movlw	97
 25487  003CDA  6EDE               	movwf	postinc2,c
 25488  003CDC  0E88               	movlw	136
 25489  003CDE  6EDD               	movwf	postdec2,c
 25490                           
 25491                           ; BSR set to: 1
 25492                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 25493  003CE0  EE20 F084          	lfsr	2,132
 25494  003CE4  5024               	movf	nwkTxFrame@frame^0,w,c
 25495  003CE6  26D9               	addwf	fsr2l,f,c
 25496  003CE8  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25497  003CEA  22DA               	addwfc	fsr2h,f,c
 25498  003CEC  0E00               	movlw	0
 25499  003CEE  6EDE               	movwf	postinc2,c
 25500  003CF0  0E00               	movlw	0
 25501  003CF2  6EDD               	movwf	postdec2,c
 25502  003CF4  0012               	return		;funcret
 25503  003CF6                     __end_of_nwkTxFrame:
 25504                           	opt callstack 0
 25505                           
 25506 ;; *************** function _rand *****************
 25507 ;; Defined at:
 25508 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 25509 ;; Parameters:    Size  Location     Type
 25510 ;;		None
 25511 ;; Auto vars:     Size  Location     Type
 25512 ;;		None
 25513 ;; Return value:  Size  Location     Type
 25514 ;;                  2   25[COMRAM] int 
 25515 ;; Registers used:
 25516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25517 ;; Tracked objects:
 25518 ;;		On entry : 0/1
 25519 ;;		On exit  : 3F/0
 25520 ;;		Unchanged: 0/0
 25521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25524 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25525 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25526 ;;Total ram usage:       10 bytes
 25527 ;; Hardware stack levels used:    1
 25528 ;; Hardware stack levels required when called:    8
 25529 ;; This function calls:
 25530 ;;		___omul
 25531 ;; This function is called by:
 25532 ;;		_nwkTxFrame
 25533 ;;		_nwkTxBroadcastFrame
 25534 ;; This function uses a non-reentrant model
 25535 ;;
 25536                           
 25537                           	psect	text157
 25538  004E8E                     __ptext157:
 25539                           	opt callstack 0
 25540  004E8E                     _rand:
 25541                           	opt callstack 17
 25542                           
 25543                           ;incstack = 0
 25544  004E8E  0060  F390  F002   	movff	_seed,___omul@multiplier
 25545  004E94  0060  F394  F003   	movff	_seed+1,___omul@multiplier+1
 25546  004E9A  0060  F398  F004   	movff	_seed+2,___omul@multiplier+2
 25547  004EA0  0060  F39C  F005   	movff	_seed+3,___omul@multiplier+3
 25548  004EA6  0060  F3A0  F006   	movff	_seed+4,___omul@multiplier+4
 25549  004EAC  0060  F3A4  F007   	movff	_seed+5,___omul@multiplier+5
 25550  004EB2  0060  F3A8  F008   	movff	_seed+6,___omul@multiplier+6
 25551  004EB8  0060  F3AC  F009   	movff	_seed+7,___omul@multiplier+7
 25552  004EBE  0E2D               	movlw	45
 25553  004EC0  6E0A               	movwf	___omul@multiplicand^0,c
 25554  004EC2  0E7F               	movlw	127
 25555  004EC4  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 25556  004EC6  0E95               	movlw	149
 25557  004EC8  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 25558  004ECA  0E4C               	movlw	76
 25559  004ECC  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 25560  004ECE  0E2D               	movlw	45
 25561  004ED0  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 25562  004ED2  0EF4               	movlw	244
 25563  004ED4  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 25564  004ED6  0E51               	movlw	81
 25565  004ED8  6E10               	movwf	(___omul@multiplicand+6)^0,c
 25566  004EDA  0E58               	movlw	88
 25567  004EDC  6E11               	movwf	(___omul@multiplicand+7)^0,c
 25568  004EDE  ECD3  F035         	call	___omul	;wreg free
 25569  004EE2  0060  F008  F01C   	movff	?___omul,??_rand
 25570  004EE8  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 25571  004EEE  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 25572  004EF4  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 25573  004EFA  0060  F018  F020   	movff	?___omul+4,??_rand+4
 25574  004F00  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 25575  004F06  0060  F020  F022   	movff	?___omul+6,??_rand+6
 25576  004F0C  0060  F024  F023   	movff	?___omul+7,??_rand+7
 25577  004F12  0E01               	movlw	1
 25578  004F14  241C               	addwf	??_rand^0,w,c
 25579  004F16  0100               	movlb	0	; () banked
 25580  004F18  6FE4               	movwf	_seed& (0+255),b
 25581  004F1A  0E00               	movlw	0
 25582  004F1C  201D               	addwfc	(??_rand+1)^0,w,c
 25583  004F1E  6FE5               	movwf	(_seed+1)& (0+255),b
 25584  004F20  0E00               	movlw	0
 25585  004F22  201E               	addwfc	(??_rand+2)^0,w,c
 25586  004F24  6FE6               	movwf	(_seed+2)& (0+255),b
 25587  004F26  0E00               	movlw	0
 25588  004F28  201F               	addwfc	(??_rand+3)^0,w,c
 25589  004F2A  6FE7               	movwf	(_seed+3)& (0+255),b
 25590  004F2C  0E00               	movlw	0
 25591  004F2E  2020               	addwfc	(??_rand+4)^0,w,c
 25592  004F30  6FE8               	movwf	(_seed+4)& (0+255),b
 25593  004F32  0E00               	movlw	0
 25594  004F34  2021               	addwfc	(??_rand+5)^0,w,c
 25595  004F36  6FE9               	movwf	(_seed+5)& (0+255),b
 25596  004F38  0E00               	movlw	0
 25597  004F3A  2022               	addwfc	(??_rand+6)^0,w,c
 25598  004F3C  6FEA               	movwf	(_seed+6)& (0+255),b
 25599  004F3E  0E00               	movlw	0
 25600  004F40  2023               	addwfc	(??_rand+7)^0,w,c
 25601  004F42  6FEB               	movwf	(_seed+7)& (0+255),b
 25602                           
 25603                           ; BSR set to: 0
 25604  004F44  0060  F390  F01C   	movff	_seed,??_rand
 25605  004F4A  0060  F394  F01D   	movff	_seed+1,??_rand+1
 25606  004F50  0060  F398  F01E   	movff	_seed+2,??_rand+2
 25607  004F56  0060  F39C  F01F   	movff	_seed+3,??_rand+3
 25608  004F5C  0060  F3A0  F020   	movff	_seed+4,??_rand+4
 25609  004F62  0060  F3A4  F021   	movff	_seed+5,??_rand+5
 25610  004F68  0060  F3A8  F022   	movff	_seed+6,??_rand+6
 25611  004F6E  0060  F3AC  F023   	movff	_seed+7,??_rand+7
 25612  004F74  0E32               	movlw	50
 25613  004F76  D009               	goto	u7680
 25614  004F78                     u7685:
 25615  004F78  90D8               	bcf	status,0,c
 25616  004F7A  3223               	rrcf	(??_rand+7)^0,f,c
 25617  004F7C  3222               	rrcf	(??_rand+6)^0,f,c
 25618  004F7E  3221               	rrcf	(??_rand+5)^0,f,c
 25619  004F80  3220               	rrcf	(??_rand+4)^0,f,c
 25620  004F82  321F               	rrcf	(??_rand+3)^0,f,c
 25621  004F84  321E               	rrcf	(??_rand+2)^0,f,c
 25622  004F86  321D               	rrcf	(??_rand+1)^0,f,c
 25623  004F88  321C               	rrcf	??_rand^0,f,c
 25624  004F8A                     u7680:
 25625  004F8A  2EE8               	decfsz	wreg,f,c
 25626  004F8C  D7F5               	goto	u7685
 25627  004F8E  0060  F070  F01A   	movff	??_rand,?_rand
 25628  004F94  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 25629                           
 25630                           ; BSR set to: 0
 25631  004F9A  0012               	return		;funcret
 25632  004F9C                     __end_of_rand:
 25633                           	opt callstack 0
 25634                           
 25635 ;; *************** function ___omul *****************
 25636 ;; Defined at:
 25637 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 25638 ;; Parameters:    Size  Location     Type
 25639 ;;  multiplier      8    1[COMRAM] unsigned long long 
 25640 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 25641 ;; Auto vars:     Size  Location     Type
 25642 ;;  product         8   17[COMRAM] unsigned long long 
 25643 ;; Return value:  Size  Location     Type
 25644 ;;                  8    1[COMRAM] unsigned long long 
 25645 ;; Registers used:
 25646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25647 ;; Tracked objects:
 25648 ;;		On entry : 0/1
 25649 ;;		On exit  : 0/0
 25650 ;;		Unchanged: 0/0
 25651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25652 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25653 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25655 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25656 ;;Total ram usage:       24 bytes
 25657 ;; Hardware stack levels used:    1
 25658 ;; Hardware stack levels required when called:    7
 25659 ;; This function calls:
 25660 ;;		Nothing
 25661 ;; This function is called by:
 25662 ;;		_rand
 25663 ;; This function uses a non-reentrant model
 25664 ;;
 25665                           
 25666                           	psect	text158
 25667  006BA6                     __ptext158:
 25668                           	opt callstack 0
 25669  006BA6                     ___omul:
 25670                           	opt callstack 17
 25671                           
 25672                           ; BSR set to: 0
 25673                           ;incstack = 0
 25674  006BA6  EE20  F012         	lfsr	2,___omul@product
 25675  006BAA  0E07               	movlw	7
 25676  006BAC                     u7471:
 25677  006BAC  6ADE               	clrf	postinc2,c
 25678  006BAE  06E8               	decf	wreg,f,c
 25679  006BB0  E2FD               	bc	u7471
 25680  006BB2                     l9510:
 25681  006BB2  A002               	btfss	___omul@multiplier^0,0,c
 25682  006BB4  D010               	goto	l9514
 25683  006BB6  500A               	movf	___omul@multiplicand^0,w,c
 25684  006BB8  2612               	addwf	___omul@product^0,f,c
 25685  006BBA  500B               	movf	(___omul@multiplicand+1)^0,w,c
 25686  006BBC  2213               	addwfc	(___omul@product+1)^0,f,c
 25687  006BBE  500C               	movf	(___omul@multiplicand+2)^0,w,c
 25688  006BC0  2214               	addwfc	(___omul@product+2)^0,f,c
 25689  006BC2  500D               	movf	(___omul@multiplicand+3)^0,w,c
 25690  006BC4  2215               	addwfc	(___omul@product+3)^0,f,c
 25691  006BC6  500E               	movf	(___omul@multiplicand+4)^0,w,c
 25692  006BC8  2216               	addwfc	(___omul@product+4)^0,f,c
 25693  006BCA  500F               	movf	(___omul@multiplicand+5)^0,w,c
 25694  006BCC  2217               	addwfc	(___omul@product+5)^0,f,c
 25695  006BCE  5010               	movf	(___omul@multiplicand+6)^0,w,c
 25696  006BD0  2218               	addwfc	(___omul@product+6)^0,f,c
 25697  006BD2  5011               	movf	(___omul@multiplicand+7)^0,w,c
 25698  006BD4  2219               	addwfc	(___omul@product+7)^0,f,c
 25699  006BD6                     l9514:
 25700  006BD6  90D8               	bcf	status,0,c
 25701  006BD8  360A               	rlcf	___omul@multiplicand^0,f,c
 25702  006BDA  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 25703  006BDC  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 25704  006BDE  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 25705  006BE0  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 25706  006BE2  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 25707  006BE4  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 25708  006BE6  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 25709  006BE8  90D8               	bcf	status,0,c
 25710  006BEA  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 25711  006BEC  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 25712  006BEE  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 25713  006BF0  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 25714  006BF2  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 25715  006BF4  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 25716  006BF6  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 25717  006BF8  3202               	rrcf	___omul@multiplier^0,f,c
 25718  006BFA  5002               	movf	___omul@multiplier^0,w,c
 25719  006BFC  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 25720  006BFE  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 25721  006C00  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 25722  006C02  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 25723  006C04  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 25724  006C06  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 25725  006C08  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 25726  006C0A  A4D8               	btfss	status,2,c
 25727  006C0C  D7D2               	goto	l9510
 25728  006C0E  0060  F048  F002   	movff	___omul@product,?___omul
 25729  006C14  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 25730  006C1A  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 25731  006C20  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 25732  006C26  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 25733  006C2C  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 25734  006C32  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 25735  006C38  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 25736  006C3E  0012               	return		;funcret
 25737  006C40                     __end_of___omul:
 25738                           	opt callstack 0
 25739                           
 25740 ;; *************** function _nwkRoutePrepareTx *****************
 25741 ;; Defined at:
 25742 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 25743 ;; Parameters:    Size  Location     Type
 25744 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 25745 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25746 ;; Auto vars:     Size  Location     Type
 25747 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 25748 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25749 ;; Return value:  Size  Location     Type
 25750 ;;                  1    wreg      void 
 25751 ;; Registers used:
 25752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25753 ;; Tracked objects:
 25754 ;;		On entry : 0/1
 25755 ;;		On exit  : 0/0
 25756 ;;		Unchanged: 0/0
 25757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25761 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25762 ;;Total ram usage:        6 bytes
 25763 ;; Hardware stack levels used:    1
 25764 ;; Hardware stack levels required when called:    9
 25765 ;; This function calls:
 25766 ;;		_NWK_GroupIsMember
 25767 ;;		_NWK_RouteNextHop
 25768 ;; This function is called by:
 25769 ;;		_nwkTxFrame
 25770 ;; This function uses a non-reentrant model
 25771 ;;
 25772                           
 25773                           	psect	text159
 25774  004F9C                     __ptext159:
 25775                           	opt callstack 0
 25776  004F9C                     _nwkRoutePrepareTx:
 25777                           	opt callstack 15
 25778                           
 25779                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 25780                           
 25781                           ;incstack = 0
 25782  004F9C  0E02               	movlw	2
 25783  004F9E  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 25784  004FA0  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 25785  004FA2  0E00               	movlw	0
 25786  004FA4  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 25787  004FA6  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 25788                           
 25789                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 25790  004FA8  EE20 F00D          	lfsr	2,13
 25791  004FAC  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25792  004FAE  26D9               	addwf	fsr2l,f,c
 25793  004FB0  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25794  004FB2  22DA               	addwfc	fsr2h,f,c
 25795  004FB4  28DE               	incf	postinc2,w,c
 25796  004FB6  E10E               	bnz	l9584
 25797  004FB8  28DE               	incf	postinc2,w,c
 25798  004FBA  A4D8               	btfss	status,2,c
 25799  004FBC  D00B               	goto	l9584
 25800                           
 25801                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 25802  004FBE  EE20 F005          	lfsr	2,5
 25803  004FC2  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25804  004FC4  26D9               	addwf	fsr2l,f,c
 25805  004FC6  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25806  004FC8  22DA               	addwfc	fsr2h,f,c
 25807  004FCA  0EFF               	movlw	255
 25808  004FCC  6EDE               	movwf	postinc2,c
 25809  004FCE  0EFF               	movlw	255
 25810  004FD0  6EDD               	movwf	postdec2,c
 25811                           
 25812                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 25813  004FD2  0012               	return	
 25814  004FD4                     l9584:
 25815  004FD4  EE20 F009          	lfsr	2,9
 25816  004FD8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25817  004FDA  26D9               	addwf	fsr2l,f,c
 25818  004FDC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25819  004FDE  22DA               	addwfc	fsr2h,f,c
 25820  004FE0  A4DF               	btfss	indf2,2,c
 25821  004FE2  D013               	goto	l9588
 25822                           
 25823                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 25824  004FE4  EE20 F00D          	lfsr	2,13
 25825  004FE8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25826  004FEA  26D9               	addwf	fsr2l,f,c
 25827  004FEC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25828  004FEE  22DA               	addwfc	fsr2h,f,c
 25829  004FF0  EE10 F005          	lfsr	1,5
 25830  004FF4  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25831  004FF6  26E1               	addwf	fsr1l,f,c
 25832  004FF8  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25833  004FFA  22E2               	addwfc	fsr1h,f,c
 25834  004FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 25835  005002  006F FF77 FFE5     	movff	postdec2,postdec1
 25836                           
 25837                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 25838  005008  0012               	return	
 25839  00500A                     l9588:
 25840  00500A  EE20 F009          	lfsr	2,9
 25841  00500E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25842  005010  26D9               	addwf	fsr2l,f,c
 25843  005012  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25844  005014  22DA               	addwfc	fsr2h,f,c
 25845  005016  A6DF               	btfss	indf2,3,c
 25846  005018  D023               	goto	l9594
 25847  00501A  EE20 F00D          	lfsr	2,13
 25848  00501E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25849  005020  26D9               	addwf	fsr2l,f,c
 25850  005022  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25851  005024  22DA               	addwfc	fsr2h,f,c
 25852  005026  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 25853  00502C  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 25854  005032  EC70  F043         	call	_NWK_GroupIsMember	;wreg free
 25855  005036  0900               	iorlw	0
 25856  005038  B4D8               	btfsc	status,2,c
 25857  00503A  D012               	goto	l9594
 25858                           
 25859                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 25860  00503C  EE20 F005          	lfsr	2,5
 25861  005040  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25862  005042  26D9               	addwf	fsr2l,f,c
 25863  005044  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25864  005046  22DA               	addwfc	fsr2h,f,c
 25865  005048  0EFF               	movlw	255
 25866  00504A  6EDE               	movwf	postinc2,c
 25867  00504C  0EFF               	movlw	255
 25868  00504E  6EDD               	movwf	postdec2,c
 25869                           
 25870                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 25871  005050  EE20 F009          	lfsr	2,9
 25872  005054  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25873  005056  26D9               	addwf	fsr2l,f,c
 25874  005058  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25875  00505A  22DA               	addwfc	fsr2h,f,c
 25876  00505C  84DF               	bsf	indf2,2,c
 25877                           
 25878                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 25879  00505E  0012               	return	
 25880  005060                     l9594:
 25881                           
 25882                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 25883  005060  EE20 F00D          	lfsr	2,13
 25884  005064  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25885  005066  26D9               	addwf	fsr2l,f,c
 25886  005068  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25887  00506A  22DA               	addwfc	fsr2h,f,c
 25888  00506C  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 25889  005072  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 25890  005078  EE20 F009          	lfsr	2,9
 25891  00507C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25892  00507E  26D9               	addwf	fsr2l,f,c
 25893  005080  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25894  005082  22DA               	addwfc	fsr2h,f,c
 25895  005084  0E00               	movlw	0
 25896  005086  B6DF               	btfsc	indf2,3,c
 25897  005088  0E01               	movlw	1
 25898  00508A  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 25899  00508C  EC4F  F03F         	call	_NWK_RouteNextHop	;wreg free
 25900  005090  EE20 F005          	lfsr	2,5
 25901  005094  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25902  005096  26D9               	addwf	fsr2l,f,c
 25903  005098  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25904  00509A  22DA               	addwfc	fsr2h,f,c
 25905  00509C  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 25906  0050A2  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 25907  0050A8  0012               	return		;funcret
 25908  0050AA                     __end_of_nwkRoutePrepareTx:
 25909                           	opt callstack 0
 25910                           
 25911 ;; *************** function _NWK_RouteNextHop *****************
 25912 ;; Defined at:
 25913 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 25914 ;; Parameters:    Size  Location     Type
 25915 ;;  dst             2    7[COMRAM] unsigned short 
 25916 ;;  multicast       1    9[COMRAM] unsigned char 
 25917 ;; Auto vars:     Size  Location     Type
 25918 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 25919 ;;		 -> nwkRouteTable(70), NULL(0), 
 25920 ;; Return value:  Size  Location     Type
 25921 ;;                  2    7[COMRAM] unsigned short 
 25922 ;; Registers used:
 25923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25924 ;; Tracked objects:
 25925 ;;		On entry : 0/0
 25926 ;;		On exit  : 0/0
 25927 ;;		Unchanged: 0/0
 25928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25929 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25933 ;;Total ram usage:        5 bytes
 25934 ;; Hardware stack levels used:    1
 25935 ;; Hardware stack levels required when called:    8
 25936 ;; This function calls:
 25937 ;;		_NWK_RouteFindEntry
 25938 ;; This function is called by:
 25939 ;;		_nwkRoutePrepareTx
 25940 ;;		_nwkRouteFrame
 25941 ;; This function uses a non-reentrant model
 25942 ;;
 25943                           
 25944                           	psect	text160
 25945  007E9E                     __ptext160:
 25946                           	opt callstack 0
 25947  007E9E                     _NWK_RouteNextHop:
 25948                           	opt callstack 15
 25949                           
 25950                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 25951                           
 25952                           ;incstack = 0
 25953  007E9E  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 25954  007EA4  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 25955  007EAA  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 25956  007EB0  EC2D  F03B         	call	_NWK_RouteFindEntry	;wreg free
 25957  007EB4  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 25958  007EBA  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 25959                           
 25960                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 25961  007EC0  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25962  007EC2  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 25963  007EC4  B4D8               	btfsc	status,2,c
 25964  007EC6  D00D               	goto	l1944
 25965                           
 25966                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 25967  007EC8  EE20 F003          	lfsr	2,3
 25968  007ECC  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25969  007ECE  26D9               	addwf	fsr2l,f,c
 25970  007ED0  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 25971  007ED2  22DA               	addwfc	fsr2h,f,c
 25972  007ED4  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 25973  007EDA  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 25974  007EE0  0012               	return	
 25975  007EE2                     l1944:
 25976                           
 25977                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 25978  007EE2  6808               	setf	?_NWK_RouteNextHop^0,c
 25979  007EE4  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 25980  007EE6  0012               	return		;funcret
 25981  007EE8                     __end_of_NWK_RouteNextHop:
 25982                           	opt callstack 0
 25983                           
 25984 ;; *************** function _NWK_RouteFindEntry *****************
 25985 ;; Defined at:
 25986 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 25987 ;; Parameters:    Size  Location     Type
 25988 ;;  dst             2    1[COMRAM] unsigned short 
 25989 ;;  multicast       1    3[COMRAM] unsigned char 
 25990 ;; Auto vars:     Size  Location     Type
 25991 ;;  i               1    6[COMRAM] unsigned char 
 25992 ;; Return value:  Size  Location     Type
 25993 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 25994 ;; Registers used:
 25995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25996 ;; Tracked objects:
 25997 ;;		On entry : 0/0
 25998 ;;		On exit  : 0/0
 25999 ;;		Unchanged: 0/0
 26000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26001 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26005 ;;Total ram usage:        6 bytes
 26006 ;; Hardware stack levels used:    1
 26007 ;; Hardware stack levels required when called:    7
 26008 ;; This function calls:
 26009 ;;		Nothing
 26010 ;; This function is called by:
 26011 ;;		_NWK_RouteNextHop
 26012 ;;		_nwkRouteRemove
 26013 ;;		_nwkRouteFrameReceived
 26014 ;;		_nwkRouteFrameSent
 26015 ;; This function uses a non-reentrant model
 26016 ;;
 26017                           
 26018                           	psect	text161
 26019  00765A                     __ptext161:
 26020                           	opt callstack 0
 26021  00765A                     _NWK_RouteFindEntry:
 26022                           	opt callstack 19
 26023                           
 26024                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 26025                           
 26026                           ;incstack = 0
 26027  00765A  0E00               	movlw	0
 26028  00765C  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 26029  00765E                     l9030:
 26030                           
 26031                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 26032  00765E  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26033  007660  0D07               	mullw	7
 26034  007662  0E35               	movlw	low (_nwkRouteTable+1)
 26035  007664  24F3               	addwf	243,w,c
 26036  007666  6ED9               	movwf	fsr2l,c
 26037  007668  0E02               	movlw	high (_nwkRouteTable+1)
 26038  00766A  20F4               	addwfc	prodh,w,c
 26039  00766C  6EDA               	movwf	fsr2h,c
 26040  00766E  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 26041  007670  18DE               	xorwf	postinc2,w,c
 26042  007672  E11E               	bnz	l9038
 26043  007674  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 26044  007676  18DE               	xorwf	postinc2,w,c
 26045  007678  A4D8               	btfss	status,2,c
 26046  00767A  D01A               	goto	l9038
 26047  00767C  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26048  00767E  0D07               	mullw	7
 26049  007680  0E34               	movlw	low _nwkRouteTable
 26050  007682  24F3               	addwf	243,w,c
 26051  007684  6ED9               	movwf	fsr2l,c
 26052  007686  0E02               	movlw	high _nwkRouteTable
 26053  007688  20F4               	addwfc	prodh,w,c
 26054  00768A  6EDA               	movwf	fsr2h,c
 26055  00768C  0102               	movlb	2	; () banked
 26056  00768E  A2DF               	btfss	indf2,1,c
 26057  007690  D002               	goto	u6530
 26058  007692  0E01               	movlw	1
 26059  007694  D001               	goto	u6536
 26060  007696                     u6530:
 26061  007696  0E00               	movlw	0
 26062  007698                     u6536:
 26063  007698  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 26064  00769A  A4D8               	btfss	status,2,c
 26065  00769C  D009               	goto	l9038
 26066                           
 26067                           ; BSR set to: 2
 26068                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 26069  00769E  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26070  0076A0  0D07               	mullw	7
 26071  0076A2  0E34               	movlw	low _nwkRouteTable
 26072  0076A4  24F3               	addwf	243,w,c
 26073  0076A6  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 26074  0076A8  0E02               	movlw	high _nwkRouteTable
 26075  0076AA  20F4               	addwfc	prodh,w,c
 26076  0076AC  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 26077  0076AE  0012               	return	
 26078  0076B0                     l9038:
 26079                           
 26080                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 26081  0076B0  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 26082  0076B2  0E09               	movlw	9
 26083  0076B4  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 26084  0076B6  D7D3               	goto	l9030
 26085                           
 26086                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 26087  0076B8  0E00               	movlw	0
 26088  0076BA  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 26089  0076BC  0E00               	movlw	0
 26090  0076BE  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 26091  0076C0  0012               	return		;funcret
 26092  0076C2                     __end_of_NWK_RouteFindEntry:
 26093                           	opt callstack 0
 26094                           
 26095 ;; *************** function _NWK_GroupIsMember *****************
 26096 ;; Defined at:
 26097 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 26098 ;; Parameters:    Size  Location     Type
 26099 ;;  group           2    1[COMRAM] unsigned short 
 26100 ;; Auto vars:     Size  Location     Type
 26101 ;;  i               1    5[COMRAM] unsigned char 
 26102 ;; Return value:  Size  Location     Type
 26103 ;;                  1    wreg      _Bool 
 26104 ;; Registers used:
 26105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26106 ;; Tracked objects:
 26107 ;;		On entry : 0/1
 26108 ;;		On exit  : 0/0
 26109 ;;		Unchanged: 0/0
 26110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26114 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26115 ;;Total ram usage:        5 bytes
 26116 ;; Hardware stack levels used:    1
 26117 ;; Hardware stack levels required when called:    7
 26118 ;; This function calls:
 26119 ;;		Nothing
 26120 ;; This function is called by:
 26121 ;;		_nwkRoutePrepareTx
 26122 ;;		_nwkRxHandleReceivedFrame
 26123 ;; This function uses a non-reentrant model
 26124 ;;
 26125                           
 26126                           	psect	text162
 26127  0086E0                     __ptext162:
 26128                           	opt callstack 0
 26129  0086E0                     _NWK_GroupIsMember:
 26130                           	opt callstack 19
 26131                           
 26132                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 26133                           
 26134                           ;incstack = 0
 26135  0086E0  0E00               	movlw	0
 26136  0086E2  6E06               	movwf	NWK_GroupIsMember@i^0,c
 26137  0086E4                     l9262:
 26138                           
 26139                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 26140  0086E4  5006               	movf	NWK_GroupIsMember@i^0,w,c
 26141  0086E6  0D02               	mullw	2
 26142  0086E8  0E00               	movlw	low _nwkGroups
 26143  0086EA  24F3               	addwf	243,w,c
 26144  0086EC  6ED9               	movwf	fsr2l,c
 26145  0086EE  0E02               	movlw	high _nwkGroups
 26146  0086F0  20F4               	addwfc	prodh,w,c
 26147  0086F2  6EDA               	movwf	fsr2h,c
 26148  0086F4  5002               	movf	NWK_GroupIsMember@group^0,w,c
 26149  0086F6  18DE               	xorwf	postinc2,w,c
 26150  0086F8  E106               	bnz	l9268
 26151  0086FA  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 26152  0086FC  18DE               	xorwf	postinc2,w,c
 26153  0086FE  A4D8               	btfss	status,2,c
 26154  008700  D002               	goto	l9268
 26155                           
 26156                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 26157  008702  0E01               	movlw	1
 26158  008704  0012               	return	
 26159  008706                     l9268:
 26160  008706  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 26161  008708  0E09               	movlw	9
 26162  00870A  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 26163  00870C  D7EB               	goto	l9262
 26164                           
 26165                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 26166  00870E  0E00               	movlw	0
 26167  008710  0012               	return		;funcret
 26168  008712                     __end_of_NWK_GroupIsMember:
 26169                           	opt callstack 0
 26170                           
 26171 ;; *************** function _nwkFrameAlloc *****************
 26172 ;; Defined at:
 26173 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 26174 ;; Parameters:    Size  Location     Type
 26175 ;;		None
 26176 ;; Auto vars:     Size  Location     Type
 26177 ;;  i               1   17[COMRAM] unsigned char 
 26178 ;; Return value:  Size  Location     Type
 26179 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 26180 ;; Registers used:
 26181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26182 ;; Tracked objects:
 26183 ;;		On entry : 0/0
 26184 ;;		On exit  : 0/0
 26185 ;;		Unchanged: 0/0
 26186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26190 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26191 ;;Total ram usage:        5 bytes
 26192 ;; Hardware stack levels used:    1
 26193 ;; Hardware stack levels required when called:    8
 26194 ;; This function calls:
 26195 ;;		_memset
 26196 ;; This function is called by:
 26197 ;;		_nwkDataReqSendFrame
 26198 ;;		_nwkRouteSendRouteError
 26199 ;;		_PHY_DataInd
 26200 ;;		_nwkRxSendAck
 26201 ;;		_nwkTxBroadcastFrame
 26202 ;; This function uses a non-reentrant model
 26203 ;;
 26204                           
 26205                           	psect	text163
 26206  0065BE                     __ptext163:
 26207                           	opt callstack 0
 26208  0065BE                     _nwkFrameAlloc:
 26209                           	opt callstack 17
 26210                           
 26211                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 26212                           
 26213                           ;incstack = 0
 26214  0065BE  0E00               	movlw	0
 26215  0065C0  6E12               	movwf	nwkFrameAlloc@i^0,c
 26216  0065C2                     l14432:
 26217                           
 26218                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 26219  0065C2  5012               	movf	nwkFrameAlloc@i^0,w,c
 26220  0065C4  0D89               	mullw	137
 26221  0065C6  0EBD               	movlw	low _nwkFrameFrames
 26222  0065C8  24F3               	addwf	243,w,c
 26223  0065CA  6ED9               	movwf	fsr2l,c
 26224  0065CC  0E05               	movlw	high _nwkFrameFrames
 26225  0065CE  20F4               	addwfc	prodh,w,c
 26226  0065D0  6EDA               	movwf	fsr2h,c
 26227  0065D2  50DF               	movf	indf2,w,c
 26228  0065D4  A4D8               	btfss	status,2,c
 26229  0065D6  D044               	goto	l14446
 26230                           
 26231                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 26232  0065D8  5012               	movf	nwkFrameAlloc@i^0,w,c
 26233  0065DA  0D89               	mullw	137
 26234  0065DC  0EBD               	movlw	low _nwkFrameFrames
 26235  0065DE  24F3               	addwf	243,w,c
 26236  0065E0  6E02               	movwf	memset@dest^0,c
 26237  0065E2  0E05               	movlw	high _nwkFrameFrames
 26238  0065E4  20F4               	addwfc	prodh,w,c
 26239  0065E6  6E03               	movwf	(memset@dest+1)^0,c
 26240  0065E8  0E00               	movlw	0
 26241  0065EA  6E05               	movwf	(memset@c+1)^0,c
 26242  0065EC  0E00               	movlw	0
 26243  0065EE  6E04               	movwf	memset@c^0,c
 26244  0065F0  0E00               	movlw	0
 26245  0065F2  6E07               	movwf	(memset@n+1)^0,c
 26246  0065F4  0E89               	movlw	137
 26247  0065F6  6E06               	movwf	memset@n^0,c
 26248  0065F8  ECFB  F021         	call	_memset	;wreg free
 26249                           
 26250                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 26251  0065FC  5012               	movf	nwkFrameAlloc@i^0,w,c
 26252  0065FE  0D89               	mullw	137
 26253  006600  0EBE               	movlw	low (_nwkFrameFrames+1)
 26254  006602  24F3               	addwf	243,w,c
 26255  006604  6ED9               	movwf	fsr2l,c
 26256  006606  0E05               	movlw	high (_nwkFrameFrames+1)
 26257  006608  20F4               	addwfc	prodh,w,c
 26258  00660A  6EDA               	movwf	fsr2h,c
 26259  00660C  0E10               	movlw	16
 26260  00660E  6EDF               	movwf	indf2,c
 26261                           
 26262                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 26263  006610  5012               	movf	nwkFrameAlloc@i^0,w,c
 26264  006612  0D89               	mullw	137
 26265  006614  0EBD               	movlw	low _nwkFrameFrames
 26266  006616  6E10               	movwf	??_nwkFrameAlloc^0,c
 26267  006618  0E05               	movlw	high _nwkFrameFrames
 26268  00661A  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 26269  00661C  0E12               	movlw	18
 26270  00661E  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26271  006620  0E00               	movlw	0
 26272  006622  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26273  006624  50F3               	movf	243,w,c
 26274  006626  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26275  006628  50F4               	movf	244,w,c
 26276  00662A  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26277  00662C  5012               	movf	nwkFrameAlloc@i^0,w,c
 26278  00662E  0D89               	mullw	137
 26279  006630  0E3E               	movlw	low (_nwkFrameFrames+129)
 26280  006632  24F3               	addwf	243,w,c
 26281  006634  6ED9               	movwf	fsr2l,c
 26282  006636  0E06               	movlw	high (_nwkFrameFrames+129)
 26283  006638  20F4               	addwfc	prodh,w,c
 26284  00663A  6EDA               	movwf	fsr2h,c
 26285  00663C  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 26286  006642  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 26287                           
 26288                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 26289  006648  0101               	movlb	1	; () banked
 26290  00664A  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 26291  00664C  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 26292                           
 26293                           ; BSR set to: 1
 26294                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 26295  00664E  5012               	movf	nwkFrameAlloc@i^0,w,c
 26296  006650  0D89               	mullw	137
 26297  006652  0EBD               	movlw	low _nwkFrameFrames
 26298  006654  24F3               	addwf	243,w,c
 26299  006656  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26300  006658  0E05               	movlw	high _nwkFrameFrames
 26301  00665A  20F4               	addwfc	prodh,w,c
 26302  00665C  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26303  00665E  0012               	return	
 26304  006660                     l14446:
 26305                           
 26306                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 26307  006660  2A12               	incf	nwkFrameAlloc@i^0,f,c
 26308  006662  0E04               	movlw	4
 26309  006664  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 26310  006666  D7AD               	goto	l14432
 26311                           
 26312                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 26313  006668  0E00               	movlw	0
 26314  00666A  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26315  00666C  0E00               	movlw	0
 26316  00666E  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26317  006670  0012               	return		;funcret
 26318  006672                     __end_of_nwkFrameAlloc:
 26319                           	opt callstack 0
 26320                           
 26321 ;; *************** function _memset *****************
 26322 ;; Defined at:
 26323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 26324 ;; Parameters:    Size  Location     Type
 26325 ;;  dest            2    1[COMRAM] PTR void 
 26326 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26327 ;;		 -> rx_buffer(610), 
 26328 ;;  c               2    3[COMRAM] int 
 26329 ;;  n               2    5[COMRAM] unsigned int 
 26330 ;; Auto vars:     Size  Location     Type
 26331 ;;  s               2   11[COMRAM] PTR unsigned char 
 26332 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26333 ;;		 -> rx_buffer(610), 
 26334 ;;  k               2    9[COMRAM] unsigned int 
 26335 ;; Return value:  Size  Location     Type
 26336 ;;                  2    1[COMRAM] PTR void 
 26337 ;; Registers used:
 26338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26339 ;; Tracked objects:
 26340 ;;		On entry : 0/0
 26341 ;;		On exit  : 0/0
 26342 ;;		Unchanged: 0/0
 26343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26345 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26347 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26348 ;;Total ram usage:       12 bytes
 26349 ;; Hardware stack levels used:    1
 26350 ;; Hardware stack levels required when called:    7
 26351 ;; This function calls:
 26352 ;;		Nothing
 26353 ;; This function is called by:
 26354 ;;		_appDataInd
 26355 ;;		_cmdSend
 26356 ;;		_cmdBcast
 26357 ;;		_cmdSetTX
 26358 ;;		_processATCommand
 26359 ;;		_nwkFrameAlloc
 26360 ;; This function uses a non-reentrant model
 26361 ;;
 26362                           
 26363                           	psect	text164
 26364  0043F6                     __ptext164:
 26365                           	opt callstack 0
 26366  0043F6                     _memset:
 26367                           	opt callstack 22
 26368                           
 26369                           ;incstack = 0
 26370  0043F6  0060  F008  F00C   	movff	memset@dest,memset@s
 26371  0043FC  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 26372  004402  5006               	movf	memset@n^0,w,c
 26373  004404  1007               	iorwf	(memset@n+1)^0,w,c
 26374  004406  B4D8               	btfsc	status,2,c
 26375  004408  0012               	return	
 26376  00440A  0060  F033  FFD9   	movff	memset@s,fsr2l
 26377  004410  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26378  004416  0060  F013  FFDF   	movff	memset@c,indf2
 26379  00441C  5006               	movf	memset@n^0,w,c
 26380  00441E  240C               	addwf	memset@s^0,w,c
 26381  004420  6E08               	movwf	??_memset^0,c
 26382  004422  5007               	movf	(memset@n+1)^0,w,c
 26383  004424  200D               	addwfc	(memset@s+1)^0,w,c
 26384  004426  6E09               	movwf	(??_memset+1)^0,c
 26385  004428  0EFF               	movlw	255
 26386  00442A  2408               	addwf	??_memset^0,w,c
 26387  00442C  6ED9               	movwf	fsr2l,c
 26388  00442E  0EFF               	movlw	255
 26389  004430  2009               	addwfc	(??_memset+1)^0,w,c
 26390  004432  6EDA               	movwf	fsr2h,c
 26391  004434  0060  F013  FFDF   	movff	memset@c,indf2
 26392  00443A  5007               	movf	(memset@n+1)^0,w,c
 26393  00443C  E104               	bnz	l14246
 26394  00443E  0E03               	movlw	3
 26395  004440  5C06               	subwf	memset@n^0,w,c
 26396  004442  A0D8               	btfss	status,0,c
 26397  004444  0012               	return	
 26398  004446                     l14246:
 26399  004446  EE20 F001          	lfsr	2,1
 26400  00444A  500C               	movf	memset@s^0,w,c
 26401  00444C  26D9               	addwf	fsr2l,f,c
 26402  00444E  500D               	movf	(memset@s+1)^0,w,c
 26403  004450  22DA               	addwfc	fsr2h,f,c
 26404  004452  0060  F013  FFDF   	movff	memset@c,indf2
 26405  004458  EE20 F002          	lfsr	2,2
 26406  00445C  500C               	movf	memset@s^0,w,c
 26407  00445E  26D9               	addwf	fsr2l,f,c
 26408  004460  500D               	movf	(memset@s+1)^0,w,c
 26409  004462  22DA               	addwfc	fsr2h,f,c
 26410  004464  0060  F013  FFDF   	movff	memset@c,indf2
 26411  00446A  5006               	movf	memset@n^0,w,c
 26412  00446C  240C               	addwf	memset@s^0,w,c
 26413  00446E  6E08               	movwf	??_memset^0,c
 26414  004470  5007               	movf	(memset@n+1)^0,w,c
 26415  004472  200D               	addwfc	(memset@s+1)^0,w,c
 26416  004474  6E09               	movwf	(??_memset+1)^0,c
 26417  004476  0EFE               	movlw	254
 26418  004478  2408               	addwf	??_memset^0,w,c
 26419  00447A  6ED9               	movwf	fsr2l,c
 26420  00447C  0EFF               	movlw	255
 26421  00447E  2009               	addwfc	(??_memset+1)^0,w,c
 26422  004480  6EDA               	movwf	fsr2h,c
 26423  004482  0060  F013  FFDF   	movff	memset@c,indf2
 26424  004488  5006               	movf	memset@n^0,w,c
 26425  00448A  240C               	addwf	memset@s^0,w,c
 26426  00448C  6E08               	movwf	??_memset^0,c
 26427  00448E  5007               	movf	(memset@n+1)^0,w,c
 26428  004490  200D               	addwfc	(memset@s+1)^0,w,c
 26429  004492  6E09               	movwf	(??_memset+1)^0,c
 26430  004494  0EFD               	movlw	253
 26431  004496  2408               	addwf	??_memset^0,w,c
 26432  004498  6ED9               	movwf	fsr2l,c
 26433  00449A  0EFF               	movlw	255
 26434  00449C  2009               	addwfc	(??_memset+1)^0,w,c
 26435  00449E  6EDA               	movwf	fsr2h,c
 26436  0044A0  0060  F013  FFDF   	movff	memset@c,indf2
 26437  0044A6  5007               	movf	(memset@n+1)^0,w,c
 26438  0044A8  E104               	bnz	l14252
 26439  0044AA  0E07               	movlw	7
 26440  0044AC  5C06               	subwf	memset@n^0,w,c
 26441  0044AE  A0D8               	btfss	status,0,c
 26442  0044B0  0012               	return	
 26443  0044B2                     l14252:
 26444  0044B2  EE20 F003          	lfsr	2,3
 26445  0044B6  500C               	movf	memset@s^0,w,c
 26446  0044B8  26D9               	addwf	fsr2l,f,c
 26447  0044BA  500D               	movf	(memset@s+1)^0,w,c
 26448  0044BC  22DA               	addwfc	fsr2h,f,c
 26449  0044BE  0060  F013  FFDF   	movff	memset@c,indf2
 26450  0044C4  5006               	movf	memset@n^0,w,c
 26451  0044C6  240C               	addwf	memset@s^0,w,c
 26452  0044C8  6E08               	movwf	??_memset^0,c
 26453  0044CA  5007               	movf	(memset@n+1)^0,w,c
 26454  0044CC  200D               	addwfc	(memset@s+1)^0,w,c
 26455  0044CE  6E09               	movwf	(??_memset+1)^0,c
 26456  0044D0  0EFC               	movlw	252
 26457  0044D2  2408               	addwf	??_memset^0,w,c
 26458  0044D4  6ED9               	movwf	fsr2l,c
 26459  0044D6  0EFF               	movlw	255
 26460  0044D8  2009               	addwfc	(??_memset+1)^0,w,c
 26461  0044DA  6EDA               	movwf	fsr2h,c
 26462  0044DC  0060  F013  FFDF   	movff	memset@c,indf2
 26463  0044E2  5007               	movf	(memset@n+1)^0,w,c
 26464  0044E4  E104               	bnz	l14258
 26465  0044E6  0E09               	movlw	9
 26466  0044E8  5C06               	subwf	memset@n^0,w,c
 26467  0044EA  A0D8               	btfss	status,0,c
 26468  0044EC  0012               	return	
 26469  0044EE                     l14258:
 26470  0044EE  0060  F030  F008   	movff	memset@s,??_memset
 26471  0044F4  0060  F034  F009   	movff	memset@s+1,??_memset+1
 26472  0044FA  1E08               	comf	??_memset^0,f,c
 26473  0044FC  1E09               	comf	(??_memset+1)^0,f,c
 26474  0044FE  4A08               	infsnz	??_memset^0,f,c
 26475  004500  2A09               	incf	(??_memset+1)^0,f,c
 26476  004502  0E03               	movlw	3
 26477  004504  1408               	andwf	??_memset^0,w,c
 26478  004506  6E0A               	movwf	memset@k^0,c
 26479  004508  6A0B               	clrf	(memset@k+1)^0,c
 26480  00450A  500A               	movf	memset@k^0,w,c
 26481  00450C  260C               	addwf	memset@s^0,f,c
 26482  00450E  500B               	movf	(memset@k+1)^0,w,c
 26483  004510  220D               	addwfc	(memset@s+1)^0,f,c
 26484  004512  500A               	movf	memset@k^0,w,c
 26485  004514  5E06               	subwf	memset@n^0,f,c
 26486  004516  500B               	movf	(memset@k+1)^0,w,c
 26487  004518  5A07               	subwfb	(memset@n+1)^0,f,c
 26488  00451A  0EFC               	movlw	252
 26489  00451C  1606               	andwf	memset@n^0,f,c
 26490  00451E  0EFF               	movlw	255
 26491  004520  1607               	andwf	(memset@n+1)^0,f,c
 26492  004522  D00E               	goto	l14266
 26493  004524                     l14260:
 26494  004524  0060  F033  FFD9   	movff	memset@s,fsr2l
 26495  00452A  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26496  004530  0060  F013  FFDF   	movff	memset@c,indf2
 26497  004536  0606               	decf	memset@n^0,f,c
 26498  004538  A0D8               	btfss	status,0,c
 26499  00453A  0607               	decf	(memset@n+1)^0,f,c
 26500  00453C  4A0C               	infsnz	memset@s^0,f,c
 26501  00453E  2A0D               	incf	(memset@s+1)^0,f,c
 26502  004540                     l14266:
 26503  004540  5006               	movf	memset@n^0,w,c
 26504  004542  1007               	iorwf	(memset@n+1)^0,w,c
 26505  004544  B4D8               	btfsc	status,2,c
 26506  004546  0012               	return	
 26507  004548  D7ED               	goto	l14260
 26508  00454A                     __end_of_memset:
 26509                           	opt callstack 0
 26510                           
 26511 ;; *************** function _memcpy *****************
 26512 ;; Defined at:
 26513 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 26514 ;; Parameters:    Size  Location     Type
 26515 ;;  d1              2    7[COMRAM] PTR void 
 26516 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26517 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26518 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26519 ;;		 -> tx_buffer(524), rx_buffer(610), 
 26520 ;;  s1              2    9[COMRAM] PTR const void 
 26521 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26522 ;;		 -> ledqueue(96), STR_56(2), STR_55(2), cmdSetAES@AESstr(32), 
 26523 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26524 ;;  n               2   11[COMRAM] unsigned int 
 26525 ;; Auto vars:     Size  Location     Type
 26526 ;;  s               2   16[COMRAM] PTR const unsigned char 
 26527 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26528 ;;		 -> ledqueue(96), STR_56(2), STR_55(2), cmdSetAES@AESstr(32), 
 26529 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26530 ;;  d               2   14[COMRAM] PTR unsigned char 
 26531 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26532 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26533 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26534 ;;		 -> tx_buffer(524), rx_buffer(610), 
 26535 ;;  tmp             1   13[COMRAM] unsigned char 
 26536 ;; Return value:  Size  Location     Type
 26537 ;;                  2    7[COMRAM] PTR void 
 26538 ;; Registers used:
 26539 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26540 ;; Tracked objects:
 26541 ;;		On entry : 0/0
 26542 ;;		On exit  : 0/0
 26543 ;;		Unchanged: 0/0
 26544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26545 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26546 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26548 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26549 ;;Total ram usage:       11 bytes
 26550 ;; Hardware stack levels used:    1
 26551 ;; Hardware stack levels required when called:    7
 26552 ;; This function calls:
 26553 ;;		Nothing
 26554 ;; This function is called by:
 26555 ;;		_appDataInd
 26556 ;;		_cmdSend
 26557 ;;		_cmdBcast
 26558 ;;		_cmdSetAES
 26559 ;;		_cmdSetRFCH
 26560 ;;		_cmdSetTX
 26561 ;;		_cmdSetCADRSSI
 26562 ;;		_cmdSetSF
 26563 ;;		_CircularBufferPushBack
 26564 ;;		_nwkDataReqSendFrame
 26565 ;;		_PHY_DataInd
 26566 ;;		_nwkTxBroadcastFrame
 26567 ;;		_CircularBufferPopFront
 26568 ;; This function uses a non-reentrant model
 26569 ;;
 26570                           
 26571                           	psect	text165
 26572  0073CA                     __ptext165:
 26573                           	opt callstack 0
 26574  0073CA                     _memcpy:
 26575                           	opt callstack 19
 26576                           
 26577                           ;incstack = 0
 26578  0073CA  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 26579  0073D0  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 26580  0073D6  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 26581  0073DC  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 26582  0073E2  D023               	goto	l14278
 26583  0073E4                     l14270:
 26584  0073E4  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 26585  0073EA  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 26586  0073F0  0E00               	movlw	low (__mediumconst shr (0+16))
 26587  0073F2  6EF8               	movwf	tblptru,c
 26588  0073F4  0E0F               	movlw	(high __ramtop+-1)
 26589  0073F6  64F7               	cpfsgt	tblptrh,c
 26590  0073F8  D003               	bra	u13777
 26591  0073FA  0008               	tblrd		*
 26592  0073FC  50F5               	movf	tablat,w,c
 26593  0073FE  D007               	bra	u13770
 26594  007400                     u13777:
 26595  007400  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26596  007406  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26597  00740C  50EF               	movf	indf0,w,c
 26598  00740E                     u13770:
 26599  00740E  6E0E               	movwf	memcpy@tmp^0,c
 26600  007410  4A11               	infsnz	memcpy@s^0,f,c
 26601  007412  2A12               	incf	(memcpy@s+1)^0,f,c
 26602  007414  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 26603  00741A  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 26604  007420  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 26605  007426  4A0F               	infsnz	memcpy@d^0,f,c
 26606  007428  2A10               	incf	(memcpy@d+1)^0,f,c
 26607  00742A                     l14278:
 26608  00742A  060C               	decf	memcpy@n^0,f,c
 26609  00742C  A0D8               	btfss	status,0,c
 26610  00742E  060D               	decf	(memcpy@n+1)^0,f,c
 26611  007430  280C               	incf	memcpy@n^0,w,c
 26612  007432  E1D8               	bnz	l14270
 26613  007434  280D               	incf	(memcpy@n+1)^0,w,c
 26614  007436  B4D8               	btfsc	status,2,c
 26615  007438  0012               	return	
 26616  00743A  D7D4               	goto	l14270
 26617  00743C                     __end_of_memcpy:
 26618                           	opt callstack 0
 26619                           
 26620 ;; *************** function _nwkDataReqConfirm *****************
 26621 ;; Defined at:
 26622 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 26623 ;; Parameters:    Size  Location     Type
 26624 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 26625 ;;		 -> NULL(0), tx_buffer(524), 
 26626 ;; Auto vars:     Size  Location     Type
 26627 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 26628 ;;		 -> NULL(0), tx_buffer(524), 
 26629 ;; Return value:  Size  Location     Type
 26630 ;;                  1    wreg      void 
 26631 ;; Registers used:
 26632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26633 ;; Tracked objects:
 26634 ;;		On entry : 0/0
 26635 ;;		On exit  : 0/0
 26636 ;;		Unchanged: 0/0
 26637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26642 ;;Total ram usage:        6 bytes
 26643 ;; Hardware stack levels used:    1
 26644 ;; Hardware stack levels required when called:    9
 26645 ;; This function calls:
 26646 ;;		_appDataConf
 26647 ;; This function is called by:
 26648 ;;		_nwkDataReqTaskHandler
 26649 ;; This function uses a non-reentrant model
 26650 ;;
 26651                           
 26652                           	psect	text166
 26653  00557A                     __ptext166:
 26654                           	opt callstack 0
 26655  00557A                     _nwkDataReqConfirm:
 26656                           	opt callstack 18
 26657                           
 26658                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 26659                           
 26660                           ;incstack = 0
 26661  00557A  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26662  00557C  0100               	movlb	0	; () banked
 26663  00557E  19BF               	xorwf	_nwkDataReqQueue& (0+255),w,b
 26664  005580  E111               	bnz	l11528
 26665  005582  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26666  005584  19C0               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 26667  005586  A4D8               	btfss	status,2,c
 26668  005588  D00D               	goto	l11528
 26669                           
 26670                           ; BSR set to: 0
 26671                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 26672  00558A  0060  F2FF  FFD9   	movff	_nwkDataReqQueue,fsr2l
 26673  005590  0060  F303  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 26674  005596  006F FF78  F0BF    	movff	postinc2,_nwkDataReqQueue
 26675  00559C  006F FF74  F0C0    	movff	postdec2,_nwkDataReqQueue+1
 26676                           
 26677                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 26678  0055A2  D03E               	goto	l11536
 26679  0055A4                     l11528:
 26680                           
 26681                           ; BSR set to: 0
 26682                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 26683  0055A4  0060  F2FC  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 26684  0055AA  0060  F300  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 26685                           
 26686                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26687  0055B0  D00C               	goto	l11532
 26688  0055B2                     l11530:
 26689                           
 26690                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 26691  0055B2  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26692  0055B8  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26693  0055BE  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 26694  0055C4  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 26695  0055CA                     l11532:
 26696                           
 26697                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26698  0055CA  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26699  0055D0  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26700  0055D6  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26701  0055D8  18DE               	xorwf	postinc2,w,c
 26702  0055DA  E1EB               	bnz	l11530
 26703  0055DC  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26704  0055DE  18DE               	xorwf	postinc2,w,c
 26705  0055E0  A4D8               	btfss	status,2,c
 26706  0055E2  D7E7               	goto	l11530
 26707                           
 26708                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 26709  0055E4  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26710  0055EA  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26711  0055F0  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26712  0055F6  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26713  0055FC  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 26714  005602  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 26715  005608  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 26716  00560E  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 26717  005614  006F FF7B FFE6     	movff	postinc2,postinc1
 26718  00561A  006F FF77 FFE5     	movff	postdec2,postdec1
 26719  005620                     l11536:
 26720                           
 26721                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 26722  005620  0101               	movlb	1	; () banked
 26723  005622  0726               	decf	(_nwkIb+38)& (0+255),f,b
 26724  005624  A0D8               	btfss	status,0,c
 26725  005626  0727               	decf	(_nwkIb+39)& (0+255),f,b
 26726                           
 26727                           ; BSR set to: 1
 26728                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 26729  005628  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 26730  00562E  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 26731  005634  EE20 F00F          	lfsr	2,15
 26732  005638  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26733  00563A  26D9               	addwf	fsr2l,f,c
 26734  00563C  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26735  00563E  22DA               	addwfc	fsr2h,f,c
 26736  005640  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26737  005646  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26738  00564C  D801               	call	u10448
 26739  00564E  0012               	return	
 26740  005650                     u10448:
 26741  005650  0005               	push	
 26742  005652  6EFA               	movwf	pclath,c
 26743  005654  500B               	movf	??_nwkDataReqConfirm^0,w,c
 26744  005656  6EFD               	movwf	tosl,c
 26745  005658  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 26746  00565A  6EFE               	movwf	tosh,c
 26747  00565C  6AFF               	clrf	tosu,c
 26748  00565E  50FA               	movf	pclath,w,c
 26749  005660  0012               	return		;indir
 26750  005662                     __end_of_nwkDataReqConfirm:
 26751                           	opt callstack 0
 26752                           
 26753 ;; *************** function _appDataConf *****************
 26754 ;; Defined at:
 26755 ;;		line 34 in file "../app/app_src/application.c"
 26756 ;; Parameters:    Size  Location     Type
 26757 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 26758 ;;		 -> NULL(0), tx_buffer(524), 
 26759 ;; Auto vars:     Size  Location     Type
 26760 ;;		None
 26761 ;; Return value:  Size  Location     Type
 26762 ;;                  1    wreg      void 
 26763 ;; Registers used:
 26764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26765 ;; Tracked objects:
 26766 ;;		On entry : 3F/1
 26767 ;;		On exit  : 0/0
 26768 ;;		Unchanged: 0/0
 26769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26774 ;;Total ram usage:        2 bytes
 26775 ;; Hardware stack levels used:    1
 26776 ;; Hardware stack levels required when called:    8
 26777 ;; This function calls:
 26778 ;;		_free_tx_buffer
 26779 ;; This function is called by:
 26780 ;;		_cmdSend
 26781 ;;		_cmdBcast
 26782 ;;		_nwkDataReqConfirm
 26783 ;; This function uses a non-reentrant model
 26784 ;;
 26785                           
 26786                           	psect	text167
 26787  008932                     __ptext167:
 26788                           	opt callstack 0
 26789  008932                     _appDataConf:
 26790                           	opt callstack 18
 26791                           
 26792                           ; BSR set to: 1
 26793                           ;../app/app_src/application.c: 34: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 35: {;../app/app_src/application.c: 36:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 26794                           
 26795                           ;incstack = 0
 26796  008932  EE20 F011          	lfsr	2,17
 26797  008936  5007               	movf	appDataConf@req^0,w,c
 26798  008938  26D9               	addwf	fsr2l,f,c
 26799  00893A  5008               	movf	(appDataConf@req+1)^0,w,c
 26800  00893C  22DA               	addwfc	fsr2h,f,c
 26801  00893E  50DF               	movf	indf2,w,c
 26802                           
 26803                           ; BSR set to: 1
 26804                           
 26805                           ;../app/app_src/application.c: 40:  else{
 26806                           
 26807                           ;../app/app_src/application.c: 39:  }
 26808                           
 26809                           ; BSR set to: 1
 26810  008940  F000               	nop		;# 
 26811                           
 26812                           ;../app/app_src/application.c: 44:  free_tx_buffer(req);
 26813  008942  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 26814  008948  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 26815  00894E  EC6A  F03E         	call	_free_tx_buffer	;wreg free
 26816  008952  0012               	return		;funcret
 26817  008954                     __end_of_appDataConf:
 26818                           	opt callstack 0
 26819                           
 26820 ;; *************** function _free_tx_buffer *****************
 26821 ;; Defined at:
 26822 ;;		line 72 in file "../app/app_src/application.c"
 26823 ;; Parameters:    Size  Location     Type
 26824 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 26825 ;;		 -> NULL(0), tx_buffer(524), 
 26826 ;; Auto vars:     Size  Location     Type
 26827 ;;  buf_id          1    5[COMRAM] unsigned char 
 26828 ;; Return value:  Size  Location     Type
 26829 ;;                  1    wreg      void 
 26830 ;; Registers used:
 26831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26832 ;; Tracked objects:
 26833 ;;		On entry : 0/1
 26834 ;;		On exit  : 0/0
 26835 ;;		Unchanged: 0/0
 26836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26840 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26841 ;;Total ram usage:        5 bytes
 26842 ;; Hardware stack levels used:    1
 26843 ;; Hardware stack levels required when called:    7
 26844 ;; This function calls:
 26845 ;;		Nothing
 26846 ;; This function is called by:
 26847 ;;		_appDataConf
 26848 ;; This function uses a non-reentrant model
 26849 ;;
 26850                           
 26851                           	psect	text168
 26852  007CD4                     __ptext168:
 26853                           	opt callstack 0
 26854  007CD4                     _free_tx_buffer:
 26855                           	opt callstack 18
 26856                           
 26857                           ;../app/app_src/application.c: 73:     uint8_t buf_id = 0;
 26858                           
 26859                           ;incstack = 0
 26860  007CD4  0E00               	movlw	0
 26861  007CD6  6E06               	movwf	free_tx_buffer@buf_id^0,c
 26862                           
 26863                           ;../app/app_src/application.c: 75:     while(buf_id < 4){
 26864  007CD8  D020               	goto	l9840
 26865  007CDA                     l9832:
 26866                           
 26867                           ;../app/app_src/application.c: 76:         if(req == &tx_buffer[buf_id].nwkDataReq){
 26868  007CDA  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26869  007CDC  0D83               	mullw	131
 26870  007CDE  0ECC               	movlw	low _tx_buffer
 26871  007CE0  6E04               	movwf	??_free_tx_buffer^0,c
 26872  007CE2  0E0A               	movlw	high _tx_buffer
 26873  007CE4  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 26874  007CE6  0E03               	movlw	3
 26875  007CE8  2604               	addwf	??_free_tx_buffer^0,f,c
 26876  007CEA  0E00               	movlw	0
 26877  007CEC  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26878  007CEE  50F3               	movf	243,w,c
 26879  007CF0  2604               	addwf	??_free_tx_buffer^0,f,c
 26880  007CF2  50F4               	movf	244,w,c
 26881  007CF4  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26882  007CF6  5004               	movf	??_free_tx_buffer^0,w,c
 26883  007CF8  1802               	xorwf	free_tx_buffer@req^0,w,c
 26884  007CFA  E10E               	bnz	l9838
 26885  007CFC  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 26886  007CFE  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 26887  007D00  A4D8               	btfss	status,2,c
 26888  007D02  D00A               	goto	l9838
 26889                           
 26890                           ;../app/app_src/application.c: 78:             tx_buffer[buf_id].free = 1;
 26891  007D04  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26892  007D06  0D83               	mullw	131
 26893  007D08  0ECC               	movlw	low _tx_buffer
 26894  007D0A  24F3               	addwf	243,w,c
 26895  007D0C  6ED9               	movwf	fsr2l,c
 26896  007D0E  0E0A               	movlw	high _tx_buffer
 26897  007D10  20F4               	addwfc	prodh,w,c
 26898  007D12  6EDA               	movwf	fsr2h,c
 26899  007D14  84DF               	bsf	indf2,2,c
 26900  007D16  0012               	return	
 26901  007D18                     l9838:
 26902                           
 26903                           ;../app/app_src/application.c: 81:         buf_id++;
 26904  007D18  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 26905  007D1A                     l9840:
 26906                           
 26907                           ;../app/app_src/application.c: 75:     while(buf_id < 4){
 26908  007D1A  0E03               	movlw	3
 26909  007D1C  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 26910  007D1E  D7DD               	goto	l9832
 26911  007D20  0012               	return	
 26912  007D22                     __end_of_free_tx_buffer:
 26913                           	opt callstack 0
 26914                           
 26915 ;; *************** function _SYS_Init *****************
 26916 ;; Defined at:
 26917 ;;		line 58 in file "../sys/sys_src/sys.c"
 26918 ;; Parameters:    Size  Location     Type
 26919 ;;		None
 26920 ;; Auto vars:     Size  Location     Type
 26921 ;;		None
 26922 ;; Return value:  Size  Location     Type
 26923 ;;                  1    wreg      void 
 26924 ;; Registers used:
 26925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26926 ;; Tracked objects:
 26927 ;;		On entry : 3B/3D
 26928 ;;		On exit  : 3F/2
 26929 ;;		Unchanged: 0/0
 26930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26935 ;;Total ram usage:        0 bytes
 26936 ;; Hardware stack levels used:    1
 26937 ;; Hardware stack levels required when called:   15
 26938 ;; This function calls:
 26939 ;;		_NWK_Init
 26940 ;;		_PHY_Init
 26941 ;;		_SYS_TimerInit
 26942 ;; This function is called by:
 26943 ;;		_main
 26944 ;; This function uses a non-reentrant model
 26945 ;;
 26946                           
 26947                           	psect	text169
 26948  008D2C                     __ptext169:
 26949                           	opt callstack 0
 26950  008D2C                     _SYS_Init:
 26951                           	opt callstack 15
 26952                           
 26953                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 26954                           
 26955                           ;incstack = 0
 26956  008D2C  ECCD  F046         	call	_SYS_TimerInit	;wreg free
 26957                           
 26958                           ; BSR set to: 0
 26959                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 26960  008D30  ECF9  F046         	call	_PHY_Init	;wreg free
 26961                           
 26962                           ; BSR set to: 0
 26963                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 26964  008D34  EC99  F03D         	call	_NWK_Init	;wreg free
 26965                           
 26966                           ; BSR set to: 2
 26967  008D38  0012               	return		;funcret
 26968  008D3A                     __end_of_SYS_Init:
 26969                           	opt callstack 0
 26970                           
 26971 ;; *************** function _SYS_TimerInit *****************
 26972 ;; Defined at:
 26973 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 26974 ;; Parameters:    Size  Location     Type
 26975 ;;		None
 26976 ;; Auto vars:     Size  Location     Type
 26977 ;;		None
 26978 ;; Return value:  Size  Location     Type
 26979 ;;                  1    wreg      void 
 26980 ;; Registers used:
 26981 ;;		wreg, status,2, status,0
 26982 ;; Tracked objects:
 26983 ;;		On entry : 3B/3D
 26984 ;;		On exit  : 3F/0
 26985 ;;		Unchanged: 0/0
 26986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26991 ;;Total ram usage:        0 bytes
 26992 ;; Hardware stack levels used:    1
 26993 ;; Hardware stack levels required when called:    7
 26994 ;; This function calls:
 26995 ;;		Nothing
 26996 ;; This function is called by:
 26997 ;;		_SYS_Init
 26998 ;; This function uses a non-reentrant model
 26999 ;;
 27000                           
 27001                           	psect	text170
 27002  008D9A                     __ptext170:
 27003                           	opt callstack 0
 27004  008D9A                     _SYS_TimerInit:
 27005                           	opt callstack 22
 27006                           
 27007                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 27008                           
 27009                           ; BSR set to: 2
 27010                           ;incstack = 0
 27011  008D9A  0E00               	movlw	0
 27012  008D9C  0100               	movlb	0	; () banked
 27013  008D9E  6FBB               	movwf	_timers& (0+255),b
 27014  008DA0  0E00               	movlw	0
 27015  008DA2  6FBC               	movwf	(_timers+1)& (0+255),b
 27016                           
 27017                           ; BSR set to: 0
 27018  008DA4  0012               	return		;funcret
 27019  008DA6                     __end_of_SYS_TimerInit:
 27020                           	opt callstack 0
 27021                           
 27022 ;; *************** function _PHY_Init *****************
 27023 ;; Defined at:
 27024 ;;		line 810 in file "../phy/sx1216/phy_src/phy.c"
 27025 ;; Parameters:    Size  Location     Type
 27026 ;;		None
 27027 ;; Auto vars:     Size  Location     Type
 27028 ;;		None
 27029 ;; Return value:  Size  Location     Type
 27030 ;;                  1    wreg      void 
 27031 ;; Registers used:
 27032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27033 ;; Tracked objects:
 27034 ;;		On entry : 3F/0
 27035 ;;		On exit  : 3F/0
 27036 ;;		Unchanged: 0/0
 27037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27042 ;;Total ram usage:        0 bytes
 27043 ;; Hardware stack levels used:    1
 27044 ;; Hardware stack levels required when called:   14
 27045 ;; This function calls:
 27046 ;;		_initRadio
 27047 ;; This function is called by:
 27048 ;;		_SYS_Init
 27049 ;; This function uses a non-reentrant model
 27050 ;;
 27051                           
 27052                           	psect	text171
 27053  008DF2                     __ptext171:
 27054                           	opt callstack 0
 27055  008DF2                     _PHY_Init:
 27056                           	opt callstack 15
 27057                           
 27058                           ; BSR set to: 0
 27059                           ;../phy/sx1216/phy_src/phy.c: 811:     initRadio();
 27060                           
 27061                           ; BSR set to: 0
 27062                           ;incstack = 0
 27063  008DF2  ECA0  F020         	call	_initRadio	;wreg free
 27064                           
 27065                           ; BSR set to: 0
 27066  008DF6  0012               	return		;funcret
 27067  008DF8                     __end_of_PHY_Init:
 27068                           	opt callstack 0
 27069                           
 27070 ;; *************** function _initRadio *****************
 27071 ;; Defined at:
 27072 ;;		line 444 in file "../phy/sx1216/phy_src/phy.c"
 27073 ;; Parameters:    Size  Location     Type
 27074 ;;		None
 27075 ;; Auto vars:     Size  Location     Type
 27076 ;;  BWset           4    0        unsigned long 
 27077 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 27078 ;;  version         1   54[COMRAM] unsigned char 
 27079 ;; Return value:  Size  Location     Type
 27080 ;;                  1    wreg      void 
 27081 ;; Registers used:
 27082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27083 ;; Tracked objects:
 27084 ;;		On entry : 0/0
 27085 ;;		On exit  : 3F/0
 27086 ;;		Unchanged: 0/0
 27087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27089 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27092 ;;Total ram usage:        7 bytes
 27093 ;; Hardware stack levels used:    1
 27094 ;; Hardware stack levels required when called:   13
 27095 ;; This function calls:
 27096 ;;		_SX1276Read
 27097 ;;		_SX1276Write
 27098 ;;		_computeFRF
 27099 ;;		_enableCrc
 27100 ;;		_explicitHeaderMode
 27101 ;;		_receive
 27102 ;;		_setCodingRate4
 27103 ;;		_setFrequency
 27104 ;;		_setPreambleLength
 27105 ;;		_setSignalBandwidth
 27106 ;;		_setSpreadingFactor
 27107 ;;		_setTxPower
 27108 ;;		_srand
 27109 ;; This function is called by:
 27110 ;;		_cmdSetNaddr
 27111 ;;		_cmdSetRFCH
 27112 ;;		_cmdSetTX
 27113 ;;		_cmdSetCADRSSI
 27114 ;;		_cmdSetSF
 27115 ;;		_radio_engine
 27116 ;;		_PHY_Init
 27117 ;; This function uses a non-reentrant model
 27118 ;;
 27119                           
 27120                           	psect	text172
 27121  004140                     __ptext172:
 27122                           	opt callstack 0
 27123  004140                     _initRadio:
 27124                           	opt callstack 14
 27125                           
 27126                           ; BSR set to: 0
 27127                           ;incstack = 0
 27128                           ;../phy/sx1216/phy_src/phy.c: 446:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 447
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 448:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 450:     do { LATCbits.LATC5 = 0; } while(0);
 27129  004140  9ABC               	bcf	188,5,c	;volatile
 27130                           
 27131                           ;../phy/sx1216/phy_src/phy.c: 451:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27132  004142  0E09               	movlw	9
 27133  004144  6E34               	movwf	(??_initRadio+1)^0,c
 27134  004146  0E1E               	movlw	30
 27135  004148  6E33               	movwf	??_initRadio^0,c
 27136  00414A  0EE4               	movlw	228
 27137  00414C                     u17057:
 27138  00414C  2EE8               	decfsz	wreg,f,c
 27139  00414E  D7FE               	bra	u17057
 27140  004150  2E33               	decfsz	??_initRadio^0,f,c
 27141  004152  D7FC               	bra	u17057
 27142  004154  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27143  004156  D7FA               	bra	u17057
 27144  004158  D000               	nop2	
 27145  00415A  8ABC               	bsf	188,5,c	;volatile
 27146                           
 27147                           ;../phy/sx1216/phy_src/phy.c: 453:     computeFRF();
 27148  00415C  ECF6  F01C         	call	_computeFRF	;wreg free
 27149                           
 27150                           ;../phy/sx1216/phy_src/phy.c: 454:     _delay((unsigned long)((500)*(64000000/4000.0)));
 27151  004160  0E29               	movlw	41
 27152  004162  6E34               	movwf	(??_initRadio+1)^0,c
 27153  004164  0E96               	movlw	150
 27154  004166  6E33               	movwf	??_initRadio^0,c
 27155  004168  0E7F               	movlw	127
 27156  00416A                     u17067:
 27157  00416A  2EE8               	decfsz	wreg,f,c
 27158  00416C  D7FE               	bra	u17067
 27159  00416E  2E33               	decfsz	??_initRadio^0,f,c
 27160  004170  D7FC               	bra	u17067
 27161  004172  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27162  004174  D7FA               	bra	u17067
 27163  004176  F000               	nop	
 27164                           
 27165                           ;../phy/sx1216/phy_src/phy.c: 456:     version = SX1276Read(0x42);
 27166  004178  0E42               	movlw	66
 27167  00417A  EC2A  F046         	call	_SX1276Read
 27168  00417E  6E37               	movwf	initRadio@version^0,c
 27169                           
 27170                           ; BSR set to: 61
 27171                           ;../phy/sx1216/phy_src/phy.c: 457:     version++;
 27172  004180  2A37               	incf	initRadio@version^0,f,c
 27173                           
 27174                           ; BSR set to: 61
 27175                           ;../phy/sx1216/phy_src/phy.c: 458:     SX1276Write(0x01,0x00);
 27176  004182  0E00               	movlw	0
 27177  004184  6E0F               	movwf	SX1276Write@data^0,c
 27178  004186  0E01               	movlw	1
 27179  004188  EC48  F046         	call	_SX1276Write
 27180                           
 27181                           ; BSR set to: 61
 27182                           ;../phy/sx1216/phy_src/phy.c: 459:     SX1276Write(0x01,0x80);
 27183  00418C  0E80               	movlw	128
 27184  00418E  6E0F               	movwf	SX1276Write@data^0,c
 27185  004190  0E01               	movlw	1
 27186  004192  EC48  F046         	call	_SX1276Write
 27187                           
 27188                           ; BSR set to: 61
 27189                           ;../phy/sx1216/phy_src/phy.c: 461:     setFrequency(fhssList[0]);
 27190  004196  0EAB               	movlw	low _fhssList
 27191  004198  6EF6               	movwf	tblptrl,c
 27192  00419A                     	if	1	;There is more than 1 active tblptr byte
 27193  00419A  0EFC               	movlw	high _fhssList
 27194  00419C  6EF7               	movwf	tblptrh,c
 27195  00419E                     	endif
 27196  00419E                     	if	1	;There are 3 active tblptr bytes
 27197  00419E  0E00               	movlw	low (_fhssList shr (0+16))
 27198  0041A0  6EF8               	movwf	tblptru,c
 27199  0041A2                     	endif
 27200  0041A2  0009               	tblrd		*+
 27201  0041A4  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 27202  0041AA  0009               	tblrd		*+
 27203  0041AC  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 27204  0041B2  0009               	tblrd		*+
 27205  0041B4  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 27206  0041BA  000A               	tblrd		*-
 27207  0041BC  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 27208  0041C2  EC77  F024         	call	_setFrequency	;wreg free
 27209                           
 27210                           ; BSR set to: 61
 27211                           ;../phy/sx1216/phy_src/phy.c: 462:     setSpreadingFactor(7);
 27212  0041C6  0E07               	movlw	7
 27213  0041C8  EC55  F028         	call	_setSpreadingFactor
 27214                           
 27215                           ;../phy/sx1216/phy_src/phy.c: 463:     setTxPower(17);
 27216  0041CC  0E11               	movlw	17
 27217  0041CE  ECCA  F043         	call	_setTxPower
 27218                           
 27219                           ; BSR set to: 61
 27220                           ;../phy/sx1216/phy_src/phy.c: 464:     setSignalBandwidth(500E3);
 27221  0041D2  0E20               	movlw	32
 27222  0041D4  6E23               	movwf	setSignalBandwidth@sbw^0,c
 27223  0041D6  0EA1               	movlw	161
 27224  0041D8  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 27225  0041DA  0E07               	movlw	7
 27226  0041DC  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 27227  0041DE  0E00               	movlw	0
 27228  0041E0  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 27229  0041E2  EC74  F007         	call	_setSignalBandwidth	;wreg free
 27230                           
 27231                           ;../phy/sx1216/phy_src/phy.c: 465:     explicitHeaderMode();
 27232  0041E6  EC12  F046         	call	_explicitHeaderMode	;wreg free
 27233                           
 27234                           ; BSR set to: 61
 27235                           ;../phy/sx1216/phy_src/phy.c: 466:     setCodingRate4(4);
 27236  0041EA  0E04               	movlw	4
 27237  0041EC  ECB7  F042         	call	_setCodingRate4
 27238                           
 27239                           ; BSR set to: 61
 27240                           ;../phy/sx1216/phy_src/phy.c: 467:     setPreambleLength(12);
 27241  0041F0  0E00               	movlw	0
 27242  0041F2  6E12               	movwf	(setPreambleLength@length+1)^0,c
 27243  0041F4  0E0C               	movlw	12
 27244  0041F6  6E11               	movwf	setPreambleLength@length^0,c
 27245  0041F8  ECAF  F045         	call	_setPreambleLength	;wreg free
 27246                           
 27247                           ; BSR set to: 61
 27248                           ;../phy/sx1216/phy_src/phy.c: 468:     enableCrc();
 27249  0041FC  EC3F  F046         	call	_enableCrc	;wreg free
 27250                           
 27251                           ; BSR set to: 61
 27252                           ;../phy/sx1216/phy_src/phy.c: 469:     SX1276Write(0x0E, 0x0);
 27253  004200  0E00               	movlw	0
 27254  004202  6E0F               	movwf	SX1276Write@data^0,c
 27255  004204  0E0E               	movlw	14
 27256  004206  EC48  F046         	call	_SX1276Write
 27257                           
 27258                           ; BSR set to: 61
 27259                           ;../phy/sx1216/phy_src/phy.c: 470:     SX1276Write(0x0F, 0);
 27260  00420A  0E00               	movlw	0
 27261  00420C  6E0F               	movwf	SX1276Write@data^0,c
 27262  00420E  0E0F               	movlw	15
 27263  004210  EC48  F046         	call	_SX1276Write
 27264                           
 27265                           ; BSR set to: 61
 27266                           ;../phy/sx1216/phy_src/phy.c: 473:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 27267  004214  0E0C               	movlw	12
 27268  004216  EC2A  F046         	call	_SX1276Read
 27269  00421A  0903               	iorlw	3
 27270  00421C  6E0F               	movwf	SX1276Write@data^0,c
 27271  00421E  0E0C               	movlw	12
 27272  004220  EC48  F046         	call	_SX1276Write
 27273                           
 27274                           ; BSR set to: 61
 27275                           ;../phy/sx1216/phy_src/phy.c: 476:     SX1276Write(0x26, 0x04);
 27276  004224  0E04               	movlw	4
 27277  004226  6E0F               	movwf	SX1276Write@data^0,c
 27278  004228  0E26               	movlw	38
 27279  00422A  EC48  F046         	call	_SX1276Write
 27280                           
 27281                           ; BSR set to: 61
 27282                           ;../phy/sx1216/phy_src/phy.c: 479:     SX1276Write(0x36,0x02);
 27283  00422E  0E02               	movlw	2
 27284  004230  6E0F               	movwf	SX1276Write@data^0,c
 27285  004232  0E36               	movlw	54
 27286  004234  EC48  F046         	call	_SX1276Write
 27287                           
 27288                           ; BSR set to: 61
 27289                           ;../phy/sx1216/phy_src/phy.c: 480:     SX1276Write(0x3A,0x64);
 27290  004238  0E64               	movlw	100
 27291  00423A  6E0F               	movwf	SX1276Write@data^0,c
 27292  00423C  0E3A               	movlw	58
 27293  00423E  EC48  F046         	call	_SX1276Write
 27294                           
 27295                           ; BSR set to: 61
 27296                           ;../phy/sx1216/phy_src/phy.c: 492:     SX1276Write(0x1F,255);
 27297  004242  0EFF               	movlw	255
 27298  004244  6E0F               	movwf	SX1276Write@data^0,c
 27299  004246  0E1F               	movlw	31
 27300  004248  EC48  F046         	call	_SX1276Write
 27301                           
 27302                           ; BSR set to: 61
 27303                           ;../phy/sx1216/phy_src/phy.c: 494:     receive(0);
 27304  00424C  0E00               	movlw	0
 27305  00424E  EC3E  F041         	call	_receive
 27306                           
 27307                           ; BSR set to: 61
 27308                           ;../phy/sx1216/phy_src/phy.c: 496:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27309  004252  0E09               	movlw	9
 27310  004254  6E34               	movwf	(??_initRadio+1)^0,c
 27311  004256  0E1E               	movlw	30
 27312  004258  6E33               	movwf	??_initRadio^0,c
 27313  00425A  0EE4               	movlw	228
 27314  00425C                     u17077:
 27315  00425C  2EE8               	decfsz	wreg,f,c
 27316  00425E  D7FE               	bra	u17077
 27317  004260  2E33               	decfsz	??_initRadio^0,f,c
 27318  004262  D7FC               	bra	u17077
 27319  004264  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27320  004266  D7FA               	bra	u17077
 27321  004268  D000               	nop2	
 27322                           
 27323                           ;../phy/sx1216/phy_src/phy.c: 498:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 27324  00426A  0E2C               	movlw	44
 27325  00426C  EC2A  F046         	call	_SX1276Read
 27326  004270  6E33               	movwf	??_initRadio^0,c
 27327  004272  0E2C               	movlw	44
 27328  004274  EC2A  F046         	call	_SX1276Read
 27329  004278  6E34               	movwf	(??_initRadio+1)^0,c
 27330  00427A  5034               	movf	(??_initRadio+1)^0,w,c
 27331  00427C  6E36               	movwf	(??_initRadio+3)^0,c
 27332  00427E  6A35               	clrf	(??_initRadio+2)^0,c
 27333  004280  5033               	movf	??_initRadio^0,w,c
 27334  004282  2435               	addwf	(??_initRadio+2)^0,w,c
 27335  004284  6E38               	movwf	initRadio@wideRSSI^0,c
 27336  004286  0E00               	movlw	0
 27337  004288  2036               	addwfc	(??_initRadio+3)^0,w,c
 27338  00428A  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 27339                           
 27340                           ; BSR set to: 61
 27341                           ;../phy/sx1216/phy_src/phy.c: 500:     srand(wideRSSI);
 27342  00428C  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 27343  004292  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 27344  004298  EC49  F042         	call	_srand	;wreg free
 27345                           
 27346                           ; BSR set to: 0
 27347  00429C  0012               	return		;funcret
 27348  00429E                     __end_of_initRadio:
 27349                           	opt callstack 0
 27350                           
 27351 ;; *************** function _srand *****************
 27352 ;; Defined at:
 27353 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 27354 ;; Parameters:    Size  Location     Type
 27355 ;;  s               2    1[COMRAM] unsigned int 
 27356 ;; Auto vars:     Size  Location     Type
 27357 ;;		None
 27358 ;; Return value:  Size  Location     Type
 27359 ;;                  1    wreg      void 
 27360 ;; Registers used:
 27361 ;;		wreg, status,2, status,0
 27362 ;; Tracked objects:
 27363 ;;		On entry : 3F/3D
 27364 ;;		On exit  : 3F/0
 27365 ;;		Unchanged: 0/0
 27366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27371 ;;Total ram usage:        6 bytes
 27372 ;; Hardware stack levels used:    1
 27373 ;; Hardware stack levels required when called:    7
 27374 ;; This function calls:
 27375 ;;		Nothing
 27376 ;; This function is called by:
 27377 ;;		_initRadio
 27378 ;; This function uses a non-reentrant model
 27379 ;;
 27380                           
 27381                           	psect	text173
 27382  008492                     __ptext173:
 27383                           	opt callstack 0
 27384  008492                     _srand:
 27385                           	opt callstack 19
 27386                           
 27387                           ; BSR set to: 61
 27388                           
 27389                           ; BSR set to: 0
 27390                           ;incstack = 0
 27391  008492  0EFF               	movlw	255
 27392  008494  6E04               	movwf	??_srand^0,c
 27393  008496  0EFF               	movlw	255
 27394  008498  6E05               	movwf	(??_srand+1)^0,c
 27395  00849A  0060  F008  F006   	movff	srand@s,??_srand+2
 27396  0084A0  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 27397  0084A6  5004               	movf	??_srand^0,w,c
 27398  0084A8  2606               	addwf	(??_srand+2)^0,f,c
 27399  0084AA  5005               	movf	(??_srand+1)^0,w,c
 27400  0084AC  2207               	addwfc	(??_srand+3)^0,f,c
 27401  0084AE  0060  F018  F0E4   	movff	??_srand+2,_seed
 27402  0084B4  0060  F01C  F0E5   	movff	??_srand+3,_seed+1
 27403  0084BA  0100               	movlb	0	; () banked
 27404  0084BC  6BE6               	clrf	(_seed+2)& (0+255),b
 27405  0084BE  6BE7               	clrf	(_seed+3)& (0+255),b
 27406  0084C0  6BE8               	clrf	(_seed+4)& (0+255),b
 27407  0084C2  6BE9               	clrf	(_seed+5)& (0+255),b
 27408  0084C4  6BEA               	clrf	(_seed+6)& (0+255),b
 27409  0084C6  6BEB               	clrf	(_seed+7)& (0+255),b
 27410                           
 27411                           ; BSR set to: 0
 27412  0084C8  0012               	return		;funcret
 27413  0084CA                     __end_of_srand:
 27414                           	opt callstack 0
 27415                           
 27416 ;; *************** function _setTxPower *****************
 27417 ;; Defined at:
 27418 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 27419 ;; Parameters:    Size  Location     Type
 27420 ;;  power           1    wreg     unsigned char 
 27421 ;; Auto vars:     Size  Location     Type
 27422 ;;  power           1   16[COMRAM] unsigned char 
 27423 ;; Return value:  Size  Location     Type
 27424 ;;                  1    wreg      void 
 27425 ;; Registers used:
 27426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27427 ;; Tracked objects:
 27428 ;;		On entry : 0/3D
 27429 ;;		On exit  : 3F/3D
 27430 ;;		Unchanged: 0/0
 27431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27436 ;;Total ram usage:        1 bytes
 27437 ;; Hardware stack levels used:    1
 27438 ;; Hardware stack levels required when called:   11
 27439 ;; This function calls:
 27440 ;;		_SX1276Write
 27441 ;; This function is called by:
 27442 ;;		_initRadio
 27443 ;; This function uses a non-reentrant model
 27444 ;;
 27445                           
 27446                           	psect	text174
 27447  008794                     __ptext174:
 27448                           	opt callstack 0
 27449  008794                     _setTxPower:
 27450                           	opt callstack 15
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;incstack = 0
 27454                           ;setTxPower@power stored from wreg
 27455  008794  6E11               	movwf	setTxPower@power^0,c
 27456                           
 27457                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 27458  008796  0E02               	movlw	2
 27459  008798  6011               	cpfslt	setTxPower@power^0,c
 27460  00879A  D002               	goto	l14858
 27461                           
 27462                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 27463  00879C  0E02               	movlw	2
 27464  00879E  6E11               	movwf	setTxPower@power^0,c
 27465  0087A0                     l14858:
 27466                           
 27467                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 13)
 27468  0087A0  0E0D               	movlw	13
 27469  0087A2  6411               	cpfsgt	setTxPower@power^0,c
 27470  0087A4  D002               	goto	l14862
 27471                           
 27472                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 13;
 27473  0087A6  0E0D               	movlw	13
 27474  0087A8  6E11               	movwf	setTxPower@power^0,c
 27475  0087AA                     l14862:
 27476                           
 27477                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 27478  0087AA  5011               	movf	setTxPower@power^0,w,c
 27479  0087AC  0FFE               	addlw	254
 27480  0087AE  6E11               	movwf	setTxPower@power^0,c
 27481                           
 27482                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 27483  0087B0  5011               	movf	setTxPower@power^0,w,c
 27484  0087B2  09F0               	iorlw	240
 27485  0087B4  6E0F               	movwf	SX1276Write@data^0,c
 27486  0087B6  0E09               	movlw	9
 27487  0087B8  EC48  F046         	call	_SX1276Write
 27488                           
 27489                           ; BSR set to: 61
 27490  0087BC  0012               	return		;funcret
 27491  0087BE                     __end_of_setTxPower:
 27492                           	opt callstack 0
 27493                           
 27494 ;; *************** function _setSpreadingFactor *****************
 27495 ;; Defined at:
 27496 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 27497 ;; Parameters:    Size  Location     Type
 27498 ;;  sf              1    wreg     unsigned char 
 27499 ;; Auto vars:     Size  Location     Type
 27500 ;;  sf              1   42[COMRAM] unsigned char 
 27501 ;; Return value:  Size  Location     Type
 27502 ;;                  1    wreg      void 
 27503 ;; Registers used:
 27504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27505 ;; Tracked objects:
 27506 ;;		On entry : 3F/3D
 27507 ;;		On exit  : 0/0
 27508 ;;		Unchanged: 0/0
 27509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27511 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27513 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27514 ;;Total ram usage:        9 bytes
 27515 ;; Hardware stack levels used:    1
 27516 ;; Hardware stack levels required when called:   12
 27517 ;; This function calls:
 27518 ;;		_SX1276Read
 27519 ;;		_SX1276Write
 27520 ;;		___lldiv
 27521 ;;		_getSignalBandwidth
 27522 ;;		_getSpreadingFactor
 27523 ;; This function is called by:
 27524 ;;		_initRadio
 27525 ;; This function uses a non-reentrant model
 27526 ;;
 27527                           
 27528                           	psect	text175
 27529  0050AA                     __ptext175:
 27530                           	opt callstack 0
 27531  0050AA                     _setSpreadingFactor:
 27532                           	opt callstack 14
 27533                           
 27534                           ; BSR set to: 61
 27535                           ;incstack = 0
 27536                           ;setSpreadingFactor@sf stored from wreg
 27537  0050AA  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27538                           
 27539                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 27540  0050AC  0E07               	movlw	7
 27541  0050AE  602B               	cpfslt	setSpreadingFactor@sf^0,c
 27542  0050B0  D002               	goto	l14886
 27543                           
 27544                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 27545  0050B2  0E07               	movlw	7
 27546  0050B4  D004               	goto	L25
 27547  0050B6                     l14886:
 27548  0050B6  0E0C               	movlw	12
 27549  0050B8  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 27550  0050BA  D002               	goto	l14890
 27551                           
 27552                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 27553  0050BC  0E0C               	movlw	12
 27554  0050BE                     L25:
 27555  0050BE  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27556  0050C0                     l14890:
 27557                           
 27558                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 27559  0050C0  0EC3               	movlw	195
 27560  0050C2  6E0F               	movwf	SX1276Write@data^0,c
 27561  0050C4  0E31               	movlw	49
 27562  0050C6  EC48  F046         	call	_SX1276Write
 27563                           
 27564                           ; BSR set to: 61
 27565                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 27566  0050CA  0E0A               	movlw	10
 27567  0050CC  6E0F               	movwf	SX1276Write@data^0,c
 27568  0050CE  0E37               	movlw	55
 27569  0050D0  EC48  F046         	call	_SX1276Write
 27570                           
 27571                           ; BSR set to: 61
 27572                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 27573  0050D4  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 27574  0050DA  3A23               	swapf	??_setSpreadingFactor^0,f,c
 27575  0050DC  0EF0               	movlw	240
 27576  0050DE  1623               	andwf	??_setSpreadingFactor^0,f,c
 27577  0050E0  0EF0               	movlw	240
 27578  0050E2  1623               	andwf	??_setSpreadingFactor^0,f,c
 27579  0050E4  0E1E               	movlw	30
 27580  0050E6  EC2A  F046         	call	_SX1276Read
 27581  0050EA  0B0F               	andlw	15
 27582  0050EC  1023               	iorwf	??_setSpreadingFactor^0,w,c
 27583  0050EE  6E0F               	movwf	SX1276Write@data^0,c
 27584  0050F0  0E1E               	movlw	30
 27585  0050F2  EC48  F046         	call	_SX1276Write
 27586                           
 27587                           ; BSR set to: 61
 27588                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27589  0050F6  ECA2  F045         	call	_getSpreadingFactor	;wreg free
 27590  0050FA  0E01               	movlw	1
 27591  0050FC  6E23               	movwf	??_setSpreadingFactor^0,c
 27592  0050FE  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 27593  005100  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 27594  005102  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 27595  005104  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27596  005106  D005               	goto	u14480
 27597  005108                     u14485:
 27598  005108  90D8               	bcf	status,0,c
 27599  00510A  3623               	rlcf	??_setSpreadingFactor^0,f,c
 27600  00510C  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 27601  00510E  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 27602  005110  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 27603  005112                     u14480:
 27604  005112  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27605  005114  D7F9               	goto	u14485
 27606  005116  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 27607  00511C  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 27608  005122  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 27609  005128  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 27610  00512E  EC0C  F025         	call	_getSignalBandwidth	;wreg free
 27611  005132  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27612  005138  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27613  00513E  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27614  005144  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27615  00514A  EC19  F038         	call	___lldiv	;wreg free
 27616  00514E  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8727
 27617  005154  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8727+1
 27618  00515A  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8727+2
 27619  005160  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8727+3
 27620                           
 27621                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27622  005166  0EE8               	movlw	232
 27623  005168  6E16               	movwf	___lldiv@dividend^0,c
 27624  00516A  0E03               	movlw	3
 27625  00516C  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27626  00516E  0E00               	movlw	0
 27627  005170  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27628  005172  0E00               	movlw	0
 27629  005174  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27630  005176  0060  F09C  F01A   	movff	_setSpreadingFactor$8727,___lldiv@divisor
 27631  00517C  0060  F0A0  F01B   	movff	_setSpreadingFactor$8727+1,___lldiv@divisor+1
 27632  005182  0060  F0A4  F01C   	movff	_setSpreadingFactor$8727+2,___lldiv@divisor+2
 27633  005188  0060  F0A8  F01D   	movff	_setSpreadingFactor$8727+3,___lldiv@divisor+3
 27634  00518E  EC19  F038         	call	___lldiv	;wreg free
 27635  005192  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 27636  005198  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 27637  00519E  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 27638  0051A4  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 27639  0051AA  0012               	return		;funcret
 27640  0051AC                     __end_of_setSpreadingFactor:
 27641                           	opt callstack 0
 27642                           
 27643 ;; *************** function _setSignalBandwidth *****************
 27644 ;; Defined at:
 27645 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 27646 ;; Parameters:    Size  Location     Type
 27647 ;;  sbw             4   34[COMRAM] unsigned long 
 27648 ;; Auto vars:     Size  Location     Type
 27649 ;;  bw              4   46[COMRAM] unsigned long 
 27650 ;; Return value:  Size  Location     Type
 27651 ;;                  1    wreg      void 
 27652 ;; Registers used:
 27653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27654 ;; Tracked objects:
 27655 ;;		On entry : 3F/3D
 27656 ;;		On exit  : 0/0
 27657 ;;		Unchanged: 0/0
 27658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27660 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27662 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27663 ;;Total ram usage:       16 bytes
 27664 ;; Hardware stack levels used:    1
 27665 ;; Hardware stack levels required when called:   12
 27666 ;; This function calls:
 27667 ;;		_SX1276Read
 27668 ;;		_SX1276Write
 27669 ;;		___flge
 27670 ;;		___lldiv
 27671 ;;		___xxtofl
 27672 ;;		_getSignalBandwidth
 27673 ;;		_getSpreadingFactor
 27674 ;; This function is called by:
 27675 ;;		_initRadio
 27676 ;; This function uses a non-reentrant model
 27677 ;;
 27678                           
 27679                           	psect	text176
 27680  000EE8                     __ptext176:
 27681                           	opt callstack 0
 27682  000EE8                     _setSignalBandwidth:
 27683                           	opt callstack 14
 27684                           
 27685                           ; BSR set to: 61
 27686                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 27687                           
 27688                           ;incstack = 0
 27689  000EE8  0E00               	movlw	0
 27690  000EEA  6E10               	movwf	___flge@ff1^0,c
 27691  000EEC  0EC0               	movlw	192
 27692  000EEE  6E11               	movwf	(___flge@ff1+1)^0,c
 27693  000EF0  0EF3               	movlw	243
 27694  000EF2  6E12               	movwf	(___flge@ff1+2)^0,c
 27695  000EF4  0E45               	movlw	69
 27696  000EF6  6E13               	movwf	(___flge@ff1+3)^0,c
 27697  000EF8  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27698  000EFE  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27699  000F04  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27700  000F0A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27701  000F10  0E00               	movlw	0
 27702  000F12  ECEE  F01F         	call	___xxtofl
 27703  000F16  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27704  000F1C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27705  000F22  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27706  000F28  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27707  000F2E  EC09  F02F         	call	___flge	;wreg free
 27708  000F32  A0D8               	btfss	status,0,c
 27709  000F34  D002               	goto	l14904
 27710                           
 27711                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 27712  000F36  0E00               	movlw	0
 27713  000F38  D149               	goto	L26
 27714  000F3A                     l14904:
 27715  000F3A  0E00               	movlw	0
 27716  000F3C  6E10               	movwf	___flge@ff1^0,c
 27717  000F3E  0E80               	movlw	128
 27718  000F40  6E11               	movwf	(___flge@ff1+1)^0,c
 27719  000F42  0E22               	movlw	34
 27720  000F44  6E12               	movwf	(___flge@ff1+2)^0,c
 27721  000F46  0E46               	movlw	70
 27722  000F48  6E13               	movwf	(___flge@ff1+3)^0,c
 27723  000F4A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27724  000F50  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27725  000F56  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27726  000F5C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27727  000F62  0E00               	movlw	0
 27728  000F64  ECEE  F01F         	call	___xxtofl
 27729  000F68  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27730  000F6E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27731  000F74  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27732  000F7A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27733  000F80  EC09  F02F         	call	___flge	;wreg free
 27734  000F84  A0D8               	btfss	status,0,c
 27735  000F86  D002               	goto	l14908
 27736                           
 27737                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 27738  000F88  0E01               	movlw	1
 27739  000F8A  D120               	goto	L26
 27740  000F8C                     l14908:
 27741  000F8C  0E00               	movlw	0
 27742  000F8E  6E10               	movwf	___flge@ff1^0,c
 27743  000F90  0EC0               	movlw	192
 27744  000F92  6E11               	movwf	(___flge@ff1+1)^0,c
 27745  000F94  0E73               	movlw	115
 27746  000F96  6E12               	movwf	(___flge@ff1+2)^0,c
 27747  000F98  0E46               	movlw	70
 27748  000F9A  6E13               	movwf	(___flge@ff1+3)^0,c
 27749  000F9C  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27750  000FA2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27751  000FA8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27752  000FAE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27753  000FB4  0E00               	movlw	0
 27754  000FB6  ECEE  F01F         	call	___xxtofl
 27755  000FBA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27756  000FC0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27757  000FC6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27758  000FCC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27759  000FD2  EC09  F02F         	call	___flge	;wreg free
 27760  000FD6  A0D8               	btfss	status,0,c
 27761  000FD8  D002               	goto	l14912
 27762                           
 27763                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 27764  000FDA  0E02               	movlw	2
 27765  000FDC  D0F7               	goto	L26
 27766  000FDE                     l14912:
 27767  000FDE  0E00               	movlw	0
 27768  000FE0  6E10               	movwf	___flge@ff1^0,c
 27769  000FE2  0E80               	movlw	128
 27770  000FE4  6E11               	movwf	(___flge@ff1+1)^0,c
 27771  000FE6  0EA2               	movlw	162
 27772  000FE8  6E12               	movwf	(___flge@ff1+2)^0,c
 27773  000FEA  0E46               	movlw	70
 27774  000FEC  6E13               	movwf	(___flge@ff1+3)^0,c
 27775  000FEE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27776  000FF4  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27777  000FFA  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27778  001000  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27779  001006  0E00               	movlw	0
 27780  001008  ECEE  F01F         	call	___xxtofl
 27781  00100C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27782  001012  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27783  001018  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27784  00101E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27785  001024  EC09  F02F         	call	___flge	;wreg free
 27786  001028  A0D8               	btfss	status,0,c
 27787  00102A  D002               	goto	l14916
 27788                           
 27789                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 27790  00102C  0E03               	movlw	3
 27791  00102E  D0CE               	goto	L26
 27792  001030                     l14916:
 27793  001030  0E00               	movlw	0
 27794  001032  6E10               	movwf	___flge@ff1^0,c
 27795  001034  0E24               	movlw	36
 27796  001036  6E11               	movwf	(___flge@ff1+1)^0,c
 27797  001038  0EF4               	movlw	244
 27798  00103A  6E12               	movwf	(___flge@ff1+2)^0,c
 27799  00103C  0E46               	movlw	70
 27800  00103E  6E13               	movwf	(___flge@ff1+3)^0,c
 27801  001040  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27802  001046  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27803  00104C  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27804  001052  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27805  001058  0E00               	movlw	0
 27806  00105A  ECEE  F01F         	call	___xxtofl
 27807  00105E  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27808  001064  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27809  00106A  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27810  001070  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27811  001076  EC09  F02F         	call	___flge	;wreg free
 27812  00107A  A0D8               	btfss	status,0,c
 27813  00107C  D002               	goto	l14920
 27814                           
 27815                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 27816  00107E  0E04               	movlw	4
 27817  001080  D0A5               	goto	L26
 27818  001082                     l14920:
 27819  001082  0E00               	movlw	0
 27820  001084  6E10               	movwf	___flge@ff1^0,c
 27821  001086  0EE4               	movlw	228
 27822  001088  6E11               	movwf	(___flge@ff1+1)^0,c
 27823  00108A  0E22               	movlw	34
 27824  00108C  6E12               	movwf	(___flge@ff1+2)^0,c
 27825  00108E  0E47               	movlw	71
 27826  001090  6E13               	movwf	(___flge@ff1+3)^0,c
 27827  001092  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27828  001098  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27829  00109E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27830  0010A4  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27831  0010AA  0E00               	movlw	0
 27832  0010AC  ECEE  F01F         	call	___xxtofl
 27833  0010B0  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27834  0010B6  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27835  0010BC  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27836  0010C2  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27837  0010C8  EC09  F02F         	call	___flge	;wreg free
 27838  0010CC  A0D8               	btfss	status,0,c
 27839  0010CE  D002               	goto	l14924
 27840                           
 27841                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 27842  0010D0  0E05               	movlw	5
 27843  0010D2  D07C               	goto	L26
 27844  0010D4                     l14924:
 27845  0010D4  0E00               	movlw	0
 27846  0010D6  6E10               	movwf	___flge@ff1^0,c
 27847  0010D8  0E24               	movlw	36
 27848  0010DA  6E11               	movwf	(___flge@ff1+1)^0,c
 27849  0010DC  0E74               	movlw	116
 27850  0010DE  6E12               	movwf	(___flge@ff1+2)^0,c
 27851  0010E0  0E47               	movlw	71
 27852  0010E2  6E13               	movwf	(___flge@ff1+3)^0,c
 27853  0010E4  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27854  0010EA  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27855  0010F0  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27856  0010F6  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27857  0010FC  0E00               	movlw	0
 27858  0010FE  ECEE  F01F         	call	___xxtofl
 27859  001102  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27860  001108  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27861  00110E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27862  001114  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27863  00111A  EC09  F02F         	call	___flge	;wreg free
 27864  00111E  A0D8               	btfss	status,0,c
 27865  001120  D002               	goto	l14928
 27866                           
 27867                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 27868  001122  0E06               	movlw	6
 27869  001124  D053               	goto	L26
 27870  001126                     l14928:
 27871  001126  0E00               	movlw	0
 27872  001128  6E10               	movwf	___flge@ff1^0,c
 27873  00112A  0E24               	movlw	36
 27874  00112C  6E11               	movwf	(___flge@ff1+1)^0,c
 27875  00112E  0EF4               	movlw	244
 27876  001130  6E12               	movwf	(___flge@ff1+2)^0,c
 27877  001132  0E47               	movlw	71
 27878  001134  6E13               	movwf	(___flge@ff1+3)^0,c
 27879  001136  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27880  00113C  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27881  001142  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27882  001148  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27883  00114E  0E00               	movlw	0
 27884  001150  ECEE  F01F         	call	___xxtofl
 27885  001154  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27886  00115A  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27887  001160  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27888  001166  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27889  00116C  EC09  F02F         	call	___flge	;wreg free
 27890  001170  A0D8               	btfss	status,0,c
 27891  001172  D002               	goto	l14932
 27892                           
 27893                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 27894  001174  0E07               	movlw	7
 27895  001176  D02A               	goto	L26
 27896  001178                     l14932:
 27897  001178  0E00               	movlw	0
 27898  00117A  6E10               	movwf	___flge@ff1^0,c
 27899  00117C  0E24               	movlw	36
 27900  00117E  6E11               	movwf	(___flge@ff1+1)^0,c
 27901  001180  0E74               	movlw	116
 27902  001182  6E12               	movwf	(___flge@ff1+2)^0,c
 27903  001184  0E48               	movlw	72
 27904  001186  6E13               	movwf	(___flge@ff1+3)^0,c
 27905  001188  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27906  00118E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27907  001194  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27908  00119A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27909  0011A0  0E00               	movlw	0
 27910  0011A2  ECEE  F01F         	call	___xxtofl
 27911  0011A6  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27912  0011AC  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27913  0011B2  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27914  0011B8  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27915  0011BE  EC09  F02F         	call	___flge	;wreg free
 27916  0011C2  A0D8               	btfss	status,0,c
 27917  0011C4  D002               	goto	l14936
 27918                           
 27919                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 27920  0011C6  0E08               	movlw	8
 27921  0011C8  D001               	goto	L26
 27922  0011CA                     l14936:
 27923                           
 27924                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 27925  0011CA  0E09               	movlw	9
 27926  0011CC                     L26:
 27927  0011CC  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27928  0011CE  0E00               	movlw	0
 27929  0011D0  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27930  0011D2  0E00               	movlw	0
 27931  0011D4  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27932  0011D6  0E00               	movlw	0
 27933  0011D8  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27934                           
 27935                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 27936  0011DA  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 27937  0011E0  3A27               	swapf	??_setSignalBandwidth^0,f,c
 27938  0011E2  0EF0               	movlw	240
 27939  0011E4  1627               	andwf	??_setSignalBandwidth^0,f,c
 27940  0011E6  0E1D               	movlw	29
 27941  0011E8  EC2A  F046         	call	_SX1276Read
 27942  0011EC  0B0F               	andlw	15
 27943  0011EE  1027               	iorwf	??_setSignalBandwidth^0,w,c
 27944  0011F0  6E0F               	movwf	SX1276Write@data^0,c
 27945  0011F2  0E1D               	movlw	29
 27946  0011F4  EC48  F046         	call	_SX1276Write
 27947                           
 27948                           ; BSR set to: 61
 27949                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 27950  0011F8  ECA2  F045         	call	_getSpreadingFactor	;wreg free
 27951  0011FC  0E01               	movlw	1
 27952  0011FE  6E27               	movwf	??_setSignalBandwidth^0,c
 27953  001200  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 27954  001202  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 27955  001204  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 27956  001206  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27957  001208  D005               	goto	u14580
 27958  00120A                     u14585:
 27959  00120A  90D8               	bcf	status,0,c
 27960  00120C  3627               	rlcf	??_setSignalBandwidth^0,f,c
 27961  00120E  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 27962  001210  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 27963  001212  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 27964  001214                     u14580:
 27965  001214  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27966  001216  D7F9               	goto	u14585
 27967  001218  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 27968  00121E  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 27969  001224  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 27970  00122A  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 27971  001230  EC0C  F025         	call	_getSignalBandwidth	;wreg free
 27972  001234  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27973  00123A  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27974  001240  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27975  001246  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27976  00124C  EC19  F038         	call	___lldiv	;wreg free
 27977  001250  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8728
 27978  001256  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8728+1
 27979  00125C  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8728+2
 27980  001262  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8728+3
 27981                           
 27982                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 27983  001268  0EE8               	movlw	232
 27984  00126A  6E16               	movwf	___lldiv@dividend^0,c
 27985  00126C  0E03               	movlw	3
 27986  00126E  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27987  001270  0E00               	movlw	0
 27988  001272  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27989  001274  0E00               	movlw	0
 27990  001276  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27991  001278  0060  F0AC  F01A   	movff	_setSignalBandwidth$8728,___lldiv@divisor
 27992  00127E  0060  F0B0  F01B   	movff	_setSignalBandwidth$8728+1,___lldiv@divisor+1
 27993  001284  0060  F0B4  F01C   	movff	_setSignalBandwidth$8728+2,___lldiv@divisor+2
 27994  00128A  0060  F0B8  F01D   	movff	_setSignalBandwidth$8728+3,___lldiv@divisor+3
 27995  001290  EC19  F038         	call	___lldiv	;wreg free
 27996  001294  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 27997  00129A  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 27998  0012A0  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 27999  0012A6  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 28000  0012AC  0012               	return		;funcret
 28001  0012AE                     __end_of_setSignalBandwidth:
 28002                           	opt callstack 0
 28003                           
 28004 ;; *************** function _getSpreadingFactor *****************
 28005 ;; Defined at:
 28006 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 28007 ;; Parameters:    Size  Location     Type
 28008 ;;		None
 28009 ;; Auto vars:     Size  Location     Type
 28010 ;;		None
 28011 ;; Return value:  Size  Location     Type
 28012 ;;                  4   14[COMRAM] unsigned long 
 28013 ;; Registers used:
 28014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28015 ;; Tracked objects:
 28016 ;;		On entry : 3F/3D
 28017 ;;		On exit  : 3F/3D
 28018 ;;		Unchanged: 0/0
 28019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28023 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28024 ;;Total ram usage:        5 bytes
 28025 ;; Hardware stack levels used:    1
 28026 ;; Hardware stack levels required when called:   11
 28027 ;; This function calls:
 28028 ;;		_SX1276Read
 28029 ;; This function is called by:
 28030 ;;		_setSpreadingFactor
 28031 ;;		_setSignalBandwidth
 28032 ;; This function uses a non-reentrant model
 28033 ;;
 28034                           
 28035                           	psect	text177
 28036  008B44                     __ptext177:
 28037                           	opt callstack 0
 28038  008B44                     _getSpreadingFactor:
 28039                           	opt callstack 14
 28040                           
 28041                           ; BSR set to: 61
 28042                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 28043                           
 28044                           ;incstack = 0
 28045  008B44  0E1E               	movlw	30
 28046  008B46  EC2A  F046         	call	_SX1276Read
 28047  008B4A  6E13               	movwf	??_getSpreadingFactor^0,c
 28048  008B4C  3A13               	swapf	??_getSpreadingFactor^0,f,c
 28049  008B4E  0E0F               	movlw	15
 28050  008B50  1613               	andwf	??_getSpreadingFactor^0,f,c
 28051  008B52  5013               	movf	??_getSpreadingFactor^0,w,c
 28052  008B54  6E0F               	movwf	?_getSpreadingFactor^0,c
 28053  008B56  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 28054  008B58  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 28055  008B5A  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 28056                           
 28057                           ; BSR set to: 61
 28058  008B5C  0012               	return		;funcret
 28059  008B5E                     __end_of_getSpreadingFactor:
 28060                           	opt callstack 0
 28061                           
 28062 ;; *************** function _getSignalBandwidth *****************
 28063 ;; Defined at:
 28064 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 28065 ;; Parameters:    Size  Location     Type
 28066 ;;		None
 28067 ;; Auto vars:     Size  Location     Type
 28068 ;;  bw              1   20[COMRAM] unsigned char 
 28069 ;; Return value:  Size  Location     Type
 28070 ;;                  4   14[COMRAM] unsigned long 
 28071 ;; Registers used:
 28072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28073 ;; Tracked objects:
 28074 ;;		On entry : 3F/3D
 28075 ;;		On exit  : 3F/3D
 28076 ;;		Unchanged: 0/0
 28077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28081 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28082 ;;Total ram usage:        7 bytes
 28083 ;; Hardware stack levels used:    1
 28084 ;; Hardware stack levels required when called:   11
 28085 ;; This function calls:
 28086 ;;		_SX1276Read
 28087 ;; This function is called by:
 28088 ;;		_setSpreadingFactor
 28089 ;;		_setSignalBandwidth
 28090 ;; This function uses a non-reentrant model
 28091 ;;
 28092                           
 28093                           	psect	text178
 28094  004A18                     __ptext178:
 28095                           	opt callstack 0
 28096  004A18                     _getSignalBandwidth:
 28097                           	opt callstack 14
 28098                           
 28099                           ; BSR set to: 61
 28100                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 28101                           
 28102                           ; BSR set to: 61
 28103                           ;incstack = 0
 28104  004A18  0E1D               	movlw	29
 28105  004A1A  EC2A  F046         	call	_SX1276Read
 28106  004A1E  6E13               	movwf	??_getSignalBandwidth^0,c
 28107  004A20  3813               	swapf	??_getSignalBandwidth^0,w,c
 28108  004A22  0B0F               	andlw	15
 28109  004A24  6E15               	movwf	getSignalBandwidth@bw^0,c
 28110                           
 28111                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 28112  004A26  D05A               	goto	l14500
 28113  004A28                     l14458:
 28114                           
 28115                           ; BSR set to: 61
 28116  004A28  0E78               	movlw	120
 28117  004A2A  6E0F               	movwf	?_getSignalBandwidth^0,c
 28118  004A2C  0E1E               	movlw	30
 28119  004A2E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28120  004A30  0E00               	movlw	0
 28121  004A32  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28122  004A34  0E00               	movlw	0
 28123  004A36  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28124  004A38  0012               	return	
 28125  004A3A                     l14462:
 28126                           
 28127                           ; BSR set to: 61
 28128  004A3A  0EA0               	movlw	160
 28129  004A3C  6E0F               	movwf	?_getSignalBandwidth^0,c
 28130  004A3E  0E28               	movlw	40
 28131  004A40  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28132  004A42  0E00               	movlw	0
 28133  004A44  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28134  004A46  0E00               	movlw	0
 28135  004A48  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28136  004A4A  0012               	return	
 28137  004A4C                     l14466:
 28138                           
 28139                           ; BSR set to: 61
 28140  004A4C  0EF0               	movlw	240
 28141  004A4E  6E0F               	movwf	?_getSignalBandwidth^0,c
 28142  004A50  0E3C               	movlw	60
 28143  004A52  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28144  004A54  0E00               	movlw	0
 28145  004A56  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28146  004A58  0E00               	movlw	0
 28147  004A5A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28148  004A5C  0012               	return	
 28149  004A5E                     l14470:
 28150                           
 28151                           ; BSR set to: 61
 28152  004A5E  0E40               	movlw	64
 28153  004A60  6E0F               	movwf	?_getSignalBandwidth^0,c
 28154  004A62  0E51               	movlw	81
 28155  004A64  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28156  004A66  0E00               	movlw	0
 28157  004A68  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28158  004A6A  0E00               	movlw	0
 28159  004A6C  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28160  004A6E  0012               	return	
 28161  004A70                     l14474:
 28162                           
 28163                           ; BSR set to: 61
 28164  004A70  0E12               	movlw	18
 28165  004A72  6E0F               	movwf	?_getSignalBandwidth^0,c
 28166  004A74  0E7A               	movlw	122
 28167  004A76  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28168  004A78  0E00               	movlw	0
 28169  004A7A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28170  004A7C  0E00               	movlw	0
 28171  004A7E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28172  004A80  0012               	return	
 28173  004A82                     l14478:
 28174                           
 28175                           ; BSR set to: 61
 28176  004A82  0EE4               	movlw	228
 28177  004A84  6E0F               	movwf	?_getSignalBandwidth^0,c
 28178  004A86  0EA2               	movlw	162
 28179  004A88  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28180  004A8A  0E00               	movlw	0
 28181  004A8C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28182  004A8E  0E00               	movlw	0
 28183  004A90  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28184  004A92  0012               	return	
 28185  004A94                     l14482:
 28186                           
 28187                           ; BSR set to: 61
 28188  004A94  0E24               	movlw	36
 28189  004A96  6E0F               	movwf	?_getSignalBandwidth^0,c
 28190  004A98  0EF4               	movlw	244
 28191  004A9A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28192  004A9C  0E00               	movlw	0
 28193  004A9E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28194  004AA0  0E00               	movlw	0
 28195  004AA2  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28196  004AA4  0012               	return	
 28197  004AA6                     l14486:
 28198                           
 28199                           ; BSR set to: 61
 28200  004AA6  0E48               	movlw	72
 28201  004AA8  6E0F               	movwf	?_getSignalBandwidth^0,c
 28202  004AAA  0EE8               	movlw	232
 28203  004AAC  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28204  004AAE  0E01               	movlw	1
 28205  004AB0  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28206  004AB2  0E00               	movlw	0
 28207  004AB4  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28208  004AB6  0012               	return	
 28209  004AB8                     l14490:
 28210                           
 28211                           ; BSR set to: 61
 28212  004AB8  0E90               	movlw	144
 28213  004ABA  6E0F               	movwf	?_getSignalBandwidth^0,c
 28214  004ABC  0ED0               	movlw	208
 28215  004ABE  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28216  004AC0  0E03               	movlw	3
 28217  004AC2  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28218  004AC4  0E00               	movlw	0
 28219  004AC6  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28220  004AC8  0012               	return	
 28221  004ACA                     l14494:
 28222                           
 28223                           ; BSR set to: 61
 28224  004ACA  0E20               	movlw	32
 28225  004ACC  6E0F               	movwf	?_getSignalBandwidth^0,c
 28226  004ACE  0EA1               	movlw	161
 28227  004AD0  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28228  004AD2  0E07               	movlw	7
 28229  004AD4  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28230  004AD6  0E00               	movlw	0
 28231  004AD8  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28232  004ADA  0012               	return	
 28233  004ADC                     l14500:
 28234                           
 28235                           ; BSR set to: 61
 28236  004ADC  5015               	movf	getSignalBandwidth@bw^0,w,c
 28237  004ADE  6E13               	movwf	??_getSignalBandwidth^0,c
 28238  004AE0  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 28239                           
 28240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28241                           ; Switch size 1, requested type "simple"
 28242                           ; Number of cases is 1, Range of values is 0 to 0
 28243                           ; switch strategies available:
 28244                           ; Name         Instructions Cycles
 28245                           ; simple_byte            4     3 (average)
 28246                           ;	Chosen strategy is simple_byte
 28247  004AE2  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 28248  004AE4  0A00               	xorlw	0	; case 0
 28249  004AE6  A4D8               	btfss	status,2,c
 28250  004AE8  D01F               	goto	l14502
 28251                           
 28252                           ; BSR set to: 61
 28253                           ; Switch size 1, requested type "simple"
 28254                           ; Number of cases is 10, Range of values is 0 to 9
 28255                           ; switch strategies available:
 28256                           ; Name         Instructions Cycles
 28257                           ; simple_byte           31    16 (average)
 28258                           ;	Chosen strategy is simple_byte
 28259  004AEA  5013               	movf	??_getSignalBandwidth^0,w,c
 28260  004AEC  0A00               	xorlw	0	; case 0
 28261  004AEE  B4D8               	btfsc	status,2,c
 28262  004AF0  D79B               	goto	l14458
 28263  004AF2  0A01               	xorlw	1	; case 1
 28264  004AF4  B4D8               	btfsc	status,2,c
 28265  004AF6  D7A1               	goto	l14462
 28266  004AF8  0A03               	xorlw	3	; case 2
 28267  004AFA  B4D8               	btfsc	status,2,c
 28268  004AFC  D7A7               	goto	l14466
 28269  004AFE  0A01               	xorlw	1	; case 3
 28270  004B00  B4D8               	btfsc	status,2,c
 28271  004B02  D7AD               	goto	l14470
 28272  004B04  0A07               	xorlw	7	; case 4
 28273  004B06  B4D8               	btfsc	status,2,c
 28274  004B08  D7B3               	goto	l14474
 28275  004B0A  0A01               	xorlw	1	; case 5
 28276  004B0C  B4D8               	btfsc	status,2,c
 28277  004B0E  D7B9               	goto	l14478
 28278  004B10  0A03               	xorlw	3	; case 6
 28279  004B12  B4D8               	btfsc	status,2,c
 28280  004B14  D7BF               	goto	l14482
 28281  004B16  0A01               	xorlw	1	; case 7
 28282  004B18  B4D8               	btfsc	status,2,c
 28283  004B1A  D7C5               	goto	l14486
 28284  004B1C  0A0F               	xorlw	15	; case 8
 28285  004B1E  B4D8               	btfsc	status,2,c
 28286  004B20  D7CB               	goto	l14490
 28287  004B22  0A01               	xorlw	1	; case 9
 28288  004B24  B4D8               	btfsc	status,2,c
 28289  004B26  D7D1               	goto	l14494
 28290  004B28                     l14502:
 28291                           
 28292                           ; BSR set to: 61
 28293                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 28294  004B28  0E00               	movlw	0
 28295  004B2A  6E0F               	movwf	?_getSignalBandwidth^0,c
 28296  004B2C  0E00               	movlw	0
 28297  004B2E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28298  004B30  0E00               	movlw	0
 28299  004B32  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28300  004B34  0E00               	movlw	0
 28301  004B36  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28302                           
 28303                           ; BSR set to: 61
 28304  004B38  0012               	return		;funcret
 28305  004B3A                     __end_of_getSignalBandwidth:
 28306                           	opt callstack 0
 28307                           
 28308 ;; *************** function ___xxtofl *****************
 28309 ;; Defined at:
 28310 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 28311 ;; Parameters:    Size  Location     Type
 28312 ;;  sign            1    wreg     unsigned char 
 28313 ;;  val             4    1[COMRAM] long 
 28314 ;; Auto vars:     Size  Location     Type
 28315 ;;  sign            1    9[COMRAM] unsigned char 
 28316 ;;  arg             4   11[COMRAM] unsigned long 
 28317 ;;  exp             1   10[COMRAM] unsigned char 
 28318 ;; Return value:  Size  Location     Type
 28319 ;;                  4    1[COMRAM] unsigned char 
 28320 ;; Registers used:
 28321 ;;		wreg, status,2, status,0
 28322 ;; Tracked objects:
 28323 ;;		On entry : 0/0
 28324 ;;		On exit  : 0/0
 28325 ;;		Unchanged: 0/0
 28326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28328 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28330 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28331 ;;Total ram usage:       14 bytes
 28332 ;; Hardware stack levels used:    1
 28333 ;; Hardware stack levels required when called:    7
 28334 ;; This function calls:
 28335 ;;		Nothing
 28336 ;; This function is called by:
 28337 ;;		_setSignalBandwidth
 28338 ;;		_get_lqi
 28339 ;; This function uses a non-reentrant model
 28340 ;;
 28341                           
 28342                           	psect	text179
 28343  003FDC                     __ptext179:
 28344                           	opt callstack 0
 28345  003FDC                     ___xxtofl:
 28346                           	opt callstack 18
 28347                           
 28348                           ; BSR set to: 61
 28349                           ;incstack = 0
 28350                           ;___xxtofl@sign stored from wreg
 28351  003FDC  6E0A               	movwf	___xxtofl@sign^0,c
 28352  003FDE  500A               	movf	___xxtofl@sign^0,w,c
 28353  003FE0  A4D8               	btfss	status,2,c
 28354  003FE2  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28355  003FE4  D022               	goto	l3860
 28356  003FE6  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 28357  003FEC  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 28358  003FF2  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 28359  003FF8  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 28360  003FFE  1E06               	comf	??___xxtofl^0,f,c
 28361  004000  1E07               	comf	(??___xxtofl+1)^0,f,c
 28362  004002  1E08               	comf	(??___xxtofl+2)^0,f,c
 28363  004004  1E09               	comf	(??___xxtofl+3)^0,f,c
 28364  004006  2A06               	incf	??___xxtofl^0,f,c
 28365  004008  0E00               	movlw	0
 28366  00400A  2207               	addwfc	(??___xxtofl+1)^0,f,c
 28367  00400C  2208               	addwfc	(??___xxtofl+2)^0,f,c
 28368  00400E  2209               	addwfc	(??___xxtofl+3)^0,f,c
 28369  004010  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 28370  004016  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 28371  00401C  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 28372  004022  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 28373  004028  D00C               	goto	l14606
 28374  00402A                     l3860:
 28375  00402A  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 28376  004030  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 28377  004036  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 28378  00403C  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 28379  004042                     l14606:
 28380  004042  5002               	movf	___xxtofl@val^0,w,c
 28381  004044  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 28382  004046  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 28383  004048  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 28384  00404A  A4D8               	btfss	status,2,c
 28385  00404C  D009               	goto	l14612
 28386  00404E  0E00               	movlw	0
 28387  004050  6E02               	movwf	?___xxtofl^0,c
 28388  004052  0E00               	movlw	0
 28389  004054  6E03               	movwf	(?___xxtofl+1)^0,c
 28390  004056  0E00               	movlw	0
 28391  004058  6E04               	movwf	(?___xxtofl+2)^0,c
 28392  00405A  0E00               	movlw	0
 28393  00405C  6E05               	movwf	(?___xxtofl+3)^0,c
 28394  00405E  0012               	return	
 28395  004060                     l14612:
 28396  004060  0E96               	movlw	150
 28397  004062  6E0B               	movwf	___xxtofl@exp^0,c
 28398  004064  D006               	goto	l14616
 28399  004066                     l14614:
 28400  004066  2A0B               	incf	___xxtofl@exp^0,f,c
 28401  004068  90D8               	bcf	status,0,c
 28402  00406A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28403  00406C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28404  00406E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28405  004070  320C               	rrcf	___xxtofl@arg^0,f,c
 28406  004072                     l14616:
 28407  004072  0E00               	movlw	0
 28408  004074  140C               	andwf	___xxtofl@arg^0,w,c
 28409  004076  6E06               	movwf	??___xxtofl^0,c
 28410  004078  0E00               	movlw	0
 28411  00407A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28412  00407C  6E07               	movwf	(??___xxtofl+1)^0,c
 28413  00407E  0E00               	movlw	0
 28414  004080  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28415  004082  6E08               	movwf	(??___xxtofl+2)^0,c
 28416  004084  0EFE               	movlw	254
 28417  004086  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28418  004088  6E09               	movwf	(??___xxtofl+3)^0,c
 28419  00408A  5006               	movf	??___xxtofl^0,w,c
 28420  00408C  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28421  00408E  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28422  004090  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28423  004092  B4D8               	btfsc	status,2,c
 28424  004094  D00D               	goto	l3867
 28425  004096  D7E7               	goto	l14614
 28426  004098                     l14618:
 28427  004098  2A0B               	incf	___xxtofl@exp^0,f,c
 28428  00409A  0E01               	movlw	1
 28429  00409C  260C               	addwf	___xxtofl@arg^0,f,c
 28430  00409E  0E00               	movlw	0
 28431  0040A0  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 28432  0040A2  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 28433  0040A4  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 28434  0040A6  90D8               	bcf	status,0,c
 28435  0040A8  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28436  0040AA  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28437  0040AC  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28438  0040AE  320C               	rrcf	___xxtofl@arg^0,f,c
 28439  0040B0                     l3867:
 28440  0040B0  0E00               	movlw	0
 28441  0040B2  140C               	andwf	___xxtofl@arg^0,w,c
 28442  0040B4  6E06               	movwf	??___xxtofl^0,c
 28443  0040B6  0E00               	movlw	0
 28444  0040B8  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28445  0040BA  6E07               	movwf	(??___xxtofl+1)^0,c
 28446  0040BC  0E00               	movlw	0
 28447  0040BE  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28448  0040C0  6E08               	movwf	(??___xxtofl+2)^0,c
 28449  0040C2  0EFF               	movlw	255
 28450  0040C4  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28451  0040C6  6E09               	movwf	(??___xxtofl+3)^0,c
 28452  0040C8  5006               	movf	??___xxtofl^0,w,c
 28453  0040CA  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28454  0040CC  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28455  0040CE  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28456  0040D0  B4D8               	btfsc	status,2,c
 28457  0040D2  D007               	goto	l14626
 28458  0040D4  D7E1               	goto	l14618
 28459  0040D6                     l14624:
 28460  0040D6  060B               	decf	___xxtofl@exp^0,f,c
 28461  0040D8  90D8               	bcf	status,0,c
 28462  0040DA  360C               	rlcf	___xxtofl@arg^0,f,c
 28463  0040DC  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 28464  0040DE  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 28465  0040E0  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 28466  0040E2                     l14626:
 28467  0040E2  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 28468  0040E4  D003               	goto	u14170
 28469  0040E6  0E02               	movlw	2
 28470  0040E8  600B               	cpfslt	___xxtofl@exp^0,c
 28471  0040EA  D7F5               	goto	l14624
 28472  0040EC                     u14170:
 28473  0040EC  A00B               	btfss	___xxtofl@exp^0,0,c
 28474  0040EE  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 28475  0040F0  90D8               	bcf	status,0,c
 28476  0040F2  320B               	rrcf	___xxtofl@exp^0,f,c
 28477  0040F4  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 28478  0040FA  6A07               	clrf	(??___xxtofl+1)^0,c
 28479  0040FC  6A08               	clrf	(??___xxtofl+2)^0,c
 28480  0040FE  6A09               	clrf	(??___xxtofl+3)^0,c
 28481  004100  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 28482  004106  6A08               	clrf	(??___xxtofl+2)^0,c
 28483  004108  6A07               	clrf	(??___xxtofl+1)^0,c
 28484  00410A  6A06               	clrf	??___xxtofl^0,c
 28485  00410C  5006               	movf	??___xxtofl^0,w,c
 28486  00410E  120C               	iorwf	___xxtofl@arg^0,f,c
 28487  004110  5007               	movf	(??___xxtofl+1)^0,w,c
 28488  004112  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 28489  004114  5008               	movf	(??___xxtofl+2)^0,w,c
 28490  004116  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 28491  004118  5009               	movf	(??___xxtofl+3)^0,w,c
 28492  00411A  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 28493  00411C  500A               	movf	___xxtofl@sign^0,w,c
 28494  00411E  A4D8               	btfss	status,2,c
 28495  004120  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28496  004122  D001               	goto	l14642
 28497  004124  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 28498  004126                     l14642:
 28499  004126  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 28500  00412C  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 28501  004132  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 28502  004138  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 28503  00413E  0012               	return		;funcret
 28504  004140                     __end_of___xxtofl:
 28505                           	opt callstack 0
 28506                           
 28507 ;; *************** function ___flge *****************
 28508 ;; Defined at:
 28509 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 28510 ;; Parameters:    Size  Location     Type
 28511 ;;  ff1             4   15[COMRAM] unsigned char 
 28512 ;;  ff2             4   19[COMRAM] unsigned char 
 28513 ;; Auto vars:     Size  Location     Type
 28514 ;;		None
 28515 ;; Return value:  Size  Location     Type
 28516 ;;		None               void
 28517 ;; Registers used:
 28518 ;;		wreg, status,2, status,0
 28519 ;; Tracked objects:
 28520 ;;		On entry : 0/3D
 28521 ;;		On exit  : 0/0
 28522 ;;		Unchanged: 0/0
 28523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28524 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28527 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28528 ;;Total ram usage:       12 bytes
 28529 ;; Hardware stack levels used:    1
 28530 ;; Hardware stack levels required when called:    7
 28531 ;; This function calls:
 28532 ;;		Nothing
 28533 ;; This function is called by:
 28534 ;;		_setSignalBandwidth
 28535 ;; This function uses a non-reentrant model
 28536 ;;
 28537                           
 28538                           	psect	text180
 28539  005E12                     __ptext180:
 28540                           	opt callstack 0
 28541  005E12                     ___flge:
 28542                           	opt callstack 18
 28543                           
 28544                           ;incstack = 0
 28545  005E12  0E00               	movlw	0
 28546  005E14  1410               	andwf	___flge@ff1^0,w,c
 28547  005E16  6E18               	movwf	??___flge^0,c
 28548  005E18  0E00               	movlw	0
 28549  005E1A  1411               	andwf	(___flge@ff1+1)^0,w,c
 28550  005E1C  6E19               	movwf	(??___flge+1)^0,c
 28551  005E1E  0E80               	movlw	128
 28552  005E20  1412               	andwf	(___flge@ff1+2)^0,w,c
 28553  005E22  6E1A               	movwf	(??___flge+2)^0,c
 28554  005E24  0E7F               	movlw	127
 28555  005E26  1413               	andwf	(___flge@ff1+3)^0,w,c
 28556  005E28  6E1B               	movwf	(??___flge+3)^0,c
 28557  005E2A  5018               	movf	??___flge^0,w,c
 28558  005E2C  1019               	iorwf	(??___flge+1)^0,w,c
 28559  005E2E  101A               	iorwf	(??___flge+2)^0,w,c
 28560  005E30  101B               	iorwf	(??___flge+3)^0,w,c
 28561  005E32  A4D8               	btfss	status,2,c
 28562  005E34  D008               	goto	l14566
 28563  005E36  0E00               	movlw	0
 28564  005E38  6E10               	movwf	___flge@ff1^0,c
 28565  005E3A  0E00               	movlw	0
 28566  005E3C  6E11               	movwf	(___flge@ff1+1)^0,c
 28567  005E3E  0E00               	movlw	0
 28568  005E40  6E12               	movwf	(___flge@ff1+2)^0,c
 28569  005E42  0E00               	movlw	0
 28570  005E44  6E13               	movwf	(___flge@ff1+3)^0,c
 28571  005E46                     l14566:
 28572  005E46  0E00               	movlw	0
 28573  005E48  1414               	andwf	___flge@ff2^0,w,c
 28574  005E4A  6E18               	movwf	??___flge^0,c
 28575  005E4C  0E00               	movlw	0
 28576  005E4E  1415               	andwf	(___flge@ff2+1)^0,w,c
 28577  005E50  6E19               	movwf	(??___flge+1)^0,c
 28578  005E52  0E80               	movlw	128
 28579  005E54  1416               	andwf	(___flge@ff2+2)^0,w,c
 28580  005E56  6E1A               	movwf	(??___flge+2)^0,c
 28581  005E58  0E7F               	movlw	127
 28582  005E5A  1417               	andwf	(___flge@ff2+3)^0,w,c
 28583  005E5C  6E1B               	movwf	(??___flge+3)^0,c
 28584  005E5E  5018               	movf	??___flge^0,w,c
 28585  005E60  1019               	iorwf	(??___flge+1)^0,w,c
 28586  005E62  101A               	iorwf	(??___flge+2)^0,w,c
 28587  005E64  101B               	iorwf	(??___flge+3)^0,w,c
 28588  005E66  A4D8               	btfss	status,2,c
 28589  005E68  D008               	goto	l14570
 28590  005E6A  0E00               	movlw	0
 28591  005E6C  6E14               	movwf	___flge@ff2^0,c
 28592  005E6E  0E00               	movlw	0
 28593  005E70  6E15               	movwf	(___flge@ff2+1)^0,c
 28594  005E72  0E00               	movlw	0
 28595  005E74  6E16               	movwf	(___flge@ff2+2)^0,c
 28596  005E76  0E00               	movlw	0
 28597  005E78  6E17               	movwf	(___flge@ff2+3)^0,c
 28598  005E7A                     l14570:
 28599  005E7A  AE13               	btfss	(___flge@ff1+3)^0,7,c
 28600  005E7C  D009               	goto	l14574
 28601  005E7E  6C10               	negf	___flge@ff1^0,c
 28602  005E80  1E11               	comf	(___flge@ff1+1)^0,f,c
 28603  005E82  B0D8               	btfsc	status,0,c
 28604  005E84  2A11               	incf	(___flge@ff1+1)^0,f,c
 28605  005E86  1E12               	comf	(___flge@ff1+2)^0,f,c
 28606  005E88  B0D8               	btfsc	status,0,c
 28607  005E8A  2A12               	incf	(___flge@ff1+2)^0,f,c
 28608  005E8C  0E80               	movlw	128
 28609  005E8E  5613               	subfwb	(___flge@ff1+3)^0,f,c
 28610  005E90                     l14574:
 28611  005E90  AE17               	btfss	(___flge@ff2+3)^0,7,c
 28612  005E92  D009               	goto	l3470
 28613  005E94  6C14               	negf	___flge@ff2^0,c
 28614  005E96  1E15               	comf	(___flge@ff2+1)^0,f,c
 28615  005E98  B0D8               	btfsc	status,0,c
 28616  005E9A  2A15               	incf	(___flge@ff2+1)^0,f,c
 28617  005E9C  1E16               	comf	(___flge@ff2+2)^0,f,c
 28618  005E9E  B0D8               	btfsc	status,0,c
 28619  005EA0  2A16               	incf	(___flge@ff2+2)^0,f,c
 28620  005EA2  0E80               	movlw	128
 28621  005EA4  5617               	subfwb	(___flge@ff2+3)^0,f,c
 28622  005EA6                     l3470:
 28623  005EA6  0E00               	movlw	0
 28624  005EA8  1A10               	xorwf	___flge@ff1^0,f,c
 28625  005EAA  0E00               	movlw	0
 28626  005EAC  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 28627  005EAE  0E00               	movlw	0
 28628  005EB0  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 28629  005EB2  0E80               	movlw	128
 28630  005EB4  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 28631  005EB6  0E00               	movlw	0
 28632  005EB8  1A14               	xorwf	___flge@ff2^0,f,c
 28633  005EBA  0E00               	movlw	0
 28634  005EBC  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 28635  005EBE  0E00               	movlw	0
 28636  005EC0  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 28637  005EC2  0E80               	movlw	128
 28638  005EC4  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 28639  005EC6  5014               	movf	___flge@ff2^0,w,c
 28640  005EC8  5C10               	subwf	___flge@ff1^0,w,c
 28641  005ECA  5015               	movf	(___flge@ff2+1)^0,w,c
 28642  005ECC  5811               	subwfb	(___flge@ff1+1)^0,w,c
 28643  005ECE  5016               	movf	(___flge@ff2+2)^0,w,c
 28644  005ED0  5812               	subwfb	(___flge@ff1+2)^0,w,c
 28645  005ED2  5017               	movf	(___flge@ff2+3)^0,w,c
 28646  005ED4  5813               	subwfb	(___flge@ff1+3)^0,w,c
 28647  005ED6  B0D8               	btfsc	status,0,c
 28648  005ED8  D002               	goto	l14580
 28649  005EDA  90D8               	bcf	status,0,c
 28650  005EDC  0012               	return	
 28651  005EDE                     l14580:
 28652  005EDE  80D8               	bsf	status,0,c
 28653  005EE0  0012               	return		;funcret
 28654  005EE2                     __end_of___flge:
 28655                           	opt callstack 0
 28656                           
 28657 ;; *************** function _setPreambleLength *****************
 28658 ;; Defined at:
 28659 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 28660 ;; Parameters:    Size  Location     Type
 28661 ;;  length          2   16[COMRAM] unsigned short 
 28662 ;; Auto vars:     Size  Location     Type
 28663 ;;		None
 28664 ;; Return value:  Size  Location     Type
 28665 ;;                  1    wreg      void 
 28666 ;; Registers used:
 28667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28668 ;; Tracked objects:
 28669 ;;		On entry : 3F/3D
 28670 ;;		On exit  : 3F/3D
 28671 ;;		Unchanged: 0/0
 28672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28677 ;;Total ram usage:        2 bytes
 28678 ;; Hardware stack levels used:    1
 28679 ;; Hardware stack levels required when called:   11
 28680 ;; This function calls:
 28681 ;;		_SX1276Write
 28682 ;; This function is called by:
 28683 ;;		_initRadio
 28684 ;; This function uses a non-reentrant model
 28685 ;;
 28686                           
 28687                           	psect	text181
 28688  008B5E                     __ptext181:
 28689                           	opt callstack 0
 28690  008B5E                     _setPreambleLength:
 28691                           	opt callstack 15
 28692                           
 28693                           ; BSR set to: 61
 28694                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 28695                           
 28696                           ;incstack = 0
 28697  008B5E  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 28698  008B64  0E20               	movlw	32
 28699  008B66  EC48  F046         	call	_SX1276Write
 28700                           
 28701                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 28702  008B6A  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 28703  008B70  0E21               	movlw	33
 28704  008B72  EC48  F046         	call	_SX1276Write
 28705                           
 28706                           ; BSR set to: 61
 28707  008B76  0012               	return		;funcret
 28708  008B78                     __end_of_setPreambleLength:
 28709                           	opt callstack 0
 28710                           
 28711 ;; *************** function _setFrequency *****************
 28712 ;; Defined at:
 28713 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 28714 ;; Parameters:    Size  Location     Type
 28715 ;;  frequency       4   34[COMRAM] unsigned long 
 28716 ;; Auto vars:     Size  Location     Type
 28717 ;;  num             4   42[COMRAM] unsigned long 
 28718 ;;  num_mod         4   38[COMRAM] unsigned long 
 28719 ;; Return value:  Size  Location     Type
 28720 ;;                  4   34[COMRAM] unsigned long 
 28721 ;; Registers used:
 28722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28723 ;; Tracked objects:
 28724 ;;		On entry : 0/0
 28725 ;;		On exit  : 3F/3D
 28726 ;;		Unchanged: 0/0
 28727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28729 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28731 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28732 ;;Total ram usage:       12 bytes
 28733 ;; Hardware stack levels used:    1
 28734 ;; Hardware stack levels required when called:   11
 28735 ;; This function calls:
 28736 ;;		_SX1276Write
 28737 ;;		___lldiv
 28738 ;;		___llmod
 28739 ;; This function is called by:
 28740 ;;		_initRadio
 28741 ;;		_PHY_SetChannel
 28742 ;; This function uses a non-reentrant model
 28743 ;;
 28744                           
 28745                           	psect	text182
 28746  0048EE                     __ptext182:
 28747                           	opt callstack 0
 28748  0048EE                     _setFrequency:
 28749                           	opt callstack 15
 28750                           
 28751                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 28752                           
 28753                           ; BSR set to: 61
 28754                           ;incstack = 0
 28755  0048EE  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 28756  0048F4  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 28757  0048FA  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 28758  004900  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 28759  004906  0E09               	movlw	9
 28760  004908  6E1A               	movwf	___lldiv@divisor^0,c
 28761  00490A  0E3D               	movlw	61
 28762  00490C  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28763  00490E  0E00               	movlw	0
 28764  004910  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28765  004912  0E00               	movlw	0
 28766  004914  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28767  004916  EC19  F038         	call	___lldiv	;wreg free
 28768  00491A  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 28769  004920  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 28770  004926  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 28771  00492C  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 28772                           
 28773                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 28774  004932  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 28775  004938  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 28776  00493E  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 28777  004944  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 28778  00494A  0E09               	movlw	9
 28779  00494C  6E06               	movwf	___llmod@divisor^0,c
 28780  00494E  0E3D               	movlw	61
 28781  004950  6E07               	movwf	(___llmod@divisor+1)^0,c
 28782  004952  0E00               	movlw	0
 28783  004954  6E08               	movwf	(___llmod@divisor+2)^0,c
 28784  004956  0E00               	movlw	0
 28785  004958  6E09               	movwf	(___llmod@divisor+3)^0,c
 28786  00495A  EC1E  F03A         	call	___llmod	;wreg free
 28787  00495E  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 28788  004964  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 28789  00496A  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 28790  004970  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 28791                           
 28792                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 28793  004976  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 28794  00497C  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 28795  004982  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 28796  004988  6A2B               	clrf	setFrequency@num^0,c
 28797                           
 28798                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 28799  00498A  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 28800  004990  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 28801  004996  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 28802  00499C  6A27               	clrf	setFrequency@num_mod^0,c
 28803                           
 28804                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 28805  00499E  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 28806  0049A4  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 28807  0049AA  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 28808  0049B0  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 28809  0049B6  0E09               	movlw	9
 28810  0049B8  6E1A               	movwf	___lldiv@divisor^0,c
 28811  0049BA  0E3D               	movlw	61
 28812  0049BC  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28813  0049BE  0E00               	movlw	0
 28814  0049C0  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28815  0049C2  0E00               	movlw	0
 28816  0049C4  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28817  0049C6  EC19  F038         	call	___lldiv	;wreg free
 28818  0049CA  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 28819  0049D0  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 28820  0049D6  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 28821  0049DC  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 28822                           
 28823                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 28824  0049E2  5027               	movf	setFrequency@num_mod^0,w,c
 28825  0049E4  262B               	addwf	setFrequency@num^0,f,c
 28826  0049E6  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 28827  0049E8  222C               	addwfc	(setFrequency@num+1)^0,f,c
 28828  0049EA  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 28829  0049EC  222D               	addwfc	(setFrequency@num+2)^0,f,c
 28830  0049EE  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 28831  0049F0  222E               	addwfc	(setFrequency@num+3)^0,f,c
 28832                           
 28833                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 28834  0049F2  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 28835  0049F8  0E06               	movlw	6
 28836  0049FA  EC48  F046         	call	_SX1276Write
 28837                           
 28838                           ; BSR set to: 61
 28839                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 28840  0049FE  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 28841  004A04  0E07               	movlw	7
 28842  004A06  EC48  F046         	call	_SX1276Write
 28843                           
 28844                           ; BSR set to: 61
 28845                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 28846  004A0A  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 28847  004A10  0E08               	movlw	8
 28848  004A12  EC48  F046         	call	_SX1276Write
 28849                           
 28850                           ; BSR set to: 61
 28851  004A16  0012               	return		;funcret
 28852  004A18                     __end_of_setFrequency:
 28853                           	opt callstack 0
 28854                           
 28855 ;; *************** function _setCodingRate4 *****************
 28856 ;; Defined at:
 28857 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 28858 ;; Parameters:    Size  Location     Type
 28859 ;;  denominator     1    wreg     unsigned char 
 28860 ;; Auto vars:     Size  Location     Type
 28861 ;;  denominator     1   18[COMRAM] unsigned char 
 28862 ;;  cr              1   17[COMRAM] unsigned char 
 28863 ;; Return value:  Size  Location     Type
 28864 ;;                  1    wreg      void 
 28865 ;; Registers used:
 28866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28867 ;; Tracked objects:
 28868 ;;		On entry : 3F/3D
 28869 ;;		On exit  : 3F/3D
 28870 ;;		Unchanged: 0/0
 28871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28876 ;;Total ram usage:        3 bytes
 28877 ;; Hardware stack levels used:    1
 28878 ;; Hardware stack levels required when called:   11
 28879 ;; This function calls:
 28880 ;;		_SX1276Read
 28881 ;;		_SX1276Write
 28882 ;; This function is called by:
 28883 ;;		_initRadio
 28884 ;; This function uses a non-reentrant model
 28885 ;;
 28886                           
 28887                           	psect	text183
 28888  00856E                     __ptext183:
 28889                           	opt callstack 0
 28890  00856E                     _setCodingRate4:
 28891                           	opt callstack 15
 28892                           
 28893                           ; BSR set to: 61
 28894                           ;incstack = 0
 28895                           ;setCodingRate4@denominator stored from wreg
 28896  00856E  6E13               	movwf	setCodingRate4@denominator^0,c
 28897                           
 28898                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 28899  008570  0E05               	movlw	5
 28900  008572  6013               	cpfslt	setCodingRate4@denominator^0,c
 28901  008574  D002               	goto	l14948
 28902                           
 28903                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 28904  008576  0E05               	movlw	5
 28905  008578  D004               	goto	L27
 28906  00857A                     l14948:
 28907  00857A  0E08               	movlw	8
 28908  00857C  6413               	cpfsgt	setCodingRate4@denominator^0,c
 28909  00857E  D002               	goto	l14952
 28910                           
 28911                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 28912  008580  0E08               	movlw	8
 28913  008582                     L27:
 28914  008582  6E13               	movwf	setCodingRate4@denominator^0,c
 28915  008584                     l14952:
 28916                           
 28917                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 28918  008584  5013               	movf	setCodingRate4@denominator^0,w,c
 28919  008586  0FFC               	addlw	252
 28920  008588  6E12               	movwf	setCodingRate4@cr^0,c
 28921                           
 28922                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 28923  00858A  90D8               	bcf	status,0,c
 28924  00858C  3412               	rlcf	setCodingRate4@cr^0,w,c
 28925  00858E  6E11               	movwf	??_setCodingRate4^0,c
 28926  008590  0E1D               	movlw	29
 28927  008592  EC2A  F046         	call	_SX1276Read
 28928  008596  0BF1               	andlw	241
 28929  008598  1011               	iorwf	??_setCodingRate4^0,w,c
 28930  00859A  6E0F               	movwf	SX1276Write@data^0,c
 28931  00859C  0E1D               	movlw	29
 28932  00859E  EC48  F046         	call	_SX1276Write
 28933                           
 28934                           ; BSR set to: 61
 28935  0085A2  0012               	return		;funcret
 28936  0085A4                     __end_of_setCodingRate4:
 28937                           	opt callstack 0
 28938                           
 28939 ;; *************** function _receive *****************
 28940 ;; Defined at:
 28941 ;;		line 402 in file "../phy/sx1216/phy_src/phy.c"
 28942 ;; Parameters:    Size  Location     Type
 28943 ;;  size            1    wreg     unsigned char 
 28944 ;; Auto vars:     Size  Location     Type
 28945 ;;  size            1   16[COMRAM] unsigned char 
 28946 ;; Return value:  Size  Location     Type
 28947 ;;                  1    wreg      void 
 28948 ;; Registers used:
 28949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28950 ;; Tracked objects:
 28951 ;;		On entry : 0/3D
 28952 ;;		On exit  : 3F/3D
 28953 ;;		Unchanged: 0/0
 28954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28959 ;;Total ram usage:        1 bytes
 28960 ;; Hardware stack levels used:    1
 28961 ;; Hardware stack levels required when called:   12
 28962 ;; This function calls:
 28963 ;;		_SX1276Write
 28964 ;;		_explicitHeaderMode
 28965 ;;		_implicitHeaderMode
 28966 ;; This function is called by:
 28967 ;;		_initRadio
 28968 ;;		_DIO0_Receive_ISR
 28969 ;;		_radio_engine
 28970 ;;		_PHY_SetRxState
 28971 ;; This function uses a non-reentrant model
 28972 ;;
 28973                           
 28974                           	psect	text184
 28975  00827C                     __ptext184:
 28976                           	opt callstack 0
 28977  00827C                     _receive:
 28978                           	opt callstack 14
 28979                           
 28980                           ; BSR set to: 61
 28981                           ;incstack = 0
 28982                           ;receive@size stored from wreg
 28983  00827C  6E11               	movwf	receive@size^0,c
 28984                           
 28985                           ;../phy/sx1216/phy_src/phy.c: 402: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 403: {;../phy/sx1216/phy_src/phy.c: 404:   if (size > 0) {
 28986  00827E  5011               	movf	receive@size^0,w,c
 28987  008280  B4D8               	btfsc	status,2,c
 28988  008282  D009               	goto	l14964
 28989                           
 28990                           ;../phy/sx1216/phy_src/phy.c: 405:     implicitHeaderMode();
 28991  008284  EC06  F046         	call	_implicitHeaderMode	;wreg free
 28992                           
 28993                           ;../phy/sx1216/phy_src/phy.c: 407:     SX1276Write(0x22, size & 0xff);
 28994  008288  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 28995  00828E  0E22               	movlw	34
 28996  008290  EC48  F046         	call	_SX1276Write
 28997                           
 28998                           ;../phy/sx1216/phy_src/phy.c: 408:   } else {
 28999  008294  D002               	goto	l2602
 29000  008296                     l14964:
 29001                           
 29002                           ;../phy/sx1216/phy_src/phy.c: 409:     explicitHeaderMode();
 29003  008296  EC12  F046         	call	_explicitHeaderMode	;wreg free
 29004  00829A                     l2602:
 29005                           
 29006                           ; BSR set to: 61
 29007                           ;../phy/sx1216/phy_src/phy.c: 412:   SX1276Write(0x0D, 0);
 29008  00829A  0E00               	movlw	0
 29009  00829C  6E0F               	movwf	SX1276Write@data^0,c
 29010  00829E  0E0D               	movlw	13
 29011  0082A0  EC48  F046         	call	_SX1276Write
 29012                           
 29013                           ;../phy/sx1216/phy_src/phy.c: 413:   SX1276Write(0x12, 0xFF);
 29014  0082A4  0EFF               	movlw	255
 29015  0082A6  6E0F               	movwf	SX1276Write@data^0,c
 29016  0082A8  0E12               	movlw	18
 29017  0082AA  EC48  F046         	call	_SX1276Write
 29018                           
 29019                           ;../phy/sx1216/phy_src/phy.c: 414:   SX1276Write(0x01,0x80 | 0x05);
 29020  0082AE  0E85               	movlw	133
 29021  0082B0  6E0F               	movwf	SX1276Write@data^0,c
 29022  0082B2  0E01               	movlw	1
 29023  0082B4  EC48  F046         	call	_SX1276Write
 29024                           
 29025                           ; BSR set to: 61
 29026  0082B8  0012               	return		;funcret
 29027  0082BA                     __end_of_receive:
 29028                           	opt callstack 0
 29029                           
 29030 ;; *************** function _implicitHeaderMode *****************
 29031 ;; Defined at:
 29032 ;;		line 388 in file "../phy/sx1216/phy_src/phy.c"
 29033 ;; Parameters:    Size  Location     Type
 29034 ;;		None
 29035 ;; Auto vars:     Size  Location     Type
 29036 ;;		None
 29037 ;; Return value:  Size  Location     Type
 29038 ;;                  1    wreg      void 
 29039 ;; Registers used:
 29040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29041 ;; Tracked objects:
 29042 ;;		On entry : 0/3D
 29043 ;;		On exit  : 3F/3D
 29044 ;;		Unchanged: 0/0
 29045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29050 ;;Total ram usage:        0 bytes
 29051 ;; Hardware stack levels used:    1
 29052 ;; Hardware stack levels required when called:   11
 29053 ;; This function calls:
 29054 ;;		_SX1276Read
 29055 ;;		_SX1276Write
 29056 ;; This function is called by:
 29057 ;;		_receive
 29058 ;; This function uses a non-reentrant model
 29059 ;;
 29060                           
 29061                           	psect	text185
 29062  008C0C                     __ptext185:
 29063                           	opt callstack 0
 29064  008C0C                     _implicitHeaderMode:
 29065                           	opt callstack 14
 29066                           
 29067                           ;../phy/sx1216/phy_src/phy.c: 390:   _implicitHeaderMode = 1;
 29068                           
 29069                           ; BSR set to: 61
 29070                           ;incstack = 0
 29071  008C0C  0E01               	movlw	1
 29072  008C0E  0100               	movlb	0	; () banked
 29073  008C10  6FD7               	movwf	__implicitHeaderMode& (0+255),b
 29074                           
 29075                           ; BSR set to: 0
 29076                           ;../phy/sx1216/phy_src/phy.c: 392:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 29077  008C12  0E1D               	movlw	29
 29078  008C14  EC2A  F046         	call	_SX1276Read
 29079  008C18  0901               	iorlw	1
 29080  008C1A  6E0F               	movwf	SX1276Write@data^0,c
 29081  008C1C  0E1D               	movlw	29
 29082  008C1E  EC48  F046         	call	_SX1276Write
 29083                           
 29084                           ; BSR set to: 61
 29085  008C22  0012               	return		;funcret
 29086  008C24                     __end_of_implicitHeaderMode:
 29087                           	opt callstack 0
 29088                           
 29089 ;; *************** function _explicitHeaderMode *****************
 29090 ;; Defined at:
 29091 ;;		line 374 in file "../phy/sx1216/phy_src/phy.c"
 29092 ;; Parameters:    Size  Location     Type
 29093 ;;		None
 29094 ;; Auto vars:     Size  Location     Type
 29095 ;;		None
 29096 ;; Return value:  Size  Location     Type
 29097 ;;                  1    wreg      void 
 29098 ;; Registers used:
 29099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29100 ;; Tracked objects:
 29101 ;;		On entry : 0/3D
 29102 ;;		On exit  : 3F/3D
 29103 ;;		Unchanged: 0/0
 29104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29109 ;;Total ram usage:        0 bytes
 29110 ;; Hardware stack levels used:    1
 29111 ;; Hardware stack levels required when called:   11
 29112 ;; This function calls:
 29113 ;;		_SX1276Read
 29114 ;;		_SX1276Write
 29115 ;; This function is called by:
 29116 ;;		_receive
 29117 ;;		_initRadio
 29118 ;;		_PHY_DataReq
 29119 ;; This function uses a non-reentrant model
 29120 ;;
 29121                           
 29122                           	psect	text186
 29123  008C24                     __ptext186:
 29124                           	opt callstack 0
 29125  008C24                     _explicitHeaderMode:
 29126                           	opt callstack 14
 29127                           
 29128                           ;../phy/sx1216/phy_src/phy.c: 376:   _implicitHeaderMode = 0;
 29129                           
 29130                           ; BSR set to: 61
 29131                           ;incstack = 0
 29132  008C24  0E00               	movlw	0
 29133  008C26  0100               	movlb	0	; () banked
 29134  008C28  6FD7               	movwf	__implicitHeaderMode& (0+255),b
 29135                           
 29136                           ; BSR set to: 0
 29137                           ;../phy/sx1216/phy_src/phy.c: 378:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 29138  008C2A  0E1D               	movlw	29
 29139  008C2C  EC2A  F046         	call	_SX1276Read
 29140  008C30  0BFE               	andlw	254
 29141  008C32  6E0F               	movwf	SX1276Write@data^0,c
 29142  008C34  0E1D               	movlw	29
 29143  008C36  EC48  F046         	call	_SX1276Write
 29144                           
 29145                           ; BSR set to: 61
 29146  008C3A  0012               	return		;funcret
 29147  008C3C                     __end_of_explicitHeaderMode:
 29148                           	opt callstack 0
 29149                           
 29150 ;; *************** function _enableCrc *****************
 29151 ;; Defined at:
 29152 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 29153 ;; Parameters:    Size  Location     Type
 29154 ;;		None
 29155 ;; Auto vars:     Size  Location     Type
 29156 ;;		None
 29157 ;; Return value:  Size  Location     Type
 29158 ;;                  1    wreg      void 
 29159 ;; Registers used:
 29160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29161 ;; Tracked objects:
 29162 ;;		On entry : 3F/3D
 29163 ;;		On exit  : 3F/3D
 29164 ;;		Unchanged: 0/0
 29165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29170 ;;Total ram usage:        0 bytes
 29171 ;; Hardware stack levels used:    1
 29172 ;; Hardware stack levels required when called:   11
 29173 ;; This function calls:
 29174 ;;		_SX1276Read
 29175 ;;		_SX1276Write
 29176 ;; This function is called by:
 29177 ;;		_initRadio
 29178 ;; This function uses a non-reentrant model
 29179 ;;
 29180                           
 29181                           	psect	text187
 29182  008C7E                     __ptext187:
 29183                           	opt callstack 0
 29184  008C7E                     _enableCrc:
 29185                           	opt callstack 15
 29186                           
 29187                           ; BSR set to: 61
 29188                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 29189                           
 29190                           ; BSR set to: 61
 29191                           ;incstack = 0
 29192  008C7E  0E1E               	movlw	30
 29193  008C80  EC2A  F046         	call	_SX1276Read
 29194  008C84  0904               	iorlw	4
 29195  008C86  6E0F               	movwf	SX1276Write@data^0,c
 29196  008C88  0E1E               	movlw	30
 29197  008C8A  EC48  F046         	call	_SX1276Write
 29198                           
 29199                           ; BSR set to: 61
 29200  008C8E  0012               	return		;funcret
 29201  008C90                     __end_of_enableCrc:
 29202                           	opt callstack 0
 29203                           
 29204 ;; *************** function _SX1276Write *****************
 29205 ;; Defined at:
 29206 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 29207 ;; Parameters:    Size  Location     Type
 29208 ;;  addr            1    wreg     unsigned char 
 29209 ;;  data            1   14[COMRAM] unsigned char 
 29210 ;; Auto vars:     Size  Location     Type
 29211 ;;  addr            1   15[COMRAM] unsigned char 
 29212 ;; Return value:  Size  Location     Type
 29213 ;;                  1    wreg      void 
 29214 ;; Registers used:
 29215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29216 ;; Tracked objects:
 29217 ;;		On entry : 0/0
 29218 ;;		On exit  : 3F/3D
 29219 ;;		Unchanged: 0/0
 29220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29221 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29225 ;;Total ram usage:        2 bytes
 29226 ;; Hardware stack levels used:    1
 29227 ;; Hardware stack levels required when called:   10
 29228 ;; This function calls:
 29229 ;;		_SX1276WriteBuffer
 29230 ;; This function is called by:
 29231 ;;		_idle
 29232 ;;		_setTxPower
 29233 ;;		_setFrequency
 29234 ;;		_setSpreadingFactor
 29235 ;;		_setSignalBandwidth
 29236 ;;		_setCodingRate4
 29237 ;;		_setPreambleLength
 29238 ;;		_setSyncWord
 29239 ;;		_enableCrc
 29240 ;;		_explicitHeaderMode
 29241 ;;		_implicitHeaderMode
 29242 ;;		_receive
 29243 ;;		_initRadio
 29244 ;;		_cad
 29245 ;;		_start_radio_cad
 29246 ;;		_DIO0_Receive_ISR
 29247 ;;		_PHY_DataReq
 29248 ;; This function uses a non-reentrant model
 29249 ;;
 29250                           
 29251                           	psect	text188
 29252  008C90                     __ptext188:
 29253                           	opt callstack 0
 29254  008C90                     _SX1276Write:
 29255                           	opt callstack 15
 29256                           
 29257                           ; BSR set to: 61
 29258                           ;incstack = 0
 29259                           ;SX1276Write@addr stored from wreg
 29260  008C90  6E10               	movwf	SX1276Write@addr^0,c
 29261                           
 29262                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 29263  008C92  0E0F               	movlw	low SX1276Write@data
 29264  008C94  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 29265  008C96  0E01               	movlw	1
 29266  008C98  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 29267  008C9A  5010               	movf	SX1276Write@addr^0,w,c
 29268  008C9C  EC53  F044         	call	_SX1276WriteBuffer
 29269                           
 29270                           ; BSR set to: 61
 29271  008CA0  0012               	return		;funcret
 29272  008CA2                     __end_of_SX1276Write:
 29273                           	opt callstack 0
 29274                           
 29275 ;; *************** function _SX1276WriteBuffer *****************
 29276 ;; Defined at:
 29277 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 29278 ;; Parameters:    Size  Location     Type
 29279 ;;  addr            1    wreg     unsigned char 
 29280 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 29281 ;;		 -> SX1276Write@data(1), 
 29282 ;;  size            1    9[COMRAM] unsigned char 
 29283 ;; Auto vars:     Size  Location     Type
 29284 ;;  addr            1   10[COMRAM] unsigned char 
 29285 ;;  i               1    0        unsigned char 
 29286 ;; Return value:  Size  Location     Type
 29287 ;;                  1    wreg      void 
 29288 ;; Registers used:
 29289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29290 ;; Tracked objects:
 29291 ;;		On entry : 0/0
 29292 ;;		On exit  : 3F/3D
 29293 ;;		Unchanged: 0/0
 29294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29298 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29299 ;;Total ram usage:        3 bytes
 29300 ;; Hardware stack levels used:    1
 29301 ;; Hardware stack levels required when called:    9
 29302 ;; This function calls:
 29303 ;;		_SPI1_ExchangeByte
 29304 ;;		_SPI1_WriteBlock
 29305 ;; This function is called by:
 29306 ;;		_SX1276Write
 29307 ;; This function uses a non-reentrant model
 29308 ;;
 29309                           
 29310                           	psect	text189
 29311  0088A6                     __ptext189:
 29312                           	opt callstack 0
 29313  0088A6                     _SX1276WriteBuffer:
 29314                           	opt callstack 15
 29315                           
 29316                           ; BSR set to: 61
 29317                           ;incstack = 0
 29318                           ;SX1276WriteBuffer@addr stored from wreg
 29319  0088A6  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 29320                           
 29321                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 29322  0088A8  9CBC               	bcf	188,6,c	;volatile
 29323                           
 29324                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 29325  0088AA  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 29326  0088AC  0980               	iorlw	128
 29327  0088AE  ECBC  F045         	call	_SPI1_ExchangeByte
 29328                           
 29329                           ; BSR set to: 61
 29330                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 29331  0088B2  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 29332  0088B8  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 29333  0088BA  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 29334  0088C0  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 29335  0088C2  ECD2  F042         	call	_SPI1_WriteBlock	;wreg free
 29336                           
 29337                           ; BSR set to: 61
 29338  0088C6  8CBC               	bsf	188,6,c	;volatile
 29339                           
 29340                           ; BSR set to: 61
 29341  0088C8  0012               	return		;funcret
 29342  0088CA                     __end_of_SX1276WriteBuffer:
 29343                           	opt callstack 0
 29344                           
 29345 ;; *************** function _SPI1_WriteBlock *****************
 29346 ;; Defined at:
 29347 ;;		line 121 in file "mcc_generated_files/spi1.c"
 29348 ;; Parameters:    Size  Location     Type
 29349 ;;  block           2    2[COMRAM] PTR void 
 29350 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29351 ;;  blockSize       2    4[COMRAM] unsigned int 
 29352 ;; Auto vars:     Size  Location     Type
 29353 ;;  data            2    6[COMRAM] PTR unsigned char 
 29354 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29355 ;; Return value:  Size  Location     Type
 29356 ;;                  1    wreg      void 
 29357 ;; Registers used:
 29358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29359 ;; Tracked objects:
 29360 ;;		On entry : 3F/3D
 29361 ;;		On exit  : 3F/3D
 29362 ;;		Unchanged: 0/0
 29363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29367 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29368 ;;Total ram usage:        6 bytes
 29369 ;; Hardware stack levels used:    1
 29370 ;; Hardware stack levels required when called:    8
 29371 ;; This function calls:
 29372 ;;		_SPI1_ExchangeByte
 29373 ;; This function is called by:
 29374 ;;		_SX1276WriteBuffer
 29375 ;;		_PHY_DataReq
 29376 ;; This function uses a non-reentrant model
 29377 ;;
 29378                           
 29379                           	psect	text190
 29380  0085A4                     __ptext190:
 29381                           	opt callstack 0
 29382  0085A4                     _SPI1_WriteBlock:
 29383                           	opt callstack 15
 29384                           
 29385                           ; BSR set to: 61
 29386                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 29387                           
 29388                           ; BSR set to: 61
 29389                           ;incstack = 0
 29390  0085A4  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 29391  0085AA  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 29392                           
 29393                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29394  0085B0  D00B               	goto	l13822
 29395  0085B2                     l13818:
 29396                           
 29397                           ; BSR set to: 61
 29398                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 29399  0085B2  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 29400  0085B8  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 29401  0085BE  50DF               	movf	indf2,w,c
 29402  0085C0  ECBC  F045         	call	_SPI1_ExchangeByte
 29403                           
 29404                           ; BSR set to: 61
 29405  0085C4  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 29406  0085C6  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 29407  0085C8                     l13822:
 29408                           
 29409                           ; BSR set to: 61
 29410                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29411  0085C8  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 29412  0085CA  A0D8               	btfss	status,0,c
 29413  0085CC  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 29414  0085CE  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 29415  0085D0  E1F0               	bnz	l13818
 29416  0085D2  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 29417  0085D4  B4D8               	btfsc	status,2,c
 29418  0085D6  0012               	return	
 29419  0085D8  D7EC               	goto	l13818
 29420  0085DA                     __end_of_SPI1_WriteBlock:
 29421                           	opt callstack 0
 29422                           
 29423 ;; *************** function _SX1276Read *****************
 29424 ;; Defined at:
 29425 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 29426 ;; Parameters:    Size  Location     Type
 29427 ;;  addr            1    wreg     unsigned char 
 29428 ;; Auto vars:     Size  Location     Type
 29429 ;;  addr            1   12[COMRAM] unsigned char 
 29430 ;;  data            1   13[COMRAM] unsigned char 
 29431 ;; Return value:  Size  Location     Type
 29432 ;;                  1    wreg      unsigned char 
 29433 ;; Registers used:
 29434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29435 ;; Tracked objects:
 29436 ;;		On entry : 0/39
 29437 ;;		On exit  : 3F/3D
 29438 ;;		Unchanged: 0/0
 29439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29444 ;;Total ram usage:        2 bytes
 29445 ;; Hardware stack levels used:    1
 29446 ;; Hardware stack levels required when called:   10
 29447 ;; This function calls:
 29448 ;;		_SX1276ReadBuffer
 29449 ;; This function is called by:
 29450 ;;		_setSpreadingFactor
 29451 ;;		_setSignalBandwidth
 29452 ;;		_getSpreadingFactor
 29453 ;;		_getSignalBandwidth
 29454 ;;		_setCodingRate4
 29455 ;;		_enableCrc
 29456 ;;		_explicitHeaderMode
 29457 ;;		_implicitHeaderMode
 29458 ;;		_initRadio
 29459 ;;		_cad
 29460 ;;		_DIO0_Receive_ISR
 29461 ;;		_radio_engine
 29462 ;; This function uses a non-reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text191
 29466  008C54                     __ptext191:
 29467                           	opt callstack 0
 29468  008C54                     _SX1276Read:
 29469                           	opt callstack 14
 29470                           
 29471                           ; BSR set to: 61
 29472                           ;incstack = 0
 29473                           ;SX1276Read@addr stored from wreg
 29474  008C54  6E0D               	movwf	SX1276Read@addr^0,c
 29475                           
 29476                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 29477  008C56  0E0E               	movlw	low SX1276Read@data
 29478  008C58  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 29479  008C5A  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 29480  008C5C  0E01               	movlw	1
 29481  008C5E  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 29482  008C60  500D               	movf	SX1276Read@addr^0,w,c
 29483  008C62  EC07  F044         	call	_SX1276ReadBuffer
 29484                           
 29485                           ; BSR set to: 61
 29486                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 29487  008C66  500E               	movf	SX1276Read@data^0,w,c
 29488                           
 29489                           ; BSR set to: 61
 29490  008C68  0012               	return		;funcret
 29491  008C6A                     __end_of_SX1276Read:
 29492                           	opt callstack 0
 29493                           
 29494 ;; *************** function _SX1276ReadBuffer *****************
 29495 ;; Defined at:
 29496 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 29497 ;; Parameters:    Size  Location     Type
 29498 ;;  addr            1    wreg     unsigned char 
 29499 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 29500 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29501 ;;  size            1   10[COMRAM] unsigned char 
 29502 ;; Auto vars:     Size  Location     Type
 29503 ;;  addr            1   11[COMRAM] unsigned char 
 29504 ;;  i               1    0        unsigned char 
 29505 ;; Return value:  Size  Location     Type
 29506 ;;                  1    wreg      void 
 29507 ;; Registers used:
 29508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29509 ;; Tracked objects:
 29510 ;;		On entry : 0/3D
 29511 ;;		On exit  : 3F/3D
 29512 ;;		Unchanged: 0/0
 29513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29517 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29518 ;;Total ram usage:        4 bytes
 29519 ;; Hardware stack levels used:    1
 29520 ;; Hardware stack levels required when called:    9
 29521 ;; This function calls:
 29522 ;;		_SPI1_ExchangeByte
 29523 ;;		_SPI1_ReadBlock
 29524 ;; This function is called by:
 29525 ;;		_SX1276Read
 29526 ;;		_DIO0_Receive_ISR
 29527 ;; This function uses a non-reentrant model
 29528 ;;
 29529                           
 29530                           	psect	text192
 29531  00880E                     __ptext192:
 29532                           	opt callstack 0
 29533  00880E                     _SX1276ReadBuffer:
 29534                           	opt callstack 14
 29535                           
 29536                           ; BSR set to: 61
 29537                           ;incstack = 0
 29538                           ;SX1276ReadBuffer@addr stored from wreg
 29539  00880E  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 29540                           
 29541                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 29542  008810  9CBC               	bcf	188,6,c	;volatile
 29543                           
 29544                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 29545  008812  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 29546  008814  0B7F               	andlw	127
 29547  008816  ECBC  F045         	call	_SPI1_ExchangeByte
 29548                           
 29549                           ; BSR set to: 61
 29550                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 29551  00881A  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 29552  008820  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 29553  008826  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 29554  00882C  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 29555  00882E  EC65  F042         	call	_SPI1_ReadBlock	;wreg free
 29556                           
 29557                           ; BSR set to: 61
 29558  008832  8CBC               	bsf	188,6,c	;volatile
 29559                           
 29560                           ; BSR set to: 61
 29561  008834  0012               	return		;funcret
 29562  008836                     __end_of_SX1276ReadBuffer:
 29563                           	opt callstack 0
 29564                           
 29565 ;; *************** function _SPI1_ReadBlock *****************
 29566 ;; Defined at:
 29567 ;;		line 130 in file "mcc_generated_files/spi1.c"
 29568 ;; Parameters:    Size  Location     Type
 29569 ;;  block           2    2[COMRAM] PTR void 
 29570 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29571 ;;  blockSize       2    4[COMRAM] unsigned int 
 29572 ;; Auto vars:     Size  Location     Type
 29573 ;;  data            2    6[COMRAM] PTR unsigned char 
 29574 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29575 ;; Return value:  Size  Location     Type
 29576 ;;                  1    wreg      void 
 29577 ;; Registers used:
 29578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29579 ;; Tracked objects:
 29580 ;;		On entry : 3F/3D
 29581 ;;		On exit  : 3F/3D
 29582 ;;		Unchanged: 0/0
 29583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29588 ;;Total ram usage:        6 bytes
 29589 ;; Hardware stack levels used:    1
 29590 ;; Hardware stack levels required when called:    8
 29591 ;; This function calls:
 29592 ;;		_SPI1_ExchangeByte
 29593 ;; This function is called by:
 29594 ;;		_SX1276ReadBuffer
 29595 ;; This function uses a non-reentrant model
 29596 ;;
 29597                           
 29598                           	psect	text193
 29599  0084CA                     __ptext193:
 29600                           	opt callstack 0
 29601  0084CA                     _SPI1_ReadBlock:
 29602                           	opt callstack 14
 29603                           
 29604                           ; BSR set to: 61
 29605                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 29606                           
 29607                           ; BSR set to: 61
 29608                           ;incstack = 0
 29609  0084CA  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 29610  0084D0  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 29611                           
 29612                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29613  0084D6  D00C               	goto	l13830
 29614  0084D8                     l13826:
 29615                           
 29616                           ; BSR set to: 61
 29617                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 29618  0084D8  0E00               	movlw	0
 29619  0084DA  ECBC  F045         	call	_SPI1_ExchangeByte
 29620  0084DE  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 29621  0084E4  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 29622  0084EA  6EDF               	movwf	indf2,c
 29623                           
 29624                           ; BSR set to: 61
 29625  0084EC  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 29626  0084EE  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 29627  0084F0                     l13830:
 29628                           
 29629                           ; BSR set to: 61
 29630                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29631  0084F0  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 29632  0084F2  A0D8               	btfss	status,0,c
 29633  0084F4  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 29634  0084F6  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 29635  0084F8  E1EF               	bnz	l13826
 29636  0084FA  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 29637  0084FC  B4D8               	btfsc	status,2,c
 29638  0084FE  0012               	return	
 29639  008500  D7EB               	goto	l13826
 29640  008502                     __end_of_SPI1_ReadBlock:
 29641                           	opt callstack 0
 29642                           
 29643 ;; *************** function _SPI1_ExchangeByte *****************
 29644 ;; Defined at:
 29645 ;;		line 100 in file "mcc_generated_files/spi1.c"
 29646 ;; Parameters:    Size  Location     Type
 29647 ;;  data            1    wreg     unsigned char 
 29648 ;; Auto vars:     Size  Location     Type
 29649 ;;  data            1    1[COMRAM] unsigned char 
 29650 ;; Return value:  Size  Location     Type
 29651 ;;                  1    wreg      unsigned char 
 29652 ;; Registers used:
 29653 ;;		wreg, status,2
 29654 ;; Tracked objects:
 29655 ;;		On entry : 0/3D
 29656 ;;		On exit  : 3F/3D
 29657 ;;		Unchanged: 0/0
 29658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29663 ;;Total ram usage:        1 bytes
 29664 ;; Hardware stack levels used:    1
 29665 ;; Hardware stack levels required when called:    7
 29666 ;; This function calls:
 29667 ;;		Nothing
 29668 ;; This function is called by:
 29669 ;;		_SPI1_WriteBlock
 29670 ;;		_SPI1_ReadBlock
 29671 ;;		_SX1276ReadBuffer
 29672 ;;		_SX1276WriteBuffer
 29673 ;;		_PHY_DataReq
 29674 ;; This function uses a non-reentrant model
 29675 ;;
 29676                           
 29677                           	psect	text194
 29678  008B78                     __ptext194:
 29679                           	opt callstack 0
 29680  008B78                     _SPI1_ExchangeByte:
 29681                           	opt callstack 15
 29682                           
 29683                           ; BSR set to: 61
 29684                           ;incstack = 0
 29685                           ;SPI1_ExchangeByte@data stored from wreg
 29686  008B78  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 29687                           
 29688                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 29689  008B7A  0E01               	movlw	1
 29690  008B7C  013D               	movlb	61	; () banked
 29691  008B7E  6F12               	movwf	18,b	;volatile
 29692                           
 29693                           ; BSR set to: 61
 29694                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 29695  008B80  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 29696  008B86                     l1071:
 29697  008B86  0139               	movlb	57	; () banked
 29698  008B88  A9A2               	btfss	162,4,b	;volatile
 29699  008B8A  D7FD               	goto	l1071
 29700                           
 29701                           ; BSR set to: 57
 29702                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 29703  008B8C  013D               	movlb	61	; () banked
 29704  008B8E  5110               	movf	16,w,b	;volatile
 29705                           
 29706                           ; BSR set to: 61
 29707  008B90  0012               	return		;funcret
 29708  008B92                     __end_of_SPI1_ExchangeByte:
 29709                           	opt callstack 0
 29710                           
 29711 ;; *************** function _computeFRF *****************
 29712 ;; Defined at:
 29713 ;;		line 705 in file "../phy/sx1216/phy_src/phy.c"
 29714 ;; Parameters:    Size  Location     Type
 29715 ;;		None
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;  num             4   42[COMRAM] unsigned long 
 29718 ;;  num_mod         4   38[COMRAM] unsigned long 
 29719 ;;  frequency       4   34[COMRAM] unsigned long 
 29720 ;;  i               1   46[COMRAM] unsigned char 
 29721 ;; Return value:  Size  Location     Type
 29722 ;;                  1    wreg      void 
 29723 ;; Registers used:
 29724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29725 ;; Tracked objects:
 29726 ;;		On entry : 0/0
 29727 ;;		On exit  : 0/0
 29728 ;;		Unchanged: 0/0
 29729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29731 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29733 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29734 ;;Total ram usage:       13 bytes
 29735 ;; Hardware stack levels used:    1
 29736 ;; Hardware stack levels required when called:    8
 29737 ;; This function calls:
 29738 ;;		___lldiv
 29739 ;;		___llmod
 29740 ;; This function is called by:
 29741 ;;		_initRadio
 29742 ;; This function uses a non-reentrant model
 29743 ;;
 29744                           
 29745                           	psect	text195
 29746  0039EC                     __ptext195:
 29747                           	opt callstack 0
 29748  0039EC                     _computeFRF:
 29749                           	opt callstack 18
 29750                           
 29751                           ;../phy/sx1216/phy_src/phy.c: 707:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 29752                           
 29753                           ; BSR set to: 61
 29754                           ;incstack = 0
 29755  0039EC  0E00               	movlw	0
 29756  0039EE  6E2F               	movwf	computeFRF@i^0,c
 29757  0039F0                     l14972:
 29758                           
 29759                           ;../phy/sx1216/phy_src/phy.c: 708:     {;../phy/sx1216/phy_src/phy.c: 709:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 710:         frequency = fhssL
      +                          ist[i];
 29760  0039F0  502F               	movf	computeFRF@i^0,w,c
 29761  0039F2  0D04               	mullw	4
 29762  0039F4  0EAB               	movlw	low _fhssList
 29763  0039F6  24F3               	addwf	243,w,c
 29764  0039F8  6EF6               	movwf	tblptrl,c
 29765  0039FA  0EFC               	movlw	high _fhssList
 29766  0039FC  20F4               	addwfc	244,w,c
 29767  0039FE  6EF7               	movwf	tblptrh,c
 29768  003A00                     	if	1	;There are 3 active tblptr bytes
 29769  003A00  6AF8               	clrf	tblptru,c
 29770  003A02  0E00               	movlw	low (__mediumconst shr (0+16))
 29771  003A04  22F8               	addwfc	tblptru,f,c
 29772  003A06                     	endif
 29773  003A06  0009               	tblrd		*+
 29774  003A08  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 29775  003A0E  0009               	tblrd		*+
 29776  003A10  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 29777  003A16  0009               	tblrd		*+
 29778  003A18  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 29779  003A1E  000A               	tblrd		*-
 29780  003A20  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 29781                           
 29782                           ;../phy/sx1216/phy_src/phy.c: 717:         num = frequency / 15625;
 29783  003A26  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 29784  003A2C  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 29785  003A32  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 29786  003A38  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 29787  003A3E  0E09               	movlw	9
 29788  003A40  6E1A               	movwf	___lldiv@divisor^0,c
 29789  003A42  0E3D               	movlw	61
 29790  003A44  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29791  003A46  0E00               	movlw	0
 29792  003A48  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29793  003A4A  0E00               	movlw	0
 29794  003A4C  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29795  003A4E  EC19  F038         	call	___lldiv	;wreg free
 29796  003A52  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 29797  003A58  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 29798  003A5E  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 29799  003A64  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 29800                           
 29801                           ;../phy/sx1216/phy_src/phy.c: 718:         num_mod = frequency % 15625;
 29802  003A6A  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 29803  003A70  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 29804  003A76  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 29805  003A7C  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 29806  003A82  0E09               	movlw	9
 29807  003A84  6E06               	movwf	___llmod@divisor^0,c
 29808  003A86  0E3D               	movlw	61
 29809  003A88  6E07               	movwf	(___llmod@divisor+1)^0,c
 29810  003A8A  0E00               	movlw	0
 29811  003A8C  6E08               	movwf	(___llmod@divisor+2)^0,c
 29812  003A8E  0E00               	movlw	0
 29813  003A90  6E09               	movwf	(___llmod@divisor+3)^0,c
 29814  003A92  EC1E  F03A         	call	___llmod	;wreg free
 29815  003A96  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 29816  003A9C  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 29817  003AA2  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 29818  003AA8  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 29819                           
 29820                           ;../phy/sx1216/phy_src/phy.c: 722:         num <<= 8;
 29821  003AAE  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 29822  003AB4  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 29823  003ABA  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 29824  003AC0  6A2B               	clrf	computeFRF@num^0,c
 29825                           
 29826                           ;../phy/sx1216/phy_src/phy.c: 723:         num_mod <<= 8;
 29827  003AC2  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 29828  003AC8  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 29829  003ACE  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 29830  003AD4  6A27               	clrf	computeFRF@num_mod^0,c
 29831                           
 29832                           ;../phy/sx1216/phy_src/phy.c: 727:         num_mod = num_mod / 15625;
 29833  003AD6  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 29834  003ADC  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 29835  003AE2  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 29836  003AE8  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 29837  003AEE  0E09               	movlw	9
 29838  003AF0  6E1A               	movwf	___lldiv@divisor^0,c
 29839  003AF2  0E3D               	movlw	61
 29840  003AF4  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29841  003AF6  0E00               	movlw	0
 29842  003AF8  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29843  003AFA  0E00               	movlw	0
 29844  003AFC  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29845  003AFE  EC19  F038         	call	___lldiv	;wreg free
 29846  003B02  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 29847  003B08  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 29848  003B0E  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 29849  003B14  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 29850                           
 29851                           ;../phy/sx1216/phy_src/phy.c: 728:         num += num_mod;
 29852  003B1A  5027               	movf	computeFRF@num_mod^0,w,c
 29853  003B1C  262B               	addwf	computeFRF@num^0,f,c
 29854  003B1E  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 29855  003B20  222C               	addwfc	(computeFRF@num+1)^0,f,c
 29856  003B22  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 29857  003B24  222D               	addwfc	(computeFRF@num+2)^0,f,c
 29858  003B26  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 29859  003B28  222E               	addwfc	(computeFRF@num+3)^0,f,c
 29860                           
 29861                           ;../phy/sx1216/phy_src/phy.c: 730:         fhssReg[i][0] = (num >> 16);
 29862  003B2A  502F               	movf	computeFRF@i^0,w,c
 29863  003B2C  0D03               	mullw	3
 29864  003B2E  0E00               	movlw	low _fhssReg
 29865  003B30  24F3               	addwf	243,w,c
 29866  003B32  6ED9               	movwf	fsr2l,c
 29867  003B34  0E05               	movlw	high _fhssReg
 29868  003B36  20F4               	addwfc	prodh,w,c
 29869  003B38  6EDA               	movwf	fsr2h,c
 29870  003B3A  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 29871                           
 29872                           ;../phy/sx1216/phy_src/phy.c: 731:         fhssReg[i][1] = (num >> 8);
 29873  003B40  502F               	movf	computeFRF@i^0,w,c
 29874  003B42  0D03               	mullw	3
 29875  003B44  0E01               	movlw	low (_fhssReg+1)
 29876  003B46  24F3               	addwf	243,w,c
 29877  003B48  6ED9               	movwf	fsr2l,c
 29878  003B4A  0E05               	movlw	high (_fhssReg+1)
 29879  003B4C  20F4               	addwfc	prodh,w,c
 29880  003B4E  6EDA               	movwf	fsr2h,c
 29881  003B50  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 29882                           
 29883                           ;../phy/sx1216/phy_src/phy.c: 732:         fhssReg[i][2] = (num);
 29884  003B56  502F               	movf	computeFRF@i^0,w,c
 29885  003B58  0D03               	mullw	3
 29886  003B5A  0E02               	movlw	low (_fhssReg+2)
 29887  003B5C  24F3               	addwf	243,w,c
 29888  003B5E  6ED9               	movwf	fsr2l,c
 29889  003B60  0E05               	movlw	high (_fhssReg+2)
 29890  003B62  20F4               	addwfc	prodh,w,c
 29891  003B64  6EDA               	movwf	fsr2h,c
 29892  003B66  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 29893                           
 29894                           ;../phy/sx1216/phy_src/phy.c: 733:     }
 29895  003B6C  2A2F               	incf	computeFRF@i^0,f,c
 29896  003B6E  0E3E               	movlw	62
 29897  003B70  642F               	cpfsgt	computeFRF@i^0,c
 29898  003B72  D73E               	goto	l14972
 29899  003B74  0012               	return	
 29900  003B76                     __end_of_computeFRF:
 29901                           	opt callstack 0
 29902                           
 29903 ;; *************** function ___llmod *****************
 29904 ;; Defined at:
 29905 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 29906 ;; Parameters:    Size  Location     Type
 29907 ;;  dividend        4    1[COMRAM] unsigned long 
 29908 ;;  divisor         4    5[COMRAM] unsigned long 
 29909 ;; Auto vars:     Size  Location     Type
 29910 ;;  counter         1    9[COMRAM] unsigned char 
 29911 ;; Return value:  Size  Location     Type
 29912 ;;                  4    1[COMRAM] unsigned long 
 29913 ;; Registers used:
 29914 ;;		wreg, status,2, status,0
 29915 ;; Tracked objects:
 29916 ;;		On entry : 0/0
 29917 ;;		On exit  : 0/0
 29918 ;;		Unchanged: 0/0
 29919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29920 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29923 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29924 ;;Total ram usage:        9 bytes
 29925 ;; Hardware stack levels used:    1
 29926 ;; Hardware stack levels required when called:    7
 29927 ;; This function calls:
 29928 ;;		Nothing
 29929 ;; This function is called by:
 29930 ;;		_setFrequency
 29931 ;;		_computeFRF
 29932 ;; This function uses a non-reentrant model
 29933 ;;
 29934                           
 29935                           	psect	text196
 29936  00743C                     __ptext196:
 29937                           	opt callstack 0
 29938  00743C                     ___llmod:
 29939                           	opt callstack 18
 29940                           
 29941                           ;incstack = 0
 29942  00743C  5006               	movf	___llmod@divisor^0,w,c
 29943  00743E  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 29944  007440  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 29945  007442  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 29946  007444  B4D8               	btfsc	status,2,c
 29947  007446  D024               	goto	l3625
 29948  007448  0E01               	movlw	1
 29949  00744A  6E0A               	movwf	___llmod@counter^0,c
 29950  00744C  D006               	goto	l14590
 29951  00744E                     l14588:
 29952  00744E  90D8               	bcf	status,0,c
 29953  007450  3606               	rlcf	___llmod@divisor^0,f,c
 29954  007452  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 29955  007454  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 29956  007456  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 29957  007458  2A0A               	incf	___llmod@counter^0,f,c
 29958  00745A                     l14590:
 29959  00745A  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 29960  00745C  D7F8               	goto	l14588
 29961  00745E                     u14090:
 29962  00745E  5006               	movf	___llmod@divisor^0,w,c
 29963  007460  5C02               	subwf	___llmod@dividend^0,w,c
 29964  007462  5007               	movf	(___llmod@divisor+1)^0,w,c
 29965  007464  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 29966  007466  5008               	movf	(___llmod@divisor+2)^0,w,c
 29967  007468  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 29968  00746A  5009               	movf	(___llmod@divisor+3)^0,w,c
 29969  00746C  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 29970  00746E  A0D8               	btfss	status,0,c
 29971  007470  D008               	goto	l14596
 29972  007472  5006               	movf	___llmod@divisor^0,w,c
 29973  007474  5E02               	subwf	___llmod@dividend^0,f,c
 29974  007476  5007               	movf	(___llmod@divisor+1)^0,w,c
 29975  007478  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 29976  00747A  5008               	movf	(___llmod@divisor+2)^0,w,c
 29977  00747C  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 29978  00747E  5009               	movf	(___llmod@divisor+3)^0,w,c
 29979  007480  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 29980  007482                     l14596:
 29981  007482  90D8               	bcf	status,0,c
 29982  007484  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 29983  007486  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 29984  007488  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 29985  00748A  3206               	rrcf	___llmod@divisor^0,f,c
 29986  00748C  2E0A               	decfsz	___llmod@counter^0,f,c
 29987  00748E  D7E7               	goto	u14090
 29988  007490                     l3625:
 29989  007490  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 29990  007496  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 29991  00749C  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 29992  0074A2  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 29993  0074A8  0012               	return		;funcret
 29994  0074AA                     __end_of___llmod:
 29995                           	opt callstack 0
 29996                           
 29997 ;; *************** function ___lldiv *****************
 29998 ;; Defined at:
 29999 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 30000 ;; Parameters:    Size  Location     Type
 30001 ;;  dividend        4   21[COMRAM] unsigned long 
 30002 ;;  divisor         4   25[COMRAM] unsigned long 
 30003 ;; Auto vars:     Size  Location     Type
 30004 ;;  quotient        4   29[COMRAM] unsigned long 
 30005 ;;  counter         1   33[COMRAM] unsigned char 
 30006 ;; Return value:  Size  Location     Type
 30007 ;;                  4   21[COMRAM] unsigned long 
 30008 ;; Registers used:
 30009 ;;		wreg, status,2, status,0
 30010 ;; Tracked objects:
 30011 ;;		On entry : 0/3D
 30012 ;;		On exit  : 0/0
 30013 ;;		Unchanged: 0/0
 30014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30015 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30016 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30018 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30019 ;;Total ram usage:       13 bytes
 30020 ;; Hardware stack levels used:    1
 30021 ;; Hardware stack levels required when called:    7
 30022 ;; This function calls:
 30023 ;;		Nothing
 30024 ;; This function is called by:
 30025 ;;		_setFrequency
 30026 ;;		_setSpreadingFactor
 30027 ;;		_setSignalBandwidth
 30028 ;;		_computeFRF
 30029 ;; This function uses a non-reentrant model
 30030 ;;
 30031                           
 30032                           	psect	text197
 30033  007032                     __ptext197:
 30034                           	opt callstack 0
 30035  007032                     ___lldiv:
 30036                           	opt callstack 18
 30037                           
 30038                           ;incstack = 0
 30039  007032  0E00               	movlw	0
 30040  007034  6E1E               	movwf	___lldiv@quotient^0,c
 30041  007036  0E00               	movlw	0
 30042  007038  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 30043  00703A  0E00               	movlw	0
 30044  00703C  6E20               	movwf	(___lldiv@quotient+2)^0,c
 30045  00703E  0E00               	movlw	0
 30046  007040  6E21               	movwf	(___lldiv@quotient+3)^0,c
 30047  007042  501A               	movf	___lldiv@divisor^0,w,c
 30048  007044  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 30049  007046  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 30050  007048  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 30051  00704A  B4D8               	btfsc	status,2,c
 30052  00704C  D02A               	goto	l3232
 30053  00704E  0E01               	movlw	1
 30054  007050  6E22               	movwf	___lldiv@counter^0,c
 30055  007052  D006               	goto	l14548
 30056  007054                     l14546:
 30057  007054  90D8               	bcf	status,0,c
 30058  007056  361A               	rlcf	___lldiv@divisor^0,f,c
 30059  007058  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 30060  00705A  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 30061  00705C  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 30062  00705E  2A22               	incf	___lldiv@counter^0,f,c
 30063  007060                     l14548:
 30064  007060  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 30065  007062  D7F8               	goto	l14546
 30066  007064                     u14010:
 30067  007064  90D8               	bcf	status,0,c
 30068  007066  361E               	rlcf	___lldiv@quotient^0,f,c
 30069  007068  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 30070  00706A  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 30071  00706C  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 30072  00706E  501A               	movf	___lldiv@divisor^0,w,c
 30073  007070  5C16               	subwf	___lldiv@dividend^0,w,c
 30074  007072  501B               	movf	(___lldiv@divisor+1)^0,w,c
 30075  007074  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 30076  007076  501C               	movf	(___lldiv@divisor+2)^0,w,c
 30077  007078  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 30078  00707A  501D               	movf	(___lldiv@divisor+3)^0,w,c
 30079  00707C  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 30080  00707E  A0D8               	btfss	status,0,c
 30081  007080  D009               	goto	l14558
 30082  007082  501A               	movf	___lldiv@divisor^0,w,c
 30083  007084  5E16               	subwf	___lldiv@dividend^0,f,c
 30084  007086  501B               	movf	(___lldiv@divisor+1)^0,w,c
 30085  007088  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 30086  00708A  501C               	movf	(___lldiv@divisor+2)^0,w,c
 30087  00708C  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 30088  00708E  501D               	movf	(___lldiv@divisor+3)^0,w,c
 30089  007090  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 30090  007092  801E               	bsf	___lldiv@quotient^0,0,c
 30091  007094                     l14558:
 30092  007094  90D8               	bcf	status,0,c
 30093  007096  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 30094  007098  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 30095  00709A  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 30096  00709C  321A               	rrcf	___lldiv@divisor^0,f,c
 30097  00709E  2E22               	decfsz	___lldiv@counter^0,f,c
 30098  0070A0  D7E1               	goto	u14010
 30099  0070A2                     l3232:
 30100  0070A2  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 30101  0070A8  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 30102  0070AE  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 30103  0070B4  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 30104  0070BA  0012               	return		;funcret
 30105  0070BC                     __end_of___lldiv:
 30106                           	opt callstack 0
 30107                           
 30108 ;; *************** function _NWK_Init *****************
 30109 ;; Defined at:
 30110 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 30111 ;; Parameters:    Size  Location     Type
 30112 ;;		None
 30113 ;; Auto vars:     Size  Location     Type
 30114 ;;  i               1    5[COMRAM] unsigned char 
 30115 ;; Return value:  Size  Location     Type
 30116 ;;                  1    wreg      void 
 30117 ;; Registers used:
 30118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30119 ;; Tracked objects:
 30120 ;;		On entry : 3F/0
 30121 ;;		On exit  : 3F/2
 30122 ;;		Unchanged: 0/0
 30123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30128 ;;Total ram usage:        1 bytes
 30129 ;; Hardware stack levels used:    1
 30130 ;; Hardware stack levels required when called:    9
 30131 ;; This function calls:
 30132 ;;		_nwkDataReqInit
 30133 ;;		_nwkFrameInit
 30134 ;;		_nwkGroupInit
 30135 ;;		_nwkRouteInit
 30136 ;;		_nwkRxInit
 30137 ;;		_nwkTxInit
 30138 ;; This function is called by:
 30139 ;;		_SYS_Init
 30140 ;; This function uses a non-reentrant model
 30141 ;;
 30142                           
 30143                           	psect	text198
 30144  007B32                     __ptext198:
 30145                           	opt callstack 0
 30146  007B32                     _NWK_Init:
 30147                           	opt callstack 20
 30148                           
 30149                           ; BSR set to: 0
 30150                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 30151                           
 30152                           ;incstack = 0
 30153  007B32  0E00               	movlw	0
 30154  007B34  0101               	movlb	1	; () banked
 30155  007B36  6F04               	movwf	(_nwkIb+4)& (0+255),b
 30156                           
 30157                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 30158  007B38  0E00               	movlw	0
 30159  007B3A  6F05               	movwf	(_nwkIb+5)& (0+255),b
 30160                           
 30161                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 30162  007B3C  0E00               	movlw	0
 30163  007B3E  6F01               	movwf	(_nwkIb+1)& (0+255),b
 30164  007B40  0E00               	movlw	0
 30165  007B42  6F00               	movwf	_nwkIb& (0+255),b
 30166                           
 30167                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 30168  007B44  0E00               	movlw	0
 30169  007B46  6F27               	movwf	(_nwkIb+39)& (0+255),b
 30170  007B48  0E00               	movlw	0
 30171  007B4A  6F26               	movwf	(_nwkIb+38)& (0+255),b
 30172                           
 30173                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 30174  007B4C  0E00               	movlw	0
 30175  007B4E  6E06               	movwf	NWK_Init@i^0,c
 30176  007B50                     l13052:
 30177                           
 30178                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 30179  007B50  5006               	movf	NWK_Init@i^0,w,c
 30180  007B52  0D02               	mullw	2
 30181  007B54  0E06               	movlw	low (_nwkIb+6)
 30182  007B56  24F3               	addwf	243,w,c
 30183  007B58  6ED9               	movwf	fsr2l,c
 30184  007B5A  0E01               	movlw	high (_nwkIb+6)
 30185  007B5C  20F4               	addwfc	prodh,w,c
 30186  007B5E  6EDA               	movwf	fsr2h,c
 30187  007B60  0E00               	movlw	0
 30188  007B62  6EDE               	movwf	postinc2,c
 30189  007B64  0E00               	movlw	0
 30190  007B66  6EDD               	movwf	postdec2,c
 30191  007B68  2A06               	incf	NWK_Init@i^0,f,c
 30192  007B6A  0E0F               	movlw	15
 30193  007B6C  6406               	cpfsgt	NWK_Init@i^0,c
 30194  007B6E  D7F0               	goto	l13052
 30195                           
 30196                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 30197  007B70  EC97  F03F         	call	_nwkTxInit	;wreg free
 30198                           
 30199                           ; BSR set to: 1
 30200                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 30201  007B74  ECDF  F03E         	call	_nwkRxInit	;wreg free
 30202                           
 30203                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 30204  007B78  ECAA  F044         	call	_nwkFrameInit	;wreg free
 30205                           
 30206                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 30207  007B7C  ECD3  F046         	call	_nwkDataReqInit	;wreg free
 30208                           
 30209                           ; BSR set to: 0
 30210                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 30211  007B80  EC91  F03E         	call	_nwkRouteInit	;wreg free
 30212                           
 30213                           ; BSR set to: 2
 30214                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 30215  007B84  EC2E  F044         	call	_nwkGroupInit	;wreg free
 30216                           
 30217                           ; BSR set to: 2
 30218  007B88  0012               	return		;funcret
 30219  007B8A                     __end_of_NWK_Init:
 30220                           	opt callstack 0
 30221                           
 30222 ;; *************** function _nwkTxInit *****************
 30223 ;; Defined at:
 30224 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 30225 ;; Parameters:    Size  Location     Type
 30226 ;;		None
 30227 ;; Auto vars:     Size  Location     Type
 30228 ;;		None
 30229 ;; Return value:  Size  Location     Type
 30230 ;;                  1    wreg      void 
 30231 ;; Registers used:
 30232 ;;		wreg, status,2, status,0
 30233 ;; Tracked objects:
 30234 ;;		On entry : 3E/1
 30235 ;;		On exit  : 3F/1
 30236 ;;		Unchanged: 0/0
 30237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30242 ;;Total ram usage:        0 bytes
 30243 ;; Hardware stack levels used:    1
 30244 ;; Hardware stack levels required when called:    7
 30245 ;; This function calls:
 30246 ;;		Nothing
 30247 ;; This function is called by:
 30248 ;;		_NWK_Init
 30249 ;; This function uses a non-reentrant model
 30250 ;;
 30251                           
 30252                           	psect	text199
 30253  007F2E                     __ptext199:
 30254                           	opt callstack 0
 30255  007F2E                     _nwkTxInit:
 30256                           	opt callstack 21
 30257                           
 30258                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 30259                           
 30260                           ; BSR set to: 2
 30261                           ;incstack = 0
 30262  007F2E  0E00               	movlw	0
 30263  007F30  0100               	movlb	0	; () banked
 30264  007F32  6FBD               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 30265  007F34  0E00               	movlw	0
 30266  007F36  6FBE               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 30267                           
 30268                           ; BSR set to: 0
 30269                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 30270  007F38  0EC8               	movlw	200
 30271  007F3A  0101               	movlb	1	; () banked
 30272  007F3C  6FBE               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 30273  007F3E  0E00               	movlw	0
 30274  007F40  6FBF               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 30275  007F42  0E00               	movlw	0
 30276  007F44  6FC0               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 30277  007F46  0E00               	movlw	0
 30278  007F48  6FC1               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 30279                           
 30280                           ; BSR set to: 1
 30281                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30282  007F4A  0E00               	movlw	0
 30283  007F4C  6FC2               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 30284                           
 30285                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 30286  007F4E  0E00               	movlw	low _nwkTxAckWaitTimerHandler
 30287  007F50  6FC3               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 30288  007F52  0E6E               	movlw	high _nwkTxAckWaitTimerHandler
 30289  007F54  6FC4               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 30290                           
 30291                           ; BSR set to: 1
 30292                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 30293  007F56  0E14               	movlw	20
 30294  007F58  6FB1               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 30295  007F5A  0E00               	movlw	0
 30296  007F5C  6FB2               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 30297  007F5E  0E00               	movlw	0
 30298  007F60  6FB3               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 30299  007F62  0E00               	movlw	0
 30300  007F64  6FB4               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 30301                           
 30302                           ; BSR set to: 1
 30303                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30304  007F66  0E00               	movlw	0
 30305  007F68  6FB5               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 30306                           
 30307                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 30308  007F6A  0E1C               	movlw	low _nwkTxDelayTimerHandler
 30309  007F6C  6FB6               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 30310  007F6E  0E6F               	movlw	high _nwkTxDelayTimerHandler
 30311  007F70  6FB7               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 30312                           
 30313                           ; BSR set to: 1
 30314  007F72  0012               	return		;funcret
 30315  007F74                     __end_of_nwkTxInit:
 30316                           	opt callstack 0
 30317                           
 30318 ;; *************** function _nwkRxInit *****************
 30319 ;; Defined at:
 30320 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 30321 ;; Parameters:    Size  Location     Type
 30322 ;;		None
 30323 ;; Auto vars:     Size  Location     Type
 30324 ;;  i               1    4[COMRAM] unsigned char 
 30325 ;; Return value:  Size  Location     Type
 30326 ;;                  1    wreg      void 
 30327 ;; Registers used:
 30328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30329 ;; Tracked objects:
 30330 ;;		On entry : 3F/1
 30331 ;;		On exit  : 0/0
 30332 ;;		Unchanged: 0/0
 30333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30338 ;;Total ram usage:        1 bytes
 30339 ;; Hardware stack levels used:    1
 30340 ;; Hardware stack levels required when called:    8
 30341 ;; This function calls:
 30342 ;;		_NWK_OpenEndpoint
 30343 ;; This function is called by:
 30344 ;;		_NWK_Init
 30345 ;; This function uses a non-reentrant model
 30346 ;;
 30347                           
 30348                           	psect	text200
 30349  007DBE                     __ptext200:
 30350                           	opt callstack 0
 30351  007DBE                     _nwkRxInit:
 30352                           	opt callstack 20
 30353                           
 30354                           ; BSR set to: 1
 30355                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 30356                           
 30357                           ; BSR set to: 1
 30358                           ;incstack = 0
 30359  007DBE  0E00               	movlw	0
 30360  007DC0  6E05               	movwf	nwkRxInit@i^0,c
 30361  007DC2                     l12320:
 30362                           
 30363                           ; BSR set to: 1
 30364                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 30365  007DC2  5005               	movf	nwkRxInit@i^0,w,c
 30366  007DC4  0D05               	mullw	5
 30367  007DC6  0E7E               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 30368  007DC8  24F3               	addwf	243,w,c
 30369  007DCA  6ED9               	movwf	fsr2l,c
 30370  007DCC  0E02               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 30371  007DCE  20F4               	addwfc	prodh,w,c
 30372  007DD0  6EDA               	movwf	fsr2h,c
 30373  007DD2  0E00               	movlw	0
 30374  007DD4  6EDF               	movwf	indf2,c
 30375                           
 30376                           ; BSR set to: 1
 30377  007DD6  2A05               	incf	nwkRxInit@i^0,f,c
 30378                           
 30379                           ; BSR set to: 1
 30380  007DD8  0E09               	movlw	9
 30381  007DDA  6405               	cpfsgt	nwkRxInit@i^0,c
 30382  007DDC  D7F2               	goto	l12320
 30383                           
 30384                           ; BSR set to: 1
 30385                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 30386  007DDE  0E88               	movlw	136
 30387  007DE0  6FCB               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 30388  007DE2  0E13               	movlw	19
 30389  007DE4  6FCC               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 30390  007DE6  0E00               	movlw	0
 30391  007DE8  6FCD               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 30392  007DEA  0E00               	movlw	0
 30393  007DEC  6FCE               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 30394                           
 30395                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 30396  007DEE  0E00               	movlw	0
 30397  007DF0  6FCF               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 30398                           
 30399                           ; BSR set to: 1
 30400                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 30401  007DF2  0EDE               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 30402  007DF4  6FD0               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 30403  007DF6  0E7B               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 30404  007DF8  6FD1               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 30405                           
 30406                           ; BSR set to: 1
 30407                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 30408  007DFA  0E82               	movlw	low _nwkRxServiceDataInd
 30409  007DFC  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 30410  007DFE  0E75               	movlw	high _nwkRxServiceDataInd
 30411  007E00  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 30412  007E02  0E00               	movlw	0
 30413  007E04  ECFF  F044         	call	_NWK_OpenEndpoint
 30414  007E08  0012               	return		;funcret
 30415  007E0A                     __end_of_nwkRxInit:
 30416                           	opt callstack 0
 30417                           
 30418 ;; *************** function _NWK_OpenEndpoint *****************
 30419 ;; Defined at:
 30420 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 30421 ;; Parameters:    Size  Location     Type
 30422 ;;  id              1    wreg     unsigned char 
 30423 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 30424 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 30425 ;; Auto vars:     Size  Location     Type
 30426 ;;  id              1    3[COMRAM] unsigned char 
 30427 ;; Return value:  Size  Location     Type
 30428 ;;                  1    wreg      void 
 30429 ;; Registers used:
 30430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30431 ;; Tracked objects:
 30432 ;;		On entry : 3/3D
 30433 ;;		On exit  : 0/0
 30434 ;;		Unchanged: 0/0
 30435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30439 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30440 ;;Total ram usage:        3 bytes
 30441 ;; Hardware stack levels used:    1
 30442 ;; Hardware stack levels required when called:    7
 30443 ;; This function calls:
 30444 ;;		Nothing
 30445 ;; This function is called by:
 30446 ;;		_bootLoadApplication
 30447 ;;		_nwkRxInit
 30448 ;; This function uses a non-reentrant model
 30449 ;;
 30450                           
 30451                           	psect	text201
 30452  0089FE                     __ptext201:
 30453                           	opt callstack 0
 30454  0089FE                     _NWK_OpenEndpoint:
 30455                           	opt callstack 22
 30456                           
 30457                           ;incstack = 0
 30458                           ;NWK_OpenEndpoint@id stored from wreg
 30459  0089FE  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 30460                           
 30461                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 30462  008A00  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 30463  008A02  0D02               	mullw	2
 30464  008A04  0E06               	movlw	low (_nwkIb+6)
 30465  008A06  24F3               	addwf	243,w,c
 30466  008A08  6ED9               	movwf	fsr2l,c
 30467  008A0A  0E01               	movlw	high (_nwkIb+6)
 30468  008A0C  20F4               	addwfc	prodh,w,c
 30469  008A0E  6EDA               	movwf	fsr2h,c
 30470  008A10  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 30471  008A16  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 30472  008A1C  0012               	return		;funcret
 30473  008A1E                     __end_of_NWK_OpenEndpoint:
 30474                           	opt callstack 0
 30475                           
 30476 ;; *************** function _nwkRouteInit *****************
 30477 ;; Defined at:
 30478 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 30479 ;; Parameters:    Size  Location     Type
 30480 ;;		None
 30481 ;; Auto vars:     Size  Location     Type
 30482 ;;  i               1    1[COMRAM] unsigned char 
 30483 ;; Return value:  Size  Location     Type
 30484 ;;                  1    wreg      void 
 30485 ;; Registers used:
 30486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30487 ;; Tracked objects:
 30488 ;;		On entry : 3F/0
 30489 ;;		On exit  : 3F/2
 30490 ;;		Unchanged: 0/0
 30491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30496 ;;Total ram usage:        1 bytes
 30497 ;; Hardware stack levels used:    1
 30498 ;; Hardware stack levels required when called:    7
 30499 ;; This function calls:
 30500 ;;		Nothing
 30501 ;; This function is called by:
 30502 ;;		_NWK_Init
 30503 ;; This function uses a non-reentrant model
 30504 ;;
 30505                           
 30506                           	psect	text202
 30507  007D22                     __ptext202:
 30508                           	opt callstack 0
 30509  007D22                     _nwkRouteInit:
 30510                           	opt callstack 21
 30511                           
 30512                           ; BSR set to: 0
 30513                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 30514                           
 30515                           ;incstack = 0
 30516  007D22  0E00               	movlw	0
 30517  007D24  6E02               	movwf	nwkRouteInit@i^0,c
 30518  007D26                     l12352:
 30519                           
 30520                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 30521  007D26  5002               	movf	nwkRouteInit@i^0,w,c
 30522  007D28  0D07               	mullw	7
 30523  007D2A  0E35               	movlw	low (_nwkRouteTable+1)
 30524  007D2C  24F3               	addwf	243,w,c
 30525  007D2E  6ED9               	movwf	fsr2l,c
 30526  007D30  0E02               	movlw	high (_nwkRouteTable+1)
 30527  007D32  20F4               	addwfc	prodh,w,c
 30528  007D34  6EDA               	movwf	fsr2h,c
 30529  007D36  0EFF               	movlw	255
 30530  007D38  6EDE               	movwf	postinc2,c
 30531  007D3A  0EFF               	movlw	255
 30532  007D3C  6EDD               	movwf	postdec2,c
 30533                           
 30534                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 30535  007D3E  5002               	movf	nwkRouteInit@i^0,w,c
 30536  007D40  0D07               	mullw	7
 30537  007D42  0E34               	movlw	low _nwkRouteTable
 30538  007D44  24F3               	addwf	243,w,c
 30539  007D46  6ED9               	movwf	fsr2l,c
 30540  007D48  0E02               	movlw	high _nwkRouteTable
 30541  007D4A  20F4               	addwfc	prodh,w,c
 30542  007D4C  6EDA               	movwf	fsr2h,c
 30543  007D4E  0102               	movlb	2	; () banked
 30544  007D50  90DF               	bcf	indf2,0,c
 30545                           
 30546                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 30547  007D52  5002               	movf	nwkRouteInit@i^0,w,c
 30548  007D54  0D07               	mullw	7
 30549  007D56  0E39               	movlw	low (_nwkRouteTable+5)
 30550  007D58  24F3               	addwf	243,w,c
 30551  007D5A  6ED9               	movwf	fsr2l,c
 30552  007D5C  0E02               	movlw	high (_nwkRouteTable+5)
 30553  007D5E  20F4               	addwfc	prodh,w,c
 30554  007D60  6EDA               	movwf	fsr2h,c
 30555  007D62  0E00               	movlw	0
 30556  007D64  6EDF               	movwf	indf2,c
 30557                           
 30558                           ; BSR set to: 2
 30559                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 30560  007D66  2A02               	incf	nwkRouteInit@i^0,f,c
 30561                           
 30562                           ; BSR set to: 2
 30563  007D68  0E09               	movlw	9
 30564  007D6A  6402               	cpfsgt	nwkRouteInit@i^0,c
 30565  007D6C  D7DC               	goto	l12352
 30566  007D6E  0012               	return	
 30567  007D70                     __end_of_nwkRouteInit:
 30568                           	opt callstack 0
 30569                           
 30570 ;; *************** function _nwkGroupInit *****************
 30571 ;; Defined at:
 30572 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 30573 ;; Parameters:    Size  Location     Type
 30574 ;;		None
 30575 ;; Auto vars:     Size  Location     Type
 30576 ;;  i               1    1[COMRAM] unsigned char 
 30577 ;; Return value:  Size  Location     Type
 30578 ;;                  1    wreg      void 
 30579 ;; Registers used:
 30580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30581 ;; Tracked objects:
 30582 ;;		On entry : 3F/2
 30583 ;;		On exit  : 3F/2
 30584 ;;		Unchanged: 3F/0
 30585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30590 ;;Total ram usage:        1 bytes
 30591 ;; Hardware stack levels used:    1
 30592 ;; Hardware stack levels required when called:    7
 30593 ;; This function calls:
 30594 ;;		Nothing
 30595 ;; This function is called by:
 30596 ;;		_NWK_Init
 30597 ;; This function uses a non-reentrant model
 30598 ;;
 30599                           
 30600                           	psect	text203
 30601  00885C                     __ptext203:
 30602                           	opt callstack 0
 30603  00885C                     _nwkGroupInit:
 30604                           	opt callstack 21
 30605                           
 30606                           ; BSR set to: 2
 30607                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 30608                           
 30609                           ; BSR set to: 2
 30610                           ;incstack = 0
 30611  00885C  0E00               	movlw	0
 30612  00885E  6E02               	movwf	nwkGroupInit@i^0,c
 30613  008860                     l12364:
 30614                           
 30615                           ; BSR set to: 2
 30616                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 30617  008860  5002               	movf	nwkGroupInit@i^0,w,c
 30618  008862  0D02               	mullw	2
 30619  008864  0E00               	movlw	low _nwkGroups
 30620  008866  24F3               	addwf	243,w,c
 30621  008868  6ED9               	movwf	fsr2l,c
 30622  00886A  0E02               	movlw	high _nwkGroups
 30623  00886C  20F4               	addwfc	prodh,w,c
 30624  00886E  6EDA               	movwf	fsr2h,c
 30625  008870  0EFF               	movlw	255
 30626  008872  6EDE               	movwf	postinc2,c
 30627  008874  0EFF               	movlw	255
 30628  008876  6EDD               	movwf	postdec2,c
 30629                           
 30630                           ; BSR set to: 2
 30631  008878  2A02               	incf	nwkGroupInit@i^0,f,c
 30632                           
 30633                           ; BSR set to: 2
 30634  00887A  0E09               	movlw	9
 30635  00887C  6402               	cpfsgt	nwkGroupInit@i^0,c
 30636  00887E  D7F0               	goto	l12364
 30637  008880  0012               	return	
 30638  008882                     __end_of_nwkGroupInit:
 30639                           	opt callstack 0
 30640                           
 30641 ;; *************** function _nwkFrameInit *****************
 30642 ;; Defined at:
 30643 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 30644 ;; Parameters:    Size  Location     Type
 30645 ;;		None
 30646 ;; Auto vars:     Size  Location     Type
 30647 ;;  i               1    1[COMRAM] unsigned char 
 30648 ;; Return value:  Size  Location     Type
 30649 ;;                  1    wreg      void 
 30650 ;; Registers used:
 30651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30652 ;; Tracked objects:
 30653 ;;		On entry : 0/1
 30654 ;;		On exit  : 0/0
 30655 ;;		Unchanged: 0/0
 30656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30661 ;;Total ram usage:        1 bytes
 30662 ;; Hardware stack levels used:    1
 30663 ;; Hardware stack levels required when called:    7
 30664 ;; This function calls:
 30665 ;;		Nothing
 30666 ;; This function is called by:
 30667 ;;		_NWK_Init
 30668 ;; This function uses a non-reentrant model
 30669 ;;
 30670                           
 30671                           	psect	text204
 30672  008954                     __ptext204:
 30673                           	opt callstack 0
 30674  008954                     _nwkFrameInit:
 30675                           	opt callstack 21
 30676                           
 30677                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 30678                           
 30679                           ; BSR set to: 2
 30680                           ;incstack = 0
 30681  008954  0E00               	movlw	0
 30682  008956  6E02               	movwf	nwkFrameInit@i^0,c
 30683  008958                     l12338:
 30684                           
 30685                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 30686  008958  5002               	movf	nwkFrameInit@i^0,w,c
 30687  00895A  0D89               	mullw	137
 30688  00895C  0EBD               	movlw	low _nwkFrameFrames
 30689  00895E  24F3               	addwf	243,w,c
 30690  008960  6ED9               	movwf	fsr2l,c
 30691  008962  0E05               	movlw	high _nwkFrameFrames
 30692  008964  20F4               	addwfc	prodh,w,c
 30693  008966  6EDA               	movwf	fsr2h,c
 30694  008968  0E00               	movlw	0
 30695  00896A  6EDF               	movwf	indf2,c
 30696  00896C  2A02               	incf	nwkFrameInit@i^0,f,c
 30697  00896E  0E04               	movlw	4
 30698  008970  6402               	cpfsgt	nwkFrameInit@i^0,c
 30699  008972  D7F2               	goto	l12338
 30700  008974  0012               	return	
 30701  008976                     __end_of_nwkFrameInit:
 30702                           	opt callstack 0
 30703                           
 30704 ;; *************** function _nwkDataReqInit *****************
 30705 ;; Defined at:
 30706 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 30707 ;; Parameters:    Size  Location     Type
 30708 ;;		None
 30709 ;; Auto vars:     Size  Location     Type
 30710 ;;		None
 30711 ;; Return value:  Size  Location     Type
 30712 ;;                  1    wreg      void 
 30713 ;; Registers used:
 30714 ;;		wreg, status,2, status,0
 30715 ;; Tracked objects:
 30716 ;;		On entry : 0/1
 30717 ;;		On exit  : 3F/0
 30718 ;;		Unchanged: 0/0
 30719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30724 ;;Total ram usage:        0 bytes
 30725 ;; Hardware stack levels used:    1
 30726 ;; Hardware stack levels required when called:    7
 30727 ;; This function calls:
 30728 ;;		Nothing
 30729 ;; This function is called by:
 30730 ;;		_NWK_Init
 30731 ;; This function uses a non-reentrant model
 30732 ;;
 30733                           
 30734                           	psect	text205
 30735  008DA6                     __ptext205:
 30736                           	opt callstack 0
 30737  008DA6                     _nwkDataReqInit:
 30738                           	opt callstack 21
 30739                           
 30740                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 30741                           
 30742                           ;incstack = 0
 30743  008DA6  0E00               	movlw	0
 30744  008DA8  0100               	movlb	0	; () banked
 30745  008DAA  6FBF               	movwf	_nwkDataReqQueue& (0+255),b
 30746  008DAC  0E00               	movlw	0
 30747  008DAE  6FC0               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 30748                           
 30749                           ; BSR set to: 0
 30750  008DB0  0012               	return		;funcret
 30751  008DB2                     __end_of_nwkDataReqInit:
 30752                           	opt callstack 0
 30753                           
 30754 ;; *************** function _SYSTEM_Initialize *****************
 30755 ;; Defined at:
 30756 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30757 ;; Parameters:    Size  Location     Type
 30758 ;;		None
 30759 ;; Auto vars:     Size  Location     Type
 30760 ;;		None
 30761 ;; Return value:  Size  Location     Type
 30762 ;;                  1    wreg      void 
 30763 ;; Registers used:
 30764 ;;		wreg, status,2, status,0, cstack
 30765 ;; Tracked objects:
 30766 ;;		On entry : 0/0
 30767 ;;		On exit  : 3F/3D
 30768 ;;		Unchanged: 0/0
 30769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30774 ;;Total ram usage:        0 bytes
 30775 ;; Hardware stack levels used:    1
 30776 ;; Hardware stack levels required when called:    9
 30777 ;; This function calls:
 30778 ;;		_CRC_Initialize
 30779 ;;		_INTERRUPT_Initialize
 30780 ;;		_OSCILLATOR_Initialize
 30781 ;;		_PIN_MANAGER_Initialize
 30782 ;;		_PMD_Initialize
 30783 ;;		_SPI1_Initialize
 30784 ;;		_TMR0_Initialize
 30785 ;;		_UART1_Initialize
 30786 ;; This function is called by:
 30787 ;;		_main
 30788 ;; This function uses a non-reentrant model
 30789 ;;
 30790                           
 30791                           	psect	text206
 30792  008976                     __ptext206:
 30793                           	opt callstack 0
 30794  008976                     _SYSTEM_Initialize:
 30795                           	opt callstack 21
 30796                           
 30797                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30798                           
 30799                           ; BSR set to: 0
 30800                           ;incstack = 0
 30801  008976  ECA2  F040         	call	_INTERRUPT_Initialize	;wreg free
 30802                           
 30803                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30804  00897A  ECCC  F044         	call	_PMD_Initialize	;wreg free
 30805                           
 30806                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30807  00897E  EC5E  F038         	call	_PIN_MANAGER_Initialize	;wreg free
 30808                           
 30809                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30810  008982  EC1E  F046         	call	_OSCILLATOR_Initialize	;wreg free
 30811                           
 30812                           ; BSR set to: 57
 30813                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 30814  008986  ECF7  F03A         	call	_CRC_Initialize	;wreg free
 30815                           
 30816                           ; BSR set to: 0
 30817                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 30818  00898A  EC5D  F041         	call	_TMR0_Initialize	;wreg free
 30819                           
 30820                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 30821  00898E  EC91  F034         	call	_UART1_Initialize	;wreg free
 30822                           
 30823                           ; BSR set to: 57
 30824                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 30825  008992  ECC9  F045         	call	_SPI1_Initialize	;wreg free
 30826                           
 30827                           ; BSR set to: 61
 30828  008996  0012               	return		;funcret
 30829  008998                     __end_of_SYSTEM_Initialize:
 30830                           	opt callstack 0
 30831                           
 30832 ;; *************** function _UART1_Initialize *****************
 30833 ;; Defined at:
 30834 ;;		line 95 in file "mcc_generated_files/uart1.c"
 30835 ;; Parameters:    Size  Location     Type
 30836 ;;		None
 30837 ;; Auto vars:     Size  Location     Type
 30838 ;;		None
 30839 ;; Return value:  Size  Location     Type
 30840 ;;                  1    wreg      void 
 30841 ;; Registers used:
 30842 ;;		wreg, status,2, status,0, cstack
 30843 ;; Tracked objects:
 30844 ;;		On entry : 3B/39
 30845 ;;		On exit  : 3F/39
 30846 ;;		Unchanged: 0/0
 30847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30852 ;;Total ram usage:        0 bytes
 30853 ;; Hardware stack levels used:    1
 30854 ;; Hardware stack levels required when called:    8
 30855 ;; This function calls:
 30856 ;;		_UART1_SetErrorHandler
 30857 ;;		_UART1_SetFramingErrorHandler
 30858 ;;		_UART1_SetOverrunErrorHandler
 30859 ;;		_UART1_SetRxInterruptHandler
 30860 ;;		_UART1_SetTxInterruptHandler
 30861 ;; This function is called by:
 30862 ;;		_SYSTEM_Initialize
 30863 ;; This function uses a non-reentrant model
 30864 ;;
 30865                           
 30866                           	psect	text207
 30867  006922                     __ptext207:
 30868                           	opt callstack 0
 30869  006922                     _UART1_Initialize:
 30870                           	opt callstack 21
 30871                           
 30872                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 30873                           
 30874                           ; BSR set to: 61
 30875                           ;incstack = 0
 30876  006922  0139               	movlb	57	; () banked
 30877  006924  9793               	bcf	147,3,b	;volatile
 30878                           
 30879                           ; BSR set to: 57
 30880                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30881  006926  0E40               	movlw	low _UART1_Receive_ISR
 30882  006928  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 30883  00692A  0E6C               	movlw	high _UART1_Receive_ISR
 30884  00692C  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 30885  00692E  ECA4  F046         	call	_UART1_SetRxInterruptHandler	;wreg free
 30886                           
 30887                           ; BSR set to: 57
 30888                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 30889  006932  9993               	bcf	147,4,b	;volatile
 30890                           
 30891                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 30892  006934  0EDA               	movlw	low _UART1_Transmit_ISR
 30893  006936  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 30894  006938  0E85               	movlw	high _UART1_Transmit_ISR
 30895  00693A  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 30896  00693C  EC9D  F046         	call	_UART1_SetTxInterruptHandler	;wreg free
 30897                           
 30898                           ; BSR set to: 57
 30899                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 30900  006940  0E00               	movlw	0
 30901  006942  013D               	movlb	61	; () banked
 30902  006944  6FEC               	movwf	236,b	;volatile
 30903                           
 30904                           ; BSR set to: 61
 30905                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 30906  006946  0E00               	movlw	0
 30907  006948  6FED               	movwf	237,b	;volatile
 30908                           
 30909                           ; BSR set to: 61
 30910                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 30911  00694A  0E00               	movlw	0
 30912  00694C  6FEE               	movwf	238,b	;volatile
 30913                           
 30914                           ; BSR set to: 61
 30915                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 30916  00694E  0E00               	movlw	0
 30917  006950  6FEF               	movwf	239,b	;volatile
 30918                           
 30919                           ; BSR set to: 61
 30920                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 30921  006952  0E00               	movlw	0
 30922  006954  6FF0               	movwf	240,b	;volatile
 30923                           
 30924                           ; BSR set to: 61
 30925                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 30926  006956  0E00               	movlw	0
 30927  006958  6FF1               	movwf	241,b	;volatile
 30928                           
 30929                           ; BSR set to: 61
 30930                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 30931  00695A  0EB3               	movlw	179
 30932  00695C  6FF2               	movwf	242,b	;volatile
 30933                           
 30934                           ; BSR set to: 61
 30935                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 30936  00695E  0E00               	movlw	0
 30937  006960  6FF3               	movwf	243,b	;volatile
 30938                           
 30939                           ; BSR set to: 61
 30940                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 30941  006962  0E82               	movlw	130
 30942  006964  6FF4               	movwf	244,b	;volatile
 30943                           
 30944                           ; BSR set to: 61
 30945                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 30946  006966  0E40               	movlw	64
 30947  006968  6FF5               	movwf	245,b	;volatile
 30948                           
 30949                           ; BSR set to: 61
 30950                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 30951  00696A  0E03               	movlw	3
 30952  00696C  6FF6               	movwf	246,b	;volatile
 30953                           
 30954                           ; BSR set to: 61
 30955                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 30956  00696E  0E00               	movlw	0
 30957  006970  6FF7               	movwf	247,b	;volatile
 30958                           
 30959                           ; BSR set to: 61
 30960                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 30961  006972  0E00               	movlw	0
 30962  006974  6FF8               	movwf	248,b	;volatile
 30963                           
 30964                           ; BSR set to: 61
 30965                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 30966  006976  0E00               	movlw	0
 30967  006978  6FF9               	movwf	249,b	;volatile
 30968                           
 30969                           ; BSR set to: 61
 30970                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 30971  00697A  0E00               	movlw	0
 30972  00697C  6FFA               	movwf	250,b	;volatile
 30973                           
 30974                           ; BSR set to: 61
 30975                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 30976  00697E  0E14               	movlw	low _UART1_DefaultFramingErrorHandler
 30977  006980  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 30978  006982  0E8E               	movlw	high _UART1_DefaultFramingErrorHandler
 30979  006984  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 30980  006986  ECB2  F046         	call	_UART1_SetFramingErrorHandler	;wreg free
 30981                           
 30982                           ; BSR set to: 61
 30983                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 30984  00698A  0E12               	movlw	low _UART1_DefaultOverrunErrorHandler
 30985  00698C  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 30986  00698E  0E8E               	movlw	high _UART1_DefaultOverrunErrorHandler
 30987  006990  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 30988  006992  ECAB  F046         	call	_UART1_SetOverrunErrorHandler	;wreg free
 30989                           
 30990                           ; BSR set to: 61
 30991                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 30992  006996  0EF8               	movlw	low _UART1_DefaultErrorHandler
 30993  006998  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 30994  00699A  0E8D               	movlw	high _UART1_DefaultErrorHandler
 30995  00699C  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 30996  00699E  ECB9  F046         	call	_UART1_SetErrorHandler	;wreg free
 30997                           
 30998                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 30999  0069A2  0E00               	movlw	0
 31000  0069A4  0100               	movlb	0	; () banked
 31001  0069A6  6FC4               	movwf	_uart1RxLastError& (0+255),b	;volatile
 31002                           
 31003                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 31004  0069A8  0E00               	movlw	0
 31005  0069AA  6FC8               	movwf	_uart1TxHead& (0+255),b	;volatile
 31006                           
 31007                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 31008  0069AC  0E00               	movlw	0
 31009  0069AE  6FC7               	movwf	_uart1TxTail& (0+255),b	;volatile
 31010                           
 31011                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 31012  0069B0  0E40               	movlw	64
 31013  0069B2  6FFF               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 31014                           
 31015                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 31016  0069B4  0E00               	movlw	0
 31017  0069B6  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 31018                           
 31019                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 31020  0069B8  0E00               	movlw	0
 31021  0069BA  6FC6               	movwf	_uart1RxTail& (0+255),b	;volatile
 31022                           
 31023                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 31024  0069BC  0E00               	movlw	0
 31025  0069BE  6FC5               	movwf	_uart1RxCount& (0+255),b	;volatile
 31026                           
 31027                           ; BSR set to: 0
 31028                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 31029  0069C0  0139               	movlb	57	; () banked
 31030  0069C2  8793               	bsf	147,3,b	;volatile
 31031                           
 31032                           ; BSR set to: 57
 31033  0069C4  0012               	return		;funcret
 31034  0069C6                     __end_of_UART1_Initialize:
 31035                           	opt callstack 0
 31036                           
 31037 ;; *************** function _UART1_SetTxInterruptHandler *****************
 31038 ;; Defined at:
 31039 ;;		line 352 in file "mcc_generated_files/uart1.c"
 31040 ;; Parameters:    Size  Location     Type
 31041 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31042 ;;		 -> UART1_Transmit_ISR(1), 
 31043 ;; Auto vars:     Size  Location     Type
 31044 ;;		None
 31045 ;; Return value:  Size  Location     Type
 31046 ;;                  1    wreg      void 
 31047 ;; Registers used:
 31048 ;;		wreg, status,2, status,0
 31049 ;; Tracked objects:
 31050 ;;		On entry : 3F/39
 31051 ;;		On exit  : 3F/39
 31052 ;;		Unchanged: 3E/0
 31053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31058 ;;Total ram usage:        2 bytes
 31059 ;; Hardware stack levels used:    1
 31060 ;; Hardware stack levels required when called:    7
 31061 ;; This function calls:
 31062 ;;		Nothing
 31063 ;; This function is called by:
 31064 ;;		_UART1_Initialize
 31065 ;; This function uses a non-reentrant model
 31066 ;;
 31067                           
 31068                           	psect	text208
 31069  008D3A                     __ptext208:
 31070                           	opt callstack 0
 31071  008D3A                     _UART1_SetTxInterruptHandler:
 31072                           	opt callstack 21
 31073                           
 31074                           ; BSR set to: 57
 31075                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 31076                           
 31077                           ; BSR set to: 57
 31078                           ;incstack = 0
 31079  008D3A  0060  F008  F1F0   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 31080  008D40  0060  F00C  F1F1   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 31081                           
 31082                           ; BSR set to: 57
 31083  008D46  0012               	return		;funcret
 31084  008D48                     __end_of_UART1_SetTxInterruptHandler:
 31085                           	opt callstack 0
 31086                           
 31087 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31088 ;; Defined at:
 31089 ;;		line 348 in file "mcc_generated_files/uart1.c"
 31090 ;; Parameters:    Size  Location     Type
 31091 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31092 ;;		 -> UART1_Receive_ISR(1), 
 31093 ;; Auto vars:     Size  Location     Type
 31094 ;;		None
 31095 ;; Return value:  Size  Location     Type
 31096 ;;                  1    wreg      void 
 31097 ;; Registers used:
 31098 ;;		wreg, status,2, status,0
 31099 ;; Tracked objects:
 31100 ;;		On entry : 3F/39
 31101 ;;		On exit  : 3F/39
 31102 ;;		Unchanged: 3E/0
 31103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31108 ;;Total ram usage:        2 bytes
 31109 ;; Hardware stack levels used:    1
 31110 ;; Hardware stack levels required when called:    7
 31111 ;; This function calls:
 31112 ;;		Nothing
 31113 ;; This function is called by:
 31114 ;;		_UART1_Initialize
 31115 ;; This function uses a non-reentrant model
 31116 ;;
 31117                           
 31118                           	psect	text209
 31119  008D48                     __ptext209:
 31120                           	opt callstack 0
 31121  008D48                     _UART1_SetRxInterruptHandler:
 31122                           	opt callstack 21
 31123                           
 31124                           ; BSR set to: 57
 31125                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 31126                           
 31127                           ; BSR set to: 57
 31128                           ;incstack = 0
 31129  008D48  0060  F008  F1F2   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 31130  008D4E  0060  F00C  F1F3   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 31131                           
 31132                           ; BSR set to: 57
 31133  008D54  0012               	return		;funcret
 31134  008D56                     __end_of_UART1_SetRxInterruptHandler:
 31135                           	opt callstack 0
 31136                           
 31137 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 31138 ;; Defined at:
 31139 ;;		line 338 in file "mcc_generated_files/uart1.c"
 31140 ;; Parameters:    Size  Location     Type
 31141 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31142 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 31143 ;; Auto vars:     Size  Location     Type
 31144 ;;		None
 31145 ;; Return value:  Size  Location     Type
 31146 ;;                  1    wreg      void 
 31147 ;; Registers used:
 31148 ;;		wreg, status,2, status,0
 31149 ;; Tracked objects:
 31150 ;;		On entry : 3F/3D
 31151 ;;		On exit  : 3F/3D
 31152 ;;		Unchanged: 3E/0
 31153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31158 ;;Total ram usage:        2 bytes
 31159 ;; Hardware stack levels used:    1
 31160 ;; Hardware stack levels required when called:    7
 31161 ;; This function calls:
 31162 ;;		Nothing
 31163 ;; This function is called by:
 31164 ;;		_UART1_Initialize
 31165 ;; This function uses a non-reentrant model
 31166 ;;
 31167                           
 31168                           	psect	text210
 31169  008D56                     __ptext210:
 31170                           	opt callstack 0
 31171  008D56                     _UART1_SetOverrunErrorHandler:
 31172                           	opt callstack 21
 31173                           
 31174                           ; BSR set to: 61
 31175                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 31176                           
 31177                           ; BSR set to: 57
 31178                           ;incstack = 0
 31179  008D56  0060  F008  F1EA   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 31180  008D5C  0060  F00C  F1EB   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 31181                           
 31182                           ; BSR set to: 61
 31183  008D62  0012               	return		;funcret
 31184  008D64                     __end_of_UART1_SetOverrunErrorHandler:
 31185                           	opt callstack 0
 31186                           
 31187 ;; *************** function _UART1_SetFramingErrorHandler *****************
 31188 ;; Defined at:
 31189 ;;		line 334 in file "mcc_generated_files/uart1.c"
 31190 ;; Parameters:    Size  Location     Type
 31191 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31192 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 31193 ;; Auto vars:     Size  Location     Type
 31194 ;;		None
 31195 ;; Return value:  Size  Location     Type
 31196 ;;                  1    wreg      void 
 31197 ;; Registers used:
 31198 ;;		wreg, status,2, status,0
 31199 ;; Tracked objects:
 31200 ;;		On entry : 3F/3D
 31201 ;;		On exit  : 3F/3D
 31202 ;;		Unchanged: 3E/0
 31203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31208 ;;Total ram usage:        2 bytes
 31209 ;; Hardware stack levels used:    1
 31210 ;; Hardware stack levels required when called:    7
 31211 ;; This function calls:
 31212 ;;		Nothing
 31213 ;; This function is called by:
 31214 ;;		_UART1_Initialize
 31215 ;; This function uses a non-reentrant model
 31216 ;;
 31217                           
 31218                           	psect	text211
 31219  008D64                     __ptext211:
 31220                           	opt callstack 0
 31221  008D64                     _UART1_SetFramingErrorHandler:
 31222                           	opt callstack 21
 31223                           
 31224                           ; BSR set to: 61
 31225                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 31226                           
 31227                           ; BSR set to: 61
 31228                           ;incstack = 0
 31229  008D64  0060  F008  F1EC   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 31230  008D6A  0060  F00C  F1ED   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 31231                           
 31232                           ; BSR set to: 61
 31233  008D70  0012               	return		;funcret
 31234  008D72                     __end_of_UART1_SetFramingErrorHandler:
 31235                           	opt callstack 0
 31236                           
 31237 ;; *************** function _UART1_SetErrorHandler *****************
 31238 ;; Defined at:
 31239 ;;		line 342 in file "mcc_generated_files/uart1.c"
 31240 ;; Parameters:    Size  Location     Type
 31241 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31242 ;;		 -> UART1_DefaultErrorHandler(1), 
 31243 ;; Auto vars:     Size  Location     Type
 31244 ;;		None
 31245 ;; Return value:  Size  Location     Type
 31246 ;;                  1    wreg      void 
 31247 ;; Registers used:
 31248 ;;		wreg, status,2, status,0
 31249 ;; Tracked objects:
 31250 ;;		On entry : 3F/3D
 31251 ;;		On exit  : 3F/3D
 31252 ;;		Unchanged: 3E/0
 31253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31258 ;;Total ram usage:        2 bytes
 31259 ;; Hardware stack levels used:    1
 31260 ;; Hardware stack levels required when called:    7
 31261 ;; This function calls:
 31262 ;;		Nothing
 31263 ;; This function is called by:
 31264 ;;		_UART1_Initialize
 31265 ;; This function uses a non-reentrant model
 31266 ;;
 31267                           
 31268                           	psect	text212
 31269  008D72                     __ptext212:
 31270                           	opt callstack 0
 31271  008D72                     _UART1_SetErrorHandler:
 31272                           	opt callstack 21
 31273                           
 31274                           ; BSR set to: 61
 31275                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 31276                           
 31277                           ; BSR set to: 61
 31278                           ;incstack = 0
 31279  008D72  0060  F008  F1E8   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 31280  008D78  0060  F00C  F1E9   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 31281                           
 31282                           ; BSR set to: 61
 31283  008D7E  0012               	return		;funcret
 31284  008D80                     __end_of_UART1_SetErrorHandler:
 31285                           	opt callstack 0
 31286                           
 31287 ;; *************** function _TMR0_Initialize *****************
 31288 ;; Defined at:
 31289 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 31290 ;; Parameters:    Size  Location     Type
 31291 ;;		None
 31292 ;; Auto vars:     Size  Location     Type
 31293 ;;		None
 31294 ;; Return value:  Size  Location     Type
 31295 ;;                  1    wreg      void 
 31296 ;; Registers used:
 31297 ;;		wreg, status,2, status,0, cstack
 31298 ;; Tracked objects:
 31299 ;;		On entry : 3F/0
 31300 ;;		On exit  : 3B/39
 31301 ;;		Unchanged: 0/0
 31302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31307 ;;Total ram usage:        2 bytes
 31308 ;; Hardware stack levels used:    1
 31309 ;; Hardware stack levels required when called:    8
 31310 ;; This function calls:
 31311 ;;		_TMR0_SetInterruptHandler
 31312 ;; This function is called by:
 31313 ;;		_SYSTEM_Initialize
 31314 ;; This function uses a non-reentrant model
 31315 ;;
 31316                           
 31317                           	psect	text213
 31318  0082BA                     __ptext213:
 31319                           	opt callstack 0
 31320  0082BA                     _TMR0_Initialize:
 31321                           	opt callstack 21
 31322                           
 31323                           ; BSR set to: 0
 31324                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 31325                           
 31326                           ; BSR set to: 61
 31327                           ;incstack = 0
 31328  0082BA  0E40               	movlw	64
 31329  0082BC  6EB9               	movwf	185,c	;volatile
 31330                           
 31331                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 31332  0082BE  0EC1               	movlw	193
 31333  0082C0  6EB7               	movwf	183,c	;volatile
 31334                           
 31335                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 31336  0082C2  0E80               	movlw	128
 31337  0082C4  6EB6               	movwf	182,c	;volatile
 31338                           
 31339                           ; BSR set to: 0
 31340                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 31341  0082C6  50B6               	movf	182,w,c	;volatile
 31342  0082C8  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 31343  0082CE  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 31344  0082D0  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 31345  0082D6  6A04               	clrf	??_TMR0_Initialize^0,c
 31346  0082D8  1004               	iorwf	??_TMR0_Initialize^0,w,c
 31347  0082DA  6FFD               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 31348  0082DC  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 31349  0082DE  6FFE               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 31350                           
 31351                           ; BSR set to: 0
 31352                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 31353  0082E0  0139               	movlb	57	; () banked
 31354  0082E2  9FA3               	bcf	163,7,b	;volatile
 31355                           
 31356                           ; BSR set to: 57
 31357                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 31358  0082E4  8F93               	bsf	147,7,b	;volatile
 31359                           
 31360                           ; BSR set to: 57
 31361                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 31362  0082E6  0E0C               	movlw	low _TMR0_DefaultInterruptHandler
 31363  0082E8  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 31364  0082EA  0E8E               	movlw	high _TMR0_DefaultInterruptHandler
 31365  0082EC  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 31366  0082EE  ECC0  F046         	call	_TMR0_SetInterruptHandler	;wreg free
 31367                           
 31368                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 31369  0082F2  0E90               	movlw	144
 31370  0082F4  6EB8               	movwf	184,c	;volatile
 31371  0082F6  0012               	return		;funcret
 31372  0082F8                     __end_of_TMR0_Initialize:
 31373                           	opt callstack 0
 31374                           
 31375 ;; *************** function _TMR0_SetInterruptHandler *****************
 31376 ;; Defined at:
 31377 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 31378 ;; Parameters:    Size  Location     Type
 31379 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31380 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 31381 ;; Auto vars:     Size  Location     Type
 31382 ;;		None
 31383 ;; Return value:  Size  Location     Type
 31384 ;;                  1    wreg      void 
 31385 ;; Registers used:
 31386 ;;		wreg, status,2, status,0
 31387 ;; Tracked objects:
 31388 ;;		On entry : 3B/3D
 31389 ;;		On exit  : 3B/39
 31390 ;;		Unchanged: 3A/0
 31391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31396 ;;Total ram usage:        2 bytes
 31397 ;; Hardware stack levels used:    1
 31398 ;; Hardware stack levels required when called:    7
 31399 ;; This function calls:
 31400 ;;		Nothing
 31401 ;; This function is called by:
 31402 ;;		_TMR0_Initialize
 31403 ;;		_main
 31404 ;; This function uses a non-reentrant model
 31405 ;;
 31406                           
 31407                           	psect	text214
 31408  008D80                     __ptext214:
 31409                           	opt callstack 0
 31410  008D80                     _TMR0_SetInterruptHandler:
 31411                           	opt callstack 23
 31412                           
 31413                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 31414                           
 31415                           ;incstack = 0
 31416  008D80  0060  F008  F1EE   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 31417  008D86  0060  F00C  F1EF   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 31418  008D8C  0012               	return		;funcret
 31419  008D8E                     __end_of_TMR0_SetInterruptHandler:
 31420                           	opt callstack 0
 31421                           
 31422 ;; *************** function _SPI1_Initialize *****************
 31423 ;; Defined at:
 31424 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31425 ;; Parameters:    Size  Location     Type
 31426 ;;		None
 31427 ;; Auto vars:     Size  Location     Type
 31428 ;;		None
 31429 ;; Return value:  Size  Location     Type
 31430 ;;                  1    wreg      void 
 31431 ;; Registers used:
 31432 ;;		wreg, status,2
 31433 ;; Tracked objects:
 31434 ;;		On entry : 3F/39
 31435 ;;		On exit  : 3F/3D
 31436 ;;		Unchanged: 0/0
 31437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31442 ;;Total ram usage:        0 bytes
 31443 ;; Hardware stack levels used:    1
 31444 ;; Hardware stack levels required when called:    7
 31445 ;; This function calls:
 31446 ;;		Nothing
 31447 ;; This function is called by:
 31448 ;;		_SYSTEM_Initialize
 31449 ;; This function uses a non-reentrant model
 31450 ;;
 31451                           
 31452                           	psect	text215
 31453  008B92                     __ptext215:
 31454                           	opt callstack 0
 31455  008B92                     _SPI1_Initialize:
 31456                           	opt callstack 22
 31457                           
 31458                           ; BSR set to: 57
 31459                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 31460                           
 31461                           ;incstack = 0
 31462  008B92  0E82               	movlw	130
 31463  008B94  013D               	movlb	61	; () banked
 31464  008B96  6F14               	movwf	20,b	;volatile
 31465                           
 31466                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 31467  008B98  0EC0               	movlw	192
 31468  008B9A  6F15               	movwf	21,b	;volatile
 31469                           
 31470                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 31471  008B9C  0E03               	movlw	3
 31472  008B9E  6F16               	movwf	22,b	;volatile
 31473                           
 31474                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 31475  008BA0  0E01               	movlw	1
 31476  008BA2  6F1C               	movwf	28,b	;volatile
 31477                           
 31478                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 31479  008BA4  0E03               	movlw	3
 31480  008BA6  6F19               	movwf	25,b	;volatile
 31481                           
 31482                           ; BSR set to: 61
 31483                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 31484  008BA8  94C3               	bcf	195,2,c	;volatile
 31485                           
 31486                           ; BSR set to: 61
 31487  008BAA  0012               	return		;funcret
 31488  008BAC                     __end_of_SPI1_Initialize:
 31489                           	opt callstack 0
 31490                           
 31491 ;; *************** function _PMD_Initialize *****************
 31492 ;; Defined at:
 31493 ;;		line 76 in file "mcc_generated_files/mcc.c"
 31494 ;; Parameters:    Size  Location     Type
 31495 ;;		None
 31496 ;; Auto vars:     Size  Location     Type
 31497 ;;		None
 31498 ;; Return value:  Size  Location     Type
 31499 ;;                  1    wreg      void 
 31500 ;; Registers used:
 31501 ;;		wreg, status,2
 31502 ;; Tracked objects:
 31503 ;;		On entry : 3F/39
 31504 ;;		On exit  : 3F/39
 31505 ;;		Unchanged: 0/0
 31506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31511 ;;Total ram usage:        0 bytes
 31512 ;; Hardware stack levels used:    1
 31513 ;; Hardware stack levels required when called:    7
 31514 ;; This function calls:
 31515 ;;		Nothing
 31516 ;; This function is called by:
 31517 ;;		_SYSTEM_Initialize
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text216
 31522  008998                     __ptext216:
 31523                           	opt callstack 0
 31524  008998                     _PMD_Initialize:
 31525                           	opt callstack 22
 31526                           
 31527                           ; BSR set to: 57
 31528                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 31529                           
 31530                           ; BSR set to: 61
 31531                           ;incstack = 0
 31532  008998  0E00               	movlw	0
 31533  00899A  6FC0               	movwf	192,b	;volatile
 31534                           
 31535                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 31536  00899C  0E00               	movlw	0
 31537  00899E  6FC1               	movwf	193,b	;volatile
 31538                           
 31539                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 31540  0089A0  0E00               	movlw	0
 31541  0089A2  6FC2               	movwf	194,b	;volatile
 31542                           
 31543                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 31544  0089A4  0E00               	movlw	0
 31545  0089A6  6FC3               	movwf	195,b	;volatile
 31546                           
 31547                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 31548  0089A8  0E00               	movlw	0
 31549  0089AA  6FC4               	movwf	196,b	;volatile
 31550                           
 31551                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 31552  0089AC  0E00               	movlw	0
 31553  0089AE  6FC5               	movwf	197,b	;volatile
 31554                           
 31555                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 31556  0089B0  0E00               	movlw	0
 31557  0089B2  6FC6               	movwf	198,b	;volatile
 31558                           
 31559                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 31560  0089B4  0E00               	movlw	0
 31561  0089B6  6FC7               	movwf	199,b	;volatile
 31562                           
 31563                           ; BSR set to: 57
 31564  0089B8  0012               	return		;funcret
 31565  0089BA                     __end_of_PMD_Initialize:
 31566                           	opt callstack 0
 31567                           
 31568 ;; *************** function _PIN_MANAGER_Initialize *****************
 31569 ;; Defined at:
 31570 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 31571 ;; Parameters:    Size  Location     Type
 31572 ;;		None
 31573 ;; Auto vars:     Size  Location     Type
 31574 ;;		None
 31575 ;; Return value:  Size  Location     Type
 31576 ;;                  1    wreg      void 
 31577 ;; Registers used:
 31578 ;;		wreg, status,2
 31579 ;; Tracked objects:
 31580 ;;		On entry : 3F/39
 31581 ;;		On exit  : 3F/3A
 31582 ;;		Unchanged: 0/0
 31583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31588 ;;Total ram usage:        0 bytes
 31589 ;; Hardware stack levels used:    1
 31590 ;; Hardware stack levels required when called:    7
 31591 ;; This function calls:
 31592 ;;		Nothing
 31593 ;; This function is called by:
 31594 ;;		_SYSTEM_Initialize
 31595 ;; This function uses a non-reentrant model
 31596 ;;
 31597                           
 31598                           	psect	text217
 31599  0070BC                     __ptext217:
 31600                           	opt callstack 0
 31601  0070BC                     _PIN_MANAGER_Initialize:
 31602                           	opt callstack 22
 31603                           
 31604                           ; BSR set to: 57
 31605                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 31606                           
 31607                           ; BSR set to: 57
 31608                           ;incstack = 0
 31609  0070BC  0E08               	movlw	8
 31610  0070BE  6EBA               	movwf	186,c	;volatile
 31611                           
 31612                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 31613  0070C0  0E00               	movlw	0
 31614  0070C2  6EBB               	movwf	187,c	;volatile
 31615                           
 31616                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 31617  0070C4  0E40               	movlw	64
 31618  0070C6  6EBC               	movwf	188,c	;volatile
 31619                           
 31620                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 31621  0070C8  0EF7               	movlw	247
 31622  0070CA  6EC2               	movwf	194,c	;volatile
 31623                           
 31624                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 31625  0070CC  0EFE               	movlw	254
 31626  0070CE  6EC3               	movwf	195,c	;volatile
 31627                           
 31628                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 31629  0070D0  0E1C               	movlw	28
 31630  0070D2  6EC4               	movwf	196,c	;volatile
 31631                           
 31632                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 31633  0070D4  0E29               	movlw	41
 31634  0070D6  013A               	movlb	58	; () banked
 31635  0070D8  6F60               	movwf	96,b	;volatile
 31636                           
 31637                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 31638  0070DA  0ECD               	movlw	205
 31639  0070DC  6F50               	movwf	80,b	;volatile
 31640                           
 31641                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 31642  0070DE  0EF2               	movlw	242
 31643  0070E0  6F40               	movwf	64,b	;volatile
 31644                           
 31645                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 31646  0070E2  0E00               	movlw	0
 31647  0070E4  6F81               	movwf	129,b	;volatile
 31648                           
 31649                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 31650  0070E6  0E00               	movlw	0
 31651  0070E8  6F51               	movwf	81,b	;volatile
 31652                           
 31653                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 31654  0070EA  0E00               	movlw	0
 31655  0070EC  6F41               	movwf	65,b	;volatile
 31656                           
 31657                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 31658  0070EE  0E08               	movlw	8
 31659  0070F0  6F61               	movwf	97,b	;volatile
 31660                           
 31661                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 31662  0070F2  0E00               	movlw	0
 31663  0070F4  6F5A               	movwf	90,b	;volatile
 31664                           
 31665                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 31666  0070F6  0E00               	movlw	0
 31667  0070F8  6F5B               	movwf	91,b	;volatile
 31668                           
 31669                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 31670  0070FA  0E00               	movlw	0
 31671  0070FC  6F6A               	movwf	106,b	;volatile
 31672                           
 31673                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 31674  0070FE  0E00               	movlw	0
 31675  007100  6F6B               	movwf	107,b	;volatile
 31676                           
 31677                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 31678  007102  0E00               	movlw	0
 31679  007104  6F42               	movwf	66,b	;volatile
 31680                           
 31681                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 31682  007106  0E06               	movlw	6
 31683  007108  6F52               	movwf	82,b	;volatile
 31684                           
 31685                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 31686  00710A  0E18               	movlw	24
 31687  00710C  6F62               	movwf	98,b	;volatile
 31688                           
 31689                           ; BSR set to: 58
 31690                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 31691  00710E  6943               	setf	67,b	;volatile
 31692                           
 31693                           ; BSR set to: 58
 31694                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 31695  007110  6953               	setf	83,b	;volatile
 31696                           
 31697                           ; BSR set to: 58
 31698                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 31699  007112  6963               	setf	99,b	;volatile
 31700                           
 31701                           ; BSR set to: 58
 31702                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 31703  007114  6944               	setf	68,b	;volatile
 31704                           
 31705                           ; BSR set to: 58
 31706                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 31707  007116  6954               	setf	84,b	;volatile
 31708                           
 31709                           ; BSR set to: 58
 31710                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 31711  007118  6964               	setf	100,b	;volatile
 31712                           
 31713                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 31714  00711A  0E08               	movlw	8
 31715  00711C  6F84               	movwf	132,b	;volatile
 31716                           
 31717                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 31718  00711E  0E13               	movlw	19
 31719  007120  6F10               	movwf	16,b	;volatile
 31720                           
 31721                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 31722  007122  0E17               	movlw	23
 31723  007124  6FDE               	movwf	222,b	;volatile
 31724                           
 31725                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 31726  007126  0E05               	movlw	5
 31727  007128  6FE0               	movwf	224,b	;volatile
 31728                           
 31729                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 31730  00712A  0E1F               	movlw	31
 31731  00712C  6F08               	movwf	8,b	;volatile
 31732                           
 31733                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 31734  00712E  0E14               	movlw	20
 31735  007130  6F11               	movwf	17,b	;volatile
 31736                           
 31737                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 31738  007132  0E12               	movlw	18
 31739  007134  6FE5               	movwf	229,b	;volatile
 31740                           
 31741                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 31742  007136  0E1F               	movlw	31
 31743  007138  6FE6               	movwf	230,b	;volatile
 31744                           
 31745                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 31746  00713A  0E1E               	movlw	30
 31747  00713C  6F17               	movwf	23,b	;volatile
 31748                           
 31749                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 31750  00713E  0E09               	movlw	9
 31751  007140  6FDF               	movwf	223,b	;volatile
 31752                           
 31753                           ; BSR set to: 58
 31754  007142  0012               	return		;funcret
 31755  007144                     __end_of_PIN_MANAGER_Initialize:
 31756                           	opt callstack 0
 31757                           
 31758 ;; *************** function _OSCILLATOR_Initialize *****************
 31759 ;; Defined at:
 31760 ;;		line 62 in file "mcc_generated_files/mcc.c"
 31761 ;; Parameters:    Size  Location     Type
 31762 ;;		None
 31763 ;; Auto vars:     Size  Location     Type
 31764 ;;		None
 31765 ;; Return value:  Size  Location     Type
 31766 ;;                  1    wreg      void 
 31767 ;; Registers used:
 31768 ;;		wreg, status,2
 31769 ;; Tracked objects:
 31770 ;;		On entry : 3F/3A
 31771 ;;		On exit  : 3F/39
 31772 ;;		Unchanged: 0/0
 31773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31778 ;;Total ram usage:        0 bytes
 31779 ;; Hardware stack levels used:    1
 31780 ;; Hardware stack levels required when called:    7
 31781 ;; This function calls:
 31782 ;;		Nothing
 31783 ;; This function is called by:
 31784 ;;		_SYSTEM_Initialize
 31785 ;; This function uses a non-reentrant model
 31786 ;;
 31787                           
 31788                           	psect	text218
 31789  008C3C                     __ptext218:
 31790                           	opt callstack 0
 31791  008C3C                     _OSCILLATOR_Initialize:
 31792                           	opt callstack 22
 31793                           
 31794                           ; BSR set to: 58
 31795                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 31796                           
 31797                           ; BSR set to: 58
 31798                           ;incstack = 0
 31799  008C3C  0E60               	movlw	96
 31800  008C3E  0139               	movlb	57	; () banked
 31801  008C40  6FD9               	movwf	217,b	;volatile
 31802                           
 31803                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 31804  008C42  0E00               	movlw	0
 31805  008C44  6FDB               	movwf	219,b	;volatile
 31806                           
 31807                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 31808  008C46  0E00               	movlw	0
 31809  008C48  6FDD               	movwf	221,b	;volatile
 31810                           
 31811                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 31812  008C4A  0E08               	movlw	8
 31813  008C4C  6FDF               	movwf	223,b	;volatile
 31814                           
 31815                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 31816  008C4E  0E00               	movlw	0
 31817  008C50  6FDE               	movwf	222,b	;volatile
 31818                           
 31819                           ; BSR set to: 57
 31820  008C52  0012               	return		;funcret
 31821  008C54                     __end_of_OSCILLATOR_Initialize:
 31822                           	opt callstack 0
 31823                           
 31824 ;; *************** function _INTERRUPT_Initialize *****************
 31825 ;; Defined at:
 31826 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31827 ;; Parameters:    Size  Location     Type
 31828 ;;		None
 31829 ;; Auto vars:     Size  Location     Type
 31830 ;;  state           1    1[COMRAM] _Bool 
 31831 ;; Return value:  Size  Location     Type
 31832 ;;                  1    wreg      void 
 31833 ;; Registers used:
 31834 ;;		wreg, status,2
 31835 ;; Tracked objects:
 31836 ;;		On entry : 0/0
 31837 ;;		On exit  : 3F/39
 31838 ;;		Unchanged: 0/0
 31839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31844 ;;Total ram usage:        1 bytes
 31845 ;; Hardware stack levels used:    1
 31846 ;; Hardware stack levels required when called:    7
 31847 ;; This function calls:
 31848 ;;		Nothing
 31849 ;; This function is called by:
 31850 ;;		_SYSTEM_Initialize
 31851 ;; This function uses a non-reentrant model
 31852 ;;
 31853                           
 31854                           	psect	text219
 31855  008144                     __ptext219:
 31856                           	opt callstack 0
 31857  008144                     _INTERRUPT_Initialize:
 31858                           	opt callstack 22
 31859                           
 31860                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31861                           
 31862                           ; BSR set to: 57
 31863                           ;incstack = 0
 31864  008144  8AD2               	bsf	210,5,c	;volatile
 31865                           
 31866                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31867  008146  0E00               	movlw	0
 31868  008148  BED2               	btfsc	16338,7,c	;volatile
 31869  00814A  0E01               	movlw	1
 31870  00814C  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 31871                           
 31872                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31873  00814E  9ED2               	bcf	16338,7,c	;volatile
 31874                           
 31875                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31876  008150  0E55               	movlw	85
 31877  008152  6ED4               	movwf	212,c	;volatile
 31878                           
 31879                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31880  008154  0EAA               	movlw	170
 31881  008156  6ED4               	movwf	212,c	;volatile
 31882                           
 31883                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31884  008158  90D4               	bcf	212,0,c	;volatile
 31885                           
 31886                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 31887  00815A  0E00               	movlw	0
 31888  00815C  6ED7               	movwf	215,c	;volatile
 31889                           
 31890                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 31891  00815E  0E00               	movlw	0
 31892  008160  6ED6               	movwf	214,c	;volatile
 31893                           
 31894                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 31895  008162  0E08               	movlw	8
 31896  008164  6ED5               	movwf	213,c	;volatile
 31897                           
 31898                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31899  008166  0E55               	movlw	85
 31900  008168  6ED4               	movwf	212,c	;volatile
 31901                           
 31902                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31903  00816A  0EAA               	movlw	170
 31904  00816C  6ED4               	movwf	212,c	;volatile
 31905                           
 31906                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31907  00816E  80D4               	bsf	212,0,c	;volatile
 31908                           
 31909                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31910  008170  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 31911  008172  D002               	bra	u5875
 31912  008174  9ED2               	bcf	16338,7,c	;volatile
 31913  008176  D001               	bra	u5876
 31914  008178                     u5875:
 31915  008178  8ED2               	bsf	16338,7,c	;volatile
 31916  00817A                     u5876:
 31917                           
 31918                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 31919  00817A  0139               	movlb	57	; () banked
 31920  00817C  8983               	bsf	131,4,b	;volatile
 31921                           
 31922                           ; BSR set to: 57
 31923                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 31924  00817E  8783               	bsf	131,3,b	;volatile
 31925                           
 31926                           ; BSR set to: 57
 31927                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 31928  008180  9F83               	bcf	131,7,b	;volatile
 31929                           
 31930                           ; BSR set to: 57
 31931  008182  0012               	return		;funcret
 31932  008184                     __end_of_INTERRUPT_Initialize:
 31933                           	opt callstack 0
 31934                           
 31935 ;; *************** function _CRC_Initialize *****************
 31936 ;; Defined at:
 31937 ;;		line 76 in file "mcc_generated_files/crc.c"
 31938 ;; Parameters:    Size  Location     Type
 31939 ;;		None
 31940 ;; Auto vars:     Size  Location     Type
 31941 ;;  seed            2    4[COMRAM] unsigned short 
 31942 ;;  poly            2    2[COMRAM] unsigned short 
 31943 ;; Return value:  Size  Location     Type
 31944 ;;                  1    wreg      void 
 31945 ;; Registers used:
 31946 ;;		wreg, status,2, status,0
 31947 ;; Tracked objects:
 31948 ;;		On entry : 3F/39
 31949 ;;		On exit  : 3F/0
 31950 ;;		Unchanged: 0/0
 31951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31953 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31955 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31956 ;;Total ram usage:        5 bytes
 31957 ;; Hardware stack levels used:    1
 31958 ;; Hardware stack levels required when called:    7
 31959 ;; This function calls:
 31960 ;;		Nothing
 31961 ;; This function is called by:
 31962 ;;		_SYSTEM_Initialize
 31963 ;; This function uses a non-reentrant model
 31964 ;;
 31965                           
 31966                           	psect	text220
 31967  0075EE                     __ptext220:
 31968                           	opt callstack 0
 31969  0075EE                     _CRC_Initialize:
 31970                           	opt callstack 22
 31971                           
 31972                           ; BSR set to: 57
 31973                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 31974                           
 31975                           ; BSR set to: 57
 31976                           ;incstack = 0
 31977  0075EE  0E80               	movlw	128
 31978  0075F0  6F68               	movwf	104,b	;volatile
 31979                           
 31980                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 31981  0075F2  0E7F               	movlw	127
 31982  0075F4  6F69               	movwf	105,b	;volatile
 31983                           
 31984                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 31985  0075F6  0E00               	movlw	0
 31986  0075F8  6F62               	movwf	98,b	;volatile
 31987                           
 31988                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 31989  0075FA  0E00               	movlw	0
 31990  0075FC  6F63               	movwf	99,b	;volatile
 31991                           
 31992                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 31993  0075FE  0E00               	movlw	0
 31994  007600  6F7C               	movwf	124,b	;volatile
 31995                           
 31996                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 31997  007602  0E00               	movlw	0
 31998  007604  6F78               	movwf	120,b	;volatile
 31999                           
 32000                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 32001  007606  0E00               	movlw	0
 32002  007608  6F77               	movwf	119,b	;volatile
 32003                           
 32004                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 32005  00760A  0E00               	movlw	0
 32006  00760C  6F76               	movwf	118,b	;volatile
 32007                           
 32008                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 32009  00760E  0E3F               	movlw	63
 32010  007610  6F7B               	movwf	123,b	;volatile
 32011                           
 32012                           ; BSR set to: 57
 32013                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 32014  007612  697A               	setf	122,b	;volatile
 32015                           
 32016                           ; BSR set to: 57
 32017                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 32018  007614  6979               	setf	121,b	;volatile
 32019                           
 32020                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 32021  007616  0E00               	movlw	0
 32022  007618  6F7D               	movwf	125,b	;volatile
 32023                           
 32024                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 32025  00761A  0E80               	movlw	128
 32026  00761C  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 32027  00761E  0E05               	movlw	5
 32028  007620  6E03               	movwf	CRC_Initialize@poly^0,c
 32029                           
 32030                           ; BSR set to: 57
 32031                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 32032  007622  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 32033                           
 32034                           ; BSR set to: 57
 32035                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 32036  007628  0E05               	movlw	5
 32037  00762A  6F66               	movwf	102,b	;volatile
 32038                           
 32039                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 32040  00762C  0E00               	movlw	0
 32041  00762E  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 32042  007630  0E00               	movlw	0
 32043  007632  6E05               	movwf	CRC_Initialize@seed^0,c
 32044                           
 32045                           ; BSR set to: 57
 32046                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 32047  007634  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 32048                           
 32049                           ; BSR set to: 57
 32050                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 32051  00763A  0E00               	movlw	0
 32052  00763C  6F62               	movwf	98,b	;volatile
 32053                           
 32054                           ; BSR set to: 57
 32055                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 32056  00763E  3969               	swapf	105,w,b	;volatile
 32057  007640  0B0F               	andlw	15
 32058  007642  6E02               	movwf	??_CRC_Initialize^0,c
 32059  007644  2802               	incf	??_CRC_Initialize^0,w,c
 32060  007646  0100               	movlb	0	; () banked
 32061  007648  6FEC               	movwf	_crcObj& (0+255),b
 32062                           
 32063                           ; BSR set to: 0
 32064                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 32065  00764A  0139               	movlb	57	; () banked
 32066  00764C  5169               	movf	105,w,b	;volatile
 32067  00764E  0B0F               	andlw	15
 32068  007650  6E02               	movwf	??_CRC_Initialize^0,c
 32069  007652  2802               	incf	??_CRC_Initialize^0,w,c
 32070  007654  0100               	movlb	0	; () banked
 32071  007656  6FED               	movwf	(_crcObj+1)& (0+255),b
 32072                           
 32073                           ; BSR set to: 0
 32074  007658  0012               	return		;funcret
 32075  00765A                     __end_of_CRC_Initialize:
 32076                           	opt callstack 0
 32077                           
 32078 ;; *************** function _TMR0_ISR *****************
 32079 ;; Defined at:
 32080 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 32081 ;; Parameters:    Size  Location     Type
 32082 ;;		None
 32083 ;; Auto vars:     Size  Location     Type
 32084 ;;		None
 32085 ;; Return value:  Size  Location     Type
 32086 ;;                  1    wreg      void 
 32087 ;; Registers used:
 32088 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32089 ;; Tracked objects:
 32090 ;;		On entry : 0/0
 32091 ;;		On exit  : 0/0
 32092 ;;		Unchanged: 0/0
 32093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32098 ;;Total ram usage:        1 bytes
 32099 ;; Hardware stack levels used:    1
 32100 ;; Hardware stack levels required when called:    6
 32101 ;; This function calls:
 32102 ;;		_TMR0_CallBack
 32103 ;; This function is called by:
 32104 ;;		Interrupt level 1
 32105 ;; This function uses a non-reentrant model
 32106 ;;
 32107                           
 32108                           	psect	text221
 32109  0089BC                     __ptext221:
 32110                           	opt callstack 0
 32111  0089BC                     _TMR0_ISR:
 32112                           	opt callstack 11
 32113                           
 32114                           ; BSR set to: 0
 32115                           ;incstack = 0
 32116  0089BC  006F FF60  F001    	movff	status,??_TMR0_ISR
 32117                           
 32118                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 32119  0089C2  0139               	movlb	57	; () banked
 32120  0089C4  9FA3               	bcf	163,7,b	;volatile
 32121                           
 32122                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 32123  0089C6  0060  F3FB  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 32124                           
 32125                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 32126  0089CC  0060  F3F7  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 32127                           
 32128                           ; BSR set to: 57
 32129                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 32130  0089D2  EC0F  F045         	call	_TMR0_CallBack	;wreg free
 32131  0089D6  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 32132  0089DC  0011               	retfie		f
 32133  0089DE                     __end_of_TMR0_ISR:
 32134                           	opt callstack 0
 32135                           
 32136 ;; *************** function _TMR0_CallBack *****************
 32137 ;; Defined at:
 32138 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 32139 ;; Parameters:    Size  Location     Type
 32140 ;;		None
 32141 ;; Auto vars:     Size  Location     Type
 32142 ;;		None
 32143 ;; Return value:  Size  Location     Type
 32144 ;;                  1    wreg      void 
 32145 ;; Registers used:
 32146 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32147 ;; Tracked objects:
 32148 ;;		On entry : 3F/39
 32149 ;;		On exit  : 0/0
 32150 ;;		Unchanged: 0/0
 32151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32156 ;;Total ram usage:        0 bytes
 32157 ;; Hardware stack levels used:    1
 32158 ;; Hardware stack levels required when called:    5
 32159 ;; This function calls:
 32160 ;;		Absolute function
 32161 ;;		_TMR0_DefaultInterruptHandler
 32162 ;;		_Timer0Handler
 32163 ;; This function is called by:
 32164 ;;		_TMR0_ISR
 32165 ;; This function uses a non-reentrant model
 32166 ;;
 32167                           
 32168                           	psect	text222
 32169  008A1E                     __ptext222:
 32170                           	opt callstack 0
 32171  008A1E                     _TMR0_CallBack:
 32172                           	opt callstack 11
 32173                           
 32174                           ; BSR set to: 57
 32175                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 32176                           
 32177                           ;incstack = 0
 32178  008A1E  0101               	movlb	1	; () banked
 32179  008A20  51EE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32180  008A22  11EF               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32181  008A24  B4D8               	btfsc	status,2,c
 32182  008A26  0012               	return	
 32183                           
 32184                           ; BSR set to: 1
 32185                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 32186  008A28  D801               	call	i1u1262_28
 32187  008A2A  0012               	return	
 32188  008A2C                     i1u1262_28:
 32189  008A2C  0005               	push	
 32190  008A2E  6EFA               	movwf	pclath,c
 32191  008A30  51EE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32192  008A32  6EFD               	movwf	tosl,c
 32193  008A34  51EF               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32194  008A36  6EFE               	movwf	tosh,c
 32195  008A38  6AFF               	clrf	tosu,c
 32196  008A3A  50FA               	movf	pclath,w,c
 32197  008A3C  0012               	return		;indir
 32198  008A3E                     __end_of_TMR0_CallBack:
 32199                           	opt callstack 0
 32200                           
 32201 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 32202 ;; Defined at:
 32203 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 32204 ;; Parameters:    Size  Location     Type
 32205 ;;		None
 32206 ;; Auto vars:     Size  Location     Type
 32207 ;;		None
 32208 ;; Return value:  Size  Location     Type
 32209 ;;                  1    wreg      void 
 32210 ;; Registers used:
 32211 ;;		None
 32212 ;; Tracked objects:
 32213 ;;		On entry : 3F/1
 32214 ;;		On exit  : 3F/1
 32215 ;;		Unchanged: 3F/0
 32216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32221 ;;Total ram usage:        0 bytes
 32222 ;; Hardware stack levels used:    1
 32223 ;; Hardware stack levels required when called:    4
 32224 ;; This function calls:
 32225 ;;		Nothing
 32226 ;; This function is called by:
 32227 ;;		_TMR0_Initialize
 32228 ;;		_TMR0_CallBack
 32229 ;; This function uses a non-reentrant model
 32230 ;;
 32231                           
 32232                           	psect	text223
 32233  008E0C                     __ptext223:
 32234                           	opt callstack 0
 32235  008E0C                     _TMR0_DefaultInterruptHandler:
 32236                           	opt callstack 11
 32237                           
 32238                           ; BSR set to: 1
 32239                           
 32240                           ;incstack = 0
 32241  008E0C  0012               	return		;funcret
 32242  008E0E                     __end_of_TMR0_DefaultInterruptHandler:
 32243                           	opt callstack 0
 32244                           
 32245 ;; *************** function _Timer0Handler *****************
 32246 ;; Defined at:
 32247 ;;		line 7 in file "../hal/hal_src/Timers.c"
 32248 ;; Parameters:    Size  Location     Type
 32249 ;;		None
 32250 ;; Auto vars:     Size  Location     Type
 32251 ;;		None
 32252 ;; Return value:  Size  Location     Type
 32253 ;;                  1    wreg      void 
 32254 ;; Registers used:
 32255 ;;		wreg, status,2, status,0
 32256 ;; Tracked objects:
 32257 ;;		On entry : 3F/1
 32258 ;;		On exit  : 3F/0
 32259 ;;		Unchanged: 0/0
 32260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32265 ;;Total ram usage:        0 bytes
 32266 ;; Hardware stack levels used:    1
 32267 ;; Hardware stack levels required when called:    4
 32268 ;; This function calls:
 32269 ;;		Nothing
 32270 ;; This function is called by:
 32271 ;;		_main
 32272 ;;		_TMR0_CallBack
 32273 ;; This function uses a non-reentrant model
 32274 ;;
 32275                           
 32276                           	psect	text224
 32277  007D70                     __ptext224:
 32278                           	opt callstack 0
 32279  007D70                     _Timer0Handler:
 32280                           	opt callstack 11
 32281                           
 32282                           ; BSR set to: 1
 32283                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 32284                           
 32285                           ; BSR set to: 1
 32286                           ;incstack = 0
 32287  007D70  0100               	movlb	0	; () banked
 32288  007D72  51F1               	movf	_txTimeOut& (0+255),w,b	;volatile
 32289  007D74  11F2               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 32290  007D76  B4D8               	btfsc	status,2,c
 32291  007D78  D003               	goto	i1l12954
 32292                           
 32293                           ; BSR set to: 0
 32294                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 32295  007D7A  07F1               	decf	_txTimeOut& (0+255),f,b	;volatile
 32296  007D7C  A0D8               	btfss	status,0,c
 32297  007D7E  07F2               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 32298  007D80                     i1l12954:
 32299                           
 32300                           ; BSR set to: 0
 32301                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 32302  007D80  51FB               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 32303  007D82  11FC               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 32304  007D84  B4D8               	btfsc	status,2,c
 32305  007D86  D003               	goto	i1l12958
 32306                           
 32307                           ; BSR set to: 0
 32308                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 32309  007D88  07FB               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 32310  007D8A  A0D8               	btfss	status,0,c
 32311  007D8C  07FC               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 32312  007D8E                     i1l12958:
 32313                           
 32314                           ; BSR set to: 0
 32315                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 32316  007D8E  51F3               	movf	_cadTimeOut& (0+255),w,b	;volatile
 32317  007D90  11F4               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 32318  007D92  B4D8               	btfsc	status,2,c
 32319  007D94  D003               	goto	i1l12962
 32320                           
 32321                           ; BSR set to: 0
 32322                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 32323  007D96  07F3               	decf	_cadTimeOut& (0+255),f,b	;volatile
 32324  007D98  A0D8               	btfss	status,0,c
 32325  007D9A  07F4               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 32326  007D9C                     i1l12962:
 32327                           
 32328                           ; BSR set to: 0
 32329                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 32330  007D9C  51F5               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 32331  007D9E  11F6               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 32332  007DA0  B4D8               	btfsc	status,2,c
 32333  007DA2  D003               	goto	i1l12966
 32334                           
 32335                           ; BSR set to: 0
 32336                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 32337  007DA4  07F5               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 32338  007DA6  A0D8               	btfss	status,0,c
 32339  007DA8  07F6               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 32340  007DAA                     i1l12966:
 32341                           
 32342                           ; BSR set to: 0
 32343                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 32344  007DAA  51EF               	movf	_ledtimer& (0+255),w,b	;volatile
 32345  007DAC  11F0               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 32346  007DAE  B4D8               	btfsc	status,2,c
 32347  007DB0  D003               	goto	i1l1027
 32348                           
 32349                           ; BSR set to: 0
 32350                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 32351  007DB2  07EF               	decf	_ledtimer& (0+255),f,b	;volatile
 32352  007DB4  A0D8               	btfss	status,0,c
 32353  007DB6  07F0               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 32354  007DB8                     i1l1027:
 32355                           
 32356                           ; BSR set to: 0
 32357                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 32358  007DB8  4BC1               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 32359  007DBA  2BC2               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 32360                           
 32361                           ; BSR set to: 0
 32362  007DBC  0012               	return		;funcret
 32363  007DBE                     __end_of_Timer0Handler:
 32364                           	opt callstack 0
 32365                           
 32366 ;; *************** function _Default_ISR *****************
 32367 ;; Defined at:
 32368 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 32369 ;; Parameters:    Size  Location     Type
 32370 ;;		None
 32371 ;; Auto vars:     Size  Location     Type
 32372 ;;		None
 32373 ;; Return value:  Size  Location     Type
 32374 ;;                  1    wreg      void 
 32375 ;; Registers used:
 32376 ;;		None
 32377 ;; Tracked objects:
 32378 ;;		On entry : 0/0
 32379 ;;		On exit  : 0/0
 32380 ;;		Unchanged: 0/0
 32381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32386 ;;Total ram usage:        0 bytes
 32387 ;; Hardware stack levels used:    1
 32388 ;; This function calls:
 32389 ;;		Nothing
 32390 ;; This function is called by:
 32391 ;;		Interrupt level 2
 32392 ;; This function uses a non-reentrant model
 32393 ;;
 32394                           
 32395                           	psect	text225
 32396  008E10                     __ptext225:
 32397                           	opt callstack 0
 32398  008E10                     _Default_ISR:
 32399                           	opt callstack 14
 32400                           
 32401                           ; BSR set to: 0
 32402                           ;incstack = 0
 32403  008E10  0011               	retfie		f
 32404  008E12                     __end_of_Default_ISR:
 32405                           	opt callstack 0
 32406                           
 32407 ;; *************** function _UART1_tx_vect_isr *****************
 32408 ;; Defined at:
 32409 ;;		line 247 in file "mcc_generated_files/uart1.c"
 32410 ;; Parameters:    Size  Location     Type
 32411 ;;		None
 32412 ;; Auto vars:     Size  Location     Type
 32413 ;;		None
 32414 ;; Return value:  Size  Location     Type
 32415 ;;                  1    wreg      void 
 32416 ;; Registers used:
 32417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32418 ;; Tracked objects:
 32419 ;;		On entry : 0/0
 32420 ;;		On exit  : 0/0
 32421 ;;		Unchanged: 0/0
 32422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32427 ;;Total ram usage:        0 bytes
 32428 ;; Hardware stack levels used:    1
 32429 ;; Hardware stack levels required when called:    1
 32430 ;; This function calls:
 32431 ;;		Absolute function
 32432 ;;		_UART1_Transmit_ISR
 32433 ;; This function is called by:
 32434 ;;		Interrupt level 2
 32435 ;; This function uses a non-reentrant model
 32436 ;;
 32437                           
 32438                           	psect	text226
 32439  008A40                     __ptext226:
 32440                           	opt callstack 0
 32441  008A40                     _UART1_tx_vect_isr:
 32442                           	opt callstack 13
 32443                           
 32444                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 32445                           
 32446                           ;incstack = 0
 32447  008A40  0101               	movlb	1	; () banked
 32448  008A42  51F0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32449  008A44  11F1               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32450  008A46  B4D8               	btfsc	status,2,c
 32451  008A48  0011               	retfie		f
 32452                           
 32453                           ; BSR set to: 1
 32454                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 32455  008A4A  D801               	call	i2u1272_48
 32456  008A4C  0011               	retfie		f
 32457  008A4E                     i2u1272_48:
 32458  008A4E  0005               	push	
 32459  008A50  6EFA               	movwf	pclath,c
 32460  008A52  51F0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32461  008A54  6EFD               	movwf	tosl,c
 32462  008A56  51F1               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32463  008A58  6EFE               	movwf	tosh,c
 32464  008A5A  6AFF               	clrf	tosu,c
 32465  008A5C  50FA               	movf	pclath,w,c
 32466  008A5E  0012               	return		;indir
 32467  008A60                     __end_of_UART1_tx_vect_isr:
 32468                           	opt callstack 0
 32469                           
 32470 ;; *************** function _UART1_Transmit_ISR *****************
 32471 ;; Defined at:
 32472 ;;		line 265 in file "mcc_generated_files/uart1.c"
 32473 ;; Parameters:    Size  Location     Type
 32474 ;;		None
 32475 ;; Auto vars:     Size  Location     Type
 32476 ;;		None
 32477 ;; Return value:  Size  Location     Type
 32478 ;;                  1    wreg      void 
 32479 ;; Registers used:
 32480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32481 ;; Tracked objects:
 32482 ;;		On entry : 3F/1
 32483 ;;		On exit  : 6/0
 32484 ;;		Unchanged: 0/0
 32485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32490 ;;Total ram usage:        0 bytes
 32491 ;; Hardware stack levels used:    1
 32492 ;; This function calls:
 32493 ;;		Nothing
 32494 ;; This function is called by:
 32495 ;;		_UART1_Initialize
 32496 ;;		_UART1_tx_vect_isr
 32497 ;; This function uses a non-reentrant model
 32498 ;;
 32499                           
 32500                           	psect	text227
 32501  0085DA                     __ptext227:
 32502                           	opt callstack 0
 32503  0085DA                     _UART1_Transmit_ISR:
 32504                           	opt callstack 13
 32505                           
 32506                           ; BSR set to: 1
 32507                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 32508                           
 32509                           ;incstack = 0
 32510  0085DA  0E40               	movlw	64
 32511  0085DC  0100               	movlb	0	; () banked
 32512  0085DE  61FF               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 32513  0085E0  D012               	goto	i2l13362
 32514                           
 32515                           ; BSR set to: 0
 32516                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 32517  0085E2  0E00               	movlw	low _uart1TxBuffer
 32518  0085E4  25C7               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 32519  0085E6  6ED9               	movwf	fsr2l,c
 32520  0085E8  6ADA               	clrf	fsr2h,c
 32521  0085EA  0E03               	movlw	high _uart1TxBuffer
 32522  0085EC  22DA               	addwfc	fsr2h,f,c
 32523  0085EE  50DF               	movf	indf2,w,c
 32524  0085F0  013D               	movlb	61	; () banked
 32525  0085F2  6FEA               	movwf	234,b	;volatile
 32526                           
 32527                           ; BSR set to: 61
 32528  0085F4  0100               	movlb	0	; () banked
 32529  0085F6  2BC7               	incf	_uart1TxTail& (0+255),f,b	;volatile
 32530                           
 32531                           ; BSR set to: 0
 32532                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 32533  0085F8  0E3F               	movlw	63
 32534  0085FA  65C7               	cpfsgt	_uart1TxTail& (0+255),b
 32535  0085FC  D002               	goto	i2l13360
 32536                           
 32537                           ; BSR set to: 0
 32538                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 32539  0085FE  0E00               	movlw	0
 32540  008600  6FC7               	movwf	_uart1TxTail& (0+255),b	;volatile
 32541  008602                     i2l13360:
 32542                           
 32543                           ; BSR set to: 0
 32544                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 32545  008602  2BFF               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 32546                           
 32547                           ;mcc_generated_files/uart1.c: 279:     }
 32548  008604  0012               	return	
 32549  008606                     i2l13362:
 32550                           
 32551                           ; BSR set to: 0
 32552                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 32553  008606  0E01               	movlw	1
 32554  008608  6FDA               	movwf	_tx_done& (0+255),b	;volatile
 32555                           
 32556                           ; BSR set to: 0
 32557                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 32558  00860A  0139               	movlb	57	; () banked
 32559  00860C  9993               	bcf	147,4,b	;volatile
 32560  00860E  0012               	return		;funcret
 32561  008610                     __end_of_UART1_Transmit_ISR:
 32562                           	opt callstack 0
 32563                           
 32564 ;; *************** function _UART1_rx_vect_isr *****************
 32565 ;; Defined at:
 32566 ;;		line 255 in file "mcc_generated_files/uart1.c"
 32567 ;; Parameters:    Size  Location     Type
 32568 ;;		None
 32569 ;; Auto vars:     Size  Location     Type
 32570 ;;		None
 32571 ;; Return value:  Size  Location     Type
 32572 ;;                  1    wreg      void 
 32573 ;; Registers used:
 32574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32575 ;; Tracked objects:
 32576 ;;		On entry : 0/0
 32577 ;;		On exit  : 0/0
 32578 ;;		Unchanged: 0/0
 32579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32584 ;;Total ram usage:        0 bytes
 32585 ;; Hardware stack levels used:    1
 32586 ;; Hardware stack levels required when called:    3
 32587 ;; This function calls:
 32588 ;;		Absolute function
 32589 ;;		_UART1_Receive_ISR
 32590 ;; This function is called by:
 32591 ;;		Interrupt level 2
 32592 ;; This function uses a non-reentrant model
 32593 ;;
 32594                           
 32595                           	psect	text228
 32596  008A60                     __ptext228:
 32597                           	opt callstack 0
 32598  008A60                     _UART1_rx_vect_isr:
 32599                           	opt callstack 11
 32600                           
 32601                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 32602                           
 32603                           ;incstack = 0
 32604  008A60  0101               	movlb	1	; () banked
 32605  008A62  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32606  008A64  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32607  008A66  B4D8               	btfsc	status,2,c
 32608  008A68  0011               	retfie		f
 32609                           
 32610                           ; BSR set to: 1
 32611                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 32612  008A6A  D801               	call	i2u1274_48
 32613  008A6C  0011               	retfie		f
 32614  008A6E                     i2u1274_48:
 32615  008A6E  0005               	push	
 32616  008A70  6EFA               	movwf	pclath,c
 32617  008A72  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32618  008A74  6EFD               	movwf	tosl,c
 32619  008A76  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32620  008A78  6EFE               	movwf	tosh,c
 32621  008A7A  6AFF               	clrf	tosu,c
 32622  008A7C  50FA               	movf	pclath,w,c
 32623  008A7E  0012               	return		;indir
 32624  008A80                     __end_of_UART1_rx_vect_isr:
 32625                           	opt callstack 0
 32626                           
 32627 ;; *************** function _UART1_Receive_ISR *****************
 32628 ;; Defined at:
 32629 ;;		line 292 in file "mcc_generated_files/uart1.c"
 32630 ;; Parameters:    Size  Location     Type
 32631 ;;		None
 32632 ;; Auto vars:     Size  Location     Type
 32633 ;;		None
 32634 ;; Return value:  Size  Location     Type
 32635 ;;                  1    wreg      void 
 32636 ;; Registers used:
 32637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32638 ;; Tracked objects:
 32639 ;;		On entry : 3F/1
 32640 ;;		On exit  : 0/0
 32641 ;;		Unchanged: 0/0
 32642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32647 ;;Total ram usage:        0 bytes
 32648 ;; Hardware stack levels used:    1
 32649 ;; Hardware stack levels required when called:    2
 32650 ;; This function calls:
 32651 ;;		Absolute function
 32652 ;;		_UART1_DefaultErrorHandler
 32653 ;;		_UART1_DefaultFramingErrorHandler
 32654 ;;		_UART1_DefaultOverrunErrorHandler
 32655 ;;		_UART1_RxDataHandler
 32656 ;; This function is called by:
 32657 ;;		_UART1_Initialize
 32658 ;;		_UART1_rx_vect_isr
 32659 ;; This function uses a non-reentrant model
 32660 ;;
 32661                           
 32662                           	psect	text229
 32663  006C40                     __ptext229:
 32664                           	opt callstack 0
 32665  006C40                     _UART1_Receive_ISR:
 32666                           	opt callstack 11
 32667                           
 32668                           ; BSR set to: 1
 32669                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 32670                           
 32671                           ;incstack = 0
 32672  006C40  0E28               	movlw	low _uart1RxStatusBuffer
 32673  006C42  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32674  006C44  6ED9               	movwf	fsr2l,c
 32675  006C46  6ADA               	clrf	fsr2h,c
 32676  006C48  0E01               	movlw	high _uart1RxStatusBuffer
 32677  006C4A  22DA               	addwfc	fsr2h,f,c
 32678  006C4C  0E00               	movlw	0
 32679  006C4E  6EDF               	movwf	indf2,c
 32680                           
 32681                           ; BSR set to: 1
 32682                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 32683  006C50  013D               	movlb	61	; () banked
 32684  006C52  A7F9               	btfss	249,3,b	;volatile
 32685  006C54  D013               	goto	i2u1266_49
 32686                           
 32687                           ; BSR set to: 61
 32688                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 32689  006C56  0E28               	movlw	low _uart1RxStatusBuffer
 32690  006C58  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32691  006C5A  6ED9               	movwf	fsr2l,c
 32692  006C5C  6ADA               	clrf	fsr2h,c
 32693  006C5E  0E01               	movlw	high _uart1RxStatusBuffer
 32694  006C60  22DA               	addwfc	fsr2h,f,c
 32695  006C62  0101               	movlb	1	; () banked
 32696  006C64  82DF               	bsf	indf2,1,c
 32697                           
 32698                           ; BSR set to: 1
 32699                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 32700  006C66  D801               	call	i2u1266_48
 32701  006C68  D009               	goto	i2u1266_49
 32702  006C6A                     i2u1266_48:
 32703  006C6A  0005               	push	
 32704  006C6C  6EFA               	movwf	pclath,c
 32705  006C6E  51EC               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 32706  006C70  6EFD               	movwf	tosl,c
 32707  006C72  51ED               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 32708  006C74  6EFE               	movwf	tosh,c
 32709  006C76  6AFF               	clrf	tosu,c
 32710  006C78  50FA               	movf	pclath,w,c
 32711  006C7A  0012               	return		;indir
 32712  006C7C                     i2u1266_49:
 32713                           
 32714                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 32715  006C7C  013D               	movlb	61	; () banked
 32716  006C7E  A3F9               	btfss	249,1,b	;volatile
 32717  006C80  D013               	goto	i2u1268_49
 32718                           
 32719                           ; BSR set to: 61
 32720                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 32721  006C82  0E28               	movlw	low _uart1RxStatusBuffer
 32722  006C84  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32723  006C86  6ED9               	movwf	fsr2l,c
 32724  006C88  6ADA               	clrf	fsr2h,c
 32725  006C8A  0E01               	movlw	high _uart1RxStatusBuffer
 32726  006C8C  22DA               	addwfc	fsr2h,f,c
 32727  006C8E  0101               	movlb	1	; () banked
 32728  006C90  84DF               	bsf	indf2,2,c
 32729                           
 32730                           ; BSR set to: 1
 32731                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 32732  006C92  D801               	call	i2u1268_48
 32733  006C94  D009               	goto	i2u1268_49
 32734  006C96                     i2u1268_48:
 32735  006C96  0005               	push	
 32736  006C98  6EFA               	movwf	pclath,c
 32737  006C9A  51EA               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 32738  006C9C  6EFD               	movwf	tosl,c
 32739  006C9E  51EB               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 32740  006CA0  6EFE               	movwf	tosh,c
 32741  006CA2  6AFF               	clrf	tosu,c
 32742  006CA4  50FA               	movf	pclath,w,c
 32743  006CA6  0012               	return		;indir
 32744  006CA8                     i2u1268_49:
 32745                           
 32746                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 32747  006CA8  0E28               	movlw	low _uart1RxStatusBuffer
 32748  006CAA  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32749  006CAC  6ED9               	movwf	fsr2l,c
 32750  006CAE  6ADA               	clrf	fsr2h,c
 32751  006CB0  0E01               	movlw	high _uart1RxStatusBuffer
 32752  006CB2  22DA               	addwfc	fsr2h,f,c
 32753  006CB4  50DF               	movf	indf2,w,c
 32754  006CB6  B4D8               	btfsc	status,2,c
 32755  006CB8  D00C               	goto	i2l13384
 32756                           
 32757                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 32758  006CBA  D801               	call	i2u1270_48
 32759  006CBC  0012               	return	
 32760  006CBE                     i2u1270_48:
 32761  006CBE  0005               	push	
 32762  006CC0  6EFA               	movwf	pclath,c
 32763  006CC2  0101               	movlb	1	; () banked
 32764  006CC4  51E8               	movf	_UART1_ErrorHandler& (0+255),w,b
 32765  006CC6  6EFD               	movwf	tosl,c
 32766  006CC8  51E9               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 32767  006CCA  6EFE               	movwf	tosh,c
 32768  006CCC  6AFF               	clrf	tosu,c
 32769  006CCE  50FA               	movf	pclath,w,c
 32770  006CD0  0012               	return		;indir
 32771  006CD2                     i2l13384:
 32772                           
 32773                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 32774  006CD2  EC65  F044         	call	_UART1_RxDataHandler	;wreg free
 32775  006CD6  0012               	return		;funcret
 32776  006CD8                     __end_of_UART1_Receive_ISR:
 32777                           	opt callstack 0
 32778                           
 32779 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 32780 ;; Defined at:
 32781 ;;		line 328 in file "mcc_generated_files/uart1.c"
 32782 ;; Parameters:    Size  Location     Type
 32783 ;;		None
 32784 ;; Auto vars:     Size  Location     Type
 32785 ;;		None
 32786 ;; Return value:  Size  Location     Type
 32787 ;;                  1    wreg      void 
 32788 ;; Registers used:
 32789 ;;		None
 32790 ;; Tracked objects:
 32791 ;;		On entry : 3F/1
 32792 ;;		On exit  : 3F/1
 32793 ;;		Unchanged: 3F/0
 32794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32799 ;;Total ram usage:        0 bytes
 32800 ;; Hardware stack levels used:    1
 32801 ;; This function calls:
 32802 ;;		Nothing
 32803 ;; This function is called by:
 32804 ;;		_UART1_Initialize
 32805 ;;		_UART1_Receive_ISR
 32806 ;; This function uses a non-reentrant model
 32807 ;;
 32808                           
 32809                           	psect	text230
 32810  008E12                     __ptext230:
 32811                           	opt callstack 0
 32812  008E12                     _UART1_DefaultOverrunErrorHandler:
 32813                           	opt callstack 12
 32814                           
 32815                           ; BSR set to: 1
 32816                           
 32817                           ;incstack = 0
 32818  008E12  0012               	return		;funcret
 32819  008E14                     __end_of_UART1_DefaultOverrunErrorHandler:
 32820                           	opt callstack 0
 32821                           
 32822 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 32823 ;; Defined at:
 32824 ;;		line 326 in file "mcc_generated_files/uart1.c"
 32825 ;; Parameters:    Size  Location     Type
 32826 ;;		None
 32827 ;; Auto vars:     Size  Location     Type
 32828 ;;		None
 32829 ;; Return value:  Size  Location     Type
 32830 ;;                  1    wreg      void 
 32831 ;; Registers used:
 32832 ;;		None
 32833 ;; Tracked objects:
 32834 ;;		On entry : 3F/1
 32835 ;;		On exit  : 3F/1
 32836 ;;		Unchanged: 3F/0
 32837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32842 ;;Total ram usage:        0 bytes
 32843 ;; Hardware stack levels used:    1
 32844 ;; This function calls:
 32845 ;;		Nothing
 32846 ;; This function is called by:
 32847 ;;		_UART1_Initialize
 32848 ;;		_UART1_Receive_ISR
 32849 ;; This function uses a non-reentrant model
 32850 ;;
 32851                           
 32852                           	psect	text231
 32853  008E14                     __ptext231:
 32854                           	opt callstack 0
 32855  008E14                     _UART1_DefaultFramingErrorHandler:
 32856                           	opt callstack 12
 32857                           
 32858                           ; BSR set to: 1
 32859                           
 32860                           ; BSR set to: 1
 32861                           ;incstack = 0
 32862  008E14  0012               	return		;funcret
 32863  008E16                     __end_of_UART1_DefaultFramingErrorHandler:
 32864                           	opt callstack 0
 32865                           
 32866 ;; *************** function _UART1_DefaultErrorHandler *****************
 32867 ;; Defined at:
 32868 ;;		line 330 in file "mcc_generated_files/uart1.c"
 32869 ;; Parameters:    Size  Location     Type
 32870 ;;		None
 32871 ;; Auto vars:     Size  Location     Type
 32872 ;;		None
 32873 ;; Return value:  Size  Location     Type
 32874 ;;                  1    wreg      void 
 32875 ;; Registers used:
 32876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32877 ;; Tracked objects:
 32878 ;;		On entry : 3F/1
 32879 ;;		On exit  : 3F/0
 32880 ;;		Unchanged: 0/0
 32881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32886 ;;Total ram usage:        0 bytes
 32887 ;; Hardware stack levels used:    1
 32888 ;; Hardware stack levels required when called:    1
 32889 ;; This function calls:
 32890 ;;		_UART1_RxDataHandler
 32891 ;; This function is called by:
 32892 ;;		_UART1_Initialize
 32893 ;;		_UART1_Receive_ISR
 32894 ;; This function uses a non-reentrant model
 32895 ;;
 32896                           
 32897                           	psect	text232
 32898  008DF8                     __ptext232:
 32899                           	opt callstack 0
 32900  008DF8                     _UART1_DefaultErrorHandler:
 32901                           	opt callstack 11
 32902                           
 32903                           ; BSR set to: 1
 32904                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 32905                           
 32906                           ; BSR set to: 1
 32907                           ;incstack = 0
 32908  008DF8  EC65  F044         	call	_UART1_RxDataHandler	;wreg free
 32909                           
 32910                           ; BSR set to: 0
 32911  008DFC  0012               	return		;funcret
 32912  008DFE                     __end_of_UART1_DefaultErrorHandler:
 32913                           	opt callstack 0
 32914                           
 32915 ;; *************** function _UART1_RxDataHandler *****************
 32916 ;; Defined at:
 32917 ;;		line 316 in file "mcc_generated_files/uart1.c"
 32918 ;; Parameters:    Size  Location     Type
 32919 ;;		None
 32920 ;; Auto vars:     Size  Location     Type
 32921 ;;		None
 32922 ;; Return value:  Size  Location     Type
 32923 ;;                  1    wreg      void 
 32924 ;; Registers used:
 32925 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32926 ;; Tracked objects:
 32927 ;;		On entry : 0/3D
 32928 ;;		On exit  : 3F/0
 32929 ;;		Unchanged: 0/0
 32930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32935 ;;Total ram usage:        0 bytes
 32936 ;; Hardware stack levels used:    1
 32937 ;; This function calls:
 32938 ;;		Nothing
 32939 ;; This function is called by:
 32940 ;;		_UART1_Receive_ISR
 32941 ;;		_UART1_DefaultErrorHandler
 32942 ;; This function uses a non-reentrant model
 32943 ;;
 32944                           
 32945                           	psect	text233
 32946  0088CA                     __ptext233:
 32947                           	opt callstack 0
 32948  0088CA                     _UART1_RxDataHandler:
 32949                           	opt callstack 12
 32950                           
 32951                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 32952                           
 32953                           ; BSR set to: 0
 32954                           ;incstack = 0
 32955  0088CA  0E38               	movlw	low _uart1RxBuffer
 32956  0088CC  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32957  0088CE  6ED9               	movwf	fsr2l,c
 32958  0088D0  6ADA               	clrf	fsr2h,c
 32959  0088D2  0E01               	movlw	high _uart1RxBuffer
 32960  0088D4  22DA               	addwfc	fsr2h,f,c
 32961  0088D6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32962  0088DC  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 32963                           
 32964                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32965  0088DE  0E0F               	movlw	15
 32966  0088E0  645E               	cpfsgt	_uart1RxHead^0,c
 32967  0088E2  D002               	goto	i2l12302
 32968                           
 32969                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 32970  0088E4  0E00               	movlw	0
 32971  0088E6  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 32972  0088E8                     i2l12302:
 32973                           
 32974                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 32975  0088E8  0100               	movlb	0	; () banked
 32976  0088EA  2BC5               	incf	_uart1RxCount& (0+255),f,b	;volatile
 32977                           
 32978                           ; BSR set to: 0
 32979  0088EC  0012               	return		;funcret
 32980  0088EE                     __end_of_UART1_RxDataHandler:
 32981                           	opt callstack 0
 32982                           
 32983                           ;
 32984                           ; Interrupt Vector Table @ 0x8
 32985                           ;
 32986                           
 32987                           	psect	ivt0x8
 32988  000008                     __pivt0x8:
 32989                           	opt callstack 0
 32990  000008                     ivt0x8_base:
 32991                           	opt callstack 0
 32992                           
 32993                           ; Vector 0 : SWINT
 32994  000008  2384               	dw	_Default_ISR shr (0+2)
 32995                           
 32996                           ; Vector 1 : HLVD
 32997  00000A  2384               	dw	_Default_ISR shr (0+2)
 32998                           
 32999                           ; Vector 2 : OSF
 33000  00000C  2384               	dw	_Default_ISR shr (0+2)
 33001                           
 33002                           ; Vector 3 : CSW
 33003  00000E  2384               	dw	_Default_ISR shr (0+2)
 33004                           
 33005                           ; Vector 4 : NVM
 33006  000010  2384               	dw	_Default_ISR shr (0+2)
 33007                           
 33008                           ; Vector 5 : SCAN
 33009  000012  2384               	dw	_Default_ISR shr (0+2)
 33010                           
 33011                           ; Vector 6 : CRC
 33012  000014  2384               	dw	_Default_ISR shr (0+2)
 33013                           
 33014                           ; Vector 7 : IOC
 33015  000016  2384               	dw	_Default_ISR shr (0+2)
 33016                           
 33017                           ; Vector 8 : INT0
 33018  000018  2384               	dw	_Default_ISR shr (0+2)
 33019                           
 33020                           ; Vector 9 : ZCD
 33021  00001A  2384               	dw	_Default_ISR shr (0+2)
 33022                           
 33023                           ; Vector 10 : AD
 33024  00001C  2384               	dw	_Default_ISR shr (0+2)
 33025                           
 33026                           ; Vector 11 : ADT
 33027  00001E  2384               	dw	_Default_ISR shr (0+2)
 33028                           
 33029                           ; Vector 12 : CMP1
 33030  000020  2384               	dw	_Default_ISR shr (0+2)
 33031                           
 33032                           ; Vector 13 : SMT1
 33033  000022  2384               	dw	_Default_ISR shr (0+2)
 33034                           
 33035                           ; Vector 14 : SMT1PRA
 33036  000024  2384               	dw	_Default_ISR shr (0+2)
 33037                           
 33038                           ; Vector 15 : SMT1PRW
 33039  000026  2384               	dw	_Default_ISR shr (0+2)
 33040                           
 33041                           ; Vector 16 : DMA1SCNT
 33042  000028  2384               	dw	_Default_ISR shr (0+2)
 33043                           
 33044                           ; Vector 17 : DMA1DCNT
 33045  00002A  2384               	dw	_Default_ISR shr (0+2)
 33046                           
 33047                           ; Vector 18 : DMA1OR
 33048  00002C  2384               	dw	_Default_ISR shr (0+2)
 33049                           
 33050                           ; Vector 19 : DMA1A
 33051  00002E  2384               	dw	_Default_ISR shr (0+2)
 33052                           
 33053                           ; Vector 20 : SPI1RX
 33054  000030  2384               	dw	_Default_ISR shr (0+2)
 33055                           
 33056                           ; Vector 21 : SPI1TX
 33057  000032  2384               	dw	_Default_ISR shr (0+2)
 33058                           
 33059                           ; Vector 22 : SPI1
 33060  000034  2384               	dw	_Default_ISR shr (0+2)
 33061                           
 33062                           ; Vector 23 : I2C1RX
 33063  000036  2384               	dw	_Default_ISR shr (0+2)
 33064                           
 33065                           ; Vector 24 : I2C1TX
 33066  000038  2384               	dw	_Default_ISR shr (0+2)
 33067                           
 33068                           ; Vector 25 : I2C1
 33069  00003A  2384               	dw	_Default_ISR shr (0+2)
 33070                           
 33071                           ; Vector 26 : I2C1E
 33072  00003C  2384               	dw	_Default_ISR shr (0+2)
 33073                           
 33074                           ; Vector 27 : U1RX
 33075  00003E  2298               	dw	_UART1_rx_vect_isr shr (0+2)
 33076                           
 33077                           ; Vector 28 : U1TX
 33078  000040  2290               	dw	_UART1_tx_vect_isr shr (0+2)
 33079                           
 33080                           ; Vector 29 : U1E
 33081  000042  2384               	dw	_Default_ISR shr (0+2)
 33082                           
 33083                           ; Vector 30 : U1
 33084  000044  2384               	dw	_Default_ISR shr (0+2)
 33085                           
 33086                           ; Vector 31 : TMR0
 33087  000046  226F               	dw	_TMR0_ISR shr (0+2)
 33088                           
 33089                           ; Vector 32 : TMR1
 33090  000048  2384               	dw	_Default_ISR shr (0+2)
 33091                           
 33092                           ; Vector 33 : TMR1G
 33093  00004A  2384               	dw	_Default_ISR shr (0+2)
 33094                           
 33095                           ; Vector 34 : TMR2
 33096  00004C  2384               	dw	_Default_ISR shr (0+2)
 33097                           
 33098                           ; Vector 35 : CCP1
 33099  00004E  2384               	dw	_Default_ISR shr (0+2)
 33100                           
 33101                           ; Vector 36 : Undefined
 33102  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33103                           
 33104                           ; Vector 37 : NCO1
 33105  000052  2384               	dw	_Default_ISR shr (0+2)
 33106                           
 33107                           ; Vector 38 : CWG1
 33108  000054  2384               	dw	_Default_ISR shr (0+2)
 33109                           
 33110                           ; Vector 39 : CLC1
 33111  000056  2384               	dw	_Default_ISR shr (0+2)
 33112                           
 33113                           ; Vector 40 : INT1
 33114  000058  2384               	dw	_Default_ISR shr (0+2)
 33115                           
 33116                           ; Vector 41 : CMP2
 33117  00005A  2384               	dw	_Default_ISR shr (0+2)
 33118                           
 33119                           ; Vector 42 : DMA2SCNT
 33120  00005C  2384               	dw	_Default_ISR shr (0+2)
 33121                           
 33122                           ; Vector 43 : DMA2DCNT
 33123  00005E  2384               	dw	_Default_ISR shr (0+2)
 33124                           
 33125                           ; Vector 44 : DMA2OR
 33126  000060  2384               	dw	_Default_ISR shr (0+2)
 33127                           
 33128                           ; Vector 45 : DMA2A
 33129  000062  2384               	dw	_Default_ISR shr (0+2)
 33130                           
 33131                           ; Vector 46 : I2C2RX
 33132  000064  2384               	dw	_Default_ISR shr (0+2)
 33133                           
 33134                           ; Vector 47 : I2C2TX
 33135  000066  2384               	dw	_Default_ISR shr (0+2)
 33136                           
 33137                           ; Vector 48 : I2C2
 33138  000068  2384               	dw	_Default_ISR shr (0+2)
 33139                           
 33140                           ; Vector 49 : I2C2E
 33141  00006A  2384               	dw	_Default_ISR shr (0+2)
 33142                           
 33143                           ; Vector 50 : U2RX
 33144  00006C  2384               	dw	_Default_ISR shr (0+2)
 33145                           
 33146                           ; Vector 51 : U2TX
 33147  00006E  2384               	dw	_Default_ISR shr (0+2)
 33148                           
 33149                           ; Vector 52 : U2E
 33150  000070  2384               	dw	_Default_ISR shr (0+2)
 33151                           
 33152                           ; Vector 53 : U2
 33153  000072  2384               	dw	_Default_ISR shr (0+2)
 33154                           
 33155                           ; Vector 54 : TMR3
 33156  000074  2384               	dw	_Default_ISR shr (0+2)
 33157                           
 33158                           ; Vector 55 : TMR3G
 33159  000076  2384               	dw	_Default_ISR shr (0+2)
 33160                           
 33161                           ; Vector 56 : TMR4
 33162  000078  2384               	dw	_Default_ISR shr (0+2)
 33163                           
 33164                           ; Vector 57 : CCP2
 33165  00007A  2384               	dw	_Default_ISR shr (0+2)
 33166                           
 33167                           ; Vector 58 : Undefined
 33168  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33169                           
 33170                           ; Vector 59 : CWG2
 33171  00007E  2384               	dw	_Default_ISR shr (0+2)
 33172                           
 33173                           ; Vector 60 : CLC2
 33174  000080  2384               	dw	_Default_ISR shr (0+2)
 33175                           
 33176                           ; Vector 61 : INT2
 33177  000082  2384               	dw	_Default_ISR shr (0+2)
 33178                           
 33179                           ; Vector 62 : Undefined
 33180  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33181                           
 33182                           ; Vector 63 : Undefined
 33183  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33184                           
 33185                           ; Vector 64 : Undefined
 33186  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33187                           
 33188                           ; Vector 65 : Undefined
 33189  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33190                           
 33191                           ; Vector 66 : Undefined
 33192  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33193                           
 33194                           ; Vector 67 : Undefined
 33195  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33196                           
 33197                           ; Vector 68 : Undefined
 33198  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33199                           
 33200                           ; Vector 69 : Undefined
 33201  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33202                           
 33203                           ; Vector 70 : TMR5
 33204  000094  2384               	dw	_Default_ISR shr (0+2)
 33205                           
 33206                           ; Vector 71 : TMR5G
 33207  000096  2384               	dw	_Default_ISR shr (0+2)
 33208                           
 33209                           ; Vector 72 : TMR6
 33210  000098  2384               	dw	_Default_ISR shr (0+2)
 33211                           
 33212                           ; Vector 73 : CCP3
 33213  00009A  2384               	dw	_Default_ISR shr (0+2)
 33214                           
 33215                           ; Vector 74 : CWG3
 33216  00009C  2384               	dw	_Default_ISR shr (0+2)
 33217                           
 33218                           ; Vector 75 : CLC3
 33219  00009E  2384               	dw	_Default_ISR shr (0+2)
 33220                           
 33221                           ; Vector 76 : Undefined
 33222  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33223                           
 33224                           ; Vector 77 : Undefined
 33225  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33226                           
 33227                           ; Vector 78 : Undefined
 33228  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33229                           
 33230                           ; Vector 79 : Undefined
 33231  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33232                           
 33233                           ; Vector 80 : CCP4
 33234  0000A8  2384               	dw	_Default_ISR shr (0+2)
 33235                           
 33236                           ; Vector 81 : CLC4
 33237  0000AA  2384               	dw	_Default_ISR shr (0+2)
 33238  0000AC                     ivt0x8_undefint:
 33239                           	opt callstack 0
 33240  0000AC  00FF               	reset	
 33241                           
 33242                           	psect	text234
 33243  000000                     __ptext234:
 33244                           	opt callstack 0
 33245                           
 33246                           	psect	rparam
 33247  0000                     tosu	equ	0x3FFF
 33248                           tosh	equ	0x3FFE
 33249                           tosl	equ	0x3FFD
 33250                           stkptr	equ	0x3FFC
 33251                           pclatu	equ	0x3FFB
 33252                           pclath	equ	0x3FFA
 33253                           pcl	equ	0x3FF9
 33254                           tblptru	equ	0x3FF8
 33255                           tblptrh	equ	0x3FF7
 33256                           tblptrl	equ	0x3FF6
 33257                           tablat	equ	0x3FF5
 33258                           prodh	equ	0x3FF4
 33259                           prodl	equ	0x3FF3
 33260                           indf0	equ	0x3FEF
 33261                           postinc0	equ	0x3FEE
 33262                           postdec0	equ	0x3FED
 33263                           preinc0	equ	0x3FEC
 33264                           plusw0	equ	0x3FEB
 33265                           fsr0h	equ	0x3FEA
 33266                           fsr0l	equ	0x3FE9
 33267                           wreg	equ	0x3FE8
 33268                           indf1	equ	0x3FE7
 33269                           postinc1	equ	0x3FE6
 33270                           postdec1	equ	0x3FE5
 33271                           preinc1	equ	0x3FE4
 33272                           plusw1	equ	0x3FE3
 33273                           fsr1h	equ	0x3FE2
 33274                           fsr1l	equ	0x3FE1
 33275                           bsr	equ	0x3FE0
 33276                           indf2	equ	0x3FDF
 33277                           postinc2	equ	0x3FDE
 33278                           postdec2	equ	0x3FDD
 33279                           preinc2	equ	0x3FDC
 33280                           plusw2	equ	0x3FDB
 33281                           fsr2h	equ	0x3FDA
 33282                           fsr2l	equ	0x3FD9
 33283                           status	equ	0x3FD8


Data Sizes:
    Strings     581
    Constant    270
    Data        23
    BSS         2803
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160     81     160
    BANK1           256      0     251
    BANK2           256      0     214
    BANK3           256      0     192
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    S4661$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S84$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2838$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_131(CODE[10]), STR_129(CODE[10]), STR_127(CODE[6]), STR_125(CODE[6]), 
		 -> STR_123(CODE[7]), STR_121(CODE[5]), STR_119(CODE[7]), STR_117(CODE[7]), 
		 -> STR_115(CODE[6]), STR_113(CODE[9]), STR_111(CODE[8]), STR_109(CODE[8]), 
		 -> STR_107(CODE[7]), STR_105(CODE[6]), STR_103(CODE[3]), STR_101(CODE[9]), 
		 -> STR_99(CODE[7]), STR_97(CODE[7]), STR_95(CODE[10]), STR_93(CODE[10]), 
		 -> STR_91(CODE[15]), STR_89(CODE[13]), STR_87(CODE[9]), STR_85(CODE[7]), 
		 -> STR_83(CODE[7]), STR_81(CODE[10]), STR_79(CODE[7]), STR_77(CODE[8]), 
		 -> STR_75(CODE[11]), STR_73(CODE[5]), STR_71(CODE[5]), STR_69(CODE[7]), 
		 -> STR_67(CODE[9]), STR_65(CODE[7]), STR_58(CODE[2]), STR_52(CODE[6]), 
		 -> STR_50(CODE[6]), STR_48(CODE[5]), STR_44(CODE[2]), STR_39(CODE[2]), 
		 -> STR_35(CODE[2]), STR_26(CODE[2]), STR_23(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_131(CODE[10]), STR_129(CODE[10]), STR_127(CODE[6]), STR_125(CODE[6]), 
		 -> STR_123(CODE[7]), STR_121(CODE[5]), STR_119(CODE[7]), STR_117(CODE[7]), 
		 -> STR_115(CODE[6]), STR_113(CODE[9]), STR_111(CODE[8]), STR_109(CODE[8]), 
		 -> STR_107(CODE[7]), STR_105(CODE[6]), STR_103(CODE[3]), STR_101(CODE[9]), 
		 -> STR_99(CODE[7]), STR_97(CODE[7]), STR_95(CODE[10]), STR_93(CODE[10]), 
		 -> STR_91(CODE[15]), STR_89(CODE[13]), STR_87(CODE[9]), STR_85(CODE[7]), 
		 -> STR_83(CODE[7]), STR_81(CODE[10]), STR_79(CODE[7]), STR_77(CODE[8]), 
		 -> STR_75(CODE[11]), STR_73(CODE[5]), STR_71(CODE[5]), STR_69(CODE[7]), 
		 -> STR_67(CODE[9]), STR_65(CODE[7]), STR_58(CODE[2]), STR_52(CODE[6]), 
		 -> STR_50(CODE[6]), STR_48(CODE[5]), STR_44(CODE[2]), STR_39(CODE[2]), 
		 -> STR_35(CODE[2]), STR_26(CODE[2]), STR_23(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_131(CODE[10]), STR_129(CODE[10]), STR_127(CODE[6]), STR_125(CODE[6]), 
		 -> STR_123(CODE[7]), STR_121(CODE[5]), STR_119(CODE[7]), STR_117(CODE[7]), 
		 -> STR_115(CODE[6]), STR_113(CODE[9]), STR_111(CODE[8]), STR_109(CODE[8]), 
		 -> STR_107(CODE[7]), STR_105(CODE[6]), STR_103(CODE[3]), STR_101(CODE[9]), 
		 -> STR_99(CODE[7]), STR_97(CODE[7]), STR_95(CODE[10]), STR_93(CODE[10]), 
		 -> STR_91(CODE[15]), STR_89(CODE[13]), STR_87(CODE[9]), STR_85(CODE[7]), 
		 -> STR_83(CODE[7]), STR_81(CODE[10]), STR_79(CODE[7]), STR_77(CODE[8]), 
		 -> STR_75(CODE[11]), STR_73(CODE[5]), STR_71(CODE[5]), STR_69(CODE[7]), 
		 -> STR_67(CODE[9]), STR_65(CODE[7]), STR_58(CODE[2]), STR_52(CODE[6]), 
		 -> STR_50(CODE[6]), STR_48(CODE[5]), STR_44(CODE[2]), STR_39(CODE[2]), 
		 -> STR_35(CODE[2]), STR_26(CODE[2]), STR_23(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[32]), STR_131(CODE[10]), STR_129(CODE[10]), STR_127(CODE[6]), 
		 -> STR_125(CODE[6]), STR_123(CODE[7]), STR_121(CODE[5]), STR_119(CODE[7]), 
		 -> STR_117(CODE[7]), STR_115(CODE[6]), STR_113(CODE[9]), STR_111(CODE[8]), 
		 -> STR_109(CODE[8]), STR_107(CODE[7]), STR_105(CODE[6]), STR_103(CODE[3]), 
		 -> STR_101(CODE[9]), STR_99(CODE[7]), STR_97(CODE[7]), STR_95(CODE[10]), 
		 -> STR_93(CODE[10]), STR_91(CODE[15]), STR_89(CODE[13]), STR_87(CODE[9]), 
		 -> STR_85(CODE[7]), STR_83(CODE[7]), STR_81(CODE[10]), STR_79(CODE[7]), 
		 -> STR_77(CODE[8]), STR_75(CODE[11]), STR_73(CODE[5]), STR_71(CODE[5]), 
		 -> STR_69(CODE[7]), STR_67(CODE[9]), STR_65(CODE[7]), STR_58(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_52(CODE[6]), STR_50(CODE[6]), 
		 -> STR_48(CODE[5]), STR_44(CODE[2]), STR_39(CODE[2]), STR_35(CODE[2]), 
		 -> STR_26(CODE[2]), STR_23(CODE[2]), STR_15(CODE[2]), STR_11(CODE[2]), 
		 -> atCommand(BANK1[80]), NULL(NULL[0]), STR_6(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[32]), STR_131(CODE[10]), STR_129(CODE[10]), STR_127(CODE[6]), 
		 -> STR_125(CODE[6]), STR_123(CODE[7]), STR_121(CODE[5]), STR_119(CODE[7]), 
		 -> STR_117(CODE[7]), STR_115(CODE[6]), STR_113(CODE[9]), STR_111(CODE[8]), 
		 -> STR_109(CODE[8]), STR_107(CODE[7]), STR_105(CODE[6]), STR_103(CODE[3]), 
		 -> STR_101(CODE[9]), STR_99(CODE[7]), STR_97(CODE[7]), STR_95(CODE[10]), 
		 -> STR_93(CODE[10]), STR_91(CODE[15]), STR_89(CODE[13]), STR_87(CODE[9]), 
		 -> STR_85(CODE[7]), STR_83(CODE[7]), STR_81(CODE[10]), STR_79(CODE[7]), 
		 -> STR_77(CODE[8]), STR_75(CODE[11]), STR_73(CODE[5]), STR_71(CODE[5]), 
		 -> STR_69(CODE[7]), STR_67(CODE[9]), STR_65(CODE[7]), STR_58(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_52(CODE[6]), STR_50(CODE[6]), 
		 -> STR_48(CODE[5]), STR_44(CODE[2]), STR_39(CODE[2]), STR_35(CODE[2]), 
		 -> STR_26(CODE[2]), STR_23(CODE[2]), STR_15(CODE[2]), STR_11(CODE[2]), 
		 -> atCommand(BANK1[80]), NULL(NULL[0]), STR_6(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_137(CODE[5]), STR_136(CODE[8]), STR_135(CODE[28]), STR_134(CODE[26]), 
		 -> STR_133(CODE[12]), STR_132(CODE[12]), STR_63(CODE[5]), STR_62(CODE[34]), 
		 -> STR_61(CODE[14]), STR_60(CODE[5]), STR_59(CODE[12]), STR_57(CODE[8]), 
		 -> STR_54(CODE[5]), STR_53(CODE[12]), STR_46(CODE[5]), STR_45(CODE[12]), 
		 -> STR_43(CODE[13]), STR_42(CODE[5]), STR_41(CODE[12]), STR_40(CODE[12]), 
		 -> STR_38(CODE[14]), STR_37(CODE[5]), STR_36(CODE[12]), STR_34(CODE[13]), 
		 -> STR_33(CODE[18]), STR_32(CODE[18]), STR_31(CODE[5]), STR_30(CODE[21]), 
		 -> STR_29(CODE[5]), STR_28(CODE[12]), STR_27(CODE[12]), STR_25(CODE[12]), 
		 -> STR_24(CODE[12]), STR_22(CODE[5]), STR_21(CODE[3]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[12]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_14(CODE[13]), STR_13(CODE[12]), STR_12(CODE[5]), STR_10(CODE[16]), 
		 -> STR_9(CODE[8]), STR_8(CODE[12]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7854_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK1[80]), tx_buffer(BIGRAM[524]), 
		 -> rx_buffer(BIGRAM[610]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK1[80]), tx_buffer(BIGRAM[524]), 
		 -> rx_buffer(BIGRAM[610]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer(BIGRAM[610]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer(BIGRAM[610]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK1[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK1[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_137(CODE[5]), STR_136(CODE[8]), STR_135(CODE[28]), STR_134(CODE[26]), 
		 -> STR_133(CODE[12]), STR_132(CODE[12]), STR_63(CODE[5]), STR_62(CODE[34]), 
		 -> STR_61(CODE[14]), STR_60(CODE[5]), STR_59(CODE[12]), STR_57(CODE[8]), 
		 -> STR_54(CODE[5]), STR_53(CODE[12]), STR_46(CODE[5]), STR_45(CODE[12]), 
		 -> STR_43(CODE[13]), STR_42(CODE[5]), STR_41(CODE[12]), STR_40(CODE[12]), 
		 -> STR_38(CODE[14]), STR_37(CODE[5]), STR_36(CODE[12]), STR_34(CODE[13]), 
		 -> STR_33(CODE[18]), STR_32(CODE[18]), STR_31(CODE[5]), STR_30(CODE[21]), 
		 -> STR_29(CODE[5]), STR_28(CODE[12]), STR_27(CODE[12]), STR_25(CODE[12]), 
		 -> STR_24(CODE[12]), STR_22(CODE[5]), STR_21(CODE[3]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[12]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_14(CODE[13]), STR_13(CODE[12]), STR_12(CODE[5]), STR_10(CODE[16]), 
		 -> STR_9(CODE[8]), STR_8(CODE[12]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_137(CODE[5]), STR_136(CODE[8]), STR_135(CODE[28]), STR_134(CODE[26]), 
		 -> STR_133(CODE[12]), STR_132(CODE[12]), STR_63(CODE[5]), STR_62(CODE[34]), 
		 -> STR_61(CODE[14]), STR_60(CODE[5]), STR_59(CODE[12]), STR_57(CODE[8]), 
		 -> STR_54(CODE[5]), STR_53(CODE[12]), STR_46(CODE[5]), STR_45(CODE[12]), 
		 -> STR_43(CODE[13]), STR_42(CODE[5]), STR_41(CODE[12]), STR_40(CODE[12]), 
		 -> STR_38(CODE[14]), STR_37(CODE[5]), STR_36(CODE[12]), STR_34(CODE[13]), 
		 -> STR_33(CODE[18]), STR_32(CODE[18]), STR_31(CODE[5]), STR_30(CODE[21]), 
		 -> STR_29(CODE[5]), STR_28(CODE[12]), STR_27(CODE[12]), STR_25(CODE[12]), 
		 -> STR_24(CODE[12]), STR_22(CODE[5]), STR_21(CODE[3]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[12]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_14(CODE[13]), STR_13(CODE[12]), STR_12(CODE[5]), STR_10(CODE[16]), 
		 -> STR_9(CODE[8]), STR_8(CODE[12]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_137(CODE[5]), STR_136(CODE[8]), STR_135(CODE[28]), STR_134(CODE[26]), 
		 -> STR_133(CODE[12]), STR_132(CODE[12]), STR_63(CODE[5]), STR_62(CODE[34]), 
		 -> STR_61(CODE[14]), STR_60(CODE[5]), STR_59(CODE[12]), STR_57(CODE[8]), 
		 -> STR_54(CODE[5]), STR_53(CODE[12]), STR_46(CODE[5]), STR_45(CODE[12]), 
		 -> STR_43(CODE[13]), STR_42(CODE[5]), STR_41(CODE[12]), STR_40(CODE[12]), 
		 -> STR_38(CODE[14]), STR_37(CODE[5]), STR_36(CODE[12]), STR_34(CODE[13]), 
		 -> STR_33(CODE[18]), STR_32(CODE[18]), STR_31(CODE[5]), STR_30(CODE[21]), 
		 -> STR_29(CODE[5]), STR_28(CODE[12]), STR_27(CODE[12]), STR_25(CODE[12]), 
		 -> STR_24(CODE[12]), STR_22(CODE[5]), STR_21(CODE[3]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[12]), STR_17(CODE[6]), STR_16(CODE[5]), 
		 -> STR_14(CODE[13]), STR_13(CODE[12]), STR_12(CODE[5]), STR_10(CODE[16]), 
		 -> STR_9(CODE[8]), STR_8(CODE[12]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    nwkFrame@nwkFramePayloadSize@frame_7164...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_7164.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6724...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6724.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5640...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5640.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5418...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5418.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK2[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK2[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4693PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4661SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4661SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4797...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4797.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4797	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4562...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4562.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4010...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4010.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3586...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3586.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkFrame@nwkFramePayloadSize@frame_3140...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3140.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2838NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame_2936...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2936.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(1) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(1) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    nwkFrame@nwkFramePayloadSize@frame_1715...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1715.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    S952$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    print_hop_table@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_56(CODE[2]), STR_55(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[2]), STR_55(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    get_free_rx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> appDataInd@buf_id(COMRAM[1]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer(BIGRAM[610]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK1[80]), tx_buffer(BIGRAM[524]), 
		 -> rx_buffer(BIGRAM[610]), 

    rx_buffer.rx_ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S143NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S115NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S115NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    S84$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S83NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _processATCommand->_executeATCommand
    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _CircularBufferPushBack->_memcpy
    _executeATCommand->_cmdGetRxCnt
    _executeATCommand->_print_hop_table
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdRecv->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRxCnt->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _NWK_TaskHandler->_nwkRxTaskHandler
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxTaskHandler->_nwkRouteFrame
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxSendAck->_nwkTxFrame
    _nwkRxIndicateFrame->_appDataInd
    _nwkRxIndicateFrame->_nwkRxServiceDataInd
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_memcpy
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_processATCommand
    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _cmdSetCADRSSI->_printf
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _cmdRstCAD->_printf
    _cmdRecv->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRxCnt->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _cmdAddr->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2190201
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1768789
                                             77 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0    9749
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9681
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    6982
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1754287
                                             92 COMRAM     1     1      0
                                             73 BANK0      4     2      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   34048
                                             87 COMRAM     2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                     15    13      2   34367
                                             87 COMRAM     5     3      2
                                             31 BANK0     10    10      0
                     _NWK_RouteTable
                             _printf
 ---------------------------------------------------------------------------------
 (4) _NWK_RouteTable                                       2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  166830
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  162327
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  163794
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   47100
                                             87 COMRAM     2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  164279
                                             87 COMRAM     2     0      2
                                             31 BANK0      5     5      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    5766
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  162296
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5690
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2   10276
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2848
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   54328
                                             87 COMRAM     2     0      2
                                             31 BANK0      6     6      0
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   68125
                                             87 COMRAM     4     2      2
                                             31 BANK0     42    42      0
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   64990
                                             87 COMRAM     4     2      2
                                             31 BANK0     12    12      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7250
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4973
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              4     4      0   34263
                                             87 COMRAM     4     4      0
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   34043
                                             87 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   33944
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          5     3      2   34150
                                             87 COMRAM     5     3      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   40852
                                             87 COMRAM     2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   57506
                                             87 COMRAM     4     2      2
                                             31 BANK0      3     3      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12835
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     637
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     748
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     363
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     425
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   33944
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              13     3     10   33944
                                             84 COMRAM     3     3      0
                                             21 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   28645
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           44    40      4   28049
                                             69 COMRAM     8     4      4
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    7685
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    6789
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    7657
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    5293
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1150
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1705
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1149
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2673
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1278
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  6     6      0   42175
                                             47 COMRAM     6     6      0
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0     124
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   19557
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    8775
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    6908
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    4313
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1794
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  280196
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    6933
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2183
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2363
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    1561
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  183121
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  183121
                                             74 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   20286
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   11470
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       3     0      3    1086
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     655
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   42975
                                             67 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                            _receive
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    6159
                                             66 COMRAM     1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             56 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             40 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    8836
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0   90142
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   24574
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    1664
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     664
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   19228
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    5735
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   51880
                                             54 COMRAM     4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   17020
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9393
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    3934
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1425
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     668
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     179
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    1936
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     293
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   20677
                                             49 COMRAM     5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    7228
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   13051
                                             23 COMRAM    26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     155
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    2887
                                             18 COMRAM     5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1     848
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     558
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    1887
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    1709
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                           5     4      1    8512
                                             18 COMRAM     5     4      1
                 _get_free_rx_buffer
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _get_free_rx_buffer                                   2     1      1     199
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   13055
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    7467
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     378
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   13688
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   12973
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    3328
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     422
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     422
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2109
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1465
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1020
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     268
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    5152
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   97979
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   97373
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   97373
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     135
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    5868
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   11242
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   15241
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1145
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1179
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1516
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2138
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5904
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    8744
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    7013
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   19557
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    5735
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2    1046
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     546
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1145
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1046
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     338
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2989
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     648
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1905
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     606
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     290
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (16) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _get_free_rx_buffer
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
               _memset
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _putch
           _UART1_Write
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _NWK_RouteTable
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     71B      37       44.4%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AC      32        0.0%
DATA                 0      0     BC7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 13 00:55:50 2020

                         cmdSetNaddr@tempaddr 0083                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 8B78                                    _RSSITarget 00F7  
                              _setCodingRate4 856E                            _commandByteCounter 00D9  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0033                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 004D  
              __end_of_nwkRouteNormalizeRanks 845A                                _SYS_TimerStart 87E6  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 0010                                           l213 7714  
                                         l400 66F6                                           l227 7776  
                                         l350 6ADE                                           l359 57FA  
                                         l376 8E00                                           l633 71F0  
                                         l369 67A4                                           _GIE 01FE97  
                    __end_of_DIO0_Receive_ISR 6D6E                                           _SNR 00D0  
                          _CircularBufferSize 7966                        __end_of_NWK_RouteTable 8DC6  
                        __end_of_cmdSetParity 6F1C                                           _cad 644E  
                                         _abs 8200                                           _pad 6508  
                                ?_loadMACAddr 0001                             _NWK_GroupIsMember 86E0  
                          nwkRouteFrame@frame 0033                               nwkRxSendAck@ack 002E  
                     __size_of_PMD_Initialize 0022                           ??_SPI1_ExchangeByte 0002  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                   get_lqi@rssi 0043  
                    nwkDataReqSendFrame@frame 002F                                  ___flmul@aexp 001D  
                                ___flmul@bexp 0022                          _FirmwareVersionMajor FDB6  
                    _DATAEE_ReadByte_Platform 539C                            _UART1_Transmit_ISR 85DA  
                        _FirmwareVersionMinor FDB5                                  ___flmul@sign 001C  
                                ___flmul@temp 0027                                  ___flmul@prod 0023  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                              ?_queueLedEvent 001C                              _SX1276ReadBuffer 880E  
                       __end_of_SYS_TimerInit 8DA6                         queueLedEvent@LEDState 001E  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_get_timer0base 0002  
                                ___fltol@exp1 0042                                          ?_cad 0001  
                                        l1211 80F2                                          ?_abs 0014  
                                        l1071 8B86                               nwkTxFrame@frame 0024  
                                        l2215 62A8                                          l1426 8058  
                                        l3122 2C7E                                          l2324 3BF0  
                                        l3124 2C8A                                          l2157 199E  
                                        l1622 7B1C                                          l1623 7B04  
                                        l1631 5D76                                          l3232 70A2  
                                        l2344 6E54                                          l4041 7C76  
                                        l3137 22E6                                          l2602 829A  
                                        l4026 5AB0                                          l3139 22F2  
                                        l1806 1EFE                                          l3086 6544  
                                        l3097 209C                                          l3099 20A8  
                                        l4093 0CEC                                          l3470 5EA6  
                                        l2646 8766                                          l4086 0CB6  
                                        l4087 0CE4                                          l1944 7EE2  
                                        l2672 4D9E                                          l3625 7490  
                             PHY_DataReq@size 0013                                          l3643 59B0  
                                        l1964 3740                                          l3653 641C  
                                        l3750 1BD6                                          l3734 1B04  
                                        ?_pad 0014                                          l3735 1AE2  
                                        l3911 3FCE                                          l3760 1C3A  
                                        l3819 132E                                          l3860 402A  
                                        l3836 15F4                                          l3828 155E  
                                        l3829 155A                                          l3759 1C3E  
                                        l3880 8230                                          l3867 40B0  
                                        l9030 765E                                          l9038 76B0  
                                        l9250 6FFC                                          l9244 6FDC  
                                        l9262 86E4                                          l9510 6BB2  
                                        l9520 7730                                          l9514 6BD6  
                                        l9602 7AAA                                          l9268 8706  
                                        l9630 636A                                          l9528 776E  
                                        l9618 6304                          nwkDataReqConfirm@req 0009  
                                        l9652 800A                                          l9660 8034  
                        _SYS_TimerTaskHandler 4C5A                                          l9832 7CDA  
                                        l9840 7D1A                                          l9584 4FD4  
                                        l9904 3C22                                          l9680 38CE  
                                        l9594 5060                                          l9906 3C46  
                                        l9930 6158                                          l9658 801C  
                                        l9674 3890                                          l9588 500A  
                                        l9916 3CCC                                          l9684 390E  
                                        l9838 7D18                                          l9694 3980  
                                        STR_1 FF5F                                          l9944 61BC  
                                        l9696 3998                                          STR_2 FFDE  
                                        STR_3 FEC5                                          l9938 6188  
                                        l9698 39A6                                          STR_4 FEC5  
                                        STR_5 FEC9                                          STR_6 FFDE  
                                        STR_7 FEC5                                          l9974 7596  
                                        STR_8 FEC5                                          STR_9 FEC9  
                                        l9898 3BD8                                          l9978 75A2  
                                        l9988 75AE                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                  __end_of_explicitHeaderMode 8C3C                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u8030 61B0  
                                        u8040 61CC                                          u6530 7696  
                                        u8060 7592                                          u9100 3774  
                                        u8220 1AB6                                          u9110 3794  
                                        u9030 36BA                                          u8230 1AC6  
                                        u6536 7698                                          u9120 379A  
                                        u8400 1C1E                                          u8240 1AC8  
                                        u8420 1C34                                          u8270 1B0C  
                                        u7471 6BAC                                          u9231 2A82  
                                        u7640 6300                                          u9080 374A  
                                        u9090 374C                                          u7730 3916  
                                        u5875 8178                                          u5876 817A  
                                        u9254 2AD2                                          u8630 1554  
                                        u9255 2ACE                                          u7680 4F8A  
                                        u6960 7028                                          u8480 1CA0  
                                        u8800 6114                                          u9284 2B42  
                                        u7685 4F78                                          u9285 2B3E  
                                        u7950 3B92                                          u9294 2BA8  
                                        u8670 15C0                                          u8590 133A  
                                        u8750 6086                                          u9295 2BA4  
                                        u8680 15DE                                          u8760 60BE  
                                        u8765 60B4                             ?_PHY_SetShortAddr 0002  
                                        _RSSI 00D2                    _nwkRouteFrameReceived$4211 0012  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUE 003A81  
                         _CircularBufferSpace 8502                              PHY_DataInd@frame 0017  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
            __end_of_nwkTxAckWaitTimerHandler 6E90                                          abs@a 0014  
                                        _cmdI 8DE6                           ??_NWK_GroupIsMember 0004  
                                        _dbuf 02AC                                          _idle 8D8E  
                                        _atoi 3E6C                                          _main 87BE  
                                        _dtoa 201A                           nwkRouteFrame@header 0035  
                            ?_NWK_TaskHandler 0001                                          _rand 4E8E  
                                        _seed 00E4                                          _prec 00B7  
                                        _nout 00B3                                          pad@i 001B  
                                        pad@p 0018                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 001D  
                                        fsr2l 003FD9                            ??_PHY_SetShortAddr 0004  
                                        _utoa 2C62                                          _xtoa 22CA  
                     __size_of_SPI1_ReadBlock 0038                      nwkRxRejectDuplicate@diff 001A  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                                NWK_DataReq@req 0002  
                   __end_of_SPI1_ExchangeByte 8B92                 ??_UART1_SetTxInterruptHandler 0004  
  nwkRxDuplicateRejectionTimerHandler@restart 0014                        CircularBufferSpace@ctx 000A  
                      __end_of_setCodingRate4 85A4                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 8A60                                  ___param_bank 000000  
                        __end_of_DIA_ReadByte 8932                    ??_nwkRxHandleReceivedFrame 002B  
                           nwkFrameFree@frame 0002                    __size_of_UART1_is_rx_ready 000E  
                        ??_CircularBufferSize 0004                                   ?_UART1_Read 0001  
                            _SYS_TimerStarted 7FFC                       ??_nwkRxHandleIndication 0034  
                          ?_UART1_rx_vect_isr 0001                                         ??_cad 0011  
                                       ??_abs 0016                                         ??_pad 001A  
                   __size_of_DATAEE_WriteByte 0040                        __end_of_SYS_TimerStart 880E  
                     __end_of_TMR0_Initialize 82F8                __end_of_nwkTxDelayTimerHandler 6FA8  
              ??_TMR0_DefaultInterruptHandler 0001                          __size_of_cmdGetRxCnt 004A  
                        ?_CircularBufferSpace 000A                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                              nwkTxFrame@header 0028  
               __end_of_OSCILLATOR_Initialize 8C54                          __size_of_cmdBootLoad 003A  
                    ??_nwkRouteSendRouteError 002F                                         l10114 19CC  
                                       l10150 1A38                                         l10142 1A18  
                                       l10118 19D0                                  ?_SX1276Write 000F  
                                       l10216 1B4A                                         l10208 1B28  
                                       l10320 12EE                                         l10218 1B4E  
                                       l10226 1B60                                         l10138 1A14  
                                       l10244 1BFA                                         l10260 1C1A  
                                       l10236 1BC6                                         l10180 1A92  
                                       l10412 15B2                                         l10316 12DA  
                                       l10254 1C10                                         l10334 131A  
                                       l10318 12DE                                         l10280 1C94  
                                       l10192 1AF0                                         l10416 15D0  
                                       l10344 134C                                         l10336 131E  
                                       l10194 1AF4                                         l10292 1CC2  
                                       l10428 1614                                         l10294 1CC4  
                                       l10462 6098                                         l12320 7DC2  
                                       l11512 6888                                         l11520 6908  
                                       l10288 1CBA                                         l10392 1524  
                                       l14000 6406                                         l11530 55B2  
                                       l10642 36D2                                         l10802 2BC4  
                                       l10386 1506                                         l10490 610E  
                                       l10482 60FA                                         l12250 5DFC  
                                       l12234 5D6E                                         l13052 7B50  
                                       l11532 55CA                                         l14012 7FAE  
                                       l10670 382C                                         l10638 36BC  
                                       l10806 2BE2                                         l11518 68F0  
                                       l10478 60EA                                         l12510 6F2A  
                                       l12246 5DDA                                         l14102 2CD6  
                                       l12352 7D26                                         l11536 5620  
                                       l11528 55A4                                         l10664 37D4  
                                       l11544 54A4                                         l10496 612A  
                                       l10488 6102                                         l12600 80B4  
                                       l14112 2E02                                         l12338 8958  
                                       l10762 2A3C                                         l10930 8462  
                                       l11474 7B10                                         l14210 3EE6  
                                       l14034 2080                                         l12364 8860  
                                       l14220 3F60                                         l14212 3EEE  
                                       l14204 3ED4                                         l14052 20D6  
                                       l14300 0676                                         l15100 0C92  
                                       l10782 2B30                                         l10790 2B5A  
                                       l10678 8424                                         l11558 5538  
                                       l15006 6B18                                         l10934 8466  
                                       l10926 845E                                         l12518 6F6C  
                                       l14214 3EF4                                         l14062 2212  
                                       l14150 236C                                         l14142 234A  
                                       l14310 068C                                         l14302 0684  
                                       l10784 2B56                                         l10944 846E  
                                       l13096 4CEA                                         l13088 4C88  
                                       l15200 792A                                         l12616 5EEA  
                                       l14216 3F22                                         l14048 20C6  
                                       l14136 230A                                         l14400 0A80  
                                       l15016 4B6C                                         l15040 77F0  
                                       l15032 7790                                         l10778 2B2C  
                                       l10938 846A                                         l12482 7C12  
                                       l15202 7932                                         l12626 5F06  
                                       l14082 227A                                         l14322 069E  
                                       l14314 0690                                         l14306 0688  
                                       l15018 4B7A                                         l16010 7E72  
                                       l15114 0CD2                                         l15106 0CA6  
                                       l15042 77F8                                         l15034 7798  
                                       l14500 4ADC                                         l14260 4524  
                                       l14252 44B2                                         l12476 7BE6  
                                       l15204 793A                                         l12636 5F22  
                                       l14164 2402                                         l14172 249A  
                                       l14340 076A                                         l14324 06E4  
                                       l15220 5AE4                                         l15132 0D8C  
                                       l15124 0D54                                         l14502 4B28  
                                       l14270 73E4                                         l14246 4446  
                                       l14422 6A64                                         l16110 3644  
                                       l12494 6E0E                                         l12646 5F3E  
                                       l12670 5FAA                                         l14086 2294  
                                       l14342 0776                                         l14318 0694  
                                       l16006 7E5E                                         l16022 5676  
                                       l14432 65C2                                         l16104 35CA  
                                       l15208 7942                                         l12656 5F5A  
                                       l14360 0886                                         l15152 0E80  
                                       l15080 0BF6                                         l15056 0B3A  
                                       l14266 4540                                         l14258 44EE  
                                       l15402 5CE8                                         l16042 67D8  
                                       l14194 3E7E                                         l13810 81E8  
                                       l14370 0932                                         l14338 0746  
                                       l15250 7334                                         l15226 5B22  
                                       l15066 0B9C                                         l14612 4060  
                                       l16132 727E                                         l16124 726C  
                                       l15420 167E                                         l16052 6820  
                                       l16044 67EA                                         l16108 3604  
                                       l12668 5F7A                                         l14196 3E82  
                                       l13900 42F2                                         l14188 2514  
                                       l15180 770C                                         l15172 76CE  
                                       l15228 5B54                                         l14532 79D4  
                                       l15164 0EB6                                         l15148 0E4A  
                                       l15084 0BFE                                         l15340 5AA8  
                                       l15332 5A56                                         l15324 5A08  
                                       l16300 0426                                         l16220 012E  
                                       l16212 00E2                                         l13830 84F0  
                                       l13822 85C8                                         l14614 4066  
                                       l14606 4042                                         l14470 4A5E  
                                       l14462 4A3A                                         l14278 742A  
                                       l14446 6660                                         l16134 72AC  
                                       l16118 725A                                         l15430 16D8  
                                       l16046 67FC                                         l16054 6854  
                                       l16070 34B4                                         l16150 4D84  
                                       l13806 81CC                                         l14390 0A60  
                                       l14526 78BC                                         l15166 0ECE  
                                       l15078 0BC4                                         l15158 0E9C  
                                       l14624 40D6                                         l14616 4072  
                                       l16136 72C4                                         l15512 627E  
                                       l15504 6238                                         l15440 171A  
                                       l16048 680E                                         l16072 34C4  
                                       l16064 3482                                         l14720 483A  
                                       l16160 4DA8                                         l16144 4D76  
                                       l12872 720E                                         l12848 82FC  
                                       l13840 653C                                         l14384 0A1E  
                                       l14528 78E0                                         l15248 7326  
                                       l14536 79E8                                         l16320 04E6  
                                       l16312 049A                                         l16304 0450  
                                       l16240 01FC                                         l16232 01A4  
                                       l16224 0150                                         l16216 0104  
                                       l16208 00B4                                         l15352 5306  
                                       l14546 7054                                         l13826 84D8  
                                       l13818 85B2                                         l14570 5E7A  
                                       l14642 4126                                         l14626 40E2  
                                       l14618 4098                                         l14490 4AB8  
                                       l14482 4A94                                         l14474 4A70  
                                       l14466 4A4C                                         l14458 4A28  
                                       l15522 62BE                                         l16082 3512  
                                       l15610 6D66                                         l16162 4DAC  
                                       l16154 4D90                                         l13906 4318  
                                       l13922 439E                                         l13770 807A  
                                       l13850 65A0                                         l13842 654E  
                                       l14394 0A6A                                         l14298 0674  
                                       l14548 7060                                         l14580 5EDE  
                                       l15516 6298                                         l15460 1872  
                                       l15436 16FE                                         l16180 4DF6  
                                       l16164 4DB4                                         l13908 432C  
                                       l13772 807C                                         l13756 8042  
                                       l13836 652A                                         l14652 7182  
                                       l16340 058C                                         l16324 0508  
                                       l16316 04BC                                         l16308 0478  
                                       l16260 02B6                                         l16252 026A  
                                       l16244 021E                                         l16236 01D2  
                                       l16228 017A                                         l16500 3DF6  
                                       l14558 7094                                         l14590 745A  
                                       l14574 5E90                                         l14566 5E46  
                                       l14494 4ACA                                         l14486 4AA6  
                                       l14478 4A82                                         l14830 33D4  
                                       l14822 33B2                                         l14814 3396  
                                       l14806 337A                                         l16094 3582  
                                       l16406 5438                                         l13926 43C4  
                                       l13918 4388                                         l13942 46DE  
                                       l13782 752E                                         l13846 656A  
                                       l14920 1082                                         l14912 0FDE  
                                       l14904 0F3A                                         l15368 1D22  
                                       l15472 18B2                                         l16096 3582  
                                       l15552 648C                                         l16184 4E0E  
                                       l16176 4DEE                                         l16600 26FE  
                                       l13792 7C92                                         l15800 30C2  
                                       l15720 6DEE                                         l16328 0532  
                                       l16280 0370                                         l16272 0324  
                                       l16264 02D8                                         l16256 0294  
                                       l16248 0240                                         l16344 05B6  
                                       l15466 188C                                         l15458 1808  
                                       l16098 3594                                         l15546 6470  
                                       l16194 4E48                                         l16418 5460  
                                       l16610 272C                                         l13962 4790  
                                       l13954 4754                                         l13946 46F8  
                                       l13938 46BA                                         l13794 7C96  
                                       l15634 28A8                                         l16362 7B9C  
                                       l16506 3E08                                         l16514 3E2E  
                                       l14596 7482                                         l14588 744E  
                                       l14932 1178                                         l14924 10D4  
                                       l14916 1030                                         l14908 0F8C  
                                       l15492 1974                                         l15468 189C  
                                       l15580 64DE                                         l13948 470C  
                                       l13972 592A                                         l15628 2886  
                                       l16292 03E2                                         l16284 039A  
                                       l16276 0346                                         l16268 02FA  
                                       l16348 05CE                                         l16460 3D52  
                                       l16452 3D30                                         l16444 3D08  
                                       ?_cmdI 0001                                         l14862 87AA  
                                       l14846 3428                                         l14838 3406  
                                       l15486 1930                                         l15478 18DE  
                                       l16198 4E50                                         l16382 53E6  
                                       l16630 278A                                         l16534 2596  
                                       l13894 42CA                                         l13958 476A  
                                       l13974 593E                                         l15670 2ED4  
                                       l15750 5FFA                                         l15830 31AA  
                                       l15822 3186                                         l15806 30D6  
                                       l15910 5782                                         l16470 3D88  
                                       l16462 3D64                                         l16454 3D38  
                                       l14952 8584                                         l14936 11CA  
                                       l14928 1126                                         l14792 32B4  
                                       l16616 2736                                         l16560 2632  
                                       l13984 599A                                         l13992 63AA  
                                       l15744 5FB6                                         l15760 6056  
                                       l15816 3158                                         l15808 311C  
                                       l16296 0404                                         l16288 03C0  
                                       l14890 50C0                                         l14858 87A0  
                                       l16394 540E                                         l16570 2664  
                                       l16546 25C0                                         l13994 63BE  
                                       l15754 602A                                         l15842 323A  
                                       l16490 3DD6                                         l16482 3DBA  
                                       l14972 39F0                                         l14964 8296  
                                       l14948 857A                                         l16580 2696  
                                       l15676 2EF6                                         l16468 3D80  
                                       l14886 50B6                                         l16590 26D0  
                                       l15774 7E1C                                         l15846 3262  
                                       l15960 6EB8                                         l16674 87DC  
                     __end_of_SYS_TaskHandler 8D1E                                         l15796 30B6  
                                       l15964 6EE0                                         l15798 30BA  
                                       l15968 6F08                                 ___fltol@sign1 0041  
                                       ?_idle 0001                               __end_of___aodiv 43F6  
                                       ?_atoi 0009                               __end_of___fladd 1CE8  
                   __end_of_NWK_GroupIsMember 8712                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 47C2  
                                       ?_rand 001A                                         STR_10 FE4A  
                                       STR_11 FFDE                                         STR_20 FFF4  
                                       STR_12 FFD6                                         STR_21 FFD3  
                                       STR_13 FEC5                                         STR_22 FFD6  
                                       STR_14 FE85                                         STR_30 FE11  
                                       STR_31 FFD6                                         STR_23 FF5F  
                                       STR_15 FFDE                                         STR_16 FFD6  
                                       STR_40 FEC5                                         STR_24 FEC5  
                                       STR_32 FE38                                         STR_41 FEC5  
                                       STR_25 FEC5                                         STR_17 FFA7  
                                       STR_33 FE26                                 __CFG_WDTE$OFF 000000  
                                       STR_42 FFD6                                         STR_18 FEC5  
                                       STR_26 FFDE                                         STR_50 FFBF  
                                       STR_34 FE9F                                         STR_27 FEC5  
                                       STR_35 FFDE                                         STR_19 FFDB  
                                       STR_51 FFC5                                         STR_43 FE92  
                                       STR_60 FFD6                                         STR_36 FEC5  
                                       STR_28 FEC5                                         STR_44 FFDE  
                                       STR_52 FFC5                                         STR_37 FFD6  
                                       STR_29 FFD6                                         STR_53 FEC5  
                                       STR_45 FEC5                                         STR_61 FE69  
                                       STR_54 FFD6                                         STR_46 FFD6  
                                       STR_70 FFE5                                         STR_38 FE77  
                                       STR_62 FDB9                                         STR_63 FFD6  
                                       STR_55 FFDE                                         STR_39 FFDE  
                                       STR_71 FFE5                                         STR_47 FFEA  
                                       STR_48 FFEA                                         STR_56 FFFC  
                                       STR_72 FFE0                                         STR_64 FF5A  
                                       STR_80 FF04                                         STR_65 FF5A  
                                       STR_73 FFE0                                         STR_81 FF04  
                                       STR_49 FFBF                                         STR_57 FF32  
                                       STR_58 FFDE                                         STR_82 FF8B  
                                       STR_66 FF29                                         STR_74 FED1  
                                       STR_90 FE5A                                         STR_59 FEC5  
                                       STR_83 FF8B                                         STR_75 FED1  
                                       STR_67 FF29                                         STR_91 FE5A  
                                       STR_68 FFA0                                         STR_84 FF6F  
                                       STR_76 FF4A                                         STR_92 FEF0  
                                       STR_85 FF6F                                         STR_77 FF4A  
                                       STR_93 FEF0                                         STR_69 FFA0  
                                       STR_78 FF61                                         STR_86 FF0E  
                                       STR_94 FEDC                                         STR_87 FF0E  
                                       STR_79 FF61                                         STR_95 FEDC  
                                       STR_96 FF92                                         STR_88 FEAC  
                             __end_of___flmul 1632                                         STR_89 FEAC  
                                       STR_97 FF92                                         STR_98 FF76  
                                       STR_99 FF76                            _implicitHeaderMode 8C0C  
                             __end_of___fltol 6144                         nwkDataReqConfirm@prev 000D  
                             __end_of___lldiv 70BC                                         ?_utoa 001F  
                                       u10410 6910                                         u10270 7AF6  
                                       u11304 5DC2                                         u13000 7C60  
                                       u11305 5DBC                                         u10275 7AF0  
                             __end_of___lodiv 59E2                                         u13020 86D8  
                                       u13030 86DA                                         ?_xtoa 001F  
                                       u10448 5650                                         u12080 721A  
                             __end_of___llmod 74AA                                         u14010 7064  
                                       _U1P1H 003DED                                         u13140 4710  
                                       u13300 2092                                         u13220 63C2  
                                       _U1P2H 003DEF                                         u13061 42F8  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u12280 4D4E                                         u13080 4330  
                                       u13320 20C0                                         u15000 0D7A  
                                       _U1P2L 003DEE                                         u13250 7FAA  
                                       u13330 2220                                         u14210 716E  
                                       u15010 0D7C                                         _U1P3L 003DF0  
                                       u13171 590A                                         u14300 4828  
                                       u12268 4D12                                         u13260 2052  
                                       u13420 2C74                                         u12269 4D24  
                                       u13350 2242                                         u13270 2054  
                                       u13190 5942                                         u13510 2368  
                                       u14230 71B8                                         u13351 2240  
                                       u14400 33D0                                         u13360 2250  
                                       u13520 239E                                         u15200 5B86  
                                       u14217 7160                                         u14090 745E  
                                       u14170 40EC                                         u14410 3402  
                                       u11690 8D0C                                         u12810 756E  
                                       u13370 2256                                         u13450 2E2C  
                                       u13610 24CC                                         u13530 23A0  
                                       u15210 5B8C                                         u13451 2E2A  
                                       u13611 24CA                                         u15300 1D80  
                                       u14420 3424                                         u12820 7CC0  
                                       u13460 2E3A                                         u13620 24DA  
                                       u16020 57E4                                         u14237 71AA  
                                       u15310 1D98                                         u13390 2264  
                                       u13470 2E40                                         u13630 24E0  
                                       u13550 23D8                                         u15070 0E24  
                                       u15207 5B78                                         u13560 23DA  
                                       u15080 0E78                                         u16040 6792  
                                       u14345 5218                                         u14265 8100  
                             __end_of___lomod 644E                                         u15330 1DC6  
                                       u14346 521A                                         u14266 8102  
                                       u13490 22DC                                         u12827 7CB2  
                                       u16300 4E2A                                         u13660 3ED0  
                                       u12940 820E                                         u12860 863C  
                                       u13580 2466                                         u14700 4C3A  
                                       u15350 1DF8                                         u14438 3466  
                                       u15430 16B0                                         u12790 7526  
                                       u12950 8670                                         u12870 863E  
                                       u13590 24AA                                         u13910 096E  
                                       u15087 0E6A                                         u14480 5112  
                                       u15328 1D9A                                         u15600 1910  
                                       u15520 17C0                                         u15440 16C6  
                                       u16240 4D8A                                         u13680 3F96  
                                       u12960 8672                                         u13840 07B2  
                                       u14720 77D8                                         u15441 16C4  
                                       u13585 2454                                         u13770 740E  
                                       u15290 1D7E                                         u15530 17C2  
                                       u16218 35F2                                         u13690 3F98  
                                       u12970 86A4                                         u13850 07B4  
                                       u14650 4BA4                                         u14810 0B98  
                                       u16090 66E4                                         u14707 4C2C  
                                       u14580 1214                                         u15348 1DC8  
                                       u15380 5CB2                                         u15620 194C  
                                       u15540 1822                                         u12980 86A6  
                                       u13860 07C2                                         u14740 7838  
                                       u14485 5108                                         u13941 6A26  
                                       u15630 1962                                         u15550 1824  
                                       u12990 7C5E                                         u14910 0C58  
                                       u17047 840E                                         u15368 1DFA  
                                       u15720 646C                                         u13880 07FE  
                                       u14920 0C8E                                         u14840 0BF2  
                                       u14760 0B08                                         u14585 120A  
                                       u17057 414C                                         u13777 7400  
                                       u14657 4B96                                         u14690 4C10  
                                       u17067 416A                                         u14780 0B38  
                                       u15820 2872                                         u17077 425C  
                                       u14870 0C34                                         u14790 0B68  
                              __CFG_DEBUG$OFF 000000                                         u14695 4C0A  
                                       u14927 0C80                                         u14847 0BE4  
                                       u14767 0AFA                                         u16480 0340  
                                       u14697 4BFC                                         u15770 64F6  
                                       u15850 2EC0                                         u14970 0D32  
                                       u14890 0C48                                         u16490 0362  
                                       u14787 0B2A                                         u14980 0D34  
                                       u15940 3100                                         u14877 0C26  
                                       u14797 0B5A                                         u16680 53E2  
                                       u15880 6DD4                                         u16930 264E  
                                       u15947 30F2                                         u16780 3D18  
                                       u16950 2680                                         u16970 26BA  
                                       u16990 26EA                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                   computeFRF@i 002F  
                                       _U1TXB 003DEA                           ??_UART1_rx_vect_isr 0001  
                           ?_NWK_OpenEndpoint 0002                                         _OSCEN 0039DD  
                             __end_of_cmdAddr 89FE                                  vfpfcnvrt@fmt 0048  
                               strtoul@endptr 0036                                         _TMR0H 003FB7  
                                vfpfcnvrt@llu 006D                                         _TMR0L 003FB6  
                             ?_NWK_RouteTable 0002                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                 _Default_ISR 8E10                               __end_of_cmdRecv 607A  
                             __end_of_cmdSend 2A30                     ??_CRC_CalculatedResultGet 000B  
                            print_hop_table@i 005C             __size_of_TMR0_SetInterruptHandler 000E  
                         ___lmul@multiplicand 0006                     ?_TMR0_SetInterruptHandler 0002  
                          ??_NWK_OpenEndpoint 0004                              __end_of_TMR0_ISR 89DE  
                           _UART1_tx_vect_isr 8A40                               __end_of_get_lqi 6BA6  
                               __CFG_WRTB$OFF 000000                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                      __end_of_NWK_RouteNextHop 7EE8  
                      cmdSetCADRSSI@atCommand 0058                               _DATAEE_ReadByte 8ABC  
                         ?_implicitHeaderMode 0001                          __size_of_cmdSetNaddr 007C  
                            __end_of_PHY_Init 8DF8                 nwkRouteSendRouteError@command 002F  
                       __end_of_Timer0Handler 7DBE                                         _flags 00B9  
                        __size_of_cmdSendSink 0002                     __size_of_CRC_ReverseValue 0058  
                                       _errno 0155                                         _fputc 7516  
                             __end_of_isalpha 86AC                                         _fputs 81C2  
                             __end_of_isdigit 86E0                         ?_SYS_TimerTaskHandler 0001  
                                       _nwkIb 0100                              __end_of_NWK_Init 7B8A  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                             __end_of_receive 82BA                                         _srand 8492  
                                       atoi@n 0016                                         pad@fp 0014  
                                       atoi@s 0009                                         _width 00B5  
                                       _putch 8DC6                                         dtoa@d 0021  
                                       dtoa@i 0041                                         dtoa@n 0039  
                                       dtoa@p 0033                                         dtoa@s 0037  
                                       dtoa@w 0035                               __end_of_islower 8644  
                             __end_of_isspace 7FB8                          __size_of_appDataConf 0022  
                             __end_of_isupper 8678                                         pclath 003FFA  
                                       tablat 003FF5                              _nwkTxTaskHandler 3478  
                           nwkRxSendAck@frame 002A                                         plusw1 003FE3  
                                       plusw2 003FDB                           nwkDataReqTxConf@req 0008  
                                       utoa@d 0021                                         utoa@i 003D  
                                       utoa@n 0035                                         utoa@p 0031  
                                       utoa@w 0033                   nwkTxConvertPhyStatus@status 0004  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 8D56  
                 _UART1_SetRxInterruptHandler 8D48                  __size_of_nwkRxServiceDataInd 006C  
                                       xtoa@c 0044                                         xtoa@d 0021  
                                       xtoa@i 0042                                         xtoa@n 003A  
                                       xtoa@p 0036                                         xtoa@w 0038  
                                       xtoa@x 0029               nwkTxAckWaitTimerHandler@restart 0016  
                             __end_of_strcspn 7846                               __end_of_strncmp 4C5A  
                             __end_of_toupper 7C84                              ___lodiv@dividend 0002  
    __end_of_UART1_DefaultFramingErrorHandler 8E16     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 8E14                               __end_of_strtoul 7F2E  
                     SX1276WriteBuffer@buffer 0009                           ??_UART1_tx_vect_isr 0001  
                            __end_of_SYS_Init 8D3A                     __end_of_UART1_rx_vect_isr 8A80  
                    __size_of_SPI1_Initialize 001A                    __size_of_setPreambleLength 001A  
                              nwkFrameAlloc@i 0012                                  _toupper$7965 000E  
                           nwkTxConfirm@frame 0002                               ?_setCodingRate4 0001  
                             __initialization 5B96                    __end_of_NWK_RouteFindEntry 76C2  
                        ??_implicitHeaderMode 0011                                  __end_of_cmdI 8DEC  
                                __end_of_idle 8D9A                                  __end_of_atoi 3FDC  
                                __end_of_main 87E6                                  __end_of_dtoa 22CA  
                                __end_of_rand 4F9C                             nwkFrameNext@frame 0002  
                 SYS_TimerTaskHandler@elapsed 001E                                  __end_of_utoa 2E76  
                                __end_of_xtoa 254A                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                               ?_SYS_TimerStart 0010  
                         __size_of_SX1276Read 0016                         ??_CircularBufferSpace 000C  
                             cmdSend@destaddr 007F                    __end_of_NWK_RouteFreeEntry 856E  
                            _need_radio_reset 00D3                              ??_CRC_Initialize 0002  
                                ?_UART1_Write 0001                                _free_tx_buffer 7CD4  
                                      ??_cmdI 0058                             cmdSetSF@atCommand 0058  
                                      ??_idle 0011                                        ??_atoi 000B  
                                      ??_main 005E                                        ??_dtoa 0029  
                                      ??_rand 001C                                __CFG_PR1WAY$ON 000000  
                                      ??_utoa 0029                                        ??_xtoa 002A  
                               __activetblptr 000003                   __size_of_getSignalBandwidth 0122  
                 __size_of_setSignalBandwidth 03C6          __size_of_UART1_SetTxInterruptHandler 000E  
                         executeATCommand@cmd 00A9                     __end_of_UART1_tx_vect_isr 8A60  
                              __CFG_MVECEN$ON 000000                    __end_of_nwkRxIndicateFrame 3478  
                             ??_queueLedEvent 001E                           computeFRF@frequency 0023  
                            ___lodiv@quotient 0012                      __end_of_executeATCommand 062E  
                         CRC_ReverseValue@crc 0002                              _UART1_Initialize 6922  
                    ??_CircularBufferPushBack 0016                                _nwkDataReqInit 8DA6  
                       queueLedEvent@duration 001C                  DIO0_Receive_ISR@packetLength 0044  
                         NWK_RouteNextHop@dst 0008                             ??_start_radio_cad 0011  
                         _bootLoadApplication 254A                  __end_of_nwkRxRejectDuplicate 2C62  
                __size_of_nwkDataReqSendFrame 0332                                        ?_fputc 0004  
                            ___llmod@dividend 0002                                        STR_100 FF17  
                                      STR_101 FF17                                        STR_102 FFF9  
                                      STR_110 FF42                                        ?_fputs 000D  
                                      STR_111 FF42                                        STR_103 FFF9  
                                      STR_120 FFEF                                        STR_104 FFB3  
                                      STR_112 FF20                                        STR_113 FF20  
                                      STR_105 FFB3                                        STR_121 FFEF  
                                      STR_114 FFCB                                        STR_122 FF99  
                                      STR_106 FF7D                                        STR_130 FEE6  
                                      STR_131 FEE6                                        STR_107 FF7D  
                                      STR_123 FF99                                        STR_115 FFCB  
                                      STR_132 FEC5                                        STR_124 FFB9  
                                      STR_116 FF84                                        STR_108 FF52  
                                      STR_117 FF84                                        STR_125 FFB9  
                                      STR_109 FF52                                        STR_133 FEB9  
                                      STR_126 FFAD                                        STR_118 FF68  
                                      STR_134 FDF7                                        STR_119 FF68  
                                      STR_127 FFAD                                        STR_135 FDDB  
                                      STR_136 FF3A                                        STR_128 FEFA  
                                      STR_129 FEFA                                        STR_137 FFD1  
                             cmdSend@tempaddr 0084                                        ?_srand 0002  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _T0CON0 003FB8                                        _T0CON1 003FB9  
                       __end_of_nwkFrameAlloc 6672                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                              _processATCommand 3CF6  
                                      _U1CON0 003DF2                      nwkRxHandleIndication@ack 0036  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                         __size_of_UART1_Read 0042                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _RB0PPS 003A08                            __CFG_PWRTS$PWRT_64 000000  
                                      _RC0PPS 003A10                                        _RC1PPS 003A11  
                                      i1l1027 7DB8                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _RC7PPS 003A17                                __CFG_WDTCCS$SC 000000  
                                loadMACAddr@i 0006                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLE 003A84                                        _TABLAT 003FF5  
                           ?_nwkDataReqTxConf 0004                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 0069                              __end_of_cmdBcast 307A  
                                      _NVMDAT 0039E3                              __end_of_cmdGetSF 8BF4  
                            __end_of_cmdGetTX 8BDC                         _UART1_SetErrorHandler 8D72  
                            __end_of_cmdNaddr 8BC4                                placeTimer@prev 000C  
                                ?_setSyncWord 0001                              __end_of___xxtofl 4140  
                            __end_of_cmdSetSF 6720                              __end_of_cmdSetTX 5824  
                          ??_nwkDataReqTxConf 0006                              __end_of_cmdReset 8E02  
                          PHY_DataConf@status 0005                              set_parity@parity 0004  
                  __size_of_SPI1_ExchangeByte 001A                                __CFG_XINST$OFF 000000  
                                ___strtoxl@cp 0031                                  vfprintf@cfmt 0053  
                               ?_radio_engine 0001                                  ?_PHY_DataInd 0013  
                                ?_PHY_DataReq 0011                          ?_bootLoadApplication 0001  
                                      ___flge 5E12                              __end_of_get_rssi 876A  
                            __end_of_fhssList FDA7                                        ___lmul 79C4  
                                      ___omul 6BA6                                     ??___aodiv 0012  
                                   ??___fladd 0031                                     ??___aomod 0012  
                                      ___wmul 8712                                        _cmdMac 7E0A  
                              __CFG_STVREN$ON 000000                                     ??___flmul 0018  
                                   ??___fltol 003D                                        _crcObj 00EC  
                                   ??___lldiv 001E                                     ??___lodiv 0012  
                                   ??___llmod 000A                        __end_of_free_tx_buffer 7D22  
                                   ??___lomod 0012                         __size_of_cmdSetParity 008C  
                                   ??_cmdAddr 0058                                        _memcpy 73CA  
                            ?_TMR0_Initialize 0001                      __end_of_nwkRxTaskHandler 687A  
                                      _memset 43F6                                     ??_cmdRecv 0058  
                                   ??_cmdSend 005A                              ___strtoxl@endptr 0012  
                                      clear_0 5C04                                        clear_1 5C16  
                                      clear_2 5C22                                        clear_3 5C2E  
                                      clear_4 5C3A                                        clear_5 5C46  
                                      clear_6 5C52                              setCodingRate4@cr 0012  
                   CircularBufferPushBack@ctx 0013                     CircularBufferPushBack@val 0015  
               DATAEE_ReadByte_Platform@copy1 000A                 DATAEE_ReadByte_Platform@copy2 0009  
               DATAEE_ReadByte_Platform@copy3 0008                                        _timers 00BB  
                                      _printf 88EE                                        pad@buf 0016  
           __size_of_nwkTxAckWaitTimerHandler 0090                    __size_of_NWK_GroupIsMember 0032  
             __size_of_nwkRouteSendRouteError 00E0                              ?_SYS_TaskHandler 0001  
                                      dtoa@fp 001F                                        _strchr 7144  
                   ?_nwkTxAckWaitTimerHandler 0012                       __end_of_DATAEE_ReadByte 8ADA  
                                   ??_get_lqi 0043                              ___strtoxl@prev_a 001B  
                            __end_of_sendInfo 78A6                                        _strlen 7C84  
                                      _strtok 59E2                                        _strspn 7786  
                                      _strtol 8184                                        _strstr 5ABE  
                               cmdSetAES@byte 00A5                __size_of_nwkTxConvertPhyStatus 0038  
                               cmdSetAES@temp 00A1                 __end_of_nwkTxConvertPhyStatus 8492  
                                      fputc@c 0004                                _PMD_Initialize 8998  
                                      fputs@c 0011                                        fputs@i 0012  
                                __packetIndex 00D6                                        fputs@s 000D  
                                   ??_isalpha 0004                                     ??_isdigit 0004  
                      __end_of_nwkDataReqInit 8DB2                __size_of_nwkRouteFrameReceived 01E2  
                                   ??_receive 0011                 __end_of_nwkRouteFrameReceived 384C  
                     _setSpreadingFactor$8727 0027                                     ??_islower 0004  
                                __mediumconst FCAA                                     ??_isspace 0004  
                                      tblptrh 003FF7                                     ??_isupper 0004  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                 __end_ofNWK_LinearizeLqi@val FDB0                                        srand@s 0002  
                      ??_SYS_TimerTaskHandler 0019                                  ?_NWK_DataReq 0002  
                        __size_of_loadMACAddr 003C                         __end_of_TMR0_CallBack 8A3E  
                            __end_of_vfprintf 7906                                        utoa@fp 001F  
                        processATCommand@data 00B0   UART1_SetTxInterruptHandler@InterruptHandler 0002  
 UART1_SetRxInterruptHandler@InterruptHandler 0002      TMR0_SetInterruptHandler@InterruptHandler 0002  
        __end_of_UART1_SetOverrunErrorHandler 8D64         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler 8D56                                 _curent_parity 00E0  
                   _UART1_DefaultErrorHandler 8DF8                                        xtoa@fp 001F  
                                   ??_strcspn 000C                                     ??_strncmp 0008  
                                   ??_toupper 000A                                     ??_strtoul 003A  
               __size_of_INTERRUPT_Initialize 0040                  __size_of_UART1_RxDataHandler 0024  
                                  ___flge@ff1 0010                                    ___flge@ff2 0014  
                               cmdSetRFCH@cmd 0058                       ??_nwkRouteErrorReceived 000E  
                                ___xxtofl@arg 000C                                  ___xxtofl@exp 000B  
                           _SYSTEM_Initialize 8976                            _get_free_rx_buffer 7724  
                                ___xxtofl@val 0002                                 cmdSetSF@CHstr 0081  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                        cmdGetRxCnt@atCommand 0058                       __end_of__initialization 5C66  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0035  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 84CA  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 76C2  
                          _getSpreadingFactor 8B44                                    _cadCounter 00D4  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 50AA  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                                  ___fltol@f1 0039                               _PHY_TaskHandler 8DEC  
                                _cmdSetParity 6E90                                 cmdRecv@buf_id 005B  
                    ??_queue_serial_led_event 0022                       SYS_TimerTaskHandler@cnt 001D  
                         ?_get_free_rx_buffer 0002                                ??_radio_engine 004B  
                          ??_nwkTxAckReceived 0009              __end_of_nwkRxHandleReceivedFrame 19A0  
                       ??_bootLoadApplication 0030                            __size_of_cmdGetCAD 0018  
                                  _cadTimeOut 00F3                                __pcstackCOMRAM 0001  
                          CRC_Initialize@seed 0005                            __size_of_cmdGetTTL 0002  
                          __size_of___strtoxl 042E                            CRC_Initialize@poly 0003  
                    __end_of_SX1276ReadBuffer 8836                                 cmdSetTX@CHstr 0084  
                __size_of_nwkFrameCommandInit 0040                        __size_of_cmdGetCADRSSI 001A  
                               cmdSetAddr@cmd 0058                                  __pidataBANK0 8DDF  
                                __pidataBANK1 8DD8                                  __pidataBANK2 8DB2  
                          nwkTxConfirm@status 0004                           ??_SYSTEM_Initialize 0007  
                         ?_get_free_tx_buffer 0002                           ?_getSpreadingFactor 000F  
                                 placeTimer@t 000E                                     ?_TMR0_ISR 0001  
                          __size_of_cmdSetAES 0200                           ?_setSpreadingFactor 0001  
              nwkRxHandleReceivedFrame@header 0031                            __size_of_cmdSetTTL 0002  
                            _DATAEE_WriteByte 80C4                                ivt0x8_undefint 00AC  
                             ?_free_tx_buffer 0002                             PHY_SetPanId@panId 0002  
                          __size_of_cmdRstCAD 0014                                     ?_PHY_Init 0001  
                               __end_of_fputc 7582                                 cmdSetBaud@ptr 003D  
                               __end_of_fputs 8200                             ??_SPI1_Initialize 0002  
                    nwkRxIndicateFrame@header 0024                nwkRxHandleReceivedFrame@member 002E  
                               __end_of_srand 84CA                                 __end_of_putch 8DD0  
                       SX1276WriteBuffer@addr 000B                    ??_DATAEE_ReadByte_Platform 0008  
                                   ?_NWK_Init 0001                                   receive@size 0011  
        __size_ofnwkFrame@nwkFramePayloadSize 002A                         SX1276WriteBuffer@size 000A  
                      __end_of_PMD_Initialize 89BA                         SPI1_ExchangeByte@data 0002  
                               cmdSend@buf_id 008A                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FDB0                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 0082                    __size_of_UART1_tx_vect_isr 0020  
                           ?_DIO0_Receive_ISR 0001                 __end_of_nwkDataReqTaskHandler 72CE  
                            ??_get_timer0base 0004                          __size_of_SX1276Write 0012  
                             ?_nwkDataReqInit 0001                                 cmdSetNaddr@p1 0081  
                               cmdSetNaddr@p2 007F                          ??_get_free_rx_buffer 0003  
                                crc16_app@len 0015                                  crc16_app@ptr 001B  
                                   ?_SYS_Init 0001                                _nwkFrameFrames 05BD  
                   _UART1_FramingErrorHandler 01EC                                    _cmdGetRFCH 8ADA  
                          ??_DIO0_Receive_ISR 0044               __size_of_CircularBufferPushBack 00F4  
                       __end_of_set_uart_baud 5FB0                                    _cmdGetMode 8CD2  
                                _DIA_ReadByte 8910                          ??_get_free_tx_buffer 0003  
                        ??_getSpreadingFactor 0013                              _CRC_ReverseValue 7ADA  
                                ??_SX1276Read 000D                          ??_setSpreadingFactor 0023  
                                     ??_fputc 0008                     __end_of_SYSTEM_Initialize 8998  
                                     ??_fputs 0011                      __end_of_SYS_TimerStarted 8040  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0004  
                                     ??_putch 0003                                    _cmdSetRFCH 6A68  
                               ?_setFrequency 0023                        __end_of_SPI1_ReadBlock 8502  
                                  __pbssBANK0 00B1                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
                                  __pbssBANK4 0400                                    __pbssBANK5 0500  
                                  _cmdSetAddr 6D6E                                    _cmdSetBaud 74AA  
               ?_UART1_SetOverrunErrorHandler 0002                        ?_UART1_SetErrorHandler 0002  
                                  _cmdSetSink 8CB2                         __end_of_nwkRouteFrame 5D42  
                      _nwkRouteSendRouteError 5824                                    _appDataInd 69C6  
                          __size_of_initRadio 015E                                    crc16_app@i 001D  
                __size_of_nwkTxBroadcastFrame 0144                                    _atStateVar 00D8  
                 nwkTxBroadcastFrame@newFrame 0027                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                        CRC_ReverseValue@mask 0007                               setTxPower@power 0011  
                     setPreambleLength@length 0011                                       ?___flge 0010  
            __end_of_TMR0_SetInterruptHandler 8D8E                                       ?___lmul 0002  
                          _explicitHeaderMode 8C24                                       ?___omul 0002  
                                ??_UART1_Read 0002                      __size_of_print_hop_table 00E2  
                                     ?___wmul 0002                               _nwkDataReqQueue 00BF  
                                     ?_cmdMac 0001                                    ??_TMR0_ISR 0001  
                             __CFG_PPS1WAY$ON 000000                            NWK_OpenEndpoint@id 0004  
                        _nwkRxRejectDuplicate 2A30                             _nwkDataReqConfirm 557A  
                     __size_of_set_timer0base 001A                                    ??_PHY_Init 003A  
                   __size_of_PHY_SetShortAddr 0002                           nwkTxAckReceived@ind 0008  
                            ??_NWK_RouteTable 0004                                       ?_memcpy 0008  
                                     ?_memset 0002                __size_of_nwkRxHandleIndication 00C4  
                         ___omul@multiplicand 000A                                ___lmul@product 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 8C6A  
                           _SX1276WriteBuffer 88A6                 __end_of_nwkRxHandleIndication 62D0  
                    __end_of_nwkTxTaskHandler 366A                            ?_nwkDataReqConfirm 0009  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                                     ?_printf 0075                               ?_PMD_Initialize 0001  
                                     _CRCDATH 003961                                       _CRCDATL 003960  
                           _UART1_Receive_ISR 6C40                                       _CRCCON0 003968  
                                     _CRCCON1 003969                            __size_of_nwkRxInit 004C  
                         _nwkRxServiceDataInd 7582                            __size_of_nwkTxInit 0046  
                                     ?_strchr 0002                           ?_explicitHeaderMode 0001  
                                     ?_strlen 0002                                       ?_strtok 000F  
                                     ?_strtol 0034                                       ?_strspn 0008  
                                     ?_strstr 000D                                       _CRCXORH 003967  
                                     _CRCXORL 003966                              ?_DATAEE_ReadByte 0002  
                           __end_of_crc16_app 724C                                 ?_nwkFrameFree 0002  
                          ?_SX1276WriteBuffer 0009                                 ?_nwkFrameInit 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                               ?_nwkFrameNext 0002                                     ?_cmdBcast 0058  
                                   ?_cmdGetSF 0001                                     ?_cmdGetTX 0001  
                                     i1l12962 7D9C                                       i1l12954 7D80  
                           _CRC_8BitDataWrite 8CE2                                       i1l12966 7DAA  
                                     i1l12958 7D8E                                       i2l12302 88E8  
                                     i2l13360 8602                                       i2l13362 8606  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 0042  
                                     i2l13384 6CD2                                     ?_cmdNaddr 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?_cmdSetSF 0058                                     ?___xxtofl 0002  
                                   ?_cmdSetTX 0058                                 computeFRF@num 002B  
                                   ?_cmdReset 0001                                 appDataInd@ind 0013  
                                  ??_SYS_Init 003A                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 000B                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 048C                                       _TBLPTRH 003FF7  
                                     _TBLPTRL 003FF6                            ?_CRC_8BitDataWrite 0001  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                    print_hop_table@atCommand 0058                                       _SPI1RXB 003D10  
                                     _NVMADRH 0039E1                                       _NVMADRL 0039E0  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _NVMCON2 0039E6                             __end_of_cmdGetCAD 8C0C  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                 _cmdGetCADRSSI 8AF6  
                           __end_of_cmdGetTTL 8E08                             __end_of___strtoxl 0EE8  
          __size_of_DATAEE_WriteByte_Platform 0044                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000B                        __size_of_cmdSetCADRSSI 00AE  
                                  cmdBcast@p1 007F                                ??_setFrequency 0027  
                  ?_DATAEE_WriteByte_Platform 0006                             __end_of_cmdSetAES 327A  
                         ??_UART1_Receive_ISR 0001                                     ?_get_rssi 0001  
                             placeTimer@timer 0002                       __end_of_PHY_TaskHandler 8DF2  
                            ___lomod@dividend 0002                             __end_of_cmdSetTTL 8E04  
                       nwkTxAckReceived@frame 000D                             __end_of_cmdRstCAD 8C7E  
                             ?_SPI1_ReadBlock 0003                               crc16_app@result 0019  
                          ??_NWK_RouteNextHop 000B                                    _computeFRF 39EC  
                          __end_of_UART1_Read 80C4                                     NWK_Init@i 0006  
                               ?_nwkGroupInit 0001                           ??_CRC_8BitDataWrite 0002  
                     __size_of_nwkRouteRemove 003C                          DATAEE_WriteByte@bAdd 0002  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 0013  
                        ??_explicitHeaderMode 0011                                       _TXPower 00CC  
                   __size_of_NWK_OpenEndpoint 0020                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 8C90                                    _dwellTimer 00CB  
                                   ?_sendInfo 0001                                    _packetRSSI 00D1  
                                     __Hparam 0000                              ??_SYS_TimerStart 0012  
             __size_of_queue_serial_led_event 0054                          __size_of_setSyncWord 0010  
                                     __Lparam 0000                      __end_of_UART1_Initialize 69C6  
                      _CircularBufferPushBack 52A8                     __end_of_nwkDataReqConfirm 5662  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ??_cmdGetRxCnt 005A                                    cmdSetAES@i 00A8  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 1CE8                                 ??_cmdBootLoad 0058  
                             __size_of___flge 00D0                         ?_nwkRxRejectDuplicate 0012  
                                     ___aodiv 429E                                       ___fladd 19A0  
                                     ___aomod 468E                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 00D5  
                   __end_of_SX1276WriteBuffer 88CA                                    cmdSetSF@p1 007F  
                             __size_of___lmul 005E                                    cmdSetSF@p2 0084  
                             __size_of___omul 009A                                       ___flmul 12AE  
                                     ___fltol 607A                   __size_of_CircularBufferSize 005E  
                                     ___lldiv 7032                               __size_of___wmul 002E  
                                     ___lodiv 5904                                       ___llmod 743C  
                             __size_of_cmdMac 004A                        __size_of_SYS_TimerInit 000C  
                                     ___lomod 6390                                    cmdSetTX@p1 0081  
                                  cmdSetTX@p2 007F                         nwkRxIndicateFrame@ind 0026  
                   __end_of_UART1_Receive_ISR 6CD8                                     ?_vfprintf 004E  
                                  cmdSend@cmd 0058                                       cad@temp 0014  
                        __size_of_PHY_DataInd 012C                      __end_of_processATCommand 3E6C  
                        __size_of_PHY_DataReq 005C                                       _cmdAddr 89DE  
                           cmdSetCADRSSI@temp 0086                                       _aes_key 0224  
                                     _cmdRecv 5FB0                                    _current_sf 00CF  
                             _start_radio_cad 8CF2                                       _cmdSend 27C2  
                                     _channel 00CE                                       __pcinit 5B96  
                             __size_of_memcpy 0072                               __size_of_memset 0154  
                                     __ramtop 1000                     __end_of_CRC_8BitDataWrite 8CF2  
                 __size_of_UART1_Transmit_ISR 0036                       __size_of_PHY_SetChannel 003E  
                              ??_nwkFrameFree 0004                                       __ptext0 87BE  
                                     __ptext1 3CF6                                       __ptext2 7B8A  
                                     __ptext3 83AC                                       __ptext4 8502  
                                     __ptext5 7966                                       __ptext6 52A8  
                                     __ptext7 00B2                                       __ptext8 8CA2  
                                     __ptext9 5662                                ??_nwkFrameInit 0002  
                              ??_nwkFrameNext 0004                               __size_of_printf 0022  
                                     _get_lqi 6B08                      SPI1_WriteBlock@blockSize 0005  
                                     _fhssReg 0500                             __end_of_initRadio 429E  
                                     cmdMac@i 0059                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strchr 0084                               __size_of_strlen 0050  
                                  ??_cmdBcast 005A                               __size_of_strtok 00DC  
                             __size_of_strspn 0060                               __size_of_strtol 003E  
                             __size_of_strstr 00D8                                    ??_cmdGetSF 0058  
                                  ??_cmdGetTX 0058                         _OSCILLATOR_Initialize 8C3C  
                               ?_nwkRouteInit 0001                                 ??_cmdSetNaddr 005A  
                                __size_of_cad 00BA                                  __size_of_abs 003E  
                                  ??_cmdNaddr 0058                                    _placeTimer 384C  
                                __size_of_pad 00B6                                       _isalpha 8678  
                                     _isdigit 86AC                                 ??_cmdSendSink 0004  
                                  ??_cmdSetSF 005A                                    ??___xxtofl 0006  
                          _NWK_RouteFindEntry 765A                                       _net_key 0214  
                                  ??_cmdSetTX 005A                                       _receive 827C  
                                  ??_cmdReset 0002                      nwkFrameCommandInit@frame 0002  
        ??strspn@nwkFrame@nwkFramePayloadSize 0004           ?strspn@nwkFrame@nwkFramePayloadSize 0002  
                             _radio_state_var 00CA                                       _islower 8610  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 7F74  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 8644                                ?_cmdGetCADRSSI 0001  
                           ?_executeATCommand 00A9                                 ??_appDataConf 0009  
           __size_of_nwkRxHandleReceivedFrame 036E                          __end_of_radio_engine 4E8E  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 0148                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 8538                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 00DA                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00AB                                       _strcspn 77E6  
                                     _strncmp 4B3A                                       _toupper 7C32  
                                  ??_get_rssi 0002                           SYS_TimerStart@timer 0010  
                        end_of_initialization 5C66                           ?_NWK_RouteFindEntry 0002  
                                     _strtoul 7EE8                                   ?_cmdSetRFCH 0058  
                                   _SCANHADRH 00397A                                     _SCANHADRL 003979  
                                   _SCANHADRU 00397B                           __implicitHeaderMode 00D7  
                              ??_nwkGroupInit 0002                          __size_of_NWK_DataReq 0080  
           __end_of_DATAEE_WriteByte_Platform 7FFC                                   ?_cmdSetAddr 0058  
                                   _SCANLADRH 003977                                     _SCANLADRL 003976  
                                 ?_cmdSetBaud 003A                                     _SCANLADRU 003978  
        nwkRxDuplicateRejectionTimerHandler@i 0015                                   ?_cmdSetSink 0001  
                           queueLedEvent@temp 001F                                ___omul@product 0012  
                       ??_nwkRxServiceDataInd 0014                                       memcpy@d 000F  
                                     memcpy@n 000C                                       memcpy@s 0011  
                                     fputc@fp 0006                                   ?_appDataInd 0013  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 8D48                   _UART1_SetTxInterruptHandler 8D3A  
                                     fputs@fp 000F                                     i1u1262_28 8A2C  
                 CRC_CalculatedResultGet@mask 000E                           ?_NWK_RouteFreeEntry 0002  
                           __end_of_nwkRxInit 7E0A                            _nwkRxIndicateFrame 327A  
                 nwkTxDelayTimerHandler@frame 0017                             __end_of_nwkTxInit 7F74  
                                  _setTxPower 8794                                     i2u1270_48 6CBE  
                                   i2u1272_48 8A4E                                     i2u1266_48 6C6A  
                                   i2u1274_48 8A6E                                     i2u1266_49 6C7C  
                       NWK_RouteNewEntry@iter 0007                           nwkRxSendAck@command 002C  
                                   i2u1268_48 6C96                   nwkTxDelayTimerHandler@timer 0012  
                                   i2u1268_49 6CA8                                    ??_sendInfo 0058  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                             ___lldiv@divisor 001A                               ___lldiv@counter 0022  
                 __end_of_CircularBufferSpace 8538                                ??_PHY_DataConf 0005  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                             __end_of_vfpfcnvrt 0ABA  
                                  _nwkTxFrame 3B76                                    _set_parity 7906  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 0018  
                 __size_of_implicitHeaderMode 0018                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                               _cmdSetCADRSSI 6720                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                       nwkDataReqTxConf@frame 0004                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 004E                                    ??_vfprintf 0053  
                   __size_of_nwkDataReqTxConf 00A8                                       strchr@c 0004  
                           UART1_Write@txData 0002                           _UART1_RxDataHandler 88CA  
                                     strchr@s 0002                         __CFG_WDTCPS$WDTCPS_31 000000  
                  __end_of_getSignalBandwidth 4B3A                                       strlen@a 0004  
                           initRadio@wideRSSI 0038                    __end_of_setSignalBandwidth 12AE  
                                     strlen@s 0002                         nwkTxTaskHandler@frame 0016  
                    ?_CRC_CalculatedResultGet 0009                             ?_nwkRxTaskHandler 0001  
                  nwkRxHandleIndication@frame 0032                                       strspn@c 000A  
                                     strspn@i 000D                                       strtok@p 00B1  
                                     strtok@s 000F                                       strtol@s 0034  
                                     strspn@s 0008                                       strstr@h 000D  
                    _TMR0_SetInterruptHandler 8D80                                       strstr@n 000F  
                                   _PORTBbits 003FCB                          ??_NWK_RouteFreeEntry 0004  
                         __end_of_cmdGetRxCnt 7E9E                                ??_nwkRouteInit 0002  
                           ??_print_hop_table 007F                           __end_of_cmdBootLoad 8420  
                          ??_nwkRxTaskHandler 0037                                    _test_timer 01F9  
                                 ___fladd@grs 0038                        _queue_serial_led_event 7B8A  
                              cmdSetRFCH@temp 0086                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 83E6                          ??_nwkRxIndicateFrame 001A  
                         _nwkFrameCommandInit 8104                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 8D9A  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 8104  
                         __end_of_cmdSetNaddr 73CA                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 8E06  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                                   ___flmul@grs 001E  
                     _nwkRxIndicateFrame$5244 001E                       _nwkRxIndicateFrame$5245 001F  
                     _nwkRxIndicateFrame$5246 0020                       _nwkRxIndicateFrame$5247 0021  
                     _nwkRxIndicateFrame$5248 0022                       _nwkRxIndicateFrame$5249 0023  
                         __end_of_appDataConf 8954                __size_of_nwkRouteErrorReceived 005C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 8B92  
               __end_of_nwkRouteErrorReceived 7ADA                          print_hop_table@entry 005A  
                            ??_free_tx_buffer 0004                             _nwkTxAckWaitTimer 01B8  
                           get_rssi@temp_rssi 0003                      ??_nwkTxDelayTimerHandler 0014  
                     __end_of_start_radio_cad 8D02                        ??_nwkRxRejectDuplicate 0014  
                  __size_of_nwkDataReqConfirm 00E8                          _timer0ReloadVal16bit 00FD  
                              ?_cmdSetCADRSSI 0058                           __size_of_cmdGetRFCH 001C  
                       CircularBufferSize@ctx 0002                          ?_nwkFrameCommandInit 0002  
                    __end_of_CRC_ReverseValue 7B32                           __size_of_cmdGetMode 0010  
                  __size_of_SX1276WriteBuffer 0024                             ?_SX1276ReadBuffer 0009  
                              _set_timer0base 8B10                  __end_of_INTERRUPT_Initialize 8184  
                     queue_serial_led_event@i 0022                       nwkRouteRemove@multicast 000A  
                            _PHY_SetShortAddr 8E0A                                __end_of___flge 5EE2  
                  __size_of_UART1_Receive_ISR 0098                          __end_of_setFrequency 4A18  
                              __end_of___lmul 7A22                                __end_of___omul 6C40  
                                 vfpfcnvrt@ap 0049                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 8740  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 7E54  
                          ??_SX1276ReadBuffer 000C                        __size_of_nwkFrameAlloc 00B4  
                         __size_of_cmdSetRFCH 00A0               CircularBufferPushBack@write_pos 001A  
                           __size_of_TMR0_ISR 0022                    __size_of_CRC_8BitDataWrite 0010  
                         __size_of_cmdSetAddr 0092                           __size_of_cmdSetBaud 006C  
                           __size_of_PHY_Init 0006                                __end_of_memcpy 743C  
                      ?_OSCILLATOR_Initialize 0001                           __size_of_cmdSetSink 0010  
                              __end_of_memset 454A                     __size_of_nwkTxAckReceived 00C0  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 00A2  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0058  
                           ??_NWK_TaskHandler 003B                                __end_of_printf 8910  
                         _nwkTxBroadcastFrame 454A                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 0058                                   ?_placeTimer 0002  
                              __end_of_strchr 71C8                                __end_of_strlen 7CD4  
                              __end_of_strtok 5ABE                                __end_of_strspn 77E6  
                              __end_of_strtol 81C2                                __end_of_strstr 5B96  
                         start_initialization 5B96                               ___lodiv@divisor 000A  
                             ___lodiv@counter 001A                      __size_of_TMR0_Initialize 003E  
                       _nwkTxConvertPhyStatus 845A               __size_of_PIN_MANAGER_Initialize 0088  
                           cmdSetAES@key_type 00A4                                ??_NWK_SetPanId 0006  
                                 __end_of_cad 6508                                   __end_of_abs 823E  
                               nwkFrameInit@i 0002                                   __end_of_pad 65BE  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0004  
                              ?_SYS_TimerInit 0001                         _nwkRouteFrameReceived 366A  
                     __size_of_CRC_Initialize 006C                       ?_nwkRouteSendRouteError 002A  
                    __size_of_SYS_TaskHandler 000E                             __size_of_SYS_Init 000E  
                       ??_UART1_RxDataHandler 0001                                 _Timer0Handler 7D70  
                                 putch@txData 0003                                    ivt0x8_base 0008  
               __size_of_SYS_TimerTaskHandler 011A                       NWK_RouteFreeEntry@entry 0002  
                           ?_SYS_TimerStarted 0002                                _nwkRouteRemove 8370  
                               _uart1RxBuffer 0138                                  _msgIDCounter 00DB  
                 __end_of_bootLoadApplication 27C2                            ??_SYS_TimerStarted 0004  
                           ___omul@multiplier 0002                                 _uart1TxBuffer 0300  
                            _NWK_OpenEndpoint 89FE                               ___llmod@divisor 0006  
                        __end_of_nwkFrameFree 8B44                          __end_of_nwkFrameInit 8976  
                   __size_of_DIO0_Receive_ISR 0096                                   ?_setTxPower 0001  
                        __end_of_nwkFrameNext 7032                          ?_nwkTxBroadcastFrame 0024  
                             ___llmod@counter 000A                           DATAEE_ReadByte@bAdd 0002  
                              cmdSetNaddr@cmd 0058                        nwkRouteFrameSent@frame 0008  
                               crc16_app@dptr 0013                        nwkRouteFrameSent@entry 000C  
                               crc16_app@seed 0017                              __CFG_LPBOREN$OFF 000000  
                           _nwkRouteFrameSent 548E                        __end_of_set_timer0base 8B2A  
                                 ___strtoxl@a 002D                                   ___strtoxl@c 0033  
                                 ___strtoxl@s 0010                         ??_nwkFrameCommandInit 0004  
                             NWK_SetAddr@addr 0004                                   vfprintf@fmt 0050  
                                 ?_nwkTxFrame 0024                             nwkRouteRemove@dst 0008  
                                 ?_set_parity 0001               __end_of_CRC_CalculatedResultGet 5E12  
                                    ??___flge 0018                 nwkTxDelayTimerHandler@restart 0016  
                            ??_PMD_Initialize 0002               __size_of_nwkRouteNormalizeRanks 003A  
                                    ??___lmul 000A                                      ??___omul 0012  
                                 _cmdGetRxCnt 7E54                                      ??___wmul 0006  
             CRC_CalculatedResultGet@xorValue 0009                                      ??_cmdMac 0058  
                          ?_nwkRouteFrameSent 0008                                   _cmdBootLoad 83E6  
                    _nwkTxAckWaitTimerHandler 6E00                               ___strtoxl@limit 0027  
                      __size_of_TMR0_CallBack 0020                             NWK_SetPanId@panId 0004  
                                cmdSetAES@cmd 0058                                   __pdataBANK0 00F7  
                                 __pdataBANK1 01F4                                   __pdataBANK2 02CC  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 823E                          __end_of_nwkGroupInit 8882  
                                  memset@dest 0002                                      ??_printf 0055  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 00E2                                      ??_strchr 0006  
                       __size_of_radio_engine 011A                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                     ___fladd@a 002D  
                                   ___fladd@b 0029                                  cmdSetRFCH@p1 007F  
                                cmdSetRFCH@p2 0084                         PHY_SetChannel@channel 002F  
                              _symbolDuration 014E                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 734E  
                                   ___flmul@a 0014                                     ___flmul@b 0010  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 8E04                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01E8                   __size_of_get_free_rx_buffer 0062  
                               __pcstackBANK0 0060                                  cmdSetSF@temp 0086  
              __end_of_nwkRouteSendRouteError 5904                       nwkRoutePrepareTx@header 0011  
                        setSpreadingFactor@sf 002B                              ___aodiv@dividend 0002  
                           __size_of_cmdBcast 0204                             __size_of_cmdGetSF 0018  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                           __size_of_cmdGetTX 0018                     bootLoadApplication@buf_id 0032  
                                cmdSetAddr@p1 0081                                  cmdSetAddr@p2 007F  
                       _nwkDataReqTaskHandler 724C                           cmdSetBaud@atCommand 003A  
                                   _crc16_app 71C8                             __size_of_cmdNaddr 0018  
                        __end_of_PHY_DataConf 8370                                _PHY_SetRxState 8DD0  
                        __end_of_nwkRxSendAck 52A8                                   _appDataConf 8932  
                        __end_of_nwkTxConfirm 88A6                                  cmdSetTTL@cmd 0002  
                           __size_of___xxtofl 0164                             __size_of_cmdSetSF 00AE  
                           __size_of_cmdSetTX 00E0                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 8BAC                      _UART1_RxInterruptHandler 01F2  
                           __size_of_cmdReset 0004                        __end_of_nwkRouteRemove 83AC  
               nwkRxHandleReceivedFrame@frame 0029                   __size_of_get_free_tx_buffer 0062  
                     nwkRxIndicateFrame@frame 0018                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 0102  
                                cmdSetTX@temp 0083                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 8334             __size_of_DATAEE_ReadByte_Platform 00F2  
                     CRC_ReverseValue@reverse 0005                               _SPI1_WriteBlock 85A4  
                                   _atCommand 015B                     ?_DATAEE_ReadByte_Platform 0006  
                                _currentAddr0 00FA                                  _currentAddr1 00F9  
                               _nwkFrameAlloc 65BE                                     _cmdGetCAD 8BF4  
                               setSyncWord@sw 0011                             _nwkRoutePrepareTx 4F9C  
                         _nwkTxPhyActiveFrame 00BD                                  _currentNetID 00F8  
                                   _cmdGetTTL 8E06                                     ___strtoxl 0ABA  
                                _currentMsgID 00DF                             __size_of_get_rssi 002A  
                       ??_nwkTxBroadcastFrame 0026                       ?_CircularBufferPushBack 0013  
                                   _cmdSetAES 307A                  ?_UART1_SetRxInterruptHandler 0002  
             nwkRouteSendRouteError@multicast 002E                                     _cmdSetTTL 8E02  
                       _TMR0_InterruptHandler 01EE                            ?_nwkRoutePrepareTx 000D  
                   __end_of_nwkRouteFrameSent 557A                                     _atoi$7800 0011  
                                   _atoi$7801 0015                                     _atoi$7802 0013  
                                   _cmdRstCAD 8C6A                                     __pnvBANK0 00FD  
                                   __pnvBANK1 01E8                          __end_of_nwkRouteInit 7D70  
                             ??_cmdSetCADRSSI 005A                                _ATTimeoutTimer 00FB  
                         __size_of_placeTimer 01A0                        _PIN_MANAGER_Initialize 70BC  
                                   _dtoa$7308 0031                              ?_start_radio_cad 0001  
                             ?_set_timer0base 0002               __size_of_nwkTxDelayTimerHandler 008C  
                           ?_UART1_Initialize 0001                     __size_of_NWK_RouteNextHop 004A  
        __end_of_UART1_SetFramingErrorHandler 8D72         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler 8D64                             __size_of_sendInfo 0060  
                                _radio_engine 4D74                          __end_of_PHY_SetPanId 8E0A  
                               __pmediumconst FCAA                                     _enableCrc 8C7E  
                                    ?___aodiv 0002                                      ?___fladd 0029  
                                    ?___aomod 0002                           UART1_Read@readValue 0002  
                         ??_nwkRoutePrepareTx 000F                                     __ptext100 8ABC  
                                   __ptext101 8D10                                 nwkGroupInit@i 0002  
                                   __ptext110 8CF2                                     __ptext102 4C5A  
                            ___aodiv@quotient 0014                                     __ptext111 8B10  
                                   __ptext103 6E00                                     __ptext200 7DBE  
                                   __ptext120 19A0                                     __ptext112 8836  
                                   __ptext104 7BDE                                     __ptext201 89FE  
                                   __ptext121 47C2                                     __ptext113 8334  
                                   __ptext105 6F1C                                     __ptext210 8D56  
                                   __ptext202 7D22                                     __ptext130 1632  
                                   __ptext122 8D1E                                     __ptext114 845A  
                                   __ptext106 8882                                     __ptext211 8D64  
                                   __ptext203 885C                                     __ptext131 454A  
                                   __ptext123 3478                                     __ptext115 6CD8  
                                   __ptext107 8DEC                                     __ptext220 75EE  
                                   __ptext212 8D72                                     __ptext204 8954  
                                   __ptext140 327A                                     __ptext132 2A30  
                                   __ptext124 548E                                     __ptext116 8740  
                                   __ptext108 4D74                                     __ptext221 89BC  
                                   __ptext213 82BA                                     __ptext205 8DA6  
                                   __ptext141 876A                                     __ptext133 87E6  
                                   __ptext125 8420                                     __ptext117 6B08  
                                   __ptext109 644E                                     __ptext230 8E12  
                                   __ptext222 8A1E                                     __ptext214 8D80  
                                   __ptext206 8976                                     __ptext150 5C6C  
                                   __ptext142 69C6                                     __ptext134 384C  
                                   __ptext126 687A                                     __ptext118 607A  
                                   __ptext231 8E14                                     __ptext223 8E0C  
                                   __ptext215 8B92                                     __ptext207 6922  
                                   __ptext151 5824                                     __ptext143 7582  
                                   __ptext135 7FFC                                     __ptext127 7A22  
                                   __ptext119 12AE                                     __ptext232 8DF8  
                                   __ptext224 7D70                                     __ptext216 8998  
                                   __ptext208 8D3A                                     __ptext160 7E9E  
                                   __ptext152 8104                                     __ptext144 62D0  
                                   __ptext136 366A                                     __ptext128 8D8E  
                                   __ptext233 88CA                                     __ptext225 8E10  
                                   __ptext217 70BC                                     __ptext209 8D48  
                                   __ptext161 765A                                     __ptext153 8B2A  
                                   __ptext145 6FA8                                     __ptext137 6144  
                                   __ptext129 67CE                                     __ptext234 0000  
                                   __ptext226 8A40                                     __ptext218 8C3C  
                                   __ptext170 8D9A                                     __ptext162 86E0  
                                   __ptext154 724C                                     __ptext146 7A7E  
                                   __ptext138 620C                                     __ptext227 85DA  
                                   __ptext219 8144                                     __ptext171 8DF2  
                                   __ptext163 65BE                                     __ptext155 1CE8  
                                   __ptext147 8370                                     __ptext139 51AC  
                                   __ptext228 8A60                                     __ptext180 5E12  
                                   __ptext172 4140                                     __ptext164 43F6  
                                   __ptext156 3B76                                     __ptext148 8538  
                                   __ptext229 6C40                                     __ptext181 8B5E  
                                   __ptext173 8492                                     __ptext165 73CA  
                                   __ptext157 4E8E                                     __ptext149 7724  
                                   __ptext190 85A4                                     __ptext182 48EE  
                                   __ptext174 8794                                     __ptext166 557A  
                                   __ptext158 6BA6                                     __ptext191 8C54  
                                   __ptext183 856E                                     __ptext175 50AA  
                                   __ptext167 8932                                     __ptext159 4F9C  
                                   __ptext192 880E                                     __ptext184 827C  
                                   __ptext176 0EE8                                     __ptext168 7CD4  
                                   __ptext193 84CA                                     __ptext185 8C0C  
                                   __ptext177 8B44                                     __ptext169 8D2C  
                                   __ptext194 8B78                                     __ptext186 8C24  
                                   __ptext178 4A18                                     __ptext195 39EC  
                                   __ptext187 8C7E                                     __ptext179 3FDC  
                                   __ptext196 743C                                     __ptext188 8C90  
                                   __ptext197 7032                                     __ptext189 88A6  
                      __end_of_PHY_SetChannel 827C                                     __ptext198 7B32  
                      __size_of_set_uart_baud 00CE                                     __ptext199 7F2E  
                                    ?___flmul 0010                                      ?___fltol 0039  
                                    ?___lldiv 0016                                      ?___lodiv 0002  
                                    ?___llmod 0002                                      ?___lomod 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 687A  
                                    ?_cmdAddr 0001                         NWK_RouteNextHop@entry 000B  
                                    ?_cmdRecv 0001                                      ?_cmdSend 0058  
                            _uart1RxLastError 00C4                             ?_processATCommand 0001  
                               ??_UART1_Write 0002                             __size_of_vfprintf 0060  
                                    ?_get_lqi 0001                        __size_of_nwkRouteFrame 00D6  
                          ??_processATCommand 00AD                               ___lomod@divisor 000A  
                      __CFG_BBSIZE$BBSIZE_512 000000                         _nwkRxHandleIndication 620C  
                                   _fhssdebug 00CD                               ___lomod@counter 0012  
    __end_of_UART1_DefaultOverrunErrorHandler 8E14     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 8E12                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 002A  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 8DD8  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 0058                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 8CA2  
                                ??_cmdGetMode 0058                        _nwkRouteNormalizeRanks 8420  
                                   _initRadio 4140                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0088  
                                   cmdSend@p2 0086                           __size_of_nwkTxFrame 0180  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 8A1E  
                   __end_of_nwkRoutePrepareTx 50AA                                __size_of_fputc 006C  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005A  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005A                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 8144                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F5                __end_of_CircularBufferPushBack 539C  
                                ??_cmdSetSink 0058                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 0014                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 0026  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                           free_tx_buffer@req 0002                                ___wmul@product 0006  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0018                                    ?_cmdSetAES 0058  
                                    _SCANCON0 00397C                                      _EUIDbyte 01D2  
                                  ?_cmdSetTTL 0002                                   _ledTimerVar 0157  
                           ??_SYS_TaskHandler 004D                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                          cmdSetAddr@tempaddr 0083                           __CFG_BORV$VBOR_2P45 000000  
                                 _ledStateVar 00C9                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                           _NWK_RouteNewEntry 6144                                     _sinkAddr0 00DE  
                                   _sinkAddr1 00DD                 ??_UART1_SetRxInterruptHandler 0004  
                       __size_of_setFrequency 012A                     __size_of_executeATCommand 057C  
                  ??_TMR0_SetInterruptHandler 0004                                      _PIR0bits 0039A0  
                                   _nwkGroups 0200                    __end_of_CircularBufferSize 79C4  
                 nwkRouteFrameReceived@header 0015                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      _PIR3bits 0039A3  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                 ??_PHY_DataInd 0014  
                                   _nwkRxInit 7DBE                                 ??_PHY_DataReq 0014  
                             _print_hop_table 5662                                     _nwkTxInit 7F2E  
                         ___strtoxl@is_signed 0016                            ?_NWK_RouteNewEntry 0002  
                     _eeprom_write_flags_enum 00E3                                _ATVersionMajor FDB8  
                        __end_of_NWK_SetPanId 8A9E                                    ?_enableCrc 0001  
                              _ATVersionMinor FDB7                       _setSignalBandwidth$8728 002B  
                          __end_of_cmdGetRFCH 8AF6                                      _TMR0_ISR 89BC  
                   _DATAEE_WriteByte_Platform 7FB8                               ?_PHY_SetChannel 0001  
                  __end_of_UART1_Transmit_ISR 8610                            __end_of_cmdGetMode 8CE2  
                                    _PHY_Init 8DF2                 ?_UART1_SetFramingErrorHandler 0002  
                            initRadio@version 0037                                     _vfpfcnvrt 062E  
                                    _NWK_Init 7B32                                   cmdBcast@cmd 0058  
                                   _txTimeOut 00F1                            SPI1_ReadBlock@data 0007  
                     ?_queue_serial_led_event 0001                                     _xtoa$7326 0032  
                                   _xtoa$7327 0034                                     _rx_buffer 086A  
                          NWK_GroupIsMember@i 0006                            __end_of_cmdSetRFCH 6B08  
                        free_tx_buffer@buf_id 0006                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 62D0  
                          __end_of_cmdSetAddr 6E00                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 7516             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 8CC2                        nwkDataReqSendFrame@req 002A  
                                   _tx_buffer 0ACC                            __end_of_appDataInd 6A68  
                        setSignalBandwidth@bw 002F                                   _loadMACAddr 82F8  
                             ?_PHY_SetRxState 0001                        ?_nwkDataReqTaskHandler 0001  
                     __end_of_SPI1_WriteBlock 85DA                               ??_Timer0Handler 0001  
                      _nwkTxDelayTimerHandler 6F1C                                      _SYS_Init 8D2C  
                         __end_of_UART1_Write 8082                         DATAEE_WriteByte@bData 0004  
                               ??_NWK_DataReq 0004                   __end_of_nwkRxServiceDataInd 75EE  
                                  ?_initRadio 0001                       __size_of_NWK_RouteTable 000A  
                                _isspace$7827 0008                                _CRC_Initialize 75EE  
                              ?_TMR0_CallBack 0001                                   strtoul@base 0038  
                               _set_uart_baud 5EE2                                    vfpfcnvrt@c 0068  
                            ?_SPI1_Initialize 0001                            _getSignalBandwidth 4A18  
                          _setSignalBandwidth 0EE8                                   _INTCON0bits 003FD2  
                           ___lmul@multiplier 0002                         __size_of_nwkFrameFree 001A  
                                   copy_data0 5BAA                                     copy_data1 5BCC  
                                   copy_data2 5BEE                         __size_of_nwkFrameInit 0022  
                       ?_INTERRUPT_Initialize 0001                              get_rssi@rssi_reg 0002  
                       __size_of_nwkFrameNext 008A                   nwkDataReqSendFrame@mcHeader 002D  
            __size_of_CRC_CalculatedResultGet 00D0                      __end_of_PHY_SetShortAddr 8E0C  
                                ??_computeFRF 0023                 nwkRxRejectDuplicate@freeEntry 001B  
                           ?_DATAEE_WriteByte 0002                                  _setFrequency 48EE  
                   __size_of_nwkRxTaskHandler 00AC                                 ??_NWK_SetAddr 0006  
                      _uart1TxBufferRemaining 00FF                                ___strtoxl$7990 0023  
                              ___strtoxl$7987 001F                                ___strtoxl$7988 0025  
                              ___strtoxl$7989 0021                  _nwkRxDuplicateRejectionTable 027A  
                           cmdGetRxCnt@buf_id 005C                  _nwkRxDuplicateRejectionTimer 01C5  
                   __end_of_NWK_RouteNewEntry 620C                                 _nwkRouteFrame 5C6C  
                          ??_DATAEE_WriteByte 0005                                   _ledtasksbuf 01DE  
                            _DIO0_Receive_ISR 6CD8                                 _nwkRouteTable 0234  
                         ?_getSignalBandwidth 000F                           ?_setSignalBandwidth 0023  
                  __size_of_nwkRouteFrameSent 00EC                                 ?_cmdSetParity 0058  
                                _uart1RxCount 00C5                    __end_of_implicitHeaderMode 8C24  
                                    __Hrparam 0000                        __end_of_ATVersionMajor FDB9  
                      __end_of_ATVersionMinor FDB8                             computeFRF@num_mod 0027  
                                   memcpy@tmp 000E                                    ?_nwkRxInit 0001  
                                  vfprintf@ap 0052                                      __Lrparam 0000  
                                  vfprintf@fp 004E                                    ?_nwkTxInit 0001  
                             _NWK_TaskHandler 8D1E                         __size_of_nwkGroupInit 0026  
                          __CFG_BOREN$SBORDIS 000000                                ___strtoxl@base 0014  
                             _nwkRxAckControl 00C3                                   cmdSetAES@p1 00A6  
                                 cmdSetAES@p2 009F                           __end_of_setSyncWord 8CD2  
                              ___strtoxl@sign 002B                                ___strtoxl@skip 002C  
                          cmdSetCADRSSI@CHstr 0081                       ??_OSCILLATOR_Initialize 0002  
                           ?_CRC_ReverseValue 0002                       __size_of_setCodingRate4 0036  
                           appDataInd@dataptr 0015                __end_of_queue_serial_led_event 7BDE  
                            __size_of___aodiv 0158                              __size_of___fladd 0348  
                nwkRouteErrorReceived@command 000F                              __size_of___aomod 0134  
                 __size_of_NWK_RouteFindEntry 0068                              __size_of___flmul 0384  
                            __size_of___fltol 00CA                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 008A                              __size_of___lodiv 00DE  
                            __size_of___llmod 006E                      processATCommand@data_889 00AF  
                            __size_of___lomod 00BE                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 0039  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 0020  
                          ??_CRC_ReverseValue 0004   __end_of_nwkRxDuplicateRejectionTimerHandler 7C32  
__size_of_nwkRxDuplicateRejectionTimerHandler 0054         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 7BDE  
                      nwkRoutePrepareTx@frame 000D                               ___aodiv@divisor 000A  
                                 _SX1276Write 8C90                           __end_of_PHY_DataInd 48EE  
                      ?_nwkRxHandleIndication 0032                           __end_of_PHY_DataReq 7A7E  
                            __size_of_cmdRecv 00CA                              __size_of_cmdSend 026E  
                 __end_of_nwkDataReqSendFrame 201A                           NWK_LinearizeLqi@val FDA7  
                             ___aodiv@counter 0012                                   cmdSetTX@cmd 0058  
                     __size_of_SYS_TimerStart 0028                          ??_getSignalBandwidth 0013  
                 __size_of_NWK_RouteFreeEntry 0036                      __end_of_NWK_OpenEndpoint 8A1E  
                        ??_setSignalBandwidth 0027                            __end_of_computeFRF 3B76  
                       __size_of_PHY_DataConf 003C                         __size_of_nwkRxSendAck 00FC  
                       __size_of_nwkTxConfirm 0024                      _nwkRxHandleReceivedFrame 1632  
                                    _cmdBcast 2E76                                  _nwkFrameFree 8B2A  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 8954  
                                    _cmdGetSF 8BDC                                  ??_placeTimer 0004  
                                    _cmdGetTX 8BC4                                  _nwkFrameNext 6FA8  
                            __size_of_get_lqi 009E                                   _currentMode 00DC  
                                    _cmdNaddr 8BAC                                      ___xxtofl 3FDC  
                                    _cmdSetSF 6672                        __end_of_CRC_Initialize 765A  
                                    _cmdSetTX 5744                                      _cmdReset 8DFE  
                           _set_hop_table_ttl 8CA2                              __size_of_isalpha 0034  
                            __size_of_isdigit 0034                                      __pivt0x8 0008  
                            __size_of_receive 003E                   nwkRouteSendRouteError@frame 0031  
                                 ??_crc16_app 0019                              __size_of_islower 0034  
                              ?_set_uart_baud 0001                              __size_of_isspace 0044  
                               ?_DIA_ReadByte 0002                               ??_nwkFrameAlloc 0010  
                   __size_of_SX1276ReadBuffer 0028                                      __ptext10 8DBC  
                                    __ptext11 5744                                      __ptext20 8184  
                                    __ptext12 8E02                                      __ptext21 74AA  
                                    __ptext13 8CB2                                      __ptext30 0ABA  
                                    __ptext22 59E2                                      __ptext14 6672  
                                    __ptext31 79C4                                      __ptext23 7786  
                                    __ptext15 6A68                                      __ptext40 8E06  
                                    __ptext32 8C6A                                      __ptext24 77E6  
                                    __ptext16 6E90                                      __ptext41 8BDC  
                                    __ptext33 8DFE                                      __ptext25 6D6E  
                                    __ptext17 734E                                      __ptext50 4B3A  
                                    __ptext42 7E54                                      __ptext34 5FB0  
                                    __ptext26 307A                                      __ptext18 8CC2  
                                    __ptext51 7144                                      __ptext43 8ADA  
                                    __ptext35 8BAC                                      __ptext27 8E04  
                                    __ptext19 6720                                      __ptext60 8610  
                                    __ptext52 76C2                                      __ptext44 8CD2  
                                    __ptext36 7E0A                                      __ptext28 27C2  
                                    __ptext61 8644                                      __ptext53 72CE  
                                    __ptext45 8AF6                                      __ptext37 8DE6  
                                    __ptext29 7EE8                                      __ptext70 7516  
                                    __ptext62 8678                                      __ptext54 89DE  
                                    __ptext46 8BF4                                      __ptext38 7846  
                                    __ptext71 8DC6                                      __ptext63 2C62  
                                    __ptext55 88EE                                      __ptext47 83E6  
                                    __ptext39 8BC4                                      __ptext80 8D02  
                                    __ptext72 8040                                      __ptext64 6390  
                                    __ptext56 78A6                                      __ptext48 2E76  
                                    __ptext81 8082                                      __ptext73 8200  
                                    __ptext65 5904                                      __ptext57 062E  
                                    __ptext49 5ABE                                      __ptext90 8CE2  
                                    __ptext82 254A                                      __ptext74 468E  
                                    __ptext66 201A                                      __ptext58 22CA  
                                    __ptext91 8DD0                                      __ptext83 5EE2  
                                    __ptext75 429E                                      __ptext67 6508  
                                    __ptext59 7C32                                      __ptext92 823E  
                                    __ptext84 7906                                      __ptext76 3E6C  
                                    __ptext68 7C84                                      __ptext93 8A80  
                                    __ptext85 82F8                                      __ptext77 7F74  
                                    __ptext69 81C2                                      __ptext94 8E08  
                                    __ptext86 8910                                      __ptext78 86AC  
                                    __ptext95 8A9E                                      __ptext87 71C8  
                                    __ptext79 8712                                      __ptext96 8E0A  
                                    __ptext88 5D42                                      __ptext97 7FB8  
                                    __ptext89 7ADA                                      __ptext98 539C  
                                    __ptext99 80C4                              __size_of_isupper 0034  
                          ?_set_hop_table_ttl 0058                   __size_of_nwkRxIndicateFrame 01FE  
                  __size_of_nwkRoutePrepareTx 010E                          set_hop_table_ttl@cmd 0058  
              __size_of_UART1_SetErrorHandler 000E                                      _get_rssi 8740  
                                    _fhssList FCAB                 __end_of_UART1_SetErrorHandler 8D80  
                       __size_of_nwkRouteInit 004E                   DATAEE_WriteByte@GIEBitValue 0005  
                               nwkRouteInit@i 0002                              __size_of_strcspn 0060  
                            __size_of_strncmp 0120                              __size_of_toupper 0052  
                    nwkTxBroadcastFrame@frame 0024                                   ??_cmdGetCAD 0058  
                            __size_of_strtoul 0046                                      _ledtimer 00EF  
                                    _ledqueue 0400                                   ??_cmdGetTTL 0002  
                                 ??___strtoxl 0017                                ?_nwkRouteFrame 0033  
                     __end_of_print_hop_table 5744                                  _nwkGroupInit 885C  
                                    cmdRecv@i 005A                               cmdSetCADRSSI@p1 007F  
                             cmdSetCADRSSI@p2 0084                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 734E                                 __size_of_idle 000C  
                               __size_of_atoi 0170                                 __size_of_main 0028  
                               __size_of_dtoa 02B0                           ??_set_hop_table_ttl 005A  
                               __size_of_rand 010E                                   ??_cmdSetAES 005A  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005A  
                               __size_of_utoa 0214                                  ??_setTxPower 0011  
                                 ??_cmdSetTTL 0004                                 __size_of_xtoa 0280  
                       __size_of_PHY_SetPanId 0002                                   ??_cmdRstCAD 0058  
                             cmdSetAES@AESstr 007F          __end_of_TMR0_DefaultInterruptHandler 8E0E  
       __size_of_TMR0_DefaultInterruptHandler 0002                  _TMR0_DefaultInterruptHandler 8E0C  
                           ??_DATAEE_ReadByte 0004                          __CFG_WDTCWS$WDTCWS_7 000000  
                         get_timer0base@timer 0002                                      _sendInfo 7846  
               DATAEE_WriteByte_Platform@addr 0006                  __end_of_FirmwareVersionMajor FDB7  
               DATAEE_WriteByte_Platform@data 0008                                   _IVTLOCKbits 003FD4  
                          cmdSetBaud@tempbaud 003C                  __end_of_FirmwareVersionMinor FDB6  
                         set_timer0base@timer 0002                         _nwkRouteErrorReceived 7A7E  
                      SX1276ReadBuffer@buffer 0009                      __size_of_PHY_TaskHandler 0006  
            nwkRxHandleReceivedFrame@mcHeader 002F                                  ??_nwkTxFrame 0026  
                  nwkRouteFrameReceived@frame 000B                     _UART1_OverrunErrorHandler 01EA  
                         sendOKMessage@F16685 01F4                           __end_of_NWK_SetAddr 8ABC  
                          __end_of_placeTimer 39EC                                  ??_set_parity 0002  
                            _NWK_RouteNextHop 7E9E  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                                ?_cmdGetRxCnt 0058                                   ??_enableCrc 0011  
                                _PHY_DataConf 8334                                  _nwkRxSendAck 51AC  
                                _nwkTxConfirm 8882                  __end_of_SYS_TimerTaskHandler 4D74  
                   __size_of_SYS_TimerStarted 0044                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 003A  
                                  strtol@base 0036                 __size_of_nwkRxRejectDuplicate 0232  
                                    _vfprintf 78A6                                     printf@fmt 0075  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 8D02  
                       cmdSetParity@atCommand 0058                                      _syncList 02CC  
               nwkTxAckWaitTimerHandler@timer 0012                           setFrequency@num_mod 0027  
                                 _UART1_Write 8040              __end_of_DATAEE_ReadByte_Platform 548E  
                            ___aomod@dividend 0002                     __end_of_set_hop_table_ttl 8CB2  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 88EE  
                              _vfpfcnvrt$7341 006B                              cmdGetRxCnt@count 005B  
                                _nwkRouteInit 7D22                                  ?_cmdSetNaddr 0058  
                                 _uart1RxHead 005E                                  ?_cmdSendSink 0002  
                   setCodingRate4@denominator 0013                               ?_CRC_Initialize 0001  
                                 _uart1TxHead 00C8                               ??_TMR0_CallBack 0001  
                                 _uart1RxTail 00C6                                   _NVMCON1bits 0039E5  
                                 _phyRxBuffer 0340                              ?_SPI1_WriteBlock 0003  
                                 _uart1TxTail 00C7                                      memcpy@d1 0008  
                          __end_of_setTxPower 87BE                                      memcpy@s1 000A  
                              ??_DIA_ReadByte 0006                         __end_of_cmdGetCADRSSI 8B10  
                                 ??_initRadio 0033                          SPI1_WriteBlock@block 0003  
                                ?_appDataConf 0007                                      isalpha@c 0002  
                                    isdigit@c 0002                        ??_INTERRUPT_Initialize 0002  
                         DIO0_Receive_ISR@ind 0046                           ??_UART1_is_rx_ready 0002  
                                _PHY_SetPanId 8E08                              appDataInd@buf_id 0017  
                                  _SX1276Read 8C54                            __end_of_nwkTxFrame 3CF6  
                          __end_of_set_parity 7966                      __end_of_nwkDataReqTxConf 6922  
                                    intlevel1 0000                                      intlevel2 0000  
                    get_free_rx_buffer@buf_id 0002                     nwkRouteSendRouteError@dst 002C  
                   nwkRouteSendRouteError@src 002A                                _get_timer0base 8836  
                   __size_of_nwkTxTaskHandler 01F2                        NWK_RouteNewEntry@entry 0009  
                     __end_of_NWK_TaskHandler 8D2C                                      islower@c 0002  
                            ??_set_timer0base 0005                                      isspace@c 0002  
                 __end_of_nwkFrameCommandInit 8144                              ___lldiv@dividend 0016  
                     ?_PIN_MANAGER_Initialize 0001                    __size_of_NWK_RouteNewEntry 00C8  
                                 _setSyncWord 8CC2                             __CFG_CLKOUTEN$OFF 000000  
                       __size_of_NWK_SetPanId 001E                                      isupper@c 0002  
                                   strncmp@_l 0002                                     strncmp@_r 0004  
                            _executeATCommand 00B2                            get_timer0base@tval 0004  
                 NWK_RouteFindEntry@multicast 0004                        nwkRxServiceDataInd@ind 0013  
                          set_timer0base@tval 0003                       NWK_OpenEndpoint@handler 0002  
                         _uart1RxStatusBuffer 0128                 ?_TMR0_DefaultInterruptHandler 0001  
                                 ??_nwkRxInit 0005                                   ??_nwkTxInit 0002  
                             _nwkTxDelayTimer 01AB                             _setPreambleLength 8B5E  
                                 _PHY_DataInd 47C2                                   _PHY_DataReq 7A22  
                        PHY_SetShortAddr@addr 0002                  __size_of_bootLoadApplication 0278  
                                  _SPI1SCKPPS 003ADE                                    _SPI1SDIPPS 003ADF  
                                   strtok@sep 0011                                      printf@ap 0057  
                   __end_of_UART1_is_rx_ready 8D10                                    _UART1_Read 8082  
UART1_SetFramingErrorHandler@interruptHandler 0002                            ?_setPreambleLength 0011  
           __end_of_UART1_DefaultErrorHandler 8DFE                               ___aomod@divisor 000A  
                    nwkRouteErrorReceived@ind 000D                                   ??_vfpfcnvrt 004A  
                             ___aomod@counter 0012                           SPI1_WriteBlock@data 0007  
                     ??_nwkTxConvertPhyStatus 0002                       __size_of_free_tx_buffer 004E  
                     ??_nwkRouteFrameReceived 000D                    __end_of_get_free_rx_buffer 7786  
                     ?_nwkRouteNormalizeRanks 0001        nwkFrame@nwkFramePayloadSize@frame_4797 0002  
                            ??_nwkRouteRemove 000B                              _halTimerIrqCount 00C1  
                         ??_setPreambleLength 0013                              ___lldiv@quotient 001E  
                                 _uart_parity 00E1                               _TMR0_Initialize 82BA  
                             ??_set_uart_baud 0002                                      strcspn@c 000A  
                                    strcspn@i 000D                                      strcspn@s 0008  
                           _current_baud_rate 0152                    __end_of_get_free_tx_buffer 7724  
                                    strncmp@l 0009                                      strncmp@n 0006  
                  __end_of_getSpreadingFactor 8B5E                                      strncmp@r 000B  
                                    toupper@c 0008                    __end_of_setSpreadingFactor 51AC  
                   __size_of_UART1_Initialize 00A4                                _NWK_RouteTable 8DBC  
                    DIO0_Receive_ISR@irqFlags 0045                               _SYS_TaskHandler 8D10  
                                 _NWK_DataReq 72CE                                      strstr@nl 0011  
                     __size_of_nwkDataReqInit 000C                                      strtoul@s 0034  
                     _CRC_CalculatedResultGet 5D42                      _UART1_TxInterruptHandler 01F0  
                 __end_of_nwkTxBroadcastFrame 468E                                 _queueLedEvent 83AC  
                                _NWK_SetPanId 8A80                        __end_of_get_timer0base 885C  
                               ___fladd@signs 0035                           __end_of_Default_ISR 8E12  
                             ??_nwkRouteFrame 0035                               cmdSetRFCH@CHstr 0081  
                   __size_of_processATCommand 0176                                  ___aodiv@sign 0013  
                            _nwkRxTaskHandler 67CE                __end_of_PIN_MANAGER_Initialize 7144  
                     SPI1_ReadBlock@blockSize 0005                         NWK_RouteFindEntry@dst 0002  
                                ___fladd@aexp 0036                                  ___fladd@bexp 0037  
                                 _NWK_SetAddr 8A9E                                cmdBcast@buf_id 0081  
                            ?_print_hop_table 0058           __end_ofnwkFrame@nwkFramePayloadSize 8794  
                 nwkFrame@nwkFramePayloadSize 876A                      __end_of_nwkTxAckReceived 6390  
                ?_UART1_SetTxInterruptHandler 0002                        ?_nwkRouteErrorReceived 000D  
                          _eeprom_write_flags 0159                              ??_PHY_SetChannel 002F  
                   __end_of_setPreambleLength 8B78                                  ___aomod@sign 0013  
                         NWK_RouteFindEntry@i 0007                      get_free_tx_buffer@buf_id 0002  
                  __end_of_spi1_configuration FDB5                    nwkRxRejectDuplicate@header 0012  
              CRC_CalculatedResultGet@reverse 0010                 CRC_CalculatedResultGet@result 0011  
                       __end_of_cmdSetCADRSSI 67CE  
